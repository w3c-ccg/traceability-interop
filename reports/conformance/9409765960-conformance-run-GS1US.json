{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "16edeb5a-d787-4745-b029-ce396415f95e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7353b8cb-a3d1-4ed3-be0c-fab96f3b4151",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d04151a-72e3-4741-96f4-ed5f212b8e35",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2fc800e6-eebb-4e88-86f8-b949c4353967"
                }
              }
            ]
          },
          {
            "id": "6694e695-af77-417f-9193-ac817a515495",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38a83a7d-b6aa-4830-ba43-00c1a54bc83a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac8e0c2f-6a11-4ec0-9c4a-060952901ee4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "efc4a311-5ab9-4315-bf10-3c2f3ec70b11",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c836a407-bf6d-4488-bbda-ff4fbad99d93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8c50acf-4c69-42c7-a0d1-f7df0c0e46a0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "959a981e-28a0-494d-bfea-0793e4c9abd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a46bee09-dba6-4c2b-85cf-d951e315108a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ad84bdc-4c93-4fa3-af2b-52e3dd57e0fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eccffa48-a688-4fdf-b0c1-1ccd02aff561"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1bba352-eef5-4065-98bf-e7a4672ddbca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1412ee06-04b5-4d99-b36c-fa9def886292"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbfd5df7-3f19-4765-b60a-3b487ecab252",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a46d4f0e-487c-43d0-9524-2e5ced36ab13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6353500-96d6-4528-b7e5-0c05bfe02c1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5ae69e2-fd51-4cf6-991e-b963b5b1ef13"
            }
          }
        ]
      },
      {
        "id": "27a70078-b78a-49cd-92ce-2e5d82d0c272",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b921d996-7fd7-49ed-b247-2b91faed3683",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf7bfbd7-23e1-4a92-88b4-a0cc98c3f7d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e3ef3205-24a3-4b0e-a9d1-20d12d7aa1eb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643531aa-4483-4d45-8de5-482e1dfaae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "129756f2-9529-4df3-a935-bc50c081c3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edab107c-8e40-4838-958f-3951b391974c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f4efa6-cd19-422f-b320-137f7b1b77c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2393b6d8-947b-460c-a5b0-2ef7af74d604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037decd5-a41c-4a89-bfc4-03454f581539",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11d65e7-2878-4e1b-9abd-898421a42a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0eda3e81-819d-4d1c-b480-64d5b2c67790"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fc9d4b1-910b-4c93-9d18-f7fed2815a20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82528d43-ece2-441f-a76a-f73456d572f4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1746c2-e295-4708-b660-cc41742f755f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c559e53-4814-4c6e-8051-e1f41396e7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5f3df7-7ab6-49ea-b806-5e393cd00431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6873277-f767-4fcb-8077-75180557e111"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9188f40-c7f9-4ec1-b7fd-7b7712795c1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81c9cc22-7844-487b-808a-853f193e73bd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c413c26-2f5d-4f45-a934-a69a6ea77347",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d2a50e9f-53be-4ff8-9681-ffb4d3e6cdbf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66243661-ed03-454f-87d7-583fa544becb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a3d50900-d408-4a50-872e-e48dd2b2eaca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc3e6466-3c4f-44ed-9682-92923708cdbf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4799480e-d7bd-40a6-8b58-22b8e54a3e7d"
            }
          }
        ]
      },
      {
        "id": "368b8aba-9702-4183-a9c7-03b361b9c962",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8e01c3ac-d8cf-4594-ac57-248a1ea5b7af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b743ed5-4a86-4591-af6e-0033ca5526f2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "998db5d8-caf6-4e13-8655-013adc3bcef8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c3a954-c649-486e-8660-a62432eb3dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f218bbad-0a17-4605-8a3f-b9e99eef180d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30966e18-7831-4f1a-aa2e-85404c0458d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65e998e0-ef20-47d0-9e69-b8fe9153feb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a41163-f75e-4b5b-8866-952901615cee",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b723fa45-1cf2-40c1-b82b-b6cdbaf9bb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56f992b-c55a-4b4b-b644-c6a25027b64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f570eb-3d72-43fa-8f4e-6f8a5ad20865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baaf922f-7505-4433-b723-0ebd159d9e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e7fd19-4d48-4621-883f-92f63a28e44f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f507d411-c1d0-498d-975e-d80ccd1823cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1570ab3c-77a5-4b91-a89b-6af43e8283a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a564c3bc-b9d1-42f2-a3eb-c8c000e12789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57a457bf-0880-4dcb-ae71-bb64f3209915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520edbc4-96b0-4857-9878-09e5db6c1d05",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e1fa18-bdb4-4dff-9dcd-a0760e6bef88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d28833-6566-4f19-b8b8-5fccd069b297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e90590b-668f-4778-b3be-22844b535b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83905046-8d5e-4e5b-aa4e-231be7a062fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b775b22-8fe7-4e05-a24a-4437fd190a0e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a47d26-16ad-499c-b201-e5354019d7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cbd2e2-1476-48c9-88b0-0dbd2af119ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1e2f2b-18f0-40e4-8b3d-b633ba41ef72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a4cfdaa-53b1-41b2-8600-3f1f05154df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fa8d11-ab44-4e3c-a024-7cb50beb79e1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc9b88c-7784-43e8-ab57-dd2edafe0a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bde933e-2464-4d6c-99ce-8d02f98c0e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827f1ef8-11cf-4998-8dcd-0f6aebf46e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "714499dc-4ead-4096-ba1e-41768da1c20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c68fd4-d8f6-40e1-88a4-9c06b504819d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fec71b-0343-4918-bd2c-ed246facf67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16157a70-b4e0-48e1-ad43-bf7a9da32060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c228d9b-daa2-4dc6-b940-c3f1df6455c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0f3ea96-d242-4cb2-ba26-f162a532277e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed64f33-5016-41a4-8d83-c62e6c306a00",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17361819-c83e-4766-9306-5df290a0f7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe356c6e-461a-4de7-836c-2f5a52c934cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fba1780-cf16-48b1-b964-b8d764abad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46ddf7fc-f643-48dd-b631-6aeb8562cbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a207ca8f-7072-4564-bb84-592630ee0175",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e853bf3-e1dc-46b2-b8bf-b8a0bae12259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa11b2f-5100-4540-a864-3d3f1f0e3c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706f2d8a-c8f8-42f6-b1f7-37cde7ad02f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dfcbf40-c33a-4700-bff7-3834ae0b226f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d262351f-3041-40ba-b318-30b7634809ec",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4675b5ab-3b56-47e4-964b-9baeb90ee57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d43490-87c9-4462-b8b3-22362ade0894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a354f64e-a5b6-40ac-aa2c-dfbce50bb018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7745cf4-96f1-4dac-a4cb-a05171323f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3854f2-1933-4ad0-a7b1-4432ac216ba2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd7ffa6-7a3d-4e7a-a96e-a125e5bc3c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b1ffa3-b943-40f6-a85e-ea6698faf316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad63caf7-385f-4fe4-b9bf-1fa3e36f9c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52a5376e-1ae4-4d66-82da-159871ebabe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786f0c58-7ae2-4faa-8e7f-dbfdd55cab1c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1f533a-3334-4ce4-81bb-d4afcdc5a282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c40284-45f7-4b28-af23-3e3bfeca30ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1ba76b-b0fc-4d6b-8c1c-23b2d47a87ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25e9d62b-5241-4a78-b899-f96df5eb7863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106bbf41-2ad5-48ca-aef9-7a017948b259",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1922eb6-21a3-4c07-be05-32d4779a8f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6831e97d-f59b-4cb5-8b88-a65410120e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e5f7a2-585e-47d9-8a65-6925f6676c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f64c43ed-44df-45b9-b376-40b1234292b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f614f3f8-cc02-40bc-a93c-543589173668",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf078c8-ca81-44d0-8561-db8afe0ecba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bc49c2-3672-46f5-be1c-1e8dc8c26fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfb94d9-35e4-4c64-964b-a67735dbb6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74e399cb-ec0e-4057-80a8-1b865560028e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ede267-4d93-4f83-8ff9-7133ac511ec9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58640733-61c4-40d1-a383-8a2e6c09b0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a536d6dd-4b1f-4d8f-8817-47259023a39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a26762a-c703-4805-9985-a294a3ec2e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e578737-471c-4d47-83cc-9e9703e69073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e41e42-7b62-4f8c-9af2-a56cc60183a2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e5068-8d06-482f-af23-7ccca0e2c1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244e9348-1881-42a5-b518-13c0414fa91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c831ca39-e0e5-4994-b001-3825144e5a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fc58c4b-d0ca-45b1-8b32-88f54bc987c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504b9f30-3637-4c7b-b24b-8abc78312cec",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b08c128-f3ff-488c-ad14-f02d727c98e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d955a77-3e12-4fcc-ae34-9b9f8fe28757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daa4da8-9284-4ef1-bb91-17668be4fc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69f2cfe9-9cb8-4f7a-b9de-0be481df314e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1821f343-4f31-4aaf-b096-228d64118d7c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad815bc-c8a6-4ee1-93db-735c73b8b8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77449995-7eb7-40cd-ad0b-c81f30a7256a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f2c6ab-5bb4-4b8c-b946-7c55e20e8bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "26264b70-9c7a-41a2-b9bf-5dcf87c0877b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303b0b73-262d-4fd0-9916-d14c4ace25f7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a043ee61-3194-4aab-82c4-ce64c9f9c2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154eec30-58eb-4bfe-99b3-49a76db0801e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96849a5a-0c97-4b42-9d2b-32df5c6aec0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54593f5e-a675-47a6-b23c-bda7b1930576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a3e704-410c-492d-9f9b-6146fddc9a22",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb8cdff-7373-497a-9192-50e2b6097fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c99942-5b08-4ba6-bf40-c2e7848aa73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b182bbb-ebd8-4f89-9c30-ac605a264dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc42feb-ecc0-4955-a468-00eed870b9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840ebc88-f65f-4775-bdfa-6d705ee233d0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05e7c64-25be-41a7-9df9-9b0d711d0f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1797d3f1-a59d-4401-ad94-9132a4984bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ce5c22-cd15-4bc0-9896-0f49be045f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c57a8cd0-f9e5-4681-a3c9-885aa7151e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4fea6c-4b63-4fb9-9c4e-7f44e9beae0f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b3c52f-faed-4239-a6ea-2e0bb6bea8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb859fb-6516-4016-ae41-b05a88d66956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9504e124-4a3d-4192-9d22-ee19d6188cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "395c3d1d-b530-4f1c-b35b-72af7ddaf4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02ec3cc-457d-4836-b7a5-833838bd4693",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f735829-d7fe-4fdf-aa3b-91f403724f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb1e438-630e-4ac2-a06d-13ab2fdd9b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dbe58a-8b22-4f20-834a-8d6362e43072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5069f124-efff-4ae4-b0fe-02b8062d95cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b897d544-38f4-4072-8608-aa15ccb25bbb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca0eddf-125b-4a0f-8157-bad589dbf654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ae7a16-ef84-4913-8667-18a0bd699ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d7cce8-e4ed-4b32-b422-3aceca2a1e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c266bf-653a-47e9-853b-88bad202559e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12aa10b1-70eb-4eb2-a296-a79ce75e4e5c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c8d78b-fbf5-4b66-ba6a-383bb56a23c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f12d43-a9cd-4c8f-ab05-61471fb84a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1511c3e9-5696-4ebb-b985-5934b4d9b705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4542d3f0-eb05-48c1-bda1-3a0ccfbcb126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ab4fc7-91ae-4c2e-87db-2668527d3d24",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967c91bd-8cd8-41f6-93d4-b5fbe3d9464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3854d4da-256f-496d-a77f-e8fb1b0de6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397be5c8-2934-4e2b-b7d5-9bfc0d0ff450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c382e7dc-9582-4ac4-858e-681cb1f894eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c67d988-cacd-4f1d-ac70-bdbfc3e97dda",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0f535e-1edd-475a-8538-6c75f0bdcec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188ee310-9c04-4523-b023-fa63d81a1298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39fb809-9ce6-492e-8368-194952050c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8186b364-f5ad-4baf-b304-cc277dc0bcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32052523-4c39-41d4-a2b4-6b5a44932d60",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d49ee02-1b93-4663-a05d-2a861a5cf16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed61183f-906e-424e-8d79-98eb5ad80662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac76317-5e3d-40cd-826b-b1c85f36ac10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "408bc4f8-0933-4142-8eaa-fff8d8c56fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fd833b-46ab-40e4-bc8e-19d5f7df9be3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736e3340-c512-4f8d-9e93-4e0599081135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfcede5-cb7b-43d7-ad0a-ca0c40a2ebbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf82ac6-17d3-44ac-a56e-db012bb84028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c49ed944-7c94-4184-8e81-57566ea65ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dc3a3a-090a-4163-ad4a-a8c470f3b5bb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc39fe37-d9f4-49c2-8c60-f1b55bed3795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03246bf-62bc-404b-befb-db725576bcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c338bbc-d408-4672-8251-e64a58f1ba90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "22e7c970-fbd6-4fb9-90ff-ca482c342112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d78cc9-524c-4998-9dd6-b71225c97a7a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9de4c3-db4e-4db2-9b11-465a60d13b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4311e6b5-053c-4745-95ed-2866e8b7c180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860e19a9-4ffa-49fd-866c-23df478fbc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c79dec-deec-491c-b46c-03f13a926bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae07754e-11f4-4667-9af2-0f011409876e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ced561f-f9f6-4682-9c26-491c0d378422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d19afd7-af20-4387-8de1-47436e0a6b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7ab943-8be2-4623-b56d-db776a33452f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67a24070-0e02-4a6f-b39e-c75d2eca5c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93113b18-3882-4aa3-aa02-620f685e4f06",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c54a69-557c-417d-913d-8dec828aa3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bffbb1-3b84-4317-97a9-97ebe4e285b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1ff99a-e0ef-4f49-9909-5a7bad197d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e844a3b-81be-41ab-830d-b5374501525b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff2234e-1b27-4cef-bd27-cacdb29d4eca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265ba647-90ed-4d8f-af2e-0b44c4916593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729c8a2b-2fa6-474e-8fe5-b1e35a36e79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6ebbfd-e5b4-4373-85a0-52226966e235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffeb45f8-4360-43c4-b2ed-7cdf4370f4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb949eb-e548-4068-a99b-a9778929861c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54da8e96-abab-43e0-b1cc-e935454daff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cebb876-50a4-486c-a6ed-a1eb9a1ef6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0b4e95-9ab5-4766-8bf8-51d698cdda1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d1732492-aade-40cd-ba59-471437f43de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647942e4-bef0-49e8-ae0d-06ef4afbc72b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00310409-c7fe-4d4b-a1e7-0ad5c5b2b4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1bbfdfa-cd23-40a8-b482-bbd93eda4303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bdaf11-bf64-4e6e-b153-8e4fc72130fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e10728c7-1f6b-429d-840d-c27779a277e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e337f2-10f0-4141-b712-464d61f6118b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8240411-7b31-4456-8e3c-58133513a4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e57a50-18e8-45f5-9d42-a17b5fe8f324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128418e4-e103-435a-a37d-99b804cc8c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8927c984-be6a-4097-a435-51c8c73933c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc4d80f-7ce3-4351-b423-d8f601525fa2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0203d0d6-6924-443a-845a-c071c34793d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0527f26f-5292-4149-84d2-d5d7af20e1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bb7bac-9c24-4b53-abc7-5d184e8fd0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8aec14-c7b6-452a-9307-73e9d4f22d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac02d3c3-c92e-4f21-b3ed-9de666e2ff41",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41573ece-ef7b-4c63-9946-ae95906f11f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43bace1-fd4e-47c8-b151-134ff97f738d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53119699-bfcb-4a49-9282-33208c85b03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcd4191-8eb4-40da-bd3e-ad2659da57d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0669ac75-2442-426a-ab0b-f6fe206bf7df",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1e9bed-9381-4e13-8e2a-d13b03dea58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2d05fb-821c-4413-8557-935149d8786a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dab83e-8608-482e-b1da-914dca938f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df648e88-d1d2-4c6c-8066-4e33be5e7a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1b2f9d-cd2e-48b7-9fa0-55f227f21735",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279d7c6c-4601-4914-aaa2-76416ec4f681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee3c89e-1de3-4a93-9ee8-03d3b9ae63ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a6db26-dd4a-464f-8bc8-422b36592c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29b39a93-d63f-46d0-ab73-a240f86e9dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f072ce-ec20-4557-a0eb-86c86f3bd861",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ea9eb3-f6c5-4d83-be63-39d523b8346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853b7220-996d-4897-bab0-fdfa07b44185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c580d929-fcb0-450f-8e4d-98cf3cdac1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "046040ab-63ae-4e76-bcdb-ee4ac4fb7817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369f9ebc-2186-48c5-a00c-91f717f69f4e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8347bf-6d2c-4fe2-aacd-095b84fa30ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5679bd92-3e5a-436b-98d2-6cb46585e9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d7af4e-1adb-435f-8fdf-5b3cbd4a91d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d06132-9d61-4601-be12-ed65502dad0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d78773-42ec-45e3-8c14-2c0e7e6d5db2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaea837a-21ec-4521-9103-fd70269843ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f04cf7-9349-46a2-8838-f5df03debb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3f655f-f92e-428b-9b2d-d0b287485880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e98be5-44ed-4f80-964e-682edb7e98c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c643bc-6cc2-4758-830b-1bf7bc085211",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9b1cf5-78c9-4bf7-ba9b-01fc0ef64379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bf50c7-e842-423c-bb5d-7353661a60dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3197c3-0657-4977-80c4-36edc37c3dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa822fe-8da8-4582-821d-98ae9f402f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5489ba5-35d6-40af-9302-9395560ef606",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786a7e0c-9fe0-43e3-83af-888a6fc67440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dff9dfd-f54a-4589-a1dd-907923318b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e65db1-2ade-46d1-b655-ba85fe8b4b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8af9c453-b075-418e-8e8a-beb5c8925867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d437eda5-6b15-4937-beb7-746c95bd7362",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afb7398-2e8b-4ef8-8df5-0bfb37b1b7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f2a7c9-d2f4-4979-97d7-0358e093d4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcb5cba-05b9-4fed-bb69-b8d0338032dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fab6e57-7c20-4858-a4a5-c227bb6b4bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340db466-642b-45cd-9c75-d6fe1086dabc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75f4745-94d5-4756-9336-ac6ee652f63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26166c1b-bac0-421d-b986-c81d7329602a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc07993-c757-4bb8-b02e-6af550571079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e446684c-375a-4044-946d-f478909461a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cc36e5-743a-4429-b39a-50146a79c5db",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ac2ec3-e33e-416a-b3ff-e254fe2f5a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d16dbb-6953-4a53-b615-d31030968779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bcc8f8-3fd2-4759-9a8f-3cbf311a1ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "605461e8-8d3c-4206-8db8-9046aea7ded7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a224de48-7d9b-4fd8-883b-c5236321e58e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d229a80-bfa9-4671-9bff-70eeb892d111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff5522d-beea-404e-ac7b-942278397fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee8a23f-52ec-4f8a-9550-029bd520ed6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63932717-72de-4785-81e7-8603610631d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28699b32-5d68-4c99-8fc1-f99b9432099a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc5be7-55aa-4630-888d-9e014d249d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6152b044-c826-466e-8c8f-5b89d5a9a510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f4da4b-a99b-440f-97ac-98503b574655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b200530-815c-44d1-a2b1-4aa7ca45342b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9875687f-fbf0-43d3-87b6-0bc3dff22a91",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58083c75-a3df-4c78-8d46-db1c434787fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda765b0-bda0-44ab-a6ca-9c36b0d2b77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3c08dc-aeab-44e5-9f0f-a7f8cf1dfb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a67ac1ae-e2a6-44c8-bf41-ac2c17e2d404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55dc9f6-aeb7-47b4-81a1-bf4e0bccea08",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c80c797-5b19-4401-89f0-4a8ce97112c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e6b4d0-f58b-45f8-ae99-b9844c622a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cbf454-e69c-4608-87fc-8f2b4e454349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a48afdb-2b80-44bd-a4d8-2c1e6c8d6a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d2e715-2054-491c-98be-c78392bc46d6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97047ea-950b-49a4-bc5f-4a121d555df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9164e3ee-40aa-4876-b318-a4ddc648fc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30939c59-0760-4db4-8e21-933737d185d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6ff6b1-af17-44ed-84dd-680ed484ffa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7b380a-65e1-436c-9f38-d262b11d3752",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc53e67f-48f2-4fc5-aca4-5b6c842f13e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b4b2f7-b8e2-48bb-bef1-313866e61b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa86950-30c6-4d40-8e18-57fc595e9c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d77eaa-be9b-497d-bbb1-c9c6dc64d2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4a87ef-3d85-41e6-b194-5eef34027446",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df207577-8674-41d4-a52f-fd906e4d733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12011bfa-9abd-4314-9129-b0cb59fee5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237dc279-99a0-4511-b41e-f74b205fbf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "81cc18a3-4a8d-4d8f-9c5a-9039ba8d2093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcce02f-b9a5-4688-81ec-c240c8cf8f6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fafa52-9ce5-43fc-92df-43272633a6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01a1093-204a-4622-ac74-81c172a3e70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c541db-336d-4186-8212-f6ab197f8ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "04e4cedd-1abe-4e91-a9f4-abb1a1dacfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad29b44f-4367-427d-bf1d-8b21cafd7965",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70df764e-15f8-4997-bb39-445d123dc433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ae8719-0a7e-4f42-b638-611dcaca7a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2149b2de-2fa5-43d4-b9db-1c6dd6579cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e7c35c-c708-42d1-8aa3-4a80b77d7434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a44a20f-c454-4c6a-a384-5f40f65ab6d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce650259-b0b3-4ead-b8c5-f5e0250ab2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0975e3ee-d149-4e22-863b-7b843184a38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f800972-422d-4745-b09f-adedb775bd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b33aff25-4fed-4c61-b7ad-aa2acd8f7b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc200f4-076d-4ea8-83c1-828cc4099e2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26060f4d-65ce-4f76-844c-f78ee8101a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e700a3d6-f8bb-4085-bef9-b7eca3fe176c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94238df8-2427-4be8-8f1f-66db6ee0f275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27ef9161-96a2-4464-a5c6-18672c375cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6808786d-f87a-4e13-ad31-3a9e2c4f421c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdd5034-aecd-4d19-9930-6bb7667456b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac4e023-546c-4861-801e-7d2612ffda6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6f6bd2-543c-4144-b170-37f256ccb2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4683967e-c5a7-41d9-bbb5-da5f761491b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d05b2ab-5bc0-4341-859a-63933abe5a79",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accdb574-d43f-4e52-87eb-b3fb308fb35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7360e9-4c00-4255-87e0-89b0524c2de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de624e18-e085-4b22-b88c-2c6ff64370a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "472d6b91-0953-45d1-b515-69f5330cfc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c65e08-89fe-4ab7-99e3-1e25450243b3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a06fe8-5d3c-417a-a4f7-54746fd1b38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6297be0e-221e-45f9-94c9-4a9556d3e440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0fb5b6-5f9a-4f48-a698-0bd9656f8d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f190fe87-6386-4296-9aff-eb90d69126ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e1988d-c05a-4c7b-a23a-79aa767088e6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0757ccc-8fde-4e4d-a9da-a2999c0421f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82925e19-1f46-4613-81fe-427b053ac144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f69fec3-b973-48a5-a5d4-b8f43a8b4a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37fbf8bb-fa39-4d21-9c5e-3adae00aed0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c254c78c-3fb8-42e2-8f06-716bb439e9de",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a4fd9e-4c00-4eb5-bd1d-20f32500071f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a0b6b3-4605-4a4b-be0e-9df418fe38de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481cbb5f-8d45-4419-b2ec-c8d21b7fa09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8457b11-2ecf-4bb9-a49a-086b415d6b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc89a53-6ddb-4fc3-bef6-2c6fd173ec49",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb492a67-ef0f-4653-a086-4a25904e9240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37c04db-a851-4538-9f5f-4725f1ea7efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d1f681-f436-42e4-84c4-66497156b56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "795ed7bc-334a-42c2-86c0-3b8a38308cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeb0ef4-7752-4288-8393-aefb0991d1cd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aa5969-9ecb-4dbb-9eff-f159bd296797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd801595-fbca-470e-bcb2-57c3ce76494b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ef206a-40d0-4698-b4a0-55b5d779f044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf76f16-77a4-495c-8a82-b66fb0a9719f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd516e3-d840-4194-95e0-557159c12b7f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9a9487-629c-43e1-8d6c-573b60253d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba69f6bd-7715-41a3-86fe-db5f2034f2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64a85de-dcd3-42a6-b3ed-ae4e5722e22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9760d22-d600-4ad1-9262-70e4bc0cb5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d3c10b-17c8-4dca-bd8f-2c3a55b4d1c7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbfc42f-58b2-44cc-ace2-a8559e74521a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1252daad-b373-408b-bc23-b2c904aa5db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6e557f-3b80-48b4-9450-04dc1b111d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db88be6e-8a4d-43fb-9d77-71c95c58de18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3142b58-9675-4b7a-998b-467842e4e725",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c07571-edb2-4a58-990f-1bc3189b1f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e81bfb-741b-4d01-80d6-c9bed208564c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9a4780-ea0b-46ba-93d5-cf92884abd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed3dd2f-e9cc-44bf-8de0-0b2920198f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee247433-4514-41bd-b21e-9bbf6f2a6359",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cc511f-66b6-45a6-b3b7-251653d1849e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44040fce-eaa0-4852-bf03-0369276581df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24320bf5-2de8-4778-b269-90dc73f05dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6aba8c4-4b29-40a8-a758-c0a24c9eb12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d470da4-3c7e-4528-b980-bde7a2fb5e8f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c31e39-6a4e-470c-aa74-8e5fa4830064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d50964-ec9e-487e-9744-e85d5a134aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83f079e-fad6-4549-af3d-9a005aecd57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4d1d0e-1b89-46d5-950d-1324b28245e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a40e5e3-996b-43b8-bf65-88a87ebb96a0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672a7a77-fcf8-4655-b70b-0ffc127af023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4a9c7f-4062-4add-a2b7-bcdb08e83b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3bd999-5ac7-485b-8a79-d66eb28e321e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4377e179-e3da-4283-92f7-e211f5fc501d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73090fa7-80a9-46a5-a66d-2065e9ee4864",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cc25de-ce81-4b3f-8061-d361fa5110ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2477873d-1c59-480a-9e8b-76c7fedf7112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0438ae7d-a6da-47c7-ac6e-e27d11f33301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36f86f29-6769-4b3e-ac2e-4bf24eb6856e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88b06ba-a20d-40b9-b163-a81fbf8fc1b9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22c7691-7eca-4f85-9168-0a6f8da93348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42265ee9-aa7c-4086-93dc-fdb805be44ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8542ed70-1dea-46df-9790-c406a1498084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51b61440-b3e2-4b97-8ec2-1040847091df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4075d7dd-f159-4e4d-be7e-3b320e7c84c3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d99c8a9-7737-45e2-a8e1-aa3bbd9300a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac31379-fa65-408b-8820-cd3dd1188396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b285fb6-f955-468a-8055-e2b57e604729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "081ffe6c-90cf-4668-a175-944199f16f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8429512d-7b15-4f0a-ae28-456ab88a866f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58b78a4-3c18-4ece-9254-7f8df926fe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe5d804-68dd-4227-8689-2c6009b1eb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452d2fd6-9007-45ba-9bfb-329e22a7fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a619d09-0b26-4fa3-b420-bc126997e25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163bbe07-df7a-4556-8147-cfd78c8485a8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b8559f-8106-4c71-9f84-741350f7b55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13c5496-82b3-4fab-bf07-bc8a4759cd7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2581839-5b56-4d05-a86a-5415a626a7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b32f46de-22e7-44f9-9229-739b5215bb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182a3344-b0be-4254-a687-5400d43604c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2517063c-6078-4380-8db6-2b64da8b757b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44c92bc-cc52-48f0-b44f-7fd32a0281a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159a0b38-936f-449f-bff5-af571f7b062d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "158fcc4f-5469-4d56-b4b7-4d0eb986f670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dabe966-0b07-4da3-9227-ac45b76c8a8f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c1d5e0-5782-40f4-b461-8fa3ae65434c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c93daf-7531-4cc6-a7db-a9fcfa4c8e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2db4bdc-d732-4df4-b10d-230458dd9e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4c2417-be81-4ee1-8b51-4703fee2320e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2131b948-33cf-4f48-a5c6-c15149044d19",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f4552b-9f8f-476a-bbc2-de6c81fd9451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec45416-72c9-4113-9da0-33cd4f1a7c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be9dcee-6afc-44bf-ae5b-a01c44b2bd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb2698b-942a-45ef-97ef-fa891354a9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151c6b9e-6581-4678-877f-4b99963569f1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69aa06d-99e1-42b4-9438-2851fb9f3e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebb1dc4-44d6-4e76-ad6a-9f0a5772987f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e101a0-e557-43fb-b856-24d0d3b87e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c7e01b-ab6a-4d87-a3a0-1a874eec14dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad67faec-ca0e-4e8e-aae4-687d83dd5ce2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74f8373-f2c1-47c9-9809-0095e98bdd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeebcae-0800-462d-97d3-84eda145f8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ee152b-7bf2-4852-af21-fcefc75da29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59e38b4c-507c-4841-bd05-90562d30e57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22759d0-96c3-4bc2-8212-29b12c1ea51c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae83927-0b37-4d3b-a43b-ccc4fbb823a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5555c6d9-38c4-4b15-b5bc-fad5704864fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21deaf5c-02b1-476e-b45b-6fc6adb876f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bed87ee-bc53-4a70-8aac-f6d1eb2e25f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87ef4d3-b5f6-412d-a1ef-348826f9e09c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cca9075-5b2e-48c9-b839-080a79533fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f125769-6942-40a8-a478-641cd0fa09bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb311314-bb96-4ac2-9cd3-61bbb3a986c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31478e66-5be7-492c-9925-939ccc93963c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7629330d-fa87-43ec-b94d-f412d828f06e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13089fa-a246-44ca-9363-a560f501367c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adae47fa-ba08-42e7-9d0a-deb6fc3ee7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74799d5-23da-4cd7-b0d3-f9b38fb101ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2a3420-1107-4f81-a9e7-25856e877cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5368100-f9e1-472a-8575-a3bd1eb05756",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e6724f-4b80-4533-b5d6-4f2db8c9d93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4eb8f66-23db-4317-aa60-4ab819ff4d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94950062-11f4-42f8-af0b-541333abf77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "28b5d03c-f626-49b7-be70-c1fbe5039ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7e68f2-f84b-4c71-8afc-a78da172a7df",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34d2afa-4fe6-468d-a2a0-0944915f65a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6b22f3-2946-45c5-9a47-30ea71c1462d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec9d867-d77c-4179-adfd-354ea008c77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "905b0a06-f497-4a60-a100-9af2ffd1815b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5adda86-01e0-4496-b601-5779451d3b86",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37baecf6-2262-4185-948a-704496a28da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d91c118-b48d-438d-b77e-83d4ec74b50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f06760-db1a-4e43-a065-ba6192e94322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7511a4-7465-40df-9350-9fe0099c1477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800912cb-14ba-4193-a04a-ba416e2f0927",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54e0473-1a40-4ddb-b034-e60b9b4b2844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33551965-f568-4774-ae20-588dff845823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d35baf5-da26-43b1-a741-954bd9b8682c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac1c7f2-1ead-4814-937c-a5af9eb240f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2bebd4-0cbe-427f-9483-7c93966a2ff1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79471d7-11b8-4baf-ab7b-ab2508220889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d75360-c15e-48ef-bb14-41045c0cbea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03d5407-9820-4dea-8abd-b8c4710d8f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad910f46-da7c-4ac5-9bda-59d2e29323fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f5c44b-5c32-4c01-9a7c-f11c9c77e505",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8efde7-ab2b-49a7-ae4e-ad6824158223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "13367c31-6b7d-4a9f-84e6-6b7ea0623625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3fbf72-4c5d-4e86-a3c1-ba5d4644f32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecae3c58-2a99-4479-bc18-d3a0c828b27b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cff4f34d-2d7f-4876-a9f2-b48d8ce35134",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9f143bc-b05e-4648-b81c-e30af1556244",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d0381b-6a3f-4429-b307-22530a04ac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14759b2b-c00a-44d2-a9b6-55c634b8b474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623bac1e-8666-44c2-b506-4657826325f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd02f523-cb52-47c2-859c-8e984fdfcef4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d082017c-e297-4968-896c-a49f9b704851",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0b3a01f-ed19-487e-b808-8a97011deb04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7177a28-67c5-4fb9-8efb-baadd64a1e03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53211270-6a6d-4637-8f74-b93d1a24ede2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4f2cb39-238f-4585-b165-a5bcf544514b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1e847fc-d8b1-41fb-abdf-bc44b138d477"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5b4d80a6-5602-4021-ac5d-0354c9da3171",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6484ecde-6eb7-43eb-8262-adf402e4b8f9"
                }
              }
            ]
          },
          {
            "id": "11a45efc-def9-4144-9004-c42d431381b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea81e9e2-b5f5-4c91-b1e3-4e0bf8c9b656",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "35f92d89-f48f-4294-a5e4-9a734a484d46",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074c0641-2e97-4991-bb58-6b4e1060a611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b03e6e97-0a45-48e5-9f16-0312d70df840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83187c08-e99f-455e-84ef-0ff26f3e99d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213d8cac-98f5-416b-9ac4-dd88e6394b18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fde794b5-712e-4620-b7e8-af5d12b67f12",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "600aa399-efd5-4bac-9c59-b7cd78cf4c0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01ae8141-5113-4069-bf19-775de1660286"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1041c578-fd9a-45d8-bde9-a51bb69090ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58e758d9-5622-4c4e-8208-08e6dd75d169"
                    }
                  }
                ]
              },
              {
                "id": "2dce517e-ed10-43ae-bcad-4fc085c5d35d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "540156dd-d5e1-4776-aaec-6edab00b407d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8454c99-b949-4884-ac67-14b293c99247"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cebf27c-8c91-4916-8ea7-0ee0efd5b456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a09ac42-b69d-4ef8-ad59-971572e322a6"
                    }
                  }
                ]
              },
              {
                "id": "b5c88331-7bc8-4db1-b831-70ea1e9b2723",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fd07dc6-9ff5-441b-a6c1-6cf906f5f057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb13d5c8-5f96-42e4-b7c3-41b00436ede9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51845748-654b-423f-a58f-68c83c9a8394",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36989723-70df-48f5-8915-6e47263cff89"
                    }
                  }
                ]
              },
              {
                "id": "4cf75dbc-1a78-4476-aac7-8b39a40b1577",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc825cc1-2f35-41e5-a111-8dc8af92d131",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78cf2545-fbe4-42d6-adcf-0c3ae6438cb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb2c5bd9-3a27-4036-bcf5-28177934919f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f527e2ee-a601-4040-b22e-371845999559"
                    }
                  }
                ]
              },
              {
                "id": "3940d131-8c6c-46f4-af61-d9b34162c55c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6b221b9-5187-472d-8968-e60060c9dfd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc7fee10-d718-48c5-bc4a-f0dc49339622"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78c6ffec-1490-4264-bc81-882e4a8cd68e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "996aba18-972b-41a8-bc95-6ebe7d37a514"
                    }
                  }
                ]
              },
              {
                "id": "dc13af0d-b7d0-4445-a22e-e5091355f9fb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dc05a34-f28a-42f9-bf2a-64682b163b0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b012835-9328-4f03-94b7-86077a587e4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a648ae4d-342a-4059-b1d7-4651384ce30e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d213ee7b-380a-4b70-8b06-9b4c2cbc820a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b436d02-5fa6-4c8a-9c78-ffcbad2c6142",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "abbeb120-53cf-42ea-b089-e54517fb62ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7763d3d9-e231-4909-9b80-32843d9707f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98e8823b-b74a-49b9-8f86-5331ac5221f4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f04e2fa6-0e6e-4003-a764-6f46936eae54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fd7c379e-41c9-449d-872e-116702894974"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3aae983-0c18-49f3-9ffd-c950e335973b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fe6241e-9bbb-4b6c-94a8-a63f5a0e0506"
            }
          }
        ]
      },
      {
        "id": "3855c76f-5dba-4434-9440-fd7f758a2a3b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "11bfb4d5-7351-4ca5-9069-e1378e7b0ca8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df435a35-630d-4b77-94a9-66f434b81678",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "921db353-26f9-4be9-a059-6a0e35f6a6f0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66ddc22-9efb-4c8d-a82d-ff132c8144a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe7c59f-c900-4cfc-baa0-dd2255803c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df0ee1d-fb6e-4082-8f93-9d7b5afb0264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7200ea3-d3b3-4286-a00b-4837c12ae145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814a4e38-125f-46bd-b95e-40983b7030bc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cf6cca-4836-4eff-8b40-7201e75f6fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81423dc-4158-4bef-b0b7-42fe7ed06c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2274e3-1e98-48ca-8550-3afc81ef25fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b01acd4-e4cf-4c8f-89c0-0aadf1d42c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4241007-8717-4cfc-8a40-6ccb672ae003",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88950e5-e97c-4f2e-9c04-be66ab96abbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58057337-43e5-4986-b6bf-d2efcf0e407f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0935c47-4686-4545-8c36-d766d1c3be5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd94b6e-59a7-4c51-9d6d-6460078a7ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e642de-cebb-4648-b298-c1d53dcc2a76",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8c7e06-676f-497c-bc9a-2f0eff01620e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc998af4-30a6-471e-a542-0df32bc47b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73142a5-a674-4f1a-90db-cabb4e800855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38859fcb-4d8e-4efc-b14e-caa9cafa63f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e132d9-c6cd-44ff-998d-cbadd08b75c9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e324a9a-8806-4dfd-a449-c778bcc5ebfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98196d9-b67f-44b5-86fc-84ed66a04a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3305ac3c-d01c-428b-8cac-5a1b7ad65f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca0f44e-dc84-433d-b979-c23959bc2d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d30267-69c6-4463-993d-c44ef1d73a57",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce257421-367e-4f5f-9f25-4d47705bdde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0fe978-6372-4188-aaa8-b78b1ce9012f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e57ef7-8d46-4076-b27f-e737b3c53f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "273d7036-4bbc-401d-85e6-2bb4bda2ad47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19d243b-f3b2-4c9b-a89e-88674abec44e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c4bcbb-6db4-4d10-b34e-9bfa218837f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e92f470-46db-4ad0-af4c-35de5751090d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3534bb-3fc1-41a1-a28b-ef6cddd7d057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e69d79cf-0cb7-4569-a9b1-80a4db089f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7059f4e-0068-42a0-bf2b-dec7bb0a1181",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cb726e-f08d-42dc-8d33-9c6de4d03bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33826295-9789-4831-8b31-5956fc963df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f29dc9-4ea7-4ae6-97e1-25280db6ca4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7365b667-cf5c-4a15-8dd6-3d21f0bfba7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cd460a-9d66-4ee6-af03-b7cedc874e8f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7d5d37-0715-4cbc-b5de-54360be4999d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9d192a-91a5-475e-b7f2-46b0c0ca74bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e08dab-99e8-4694-9096-85bd4e5ac594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f69195a-4b00-498a-a982-564785efdf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b65c1d7-4aee-40fd-9c8f-6858205f74b4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8407357b-ff76-48a0-9d1d-16ff7bed383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6404e6e9-a5d7-489e-a49c-8abf9576b772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307c620d-ffc2-4f81-a50b-c34665059e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd911880-03b0-4d9c-b0f2-ae78030f9b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f3ee2c-f241-481b-98d0-d513fc342f48",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a90a33b-847d-4e5c-99cd-bcf4a1410d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c8ad60-3735-4614-9574-86a1474621e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2159a7be-9760-4533-acaa-a30d7800726f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5492221a-a3ea-49d2-95c1-df5547f7d9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f73d678-261b-4fda-b399-3ce2436c562a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bfb871-7942-4c07-8e7a-8b89729d3211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df48c5a-8bad-4db6-ba81-99c8534b73e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d72cf88-8f55-442b-a351-84d4d566c430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3961f78-e7ba-4a72-9597-64f9cd7d3d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c21052-0bff-49cc-88a0-cd3f34bd97a0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433a3411-10ff-4a96-b4c4-aa0f7c324734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f4718d-633f-40f7-a9b2-cfbf655ef2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a347cd1-3c67-4421-9331-f896c245c726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d297e16-20fa-42b8-b1ba-35df96053615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8cef26-d28f-4308-9fe1-3c57725bdf89",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e5d485-b70a-4b22-bce2-5f9acaec1ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656c8337-24e4-4b9f-9701-5229056f60ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a170255-3f40-4d78-bbe6-60d519510d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b61f521-f342-4c15-ad59-ad31790d8856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d411e29-3bb1-443b-abad-b2ac921d5006",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d563df-8250-436c-8564-efd865684ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb87e19-3743-441e-ada5-5d778641928a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200cc015-de26-446a-9ca4-71a2b6ae581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "47583ddb-a80d-49a1-b49b-933d536a8716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6748386f-4300-41ed-a25a-064f2c5432ea",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd81ca4-40d9-4ad8-bdad-0f96b2623ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11a70b5-80bd-415a-8195-471ffed01a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e56359a-6c2d-4f92-8c4a-0ccd00c00022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3265cbef-b882-4bc4-96c8-78ae2ee2040e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc7f107-35f2-4e4d-a085-d5b1ceaabb4a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2db73d4-c4f4-44ae-9222-dcf7ef3ba25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3be0d7-d0b1-426f-8f15-2058c713b7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a33781-5906-404d-a0d8-4e17cae69a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c81c21b-5b02-4d6a-b6a7-2364054ce57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0962e09d-66e1-4e49-89a6-b85a63638f9f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe3e93c-43b0-4f4c-845f-b80d5127cbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3449f20b-c004-494a-ae40-78f24592445c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a925d7-60fd-4deb-9a69-ef2e9c8a6e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54aa23d7-785d-4e24-a6ea-af00057e67ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c114c8-4f1d-4d3f-a384-bcdeccfecef4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbb26c2-73d2-41c6-878a-59884d027cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83056c43-9e7d-4249-b4f0-a4bf7d3a194d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcda03d5-1aa5-4b2f-9411-2e7012b7548c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2c9c13-597c-4173-93cd-a94ed51fa736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e4cce8-8b39-44ea-9952-cb6ace9c237e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d61caf4-218f-4b4c-8547-343841e05cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b650ab4-a80a-48f7-a275-c5e2696a6a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aa0ce6-4fb3-4572-8e3a-f18a4fa22221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcc70ed-dafc-4996-85da-6b13c936e119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4e0159-598c-4d8d-b86d-78c8cefc4f80",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e355176-fbec-4db1-8ff7-3be85e53b1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0fe826-45aa-4b77-9988-70a14c058b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9704a77-a2b3-4b15-adda-5281d0c99c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "179802e3-db4f-4379-ad6b-5bf334aac22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75784dfe-21a1-49c9-999d-7fcfcc436174",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9afb147-121e-421f-8e61-b25fb5bbef45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a350c62-786b-47b9-a7f6-8fce532e4532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f2967f-b4b3-48e5-945e-dc9aba2124e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b7dd5b-2ed6-43a1-aec0-d1743138e8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7da9ac-3879-45aa-9c73-28a025e557a2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70159149-f238-4d27-b9db-d1f41fd86ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cd19b6-9781-45cc-b882-69c25031bfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2de1781-7f39-482f-ba0f-3e24efd8b71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b13195-1e57-461a-a6ad-a95d330fb8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a908948-4690-46f4-8e07-66066d72a72b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288c5278-c73c-4a6c-ba2b-00cb9a120221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7ae16f-54f4-45ab-970a-236d16e36c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b346005-0175-431d-85e7-8d7402b4228e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f917d40b-2cb7-4eaf-a564-90ee48ea997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780835e0-6156-420c-8214-a0a3323c5e01",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0f50f6-ff25-4768-ab5d-66ea424223e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b830bfd-34dd-4427-b5b7-589f3b4d425c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e5d229-367a-41c3-a938-778c79719d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a6b82b-ad3f-40d3-bf62-21c4ed6ca57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b5fac5-7ddf-4cd6-acce-e39afdcf68a4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097ac08f-7ac8-45d9-a947-292abf06041d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec50a748-d5eb-43fd-a73b-e51d12ee3ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca18a430-ab91-4890-a6a7-7b8f93abf71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9296d6f1-4ce6-48fe-a1bd-4f360a950c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930004f9-897c-4b31-9462-547dfc32ee51",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5e8826-fa63-402a-b560-0081d2928118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d037cde-14c3-43e5-a362-98a07ed2052d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd6a0e1-4379-4920-9d3c-02add9673750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16bbb7f5-f135-4ae8-8a6d-70d08ef2a1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01dc79f-b138-48ea-bb01-82cc5fbd1b82",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db536a9c-b750-41e5-92d0-da05807be353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e7422a-5799-4f99-80d8-48bfaaacdfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64101cde-1841-4c79-a2ab-f357854f74de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72518282-6a8b-465d-91d7-85717190fddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0258c5ad-9335-467e-99a5-1bb787869945",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8063b77-d119-4ac9-bff5-7c0e5d587502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec64a2e-a4b1-484d-aa5a-8d71785ddd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79c700-6a65-4bad-862e-9ed3646a51dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4cfc5a-3663-441b-8a14-e286dd1fd8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f8b52b-bcf9-4244-b1e1-f81f32be4379",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105de3d5-ddc3-4785-9033-b1e720e0f32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c779fc6-f4f9-4fa9-a31c-cf47cd27b327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fc3588-3121-4551-849f-4fbcf90848d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7aa18f-2012-4a19-82de-c3f38cfcbeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08875fcc-ffb3-4045-b043-1fbf8a451559",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23bc8bd-ba5a-4a77-bdcd-fb4acfc61fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f5dc0f-57e5-4d1c-ab12-6e2d80f4f5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8f3aed-6191-4dd6-86fd-e4598e26fb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3a5e56-4f1b-4faa-a99f-0b105157f5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80502e10-4f6e-4e5b-85ac-55408c5503cb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5af391-41f1-48a1-aa84-312d13027c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9eb80f-d01f-4a1d-8a2d-83c74da51d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864a5eb7-87e4-419e-a638-6c88f521b287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b9513a-433d-498c-8807-9960ae807ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f963d299-a16c-403f-8be9-a41dc969ae36",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcc0eb1-39b2-4c78-8e90-3cb68bad7c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d18210c-9bad-4a8c-b551-60042e6e6c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b397bb64-41ab-4d1d-bf7e-a483ba5d41aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6af6f9-9a01-456b-92d5-402286f17fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef20142-b1fd-4912-a865-dca4a20dbbb3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f428649-5618-40f9-afdf-115759c8de73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f3ffbe-cf41-43c4-80d2-eb857e6c1ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75739e97-48a3-433b-8969-0e46a90fa80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "705cbbb0-62dd-4aa7-9eee-b3bf96a7e290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f08f49-8269-4c94-ae14-eeaee86df898",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8820d51a-d464-44f8-8beb-0b34f9dec23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57332800-2111-4bb3-a913-727d14c3ad50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe83fe6-3578-436a-8e71-5a2e41e12496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9806d3d0-7e7d-40be-bb0a-13e0cf02e6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cff19a-d87b-48d8-a387-3c0f6034b5eb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f8fe6-1894-4e59-92e3-7a448484cf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e6d22d-c257-499a-8fdb-c5d6de7b8a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37466e82-66d1-41e3-9b14-f2b37b7f360e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82ea4716-44fa-46e8-80e9-c7ad78236c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede77496-e858-49b0-b3f6-007869cc120e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55bcda1-7746-4ad9-bf79-3ae564ccf24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e105f3-1c5f-474a-96b8-56f39793f727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cba92e-b18d-49d4-a4bd-ba130e95c5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b768ec-7313-41cb-9322-9cd44dfb0285"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6110ea39-67e2-49cf-9566-e8ef93beab11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a84de8dc-66c7-4c9c-b90d-6849d73a0a2a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab114d35-674f-4179-916a-05109c6cc05a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb1bedf-7d84-4d7b-bb93-5c5636f5f11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b80fc3d-6e67-4b47-8d32-bacb1892d884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfb9c807-9c5b-46f8-990c-82bb8d9c7720"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f62707fb-2f34-45cd-a68c-c314353867f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5414600b-1877-4b73-9f9f-1023c9302f33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb521905-ef3c-4ed9-ac8f-18fd4d7656a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62a905ca-c57c-4178-b74b-17cbe67eeec4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff0c2238-3ce9-4cf7-85d8-bd38a4d746e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2e5d0a3-72fc-49b5-ad3e-426803a87bed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "291e5df4-5516-4133-9712-52ffb3d286d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "275af395-4410-4a3f-8ffb-b6d121808645"
            }
          }
        ]
      },
      {
        "id": "ea64a2ae-41d4-4600-8298-5bd6a68426b4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "096036ed-bcd8-41fc-8e91-e64feb11c442",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe825ed5-03a3-42d8-b800-220decae3879",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4ae8787-cf0b-407b-ac28-3063833088c4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14f1a20-2fd7-41d4-8534-d8e91569c006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7a5b65-b4ad-4cc3-b320-9dc9e2e7e6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203584bb-82c5-4944-be7f-cb4f5a786dd1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb88192c-faeb-49be-addf-a64c3a227b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6e03b9-768c-479f-a7fe-a86c4e0cdc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1e6c47-e5ad-44f4-a088-d4feb6ccfcdc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5770310e-cbb1-4b95-b709-51b372928dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad82b39d-b308-4891-bf34-6d47cc3007a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5011168-5fd0-4938-b07c-6c82cbcd266e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94868a8-85c3-4172-b188-fd91b8e27df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18eec0e-7647-4cb2-b773-6a64b7a730d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a358f85-7898-4df2-8d25-10f841611dbf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3a02db-73dd-49a0-8dac-2affed4aa420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0192bcf2-2717-48e5-bf4c-6140edd855e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7032fb3e-1625-4f5c-a3d5-5f46baec2db9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69550c68-c772-489c-bfc6-183ae809918a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7d993b-179a-4bf3-9ef0-12dbe32ff65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aada99a7-9764-4040-959d-b6fa5fbe3dfc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3094704-bc06-4fb6-beaa-b260c6b2fb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfe6100-0a8f-40a4-92ee-4b56314ea688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdcf28f-575d-4f08-a890-9ecf7d453777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e233e9c6-c0ee-40f2-8aa4-d1615de24891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0c50fd-5f24-4a62-a90a-cf3bc95817ab",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe10ce7-ccda-4b0f-9c46-c95f181ca8e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d1ccef1-63aa-4998-88bf-e514c8d5c198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f6a081-45aa-4f7b-bb65-378aed3c4cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbbf3b5-f2fe-4252-83ea-0dca0cafb102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41a1c16-aebe-4509-b134-62ad1522372d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089cb3ff-e471-4ddb-8285-f11b4427df06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50e7e8d-9488-41d9-9437-8ec88c1905ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8eaed08-40b5-466a-8f2f-801a6317dc38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e068dac1-fa0d-4fd1-91fb-9964287f4f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd9698c-de96-46ce-9c28-8ad03b1e5a09",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7969df3f-5ac8-494a-9bfd-b198105eed06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d8fa7c5-b9c0-4036-bb70-8df7ac9146c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa6e4c8-4b0f-4747-9ac6-5fd50ae0c27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca2be36-63b3-4852-b517-50d6cc8c5a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e692f8-8a1a-4940-a788-fd56732b5372",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8545ac55-f06c-48f8-b09d-928d53d26da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47cb6cbc-844b-4072-b8a3-4c08b66eaee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc55e6af-9456-4c6c-b012-fb5414dc9155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f729ea-e291-4d32-b434-fee863fbd3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c661b3f-5bc4-4ba2-957a-684fae083414",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60bd2a9-ae8c-4cbf-828e-70178feea863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d5e15b-2756-48f7-9c06-e2ffe78716e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa328da-61b9-40c4-9409-d2cee88bd572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fca068d-b50e-4b1e-bdb9-af3cb7c7cfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c41d0c2-6524-42ea-a692-063ffb631c75",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef77e85-81a3-4cf4-87a3-e36460e008de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38e5d1e6-5fc6-4d8b-bbfa-73b8adef4a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41f3ea8-75ca-462a-8381-aa9a3622f7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a68fbe4-dcd6-4d98-b5b1-61d8069479ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fa116a-bfbb-4484-815a-fbae6b1e0833",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3def98-db70-4ea4-ae47-eb6aa29c33fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb57e0c-5d4a-44ad-9af4-a6ea2b6367cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae30399-fda8-42df-a4fb-4d1311c8b7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98754c41-e456-40ec-98d5-d83e6733009c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3850d914-fb79-425d-afd7-728f9e1f3f00",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a6f624-e051-4642-9860-507f49284238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4716a684-c758-4ea7-a36b-84a60a19dd51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01380296-898a-4e2f-9a86-872254339fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7297e2-28f2-49d4-b776-52bbd0949768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa83ca5-1199-44a5-a824-7e763da2b45a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebb500f-2cfc-487b-9f2f-01fa9d5965cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cbc5c3c-1fa4-472a-be71-d5c2cd00f285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e712bc-f3f5-48ca-8bcf-2ad83c0cdf13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf86818-6283-4a81-9e6b-93fb74e5e4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135d6664-4b59-4eaa-bb23-3e2fda09b1d9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01c1dfc-8736-4b46-9239-97189380808f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bdad54-09f2-4e81-9c08-b5300e17bf89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9410b106-695b-4ad4-adde-b9f02d8c92ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f40f0b-c360-4028-8b21-80f2d87329b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f4a64c-8fb2-4f54-ac9e-848ef5a0dff0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f41089e-6ce6-450d-899d-07c0cc695d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ab2578-06b1-45ea-8946-5c8bb893a77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab933f3c-2a26-4833-ba72-257f301a0942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc0cf2d-ca56-4882-8507-1b4c98d16b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5aabb0a-523c-4f88-8b5f-be390e33bdc0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13809ee4-834e-4271-ba45-0c61f06ae2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ad4c1c-a828-4560-9ec2-e5537aaa828b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be18396-839d-4551-9929-a26e7f12cea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae45c10-f8ef-4a66-a427-3f5ebd164669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf14b65-b809-4db8-96c0-cc7ad0520cf8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a6c583-5caa-447a-9c1d-e53e149034de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd5646c-b099-4787-8330-946c779c3563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a381d0-b2eb-4e8c-85c7-2b6c6f80ebd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e2ae32-4ce8-4aec-9f10-fcbd98a5c1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7679ea-8c36-4134-9c4f-9515d66f238f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325080a5-d615-4381-8a56-74f71ca0a879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35526f15-045f-4ca6-9e91-ec6cb047343e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d60c29-697c-4af3-86f3-03a56934cb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16df44c-2f3c-46bb-b1c4-2cbbce45d3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f34d2d0-c7f7-404d-94dd-351d3473adb0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0068759b-860e-48bc-8ab4-f24eaf965362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b2008b-222e-4f51-9964-653c8e1b0372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b97d6b-6d25-4a10-bbc2-4f8958384553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a3863d-f6c1-453d-a67e-7d6910e35733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a3c5a6-debd-4c92-b7e3-dd6367f17f0d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ca3b5e-b135-4fb2-861b-fd3b8847e225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6d47f5-09a1-444b-81f8-cd4b0c896a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f0a1b3-8699-4b86-81d1-4cdaa23031ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfc19f7-1d22-4fd3-babd-1c4d2b8b5027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712bdcc3-5e39-4750-a420-5276d11ae6a0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ed9ade-6bad-492c-b805-daf0ab1c4312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5550f658-6341-47e3-9c3f-ff5060a5d8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8067bf1e-3c24-4222-9df4-e7e69fdaa590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3836bf5f-82f9-4744-84f3-326dce39ca93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fddda4-9430-4c89-978c-a1758c8be2e0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de011b07-30c2-4437-af73-5b6e7f0507b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad141530-f4f2-451f-a057-9201f4fc564f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfb5e7d-b3d9-4f5d-8a1c-e241c0de48e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a565d2-45eb-4c42-8613-5385253ac4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414082b5-ff1a-4af1-80e2-ae1b5c01c1c0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb560f0-13b1-40f5-956f-1cb6806ea013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c569d3df-2a23-4fa5-b480-059442a5b541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7528e594-731d-4d26-8482-7923f0e65931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6faf9f5-e06b-480c-b03a-1c95121cfb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd166e40-c3a1-442e-beff-d973fd7ebc50",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1fca9b-6bb4-4b3e-855c-910dd4d02759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4818178-b2c3-4274-85d1-df9466a5829a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2218dd3-20e4-46cd-9154-b532b3033257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b176e34d-f396-4385-9e7d-7903f5c2a1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686b7f96-b38c-4faf-a82e-d81651199887",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439c083f-860a-4eb3-95e8-b46175bca0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71303714-82d9-4ddd-9222-3eaf46324f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873bcf3e-cb06-4886-937d-1391512e7b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027366b3-f929-4cb8-9361-6c2547212d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11c8854-f274-4b09-88af-66d6339983ab",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89dff57-a523-4ae7-a3d6-2985ba51c3aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ae4d46-e235-4eda-b058-06d1d3ea040e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eda912-dd0a-48f8-9730-c665cd2a40ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a1deac-c0d4-4b3d-a79d-07e0f428206b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e4a6a7-d07f-4c3b-973a-c82a963fae8e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2f162a-199a-49e0-9b42-31134ba992f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35397a91-b4b1-4623-8a8e-7139d9730ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f21144-9b2a-4702-97ca-ff1bfe332a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faca63bd-a54a-4ebb-a18e-7ed07659363f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e114098-433b-4bd1-b3cf-4e778f57a7bc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02919ef0-0c6a-4c98-bcd6-ce82161e56dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902a9054-ddf5-4dc4-8860-6ace0bce33bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181bd651-6fe4-40f4-ad94-b7ce3247ab15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8cf78a-ff7a-4d2e-bd11-4f38e297220b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7620968-1acf-4ad3-9b93-ecff5d8154ae",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d082130b-3eda-4b56-86c8-7025a22ba77a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84ed96e-ebf5-42bc-b673-cf57158eee6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bda305-5fda-4fa2-aa75-87860ae5584b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64974e6-4af3-439c-9997-e025d7cd99e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975a2723-4528-43d5-8993-528bd7f709e1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07cd6cf-6b59-41c8-85a9-e8ab9f539136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f73ef06-a871-4aa0-ad62-6e7e11be7cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0c31e3-0a6d-4212-a9f0-ced5cf1248af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8998b62c-8f4d-49b5-8449-50cbec1bbc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715fbfe8-66c6-40a2-b889-4045cfaf6e63",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f032e37e-bb5b-43ee-9da9-72d94d068d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13efc27-d9aa-430b-8b1f-60c8064c57b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec73626-7c6d-4ccd-9f26-6df19814282c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ff959f-5d5d-4a61-b25e-67df66c241c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a498121e-5a14-432c-98ea-107b17510e3f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a370cd9a-567d-4d85-80b9-fbefcfa5cc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e253b036-8000-4727-bc36-7d3c039d1781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76197aca-17c3-4623-8d06-8afc82e8eb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c93e61-7a3c-40dd-b61c-6ed011bb4b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60664e86-b212-4368-b6d0-aa4815d16108",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3f99f8-1352-4cac-8641-e22bfc256eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533de2f1-99c3-4ee6-a8ae-94e721131916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7849b4-de67-4baf-bf79-6ce68d2b543a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c9034e-d256-4d82-87c0-f41611a2917f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80ef980-2a61-41aa-b6a3-3a49ffc4f60d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c9c29e-6247-498b-a169-fb3e6fb8165e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3610bc12-615f-4cae-a3f5-9f889c66cfc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe063ace-6f5d-4a1d-a3f4-f7b7bdceb836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d851de63-6459-4e5d-94e4-4a82a773455c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84a65b8-2eee-4d3b-b181-f4116f57d80c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9615c088-8f48-4d0f-9a5e-95303dbc5e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3db579e-da8d-4655-b623-55ebb06f0811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38076e95-d779-4eae-ad26-13b9b9b659d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef1c63d-c9aa-45cd-96c3-1fd475e66bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315b02e7-9fb9-4f1c-8a2f-893e3e377037",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629f150a-201d-4bcf-97de-c12be01e5eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43848729-b81f-4484-9337-45d0e1af13cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429021b5-0f84-4640-b752-a760e5f3113c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a9ee54-16ed-43a3-b44a-a419b659150f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b756be38-df6c-4d9b-8c86-af2f48acc65f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad472c8-e577-4e40-b3ca-4c173b6a9cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f88cccb-2406-4a1f-8416-367896b4b26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58891680-b7cc-4939-968f-a350e41117fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0606b7-eabd-4bc6-b0ee-f6e8d04f2ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3380a61-9ea2-43db-b81e-6c84b9e95bbf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6658019b-4f03-40c7-a859-771908278f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ca375d-a4ea-4fe2-995e-3413d0fc0a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50cadda-4402-4801-98b6-db8975b97094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed94c42-3cc3-4f2f-adb8-89dd5ba6ba20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb9db6d-75c2-42d7-9515-534fa84ec4fa",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bed75a-6cc6-42cf-80e6-20e01c5afe6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722fc219-883c-439d-94e4-f935053c4553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c00800e-a32f-4cd8-ac9a-1fcc3d4c436c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19dcfcca-e6b8-4d71-a838-d67aa069f4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e558b8-9d2b-4f03-aba8-d150618e90b9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1665482-318c-45a9-92e8-777f6adf5317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f123305b-0d37-4152-a475-8bd33bf9761a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a3ff8d-2802-4389-995b-fa3945d2a08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3445d1ab-a439-4416-839c-112df285d899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba273845-27c1-408c-90c7-25c478f82a98",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9de2f4-a812-4418-995c-0d60df446d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5510668-45ac-469d-967d-68b6fdd1e373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e944ec4-761b-4f94-b74b-efcb4d4b7cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1cd354-d50f-42e2-924f-0949d7140333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88b6d6d-7025-42a5-a91b-4f4d624c4853",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d515dfee-2c11-40a4-a70f-a5e5d61c7511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79622144-5533-446a-97fe-7e0f73169407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3cd49d-f43c-44d4-b718-cb2308285d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd5cc22-70a7-4749-bddb-770bb69d2064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c76138e-be19-42a6-80c0-aeccddc93ac7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b772fa-2df8-414e-800e-f9373df26465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a061163-b9f5-4099-b2d9-2696876b54fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9555927-005b-4763-bfa0-c3e129cf1e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99a5718-5c91-4616-9e4f-99d5d3123f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fab94d-5471-461c-9ae2-781ed6454c61",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b58709-bf41-480c-ae17-453559366a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6937a5a1-9c25-41e8-81cd-f29b2d19ab9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1d5ffa-cc3a-439d-bfd0-7ede198acddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4721c7d8-1d0f-4912-92b8-cb93a50a297d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03371d68-e8e3-4bf8-986f-6b5837eaeaf2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be83084c-de05-4fbb-a8fb-01a52a0c1acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd631f6-55ed-40a9-8e91-cb84390b0ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78db7a6-abf9-4bd3-9bbc-df7b2df77f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ca1232-1544-460e-bcfc-a6a9cf8c6fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19c565a-dde3-40a5-bec8-f47c87d1f675",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dcd981-059f-474e-85b1-e0bfa4646aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2304f14-83cf-4715-9ced-e1a4677bcd06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b146d27-5f0e-4143-b05d-6f1bc5ae9084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2e7f40-9645-437a-986d-6cb67fa90174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83697386-cbb7-45d6-b353-b9fc09888634",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d07de6-8be0-4b01-b59b-728c66e3aeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabf27d1-1d27-4fee-b20a-c47e9de5b79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b97633-8f28-4c31-a256-edefc1098656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c236325-02c3-45b7-a29e-7cd82a6acd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c065c4c8-acaa-49e2-ad4b-e3b3211bba94",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8398d0da-dd6a-44d5-8410-7998bbd0e7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b58c009-1fdd-41fd-a490-bccb223a9f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b605593-cf0b-4c0e-aca7-17426110e04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e74f63e-034d-48ca-86d8-2b1a199f9b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230dcc8d-38fc-4176-b96f-d9eb43180a6a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67d1d17-ed9c-4a19-87d5-bbdb730a8b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278e69ed-5a81-46c7-b714-792273dc19f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bf8bc7-5d1e-46d9-af04-7d6c1a9306cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8dc88b9-e30b-4fa6-b0b1-33ea80988fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551f6ed7-1345-4f8c-ae7f-b54270777939",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6626167-572c-4551-9b7b-57ad13b61897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2caff5a-7d3b-43c2-90e4-5cb3f07bfdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e19a2f-d27c-4175-87c9-c4dfc8906a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b3cfc4-c393-42c7-b5c7-2296719e5f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323870fc-928d-4c07-a704-0e853b50fe91",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffd6f80-e0f8-4a0b-947b-01738af0fc73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b09818-ad58-4a0c-b942-dcd95786a8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616b9c4d-d70d-47b2-a3c1-e7dadbbe9b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c765528-3e7d-4f6b-a3e0-e845209915be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8b2e94-f24a-41ca-9b6d-0c38b83c8401",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac60491-5004-4a4e-86fa-8ff4ea4d0111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2211b08f-44fc-4256-8ac7-0be12daaa5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a061c666-329a-4a74-aabc-f56e18eb6688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56415e8e-764a-4cbb-82f2-5b75956a23b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e7b944-d4bb-4d4f-8c81-2feab6c3d082",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1378c8-42b7-4bfa-8596-b77fc5edbd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b3e794-eed0-4fa0-9e38-3b1b5e6d8cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dbf812-260a-48f5-9ac3-04be6f639d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6972ccd0-6dd3-470c-a6af-6da31d982226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0cd3e0-9c1e-45f0-8731-abd119a2fdec",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60650f84-fe7a-472f-82c4-a4b9d0074f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d404dd-8209-42e3-bf21-9ef58f3cc214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f0dea8-e26e-48a7-9aa2-8c946ea05c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5919d5fd-411e-4c60-bbe8-f6e1f74c0a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cae9c6d-dedb-4188-a6d9-a49b19a2f695",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c64938-e8ad-4327-8ce3-53677a3b45c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f2bae0-6f12-48e9-ad58-b6037512ae6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaf3fdf-5ff1-4e4f-8bbb-86ee22ad136b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13317245-1435-459a-8c6f-62711f1f6cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557d17e6-f9c2-48c7-b3cd-4ebc57118048",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d555373-ae4f-436c-82b3-3bce9128e683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3214f0b8-201f-4ac9-8d28-c856727dcc4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de85326b-baa8-47cc-82b5-bed85c8903d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d233b4-c590-4247-b27c-feb83e259720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24963978-e7ce-48f7-ba01-5ca6ffe3ffc6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c572b25-332e-4fb4-ab76-51b66a955821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb4a815-048d-4799-9414-6190b4b29e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2cfd97-4bc9-4fdb-858d-6d5d242f1860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6ffc85-4dea-4f76-a211-acc12bb93dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16c459c-3055-4cf0-89f4-ef3d0bc62e66",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353b84cc-be9a-4fdf-86d7-ba0c6a91b1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a44378-14f9-4880-8d63-d797cf3d6ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec2dd0c-84ec-4b3e-97fd-6063d619ec10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42fc05d-3195-4ed9-9b72-24cabee36e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575328e2-b851-4fb9-a490-0bc512703e36",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d62dae0-7642-4f93-9ada-baf374c8b771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8102e92c-ff73-4bd6-bb5f-8153f22b368c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1911fee7-1048-4e9c-9c26-fe455bb0b4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8273de04-49c7-4c3a-8443-f63c2a0954de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30f34ad-cb88-43d5-b355-c92e7a66af96",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cb0134-0888-4a48-abb7-1f6f5d3f57a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd899a6-eedf-4374-b886-569abe27e766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ee952f-ae24-4c3b-a316-fb66b780c773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889b259d-9712-4338-8bf4-3431670b9297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5938e8e4-c70b-4516-a0d4-7eeaf9f9ac58",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e11f7f-a9cd-44f1-8fb5-b1e95d4e3dbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e751a64-76d2-410f-9af2-f695a8f60e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8557aa-fae0-4c85-a101-c56711bdf095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f88dda-12b3-4a6c-960b-8d9cece774d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aae0fa-3bcd-4fa4-8180-98ce0ebd5be8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5011751-b649-4cc8-88f9-28ce9540550a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78fe5f07-434f-4923-9a7d-109a473bc888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c1f4e4-f135-45e5-a2ba-2a4408d03a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e95317b-3e69-4733-b418-e9572423ebcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa84445d-b40c-485d-89ff-e7b559f5e6f4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3864ab-5149-4fe8-ab63-b82d3dc2dd5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6e3399-b18b-419d-9139-6e6699aed6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be92a302-7466-4d67-ac74-8c4aa599b1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b09600d-7904-4cea-b853-825632b07630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b30869-4ef7-4ee4-b745-4b0eec1a7832",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a0449f-8578-45be-931a-92ae5d946bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5884b17-b3a9-4b00-91e6-231bfee53b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78257aa4-2fd1-4c59-b814-3be2f6887c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00c648a-b0a1-45a9-81c7-c38a36ff2fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2be1208-8b0a-48ba-8698-f65f8887d4a1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25472a9-c811-4cca-82be-20c4257559ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568c7f36-a5b4-4452-8dac-ab1ee66fa0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c95e3f9-117e-4c7e-a0f3-a403d1ca70ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab18f58-561f-4304-9892-821014c88641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3caf7c-781c-4834-887a-e377ab62ba9c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dcbd1e-e765-4e2a-824f-eb5de5b3a5b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0dce0e-e7d7-4ae9-8312-d89e764d9173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7af1fd-b507-4924-bb7d-9a8f1c609b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7100c3bc-b243-496b-90b6-75ff35930e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67642c8-809c-4664-86b5-95bc2fd45dd5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9febea-3e8a-4503-8799-d3c9adef4bfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ccd027-f071-453c-b5be-561ed61303b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad32c77-9a0a-4429-b317-6da8f27c2bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693a9753-75ff-41ae-9e4e-22612df88ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b7208d-add2-4158-ae85-abfcb77a5ed3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb8b42f-8378-419b-b5f5-5e0594e19ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a76bc0b-559a-4b25-897f-84b3ba30bf31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8d8cef-a727-49ed-8158-a50f497d456e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c0b8c8-67f5-4b07-9b19-2f72ebe49317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9a9da3-7d8c-44a5-b530-d4f0b631611b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05eaeaa-7fa8-44ea-badf-2f5b72dd1ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fc872d7-05b6-4b01-8091-05cf768b2033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55e1b38-a8f0-4c9c-ac8f-2df236965f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f875d2c5-fb05-478f-a3a6-f6fa2d537177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55f507e-ca0e-40cd-a78f-5781b02b2e10",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af56a2c7-8638-4d4e-8eae-930d54b0fff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f78ebac-f006-4c8f-96c1-b2af6c89fc61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa41cb6-9c14-472f-b3ea-7f163470ab73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2709804-8bf5-4905-9f0b-85f18ef0044e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e02abee-09ce-49db-9d44-a194ef1c9635",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b917fb78-c2a5-4de7-a156-819da9e91908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2c5ae40-f084-4ffc-a9a9-2e678b1d9af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa07fb8-43d7-4c98-87c1-736692175de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bcc0d5-0e4f-4b63-bfea-1970781a8313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2b3530-24c1-44a3-9aab-70e92d1e442a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4844c074-37cc-484a-82e8-77e3890ab9e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a863dba7-c9e5-42af-bcfa-937753401e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0820978e-4028-4308-9e25-0ce479868f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d1a7f4-877b-4515-820c-d2fb5a44e873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197a1c27-7351-4b0a-b3df-228babf44f22",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff762d1b-a4b7-45c4-ba16-73430746199c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c1c770-27c8-4ef3-ac27-b3f7079e1d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20554585-bbce-41e6-ae79-a0a0d584eea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4522cd45-7fb6-4f81-8cb8-29997a7ec4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0034479f-a09d-4d48-9dec-cdb08979803f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec5abf8-3857-49c8-af55-12bcc1c2532f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07492ec1-329e-437f-aaf1-31ebabee98c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1e9d76-a6c3-47b6-b0bf-b0b9bc90ebc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50583b93-364b-4fdc-a191-ea04215ce3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9a941a-6729-480d-ad11-873ed549c79e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb88d16-1217-4597-b874-72919b98ead0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2fec029-3715-4bad-96d2-ed5eeec74361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c59ce2-2c1f-464a-b09b-67bdb9866555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a839338d-4eab-41ac-b2a9-efe617ab0dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853ee0c5-b2d6-48d7-9a8d-d5ff27fe5107",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247d4ff-3a2c-4de9-a509-55649ba80995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee4e4477-0f89-4639-acba-358eedecba86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cea08a9-d6ab-4aa3-b16c-a419cc7fab49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c2f23c-3418-4dd3-9abd-b59864ddc2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cfa592-0454-4c7c-a112-7b5569901c3b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6f62ff-f678-45a5-a04e-3e1ede881737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed4b738-9bf5-44b0-a068-480b5cda731b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7a864f-e8dc-4450-9df1-4e6f8264f042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c30808e-7e59-41f0-8e2d-ec06b7851901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cf18c9-c5b5-42af-a94b-ffd21c0c5985",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072323bb-89a3-46da-b8fc-28ee7e869721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06fb9b6b-0b90-4660-9d53-34565229ab9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecd026e-75c8-42e9-836b-b151e61fe737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40154217-37ce-4dd3-b97c-f3154a5277ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fd1456-3526-499e-8099-708432d1afc3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2d4e7a-1659-484d-a90a-210a6d5a737a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24dcca12-eaad-42c6-8348-cce20dbbee67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c5aea5-ddbf-4395-858e-c4610bc76ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4f5993-0b10-4b5e-88df-7eaee14947d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b048bb-bc6f-4b7b-9e46-08e970124364",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1022274f-a289-4d25-82e4-d7ab1a6a3c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c51dcf15-827f-4596-81bf-672074837896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2572950a-1c93-4365-8fa5-556908490d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ee9a5e-3ea9-4d54-9929-ff41002547ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801efa92-4b77-423f-8a97-ae277419e683",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a787b2-aacf-4a13-a0a4-4445310f6db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb58129-7b1c-4762-b347-8362646893b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f063cb-8993-41d6-863a-c292323effbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e906c6e6-3095-4b61-846d-9d35947f138c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7503d94b-098c-4a5a-a189-6be1173ee4e4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6ca087-a240-49ba-bed8-0049720546c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a115b7-6523-4e6a-8c3c-7eedee6c5e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5b4c88-33dc-40ad-89ff-6e539d27b097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d23d829-7347-44ff-b8e7-777c3346a143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e68cb1-5473-4500-8f23-ccf0f1d31ea2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc82dd0-a990-414a-b354-a2c93971fb74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d635d049-7d7b-400c-9e65-b63d887de0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd6cab8-b9f6-45e5-a3bd-026515f54e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dd3fb4-d4e0-4a38-b79c-012788027f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b16192d-16c1-4a6a-b86a-3e9f5752855e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152f8ebe-9381-4ac8-8b0f-5b264c06a84c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90656b93-e848-4f40-be26-aa1c644932f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f92f6fb-5c77-431e-b5a1-70f735f7dd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3735345a-2c73-4505-b518-b1fed27d5d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb843b63-a521-41ec-9597-ec2f8d55bca9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0bbf44-193b-4ec3-9b46-706ab8568c21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0dc642f-76b1-471b-b995-90799de58cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df341151-9210-4d5a-ad7f-59a80283e090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84b139d-b1a3-4f3a-9128-65e5cdcb33fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda73593-8fa0-4177-a193-206073e38c19",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a145ce-4b93-44f6-ae6c-c76192af4e1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13df32c7-2c23-41b7-a49d-9002327877f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3ae80c-1373-4b1b-8a60-122f1d40b7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52e4499-4fde-42c5-b1c0-085822bfc267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71de538-0642-4e9d-be3d-1b12022d9ace",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5daaf46-8f43-40d6-9158-355a1fd34273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db81389a-b26e-4c08-96e0-8e6c2c851e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34145c6c-96cb-4a49-91d7-82c48f5aeacd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0673dad0-377a-4e7a-9a03-cdfa72c59033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55821bc9-7b73-4309-8189-6e7f5fefce80",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9028c4-0b78-41dd-9574-73f6ede7d802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532439e1-e975-478c-bf05-f48b436f2567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bd1bfe-55a3-4dcc-b393-f92f5e5ca880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22aebffe-2c6d-434e-b6cc-af96f3ff5deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1373f7-c314-4e45-9b7b-8ea0ffbf6dd3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33139e0-bc9d-4308-af7c-03ef4dee588c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6314f5ce-33e6-4dfd-8da4-3796b3770270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb16e30-e172-4410-9837-89327c202722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ffec05-fb9f-4982-aee3-26ce0fa17059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86a49bc-8c7c-4c87-b247-4b0e0570a840",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f085db16-5490-4a69-aa94-41c2d8ef4924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94eb7438-82aa-43f3-a4e5-c51c9f8c7359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33bc185-57ba-4e73-9ff3-d7c1d7029904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdeb9d5-4dac-44f8-a651-8b09ed4e00a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8fe85c-3108-4fbe-9b8d-8f914a618aca",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea91755-7fa4-4732-a9ed-c2cb96ff7d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc0ebea-f719-443d-9491-0003413bb5be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd586367-9ec7-4205-88b7-23148ae2c334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18005ec5-5a00-42c9-ac1b-4956972f37ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73824d19-62bc-416b-8179-86599b3aa1e4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ab68e9-4b49-4393-b0e8-e3a711b53055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c42e39-1c27-4e33-a05a-43b197fc7be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b465223-590b-4a74-95cd-43de9a3b18c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cb2ae2-61cb-4bdb-89c7-4fb2a7295f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21ca702-a5cb-4100-93ee-739469eb8851",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afe6485-9bd1-46fa-bbd5-74fb153c82e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae5c003-d89b-484c-b1fb-259d7da1cde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91283b1-df66-4d3d-aa3f-14edc0e1fbc7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b495d8e6-70ce-46c9-98d7-f71dc17ce705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7868a3b-0942-4224-8cf3-dd78130640ed",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cb1381-9fa5-41c2-a400-155f6f1ab78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84a66697-bfc8-4a7b-b0ef-4fd124a93767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3719a7-0db2-43d8-bb13-66db49dab4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ac9d18-0442-4e51-99af-e6e0b8ec1aeb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8ee7a4c-b0aa-4943-92d1-8b9aa3baf886",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78972eaa-5eb0-4b6e-8228-98adbca0cae5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6426b367-77cc-4a49-ab0b-73441925a426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c3f280b-28cf-4326-b2fc-fdee08341e96"
                    }
                  }
                ]
              },
              {
                "id": "70877604-9804-4410-8bd0-e136bff346ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e93d5b69-f71d-4387-af97-20d8ae2b9edd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de46a5ca-ab7d-414a-94a6-bbf4a3659bd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c0b86f74-fb50-46b0-874d-f930bd30aca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e70ae7-6b9b-4943-95de-c3ec3df64fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b47ab85-dab1-4aec-a49c-ae47be3b832f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b21446c0-d92e-4303-93b3-d0c67a6979da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc769b10-c68f-4ca0-ba27-d0077cab0e4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78a93c23-33c4-4962-8d4f-73475030304d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4322b520-d20d-464a-88ab-4e5783c3dbdd"
                    }
                  }
                ]
              },
              {
                "id": "ca6dc305-250c-4102-8933-c8b0c63e1560",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0412b860-c3d2-4026-a9b3-0f18b23f38cd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4801c4-16ad-4c4f-9165-7582e14a5ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "60db0eaa-f638-43c5-9eec-74df9986714b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1355e5a9-2bdc-46f2-a511-2977cfba106a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c51a75-0861-4c47-9860-2f84e3627d6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c3c57dc0-60ff-493b-9602-053748f0c9a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eaae43b7-b7f9-431f-a52d-b0f99fdef74a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b21c0d80-49b8-45b1-a42c-98ec082250fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c3cb773-2a82-401a-81ab-265944f74d7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "373dbe6d-929e-4b8c-ae2a-94111986a97b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d4a5c3e-3d11-4b36-86da-eb49f12638dc"
                    }
                  }
                ]
              },
              {
                "id": "3fe2d533-84fe-43c6-a546-80b831d1155a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc43b5ca-7acc-48ef-bfbe-d456858b1355",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a7633534-6b7f-49ea-9b3d-619801fe2e6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aad80d98-ee15-47c3-b382-2f811486acdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cebbfee8-b07b-4dc3-8238-53de161afa23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae6d6c90-cb67-4349-a838-8ca136e3c236",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e7a9b11d-aa32-4a5a-9dfb-112f30a685f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "600229b9-a524-40a4-b360-8f979abb5083",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "caf571cc-2a41-4edd-917b-38a870ef3fe4"
            }
          }
        ]
      },
      {
        "id": "e3f51a3d-6689-472d-94a5-2cc40f23fcb1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b2dc36e0-57d0-4783-8aad-6c94b15bd239",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e273ac2-6dab-49ae-bfa3-4be73037d6b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09f11717-a9cf-4ba5-bbef-041f1c4b121b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bd150d-84ab-4a13-9c57-20ad6322fe02",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dff8c0c6-8bd6-4651-9750-998f45705640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1847072-8caf-4c14-a609-902939d61a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2e7847c-a1a6-4e08-be90-24bed23281f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab6c30a1-1941-449b-b9ca-1d1347c8a74d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99699fad-b0b0-4c13-88a6-c550a29a8d03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd537ae4-ee25-4c3c-9fb0-175839a113dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3284b57f-0733-4fa5-8961-3cd12b3032b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d3d19a8-12e3-4061-a1c6-bae169a24f99",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8701bb77-a64d-46dc-88e8-e7c001dc1aba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70517758-a3c8-46ea-8531-f08a8457ed0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6834cdfd-893a-43c2-bf01-278d1b1a8da0"
            }
          }
        ]
      },
      {
        "id": "7d60403a-0722-467b-8e4e-df4822514f24",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5b32c061-e266-43f8-968e-fb453afb02b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f107bf56-f5ce-4028-bf80-5a4e28ac67ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4aa2da2-c3cf-4621-8ada-2049434f4dcc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3519e102-c139-46e3-a458-7631be1547f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec986136-bb6b-4c7f-8a3c-fe101e305a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12b62ca-193b-422b-8444-00268e7abe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4bd6428-31a0-432f-bb60-c917f3c1d14f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1822ff5-5f68-4f0d-8804-1505f6f15e1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "946c6d5a-43ef-43c7-a64c-9a5506cfc9e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "269a2324-ac8e-43a3-8acc-30c6aff88e60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4551c1c-aa17-4d57-9348-2405bbffb829"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "add9a4b2-1db8-40c3-8bee-04eb4887f9b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2913d12a-cc11-4847-a619-534d213c3509"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1abd7c19-e20f-42c0-8b5a-ad7d3796f204",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adccee9b-f0f3-4459-8acd-6567f077775e"
            }
          }
        ]
      },
      {
        "id": "61ab0442-69f3-4f89-acec-2ce64ed9517f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bb63c8ec-af47-449e-bf08-bbe7ff198992",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c8b8369-f914-43c9-ba3b-b95f1ad09fec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f24df47f-6304-4f01-a862-f9ea36c1753c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96af4c6-b0e4-418b-93e5-3ba78cf3a97d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "034c6225-c40e-45d4-90e0-0124c43ed259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef1efbe-6661-47a9-9e02-b4d775ba4998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "682e5a1c-ddae-4117-ae2e-22eec09df816"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97084e39-82e3-4cb6-9c42-9e51112011d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5e3496f-9280-4eff-a7a0-30b18fd93d0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "397c2a13-4430-4de7-bd1e-14c0a1c4c545",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d54440bf-643c-492d-be00-5ce4743f76f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7f303a9-252a-44bb-9117-26a01218cbda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27487d96-4bdc-44b0-88bc-20e036c6fe80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "875a586c-36c9-4aed-8bc0-499a0483dbc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bed10323-c72d-4bb9-acc1-584b6618bebd"
            }
          }
        ]
      },
      {
        "id": "987ea45b-2e24-48d3-b5ab-088091f7cedc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3c78bf7-85d6-47ee-bf36-f0640be77402",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7e22e6c-5cfa-4b7d-a9d1-297695cb77e6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "612be43f-7415-4df5-8801-e9d03235c492",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eae90c0e-14e8-476e-b22e-075f10060ffa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f8d5377-4d69-45de-a8e7-6068bad5ed24",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 90.02777777777776,
      "responseMin": 5,
      "responseMax": 9930,
      "responseSd": 672.9203967331547,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717720721923,
      "completed": 1717720753078
    },
    "executions": [
      {
        "id": "7353b8cb-a3d1-4ed3-be0c-fab96f3b4151",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8e158859-8e3d-4904-9ee5-9956b6af56fa",
          "httpRequestId": "bb82bd2e-7a51-46b6-9779-3e94b59adfe3"
        },
        "item": {
          "id": "7353b8cb-a3d1-4ed3-be0c-fab96f3b4151",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1a689cd2-7efa-4eac-8dae-dfecc27e1f02",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "6694e695-af77-417f-9193-ac817a515495",
        "cursor": {
          "ref": "79556b84-ea02-4286-b1fe-6d92d5aa63dc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9391c5c3-9de3-4aae-a452-b56b61d60ed6"
        },
        "item": {
          "id": "6694e695-af77-417f-9193-ac817a515495",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cf156b99-67d5-4ff7-878e-af207218b3d9",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "a8c50acf-4c69-42c7-a0d1-f7df0c0e46a0",
        "cursor": {
          "ref": "bb4c4501-dbe4-4ad8-9481-f883d45d8060",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5765e2a5-2a3c-49a4-a0be-a13534dcfbc9"
        },
        "item": {
          "id": "a8c50acf-4c69-42c7-a0d1-f7df0c0e46a0",
          "name": "did_json"
        },
        "response": {
          "id": "305b5326-3615-4843-91a4-bd7e3a5db814",
          "status": "OK",
          "code": 200,
          "responseTime": 252,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ef3205-24a3-4b0e-a9d1-20d12d7aa1eb",
        "cursor": {
          "ref": "737f4da6-3f16-4ff4-8b56-5514f781bcbc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bdc9b685-3a8c-4306-b8c5-2ce743e58b70"
        },
        "item": {
          "id": "e3ef3205-24a3-4b0e-a9d1-20d12d7aa1eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "1faa7cba-f079-4ce9-bc40-dd332f6db246",
          "status": "Not Found",
          "code": 404,
          "responseTime": 514,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ef3205-24a3-4b0e-a9d1-20d12d7aa1eb",
        "cursor": {
          "ref": "737f4da6-3f16-4ff4-8b56-5514f781bcbc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bdc9b685-3a8c-4306-b8c5-2ce743e58b70"
        },
        "item": {
          "id": "e3ef3205-24a3-4b0e-a9d1-20d12d7aa1eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "1faa7cba-f079-4ce9-bc40-dd332f6db246",
          "status": "Not Found",
          "code": 404,
          "responseTime": 514,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edab107c-8e40-4838-958f-3951b391974c",
        "cursor": {
          "ref": "005aeb45-b273-4c06-81ab-90ff5af05f3b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "59225f23-f27d-4696-99d8-2f7ecc654ab7"
        },
        "item": {
          "id": "edab107c-8e40-4838-958f-3951b391974c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7b1d47ce-ac91-46c5-be44-237c30055c4d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 17,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037decd5-a41c-4a89-bfc4-03454f581539",
        "cursor": {
          "ref": "7b1ef8a8-49d3-4123-887d-4ed583d24ee2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "95e2ac33-6c1b-467e-b827-99264cbf43b9"
        },
        "item": {
          "id": "037decd5-a41c-4a89-bfc4-03454f581539",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0b1829c3-53e2-4338-9350-79bcbeffefa6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82528d43-ece2-441f-a76a-f73456d572f4",
        "cursor": {
          "ref": "cb01f2ab-ebb1-45b2-9396-6f00810f5afe",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7ed88a2e-3a15-4b32-9425-47ad60654a65"
        },
        "item": {
          "id": "82528d43-ece2-441f-a76a-f73456d572f4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "769cd1b5-39c7-4d3e-9362-85ca08cc43d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c9cc22-7844-487b-808a-853f193e73bd",
        "cursor": {
          "ref": "c540347e-1f1f-46f5-8a48-6cb858f3acdc",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "43a56d25-1d0a-4c64-9797-edf2800d62e9"
        },
        "item": {
          "id": "81c9cc22-7844-487b-808a-853f193e73bd",
          "name": "identifiers"
        },
        "response": {
          "id": "496b9041-5084-4efd-9cc7-fd631559d054",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998db5d8-caf6-4e13-8655-013adc3bcef8",
        "cursor": {
          "ref": "322a590d-e6be-488d-a772-bc7f00dadb6f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3cc00b27-fb46-4689-b803-4d257020605f"
        },
        "item": {
          "id": "998db5d8-caf6-4e13-8655-013adc3bcef8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f171d0ba-5040-4a68-bdf1-cc14c163a9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a41163-f75e-4b5b-8866-952901615cee",
        "cursor": {
          "ref": "cab4d53a-d98a-4652-9d45-047230de898f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3d8eeeaa-b4a0-49ca-a7c3-6561e1ce5234"
        },
        "item": {
          "id": "e6a41163-f75e-4b5b-8866-952901615cee",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f02ec8aa-ff37-410c-8de6-b5719c2030bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e7fd19-4d48-4621-883f-92f63a28e44f",
        "cursor": {
          "ref": "c576ee56-f44d-4e61-a9a3-181ac26e3985",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e7919332-c840-4154-8cb1-1c86ac12f620"
        },
        "item": {
          "id": "54e7fd19-4d48-4621-883f-92f63a28e44f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b7228248-22a5-4ce8-a9e8-6e745f89722d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520edbc4-96b0-4857-9878-09e5db6c1d05",
        "cursor": {
          "ref": "7203bfd2-07ab-4f2c-b77a-078fbfc5417f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c98a8d20-7a0d-4b7a-8209-19c500de13c0"
        },
        "item": {
          "id": "520edbc4-96b0-4857-9878-09e5db6c1d05",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3b08f831-330d-4322-bb9a-55aaecf29cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b775b22-8fe7-4e05-a24a-4437fd190a0e",
        "cursor": {
          "ref": "e65a149b-20f4-4a76-b4e9-31dcf0e8a205",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "593e4f72-e8c9-4afe-a7de-275aed4e72c6"
        },
        "item": {
          "id": "3b775b22-8fe7-4e05-a24a-4437fd190a0e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "157ddac5-9a88-493e-a016-e30e64596282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fa8d11-ab44-4e3c-a024-7cb50beb79e1",
        "cursor": {
          "ref": "39869b8b-b944-4125-b92d-771b081256c3",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b4b50216-ba2c-4cdd-86a3-aa8dbe68da4b"
        },
        "item": {
          "id": "17fa8d11-ab44-4e3c-a024-7cb50beb79e1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "70ef2b54-a861-4554-96f3-c66b3072b033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c68fd4-d8f6-40e1-88a4-9c06b504819d",
        "cursor": {
          "ref": "6c637b57-083f-4da8-bbf0-023413732e15",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4a5ea17a-60a9-4d59-b598-5423bf1fecd7"
        },
        "item": {
          "id": "f7c68fd4-d8f6-40e1-88a4-9c06b504819d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "38d813f7-a261-4a1c-a427-0aa62bde7af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed64f33-5016-41a4-8d83-c62e6c306a00",
        "cursor": {
          "ref": "e9ed1633-ef5c-48f5-a1af-d0d7e27b9175",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1cb70479-2866-4f47-aabe-70e121a144f7"
        },
        "item": {
          "id": "6ed64f33-5016-41a4-8d83-c62e6c306a00",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cc0a4078-e558-46f4-8ecc-d49cb1e2de1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a207ca8f-7072-4564-bb84-592630ee0175",
        "cursor": {
          "ref": "b7b42249-5d7c-43c3-8866-66b12e5cd231",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f8799f5f-8bb3-4c27-8cb7-9c21dd467fd6"
        },
        "item": {
          "id": "a207ca8f-7072-4564-bb84-592630ee0175",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "77371230-7454-4a94-86df-d33484ed13f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d262351f-3041-40ba-b318-30b7634809ec",
        "cursor": {
          "ref": "b0af4623-03e3-4e16-be3c-1d97fb203c70",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9d892b76-faa2-4578-89da-7939da3857e5"
        },
        "item": {
          "id": "d262351f-3041-40ba-b318-30b7634809ec",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1a0a8aa5-bf52-42e3-8b73-8043bdec8415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3854f2-1933-4ad0-a7b1-4432ac216ba2",
        "cursor": {
          "ref": "caf21e60-6797-4648-a285-5ea40c7f3197",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c03ae67b-5dfd-4de2-80f1-0df2574143cb"
        },
        "item": {
          "id": "6c3854f2-1933-4ad0-a7b1-4432ac216ba2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8990c4fb-b101-4cc6-965e-9a1e750853ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786f0c58-7ae2-4faa-8e7f-dbfdd55cab1c",
        "cursor": {
          "ref": "5dac2ab1-d2bc-480b-a26c-80402f367818",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dcc6b4d5-46d0-43aa-bbcc-254b04a978ee"
        },
        "item": {
          "id": "786f0c58-7ae2-4faa-8e7f-dbfdd55cab1c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8eb42a9f-507b-43df-a6e1-092cbd613d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106bbf41-2ad5-48ca-aef9-7a017948b259",
        "cursor": {
          "ref": "3ab037f7-4db9-4d72-a2e3-8e2b34b2b916",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9c0e4b79-e448-4071-88f5-e9c5f8b3ac13"
        },
        "item": {
          "id": "106bbf41-2ad5-48ca-aef9-7a017948b259",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b90e39cc-649b-4249-9623-f67faa82deff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f614f3f8-cc02-40bc-a93c-543589173668",
        "cursor": {
          "ref": "63577f99-5c33-4b24-b80e-def76791f6e8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3588ca7e-2597-49ea-b492-9776980fe18a"
        },
        "item": {
          "id": "f614f3f8-cc02-40bc-a93c-543589173668",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b30436df-d511-4d37-8cbe-e02a0b989a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ede267-4d93-4f83-8ff9-7133ac511ec9",
        "cursor": {
          "ref": "43286c0f-73b8-47c8-83a9-301207b39fd8",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "370d4748-1274-4022-8cd1-3831144eefac"
        },
        "item": {
          "id": "91ede267-4d93-4f83-8ff9-7133ac511ec9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "63334aa3-f9e7-4d75-87b0-3febcc31534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e41e42-7b62-4f8c-9af2-a56cc60183a2",
        "cursor": {
          "ref": "f60eb110-07d4-47c7-997d-6e09ebbeedec",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5468055b-499e-4050-8bd3-552f7c79d280"
        },
        "item": {
          "id": "e7e41e42-7b62-4f8c-9af2-a56cc60183a2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7d8aec00-ec3b-44bc-837f-521e375be008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504b9f30-3637-4c7b-b24b-8abc78312cec",
        "cursor": {
          "ref": "08e3c6b8-6dca-499c-a50e-ce4e95206a5a",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad755041-3ce4-404e-99ff-13e1fcda4160"
        },
        "item": {
          "id": "504b9f30-3637-4c7b-b24b-8abc78312cec",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "72cfa048-06de-4317-8192-bd4c590ce2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1821f343-4f31-4aaf-b096-228d64118d7c",
        "cursor": {
          "ref": "a98abb44-cf87-4c9b-a13b-6e62bc5fc34b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d05287f8-aa93-4497-95d5-7a25af5ed25e"
        },
        "item": {
          "id": "1821f343-4f31-4aaf-b096-228d64118d7c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1d8b99e5-c225-4ed3-a603-b0131c460512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303b0b73-262d-4fd0-9916-d14c4ace25f7",
        "cursor": {
          "ref": "16bd4fbd-6013-401f-9052-b7e05c935246",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ad32786e-0498-4d94-bc54-ae58a857bceb"
        },
        "item": {
          "id": "303b0b73-262d-4fd0-9916-d14c4ace25f7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d5b5c9e9-17a2-4153-97df-34cc37fcfce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a3e704-410c-492d-9f9b-6146fddc9a22",
        "cursor": {
          "ref": "07a5a922-0fae-42aa-b8d3-39d6ffd490b8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9edcfdf3-ffcd-43f5-ab82-5f9340230b9d"
        },
        "item": {
          "id": "a7a3e704-410c-492d-9f9b-6146fddc9a22",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d429b68c-63c4-453b-b7dc-19e2bddefab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840ebc88-f65f-4775-bdfa-6d705ee233d0",
        "cursor": {
          "ref": "b9e97c08-fb1e-47cf-844a-55ad0fa1bf7f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "036b380c-ebb2-4a04-bbde-a2a9ff1eceb4"
        },
        "item": {
          "id": "840ebc88-f65f-4775-bdfa-6d705ee233d0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7827f9b3-0a24-4582-bbc6-5027aba074b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4fea6c-4b63-4fb9-9c4e-7f44e9beae0f",
        "cursor": {
          "ref": "ae63e172-16a2-4f3f-89e6-b0044fad1c07",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9858d9c2-57e3-4016-ac2a-727175e76f1e"
        },
        "item": {
          "id": "5f4fea6c-4b63-4fb9-9c4e-7f44e9beae0f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cf4f9920-0d52-405c-afc3-654dce6acf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02ec3cc-457d-4836-b7a5-833838bd4693",
        "cursor": {
          "ref": "67053313-1ce8-4109-afc9-131bdf8c09a7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "27bf6a39-1094-40d8-8d9e-74703136d276"
        },
        "item": {
          "id": "c02ec3cc-457d-4836-b7a5-833838bd4693",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c5b118d0-ea9e-49e4-a71b-a47d280084cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b897d544-38f4-4072-8608-aa15ccb25bbb",
        "cursor": {
          "ref": "f5f98cf9-eb53-4919-be26-6d3eb3b8f530",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9b06aa17-fa92-440a-b6be-7a211d98c1e4"
        },
        "item": {
          "id": "b897d544-38f4-4072-8608-aa15ccb25bbb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "034130f7-0afb-4fa4-a39c-0d5b5be833fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12aa10b1-70eb-4eb2-a296-a79ce75e4e5c",
        "cursor": {
          "ref": "78f97e7b-697d-47eb-8ff1-4a5f95bca348",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0cb321ca-21de-4b94-ad06-bb65ddc14d8c"
        },
        "item": {
          "id": "12aa10b1-70eb-4eb2-a296-a79ce75e4e5c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "914fc658-1be4-4680-9cc4-c34189dda42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ab4fc7-91ae-4c2e-87db-2668527d3d24",
        "cursor": {
          "ref": "a382aa70-5831-4027-bb48-9a8f983e2dbf",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "09d59856-2bb0-48db-8dc8-6b45745da456"
        },
        "item": {
          "id": "42ab4fc7-91ae-4c2e-87db-2668527d3d24",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5038ca68-be97-49de-acc9-2e6bb29753cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c67d988-cacd-4f1d-ac70-bdbfc3e97dda",
        "cursor": {
          "ref": "916bdd72-8618-4757-965f-ab7e54f21723",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "823cd194-7abb-42c1-b87e-53e7addfdb1d"
        },
        "item": {
          "id": "7c67d988-cacd-4f1d-ac70-bdbfc3e97dda",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a6b32fdd-8833-4a64-83f5-5ff85ab0b208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32052523-4c39-41d4-a2b4-6b5a44932d60",
        "cursor": {
          "ref": "05372c86-c13b-4ef0-b964-7b0a6e2ebc50",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c268bc2f-958a-4009-aeaa-3d02f0e6f7b0"
        },
        "item": {
          "id": "32052523-4c39-41d4-a2b4-6b5a44932d60",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d0a1bbd7-56e2-4b9c-98fc-5f3e3133bc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fd833b-46ab-40e4-bc8e-19d5f7df9be3",
        "cursor": {
          "ref": "eb8bb14a-d759-4147-8032-15da46587351",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9d64cac8-f542-4d09-b6eb-176982013e45"
        },
        "item": {
          "id": "b3fd833b-46ab-40e4-bc8e-19d5f7df9be3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fb7070a1-a5e8-4fa4-9f24-180912100d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dc3a3a-090a-4163-ad4a-a8c470f3b5bb",
        "cursor": {
          "ref": "2eb699b0-fed5-4451-8e6c-8d25f0be4ff3",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c8b1d49b-09d1-43db-a62d-abe316c47adf"
        },
        "item": {
          "id": "a0dc3a3a-090a-4163-ad4a-a8c470f3b5bb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c3a256d7-74db-4399-9fe7-320ce32230f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d78cc9-524c-4998-9dd6-b71225c97a7a",
        "cursor": {
          "ref": "d894bdfc-f627-48af-abb1-1bc44cca29e5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "32512f3c-8c09-4ba0-b474-d9460fec4f93"
        },
        "item": {
          "id": "55d78cc9-524c-4998-9dd6-b71225c97a7a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d2fbc901-49eb-4128-8338-a7da8855902f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae07754e-11f4-4667-9af2-0f011409876e",
        "cursor": {
          "ref": "1e50a914-48d6-4fa6-a878-0ad98b019440",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4b23aa11-69da-4887-b93c-00bcf4d6e016"
        },
        "item": {
          "id": "ae07754e-11f4-4667-9af2-0f011409876e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "11d18f4a-8f9f-4b8a-a4f4-89e7f8714802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93113b18-3882-4aa3-aa02-620f685e4f06",
        "cursor": {
          "ref": "89cace9a-ffb9-45de-9de7-7505acd5faa3",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f54764f3-2464-426e-902f-622eaff6c8b4"
        },
        "item": {
          "id": "93113b18-3882-4aa3-aa02-620f685e4f06",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d223fef9-0117-4c71-a07e-b7e2136c6fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff2234e-1b27-4cef-bd27-cacdb29d4eca",
        "cursor": {
          "ref": "328bb6e1-516e-4f1c-abe4-eca3d3ec1217",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e30c3b94-313e-4dc5-a370-2a4b9813621e"
        },
        "item": {
          "id": "7ff2234e-1b27-4cef-bd27-cacdb29d4eca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2e1efb28-00c4-4480-960a-4c6bf2d418cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb949eb-e548-4068-a99b-a9778929861c",
        "cursor": {
          "ref": "bbf1c1cd-e14e-4180-8c7d-b9170485898a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9c01064b-dade-451d-81df-cf60724a53b9"
        },
        "item": {
          "id": "8bb949eb-e548-4068-a99b-a9778929861c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "48f75b1b-ea90-45ce-b7d8-3685e91c6a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647942e4-bef0-49e8-ae0d-06ef4afbc72b",
        "cursor": {
          "ref": "43dee9ad-dcd0-498c-8330-f45cf37f4114",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f8fac800-7a7e-427c-b6f9-cefb32100932"
        },
        "item": {
          "id": "647942e4-bef0-49e8-ae0d-06ef4afbc72b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "79ed1702-cad4-407d-bc23-1df1b5670ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e337f2-10f0-4141-b712-464d61f6118b",
        "cursor": {
          "ref": "f647ebdf-67b3-4871-821f-71d7d8d9b060",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "446800ab-bcbc-45e1-881b-f32af618a428"
        },
        "item": {
          "id": "c5e337f2-10f0-4141-b712-464d61f6118b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f0ec351e-1344-46cd-96b1-ad51d4c704d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc4d80f-7ce3-4351-b423-d8f601525fa2",
        "cursor": {
          "ref": "800de354-1d1a-4312-87dd-bcd99238f47a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5803829e-0727-4d44-b249-8a4727d95969"
        },
        "item": {
          "id": "0bc4d80f-7ce3-4351-b423-d8f601525fa2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8c0825cd-d334-45b0-80e8-e2305d39c237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac02d3c3-c92e-4f21-b3ed-9de666e2ff41",
        "cursor": {
          "ref": "d04cd7df-ad0b-490c-9861-d4f4822e2d1a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2a62fdbc-5f42-4dc5-88e9-cdf01c6876f3"
        },
        "item": {
          "id": "ac02d3c3-c92e-4f21-b3ed-9de666e2ff41",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "426f8f1a-129d-439c-8470-7bb4daa5178f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0669ac75-2442-426a-ab0b-f6fe206bf7df",
        "cursor": {
          "ref": "b961d25d-9893-42b1-bd74-c4623e209d8c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b62596e9-d214-4020-81d7-a2931f8ba5f6"
        },
        "item": {
          "id": "0669ac75-2442-426a-ab0b-f6fe206bf7df",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "97e21767-5183-44a1-ae4f-b8165f0fa20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1b2f9d-cd2e-48b7-9fa0-55f227f21735",
        "cursor": {
          "ref": "76c67681-e1f1-4794-8314-64a3312c302e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a2622fb3-5a37-4224-8b58-7bd67430559c"
        },
        "item": {
          "id": "8e1b2f9d-cd2e-48b7-9fa0-55f227f21735",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a6b4dd83-80fe-4016-90ca-503b52eb34bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f072ce-ec20-4557-a0eb-86c86f3bd861",
        "cursor": {
          "ref": "1f216ed7-86a6-435e-a6f2-2bf5a2b1c569",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "83c300e8-f704-4f0e-a42c-28f59684705a"
        },
        "item": {
          "id": "24f072ce-ec20-4557-a0eb-86c86f3bd861",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "eaed8aed-ca0b-4ed9-b9f1-bf2bd3a83e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f9ebc-2186-48c5-a00c-91f717f69f4e",
        "cursor": {
          "ref": "e541dd13-6e23-4700-9706-656306ffd933",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6153885d-8414-4016-8428-7b68d9b4aba9"
        },
        "item": {
          "id": "369f9ebc-2186-48c5-a00c-91f717f69f4e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "59b83579-546d-417b-b3ef-440075b7d41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d78773-42ec-45e3-8c14-2c0e7e6d5db2",
        "cursor": {
          "ref": "3712425e-2617-43ba-a0f6-c68fbba80537",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6798d4a7-2319-495f-a772-53a3abce37d9"
        },
        "item": {
          "id": "26d78773-42ec-45e3-8c14-2c0e7e6d5db2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8364b3a7-17de-4270-acfc-3edfb088c412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c643bc-6cc2-4758-830b-1bf7bc085211",
        "cursor": {
          "ref": "ac3bc749-f11f-4be8-baf5-9105cf002726",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7d07c352-4612-474c-969e-8e1a92cb5940"
        },
        "item": {
          "id": "97c643bc-6cc2-4758-830b-1bf7bc085211",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8ae4b3f6-69f6-4f97-b629-5f0a94b15df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5489ba5-35d6-40af-9302-9395560ef606",
        "cursor": {
          "ref": "014a6624-6c8d-41a9-a3c3-c8216c5d1c9d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2eb292b9-149f-44ae-a611-688f2ae1d75d"
        },
        "item": {
          "id": "f5489ba5-35d6-40af-9302-9395560ef606",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d4928d0d-4178-4c59-9eea-df8bb9112d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d437eda5-6b15-4937-beb7-746c95bd7362",
        "cursor": {
          "ref": "b1a07255-965d-42be-8f0a-1cd0a3957672",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5a4d03e9-ca2c-4792-850a-9235c53662e9"
        },
        "item": {
          "id": "d437eda5-6b15-4937-beb7-746c95bd7362",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4dedd725-88fa-4a32-81be-c7fb52501b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340db466-642b-45cd-9c75-d6fe1086dabc",
        "cursor": {
          "ref": "0009cb3c-0ddb-4f50-92ea-1d5342839ef4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bd0f9687-f011-465d-a986-74c7df1c0f3d"
        },
        "item": {
          "id": "340db466-642b-45cd-9c75-d6fe1086dabc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6ecb194d-fa50-42d2-b534-1e768bb0dd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cc36e5-743a-4429-b39a-50146a79c5db",
        "cursor": {
          "ref": "d0f98691-a6fe-419a-880a-3ec172c1f0bd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "766ca023-1c2e-4590-ab9a-f2f88920ecd9"
        },
        "item": {
          "id": "91cc36e5-743a-4429-b39a-50146a79c5db",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c7f1fd61-0f64-4c0c-ba2b-020fb7718fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a224de48-7d9b-4fd8-883b-c5236321e58e",
        "cursor": {
          "ref": "fa848682-bd54-46e9-8a54-f26523c3a796",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8da9829e-a4cd-493d-94d4-e4741f884507"
        },
        "item": {
          "id": "a224de48-7d9b-4fd8-883b-c5236321e58e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e962f63e-ed2e-4489-ac2d-0b94197be534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28699b32-5d68-4c99-8fc1-f99b9432099a",
        "cursor": {
          "ref": "c5460add-94f4-4e8d-8675-3df8bef1e48b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8c5e0575-e62c-42db-9206-83c45ec17198"
        },
        "item": {
          "id": "28699b32-5d68-4c99-8fc1-f99b9432099a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2d4c9fb6-9760-46c6-a554-50b63b68adf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9875687f-fbf0-43d3-87b6-0bc3dff22a91",
        "cursor": {
          "ref": "1397c089-812c-41c9-868f-bed68356566b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "130d82e1-8243-4bce-b25d-aaabd4977b23"
        },
        "item": {
          "id": "9875687f-fbf0-43d3-87b6-0bc3dff22a91",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "591ad729-d0db-4e0c-b111-782eb7b796c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55dc9f6-aeb7-47b4-81a1-bf4e0bccea08",
        "cursor": {
          "ref": "f8484e77-a04c-4e2a-a7e7-8eaa3e3d2ac8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1b6a642a-916c-4eda-9d7e-f1b6e91ecfec"
        },
        "item": {
          "id": "d55dc9f6-aeb7-47b4-81a1-bf4e0bccea08",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5c90a977-b71e-45f1-b6fd-eb8657119957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d2e715-2054-491c-98be-c78392bc46d6",
        "cursor": {
          "ref": "09e263ed-d63e-41e7-bf2f-e55b81895d66",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "19760c18-926e-4866-a6aa-1766f5ce7c59"
        },
        "item": {
          "id": "52d2e715-2054-491c-98be-c78392bc46d6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9a9d22b4-455d-4ae0-b9a3-6b7ba1c93fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7b380a-65e1-436c-9f38-d262b11d3752",
        "cursor": {
          "ref": "8a1f6bd6-1e13-4463-856c-95131fb88c61",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1343de85-aba3-4057-8d0f-2b44c577d775"
        },
        "item": {
          "id": "7d7b380a-65e1-436c-9f38-d262b11d3752",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d6f2cde7-ec11-4556-b8b2-a879a4016779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4a87ef-3d85-41e6-b194-5eef34027446",
        "cursor": {
          "ref": "2bec1f4e-24a0-4713-9259-9d9446b5fb39",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2fc552ab-e6a4-416d-b3ab-987e6d66efda"
        },
        "item": {
          "id": "cb4a87ef-3d85-41e6-b194-5eef34027446",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4ab78411-5009-4c60-97c2-284309d96a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcce02f-b9a5-4688-81ec-c240c8cf8f6e",
        "cursor": {
          "ref": "c7bc02ce-8009-4fa1-bf99-d3fbdbafc97c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9dde198e-d9be-4049-a150-8f7d87bb1686"
        },
        "item": {
          "id": "2dcce02f-b9a5-4688-81ec-c240c8cf8f6e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "662c014c-14f3-4bd7-b5cd-b0e1d7c52a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad29b44f-4367-427d-bf1d-8b21cafd7965",
        "cursor": {
          "ref": "4b792eac-e4d1-4cc6-b7a8-b98246b1ce99",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "af03d153-3e04-4fc6-9872-fadc083d54f7"
        },
        "item": {
          "id": "ad29b44f-4367-427d-bf1d-8b21cafd7965",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b2037f67-d169-4bc3-bc27-2d01efb11648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a44a20f-c454-4c6a-a384-5f40f65ab6d5",
        "cursor": {
          "ref": "c71dee99-221f-4f4f-b0ad-6a7f5e98b124",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d02c1b51-dd44-46cb-a66e-7baa8359a6dc"
        },
        "item": {
          "id": "6a44a20f-c454-4c6a-a384-5f40f65ab6d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "86d56e48-ad5b-4208-ab39-3f0cf1fc7662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc200f4-076d-4ea8-83c1-828cc4099e2a",
        "cursor": {
          "ref": "5af403a2-52d7-4dea-b100-aa43e341d736",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a5958993-badd-43f9-8a89-2058210d4d30"
        },
        "item": {
          "id": "8fc200f4-076d-4ea8-83c1-828cc4099e2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ce9bcaad-9375-4adf-8308-31b364cf172a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6808786d-f87a-4e13-ad31-3a9e2c4f421c",
        "cursor": {
          "ref": "ceabec24-b493-4a17-811e-9a43136f5355",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a6b84966-a138-45a2-9821-b9aeeecf9a48"
        },
        "item": {
          "id": "6808786d-f87a-4e13-ad31-3a9e2c4f421c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f4386d85-e68e-4570-a0a9-f9df4bd08487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d05b2ab-5bc0-4341-859a-63933abe5a79",
        "cursor": {
          "ref": "816d0a1c-010a-4acc-91a4-a216d6232195",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "66689fa3-2aa8-4624-8d19-c3e684569346"
        },
        "item": {
          "id": "9d05b2ab-5bc0-4341-859a-63933abe5a79",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3a954fe5-4d45-4066-b837-038e9c351f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c65e08-89fe-4ab7-99e3-1e25450243b3",
        "cursor": {
          "ref": "f4f9c1f1-78d6-4f47-9f8f-d488115bd7e9",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cd1ca30e-9167-494c-a40e-a49164f905ab"
        },
        "item": {
          "id": "c8c65e08-89fe-4ab7-99e3-1e25450243b3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5f7f2237-34b6-4969-ad11-3830b8e98070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e1988d-c05a-4c7b-a23a-79aa767088e6",
        "cursor": {
          "ref": "6523bc29-2ddb-49c8-a457-4870f2991d5d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2df75aea-1b64-4bed-b06b-33bd2aac5e23"
        },
        "item": {
          "id": "73e1988d-c05a-4c7b-a23a-79aa767088e6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a29cc140-91ce-456b-be7a-966233a701e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c254c78c-3fb8-42e2-8f06-716bb439e9de",
        "cursor": {
          "ref": "37bc1e6d-0cad-4187-9dcd-3e829e2858f9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e2a6a309-6135-4a1e-bccb-768f4f2d0f9c"
        },
        "item": {
          "id": "c254c78c-3fb8-42e2-8f06-716bb439e9de",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "33919218-129a-4882-b5d8-10b0c819c97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc89a53-6ddb-4fc3-bef6-2c6fd173ec49",
        "cursor": {
          "ref": "d298d145-b906-4e12-ac36-1583deb63ce6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d3d7a277-5c40-47ca-8f60-881296aea7d9"
        },
        "item": {
          "id": "4dc89a53-6ddb-4fc3-bef6-2c6fd173ec49",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4188a30f-12bc-41c1-9672-841b7cf90df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb0ef4-7752-4288-8393-aefb0991d1cd",
        "cursor": {
          "ref": "ff9fbe30-033e-4ed7-bd07-ff4ef2e39528",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "79f89406-fab5-4f48-bc16-dfb9ae1774b3"
        },
        "item": {
          "id": "6eeb0ef4-7752-4288-8393-aefb0991d1cd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e93d32ac-b15d-4b25-bc71-ef86bf17dedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd516e3-d840-4194-95e0-557159c12b7f",
        "cursor": {
          "ref": "5cbe5670-9609-44b7-b1d6-d91fa282b9ed",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2cac395d-4430-4109-8b31-1c828c9d538c"
        },
        "item": {
          "id": "9dd516e3-d840-4194-95e0-557159c12b7f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "11356221-a9f2-485c-9f9c-92670f37d70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d3c10b-17c8-4dca-bd8f-2c3a55b4d1c7",
        "cursor": {
          "ref": "cc4d083c-8bd2-4283-9e99-e4bfeb7fb1ac",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b496a06f-21aa-46ed-98e0-9588688a365b"
        },
        "item": {
          "id": "79d3c10b-17c8-4dca-bd8f-2c3a55b4d1c7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "752a0dd8-3bdb-4679-8667-b96521d5427a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3142b58-9675-4b7a-998b-467842e4e725",
        "cursor": {
          "ref": "e3afc31c-be19-45fa-a1c4-7c4f1eb22df0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dc5b153d-796f-4415-9226-d312a8d76493"
        },
        "item": {
          "id": "c3142b58-9675-4b7a-998b-467842e4e725",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b7569f79-5201-448a-bfa3-8cb62ca7cf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee247433-4514-41bd-b21e-9bbf6f2a6359",
        "cursor": {
          "ref": "a1f48e14-29ee-4d73-b970-4c457a5987ac",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "de597b09-a62d-4bac-b7e8-65aedcb35414"
        },
        "item": {
          "id": "ee247433-4514-41bd-b21e-9bbf6f2a6359",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7b91603b-15a6-4afe-92e5-3f7c2f9e98db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d470da4-3c7e-4528-b980-bde7a2fb5e8f",
        "cursor": {
          "ref": "bcf39fa7-1ce3-4c3c-af14-f223bb9f512b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "41c57198-6d07-4b81-8096-cf4ae2e5518a"
        },
        "item": {
          "id": "2d470da4-3c7e-4528-b980-bde7a2fb5e8f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e0d2fb5c-9563-45de-b04b-aa653b23e87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a40e5e3-996b-43b8-bf65-88a87ebb96a0",
        "cursor": {
          "ref": "07f46029-ed2b-4b76-9034-44a56988cbe1",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "50d1f21a-7679-49a7-9283-a134630618b3"
        },
        "item": {
          "id": "2a40e5e3-996b-43b8-bf65-88a87ebb96a0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b9d205f4-53fb-4054-8405-1d4b5197f97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73090fa7-80a9-46a5-a66d-2065e9ee4864",
        "cursor": {
          "ref": "72a89332-b73c-44b2-a726-14d7f4e27525",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "994d6de6-4c04-4e82-8398-6374c91d1414"
        },
        "item": {
          "id": "73090fa7-80a9-46a5-a66d-2065e9ee4864",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a1a22c49-45ed-443a-8f54-9e5bc488aebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88b06ba-a20d-40b9-b163-a81fbf8fc1b9",
        "cursor": {
          "ref": "a08b7a9c-5850-4d18-abd0-7fb15baef629",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5be0cad1-7ebe-4dfa-bba0-e80d906a930e"
        },
        "item": {
          "id": "b88b06ba-a20d-40b9-b163-a81fbf8fc1b9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2fd33074-3f83-4b51-935f-6a9c8d910d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4075d7dd-f159-4e4d-be7e-3b320e7c84c3",
        "cursor": {
          "ref": "7f63501c-5f38-4d42-b480-7ecba2d345a6",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "47c7c00d-1234-4966-8cba-9ec0a6cd6856"
        },
        "item": {
          "id": "4075d7dd-f159-4e4d-be7e-3b320e7c84c3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d6431518-49af-4dd8-97ac-15507b87bdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8429512d-7b15-4f0a-ae28-456ab88a866f",
        "cursor": {
          "ref": "ef3b206f-618f-46d1-9392-6d042b9803e8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "23c7b7fe-164e-47f0-bc9a-97605a255759"
        },
        "item": {
          "id": "8429512d-7b15-4f0a-ae28-456ab88a866f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a9e46955-07eb-4a58-aa0b-fb6396aadc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163bbe07-df7a-4556-8147-cfd78c8485a8",
        "cursor": {
          "ref": "de0f4cbc-debc-46d7-b978-4280c9b6c38e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "60e1b14b-c111-425e-8a82-d3aac6868f14"
        },
        "item": {
          "id": "163bbe07-df7a-4556-8147-cfd78c8485a8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e4c38a4f-4ca6-4dc9-91ec-c11c5abc118a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182a3344-b0be-4254-a687-5400d43604c7",
        "cursor": {
          "ref": "f8d8b0f1-1fc3-40dc-afdf-c1eb24e3542a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9e9f9cf6-a763-45cd-9cc4-53b7b4e29964"
        },
        "item": {
          "id": "182a3344-b0be-4254-a687-5400d43604c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5d518209-1cc7-42fc-b40f-d11fa5b3bee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dabe966-0b07-4da3-9227-ac45b76c8a8f",
        "cursor": {
          "ref": "669bf94a-47c0-4ae4-b49b-b3fe7cfe3304",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a205ad2b-2a42-4853-8ac0-66704964b8fc"
        },
        "item": {
          "id": "8dabe966-0b07-4da3-9227-ac45b76c8a8f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "32d00f66-ad75-4802-ac6a-03e2c421dc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2131b948-33cf-4f48-a5c6-c15149044d19",
        "cursor": {
          "ref": "f6e1defe-04e1-49de-bfe9-99a48e2912de",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "54c9e794-663a-4566-a076-c52f620ea55c"
        },
        "item": {
          "id": "2131b948-33cf-4f48-a5c6-c15149044d19",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "34e80bb8-b258-4510-a3d7-5e68624230e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151c6b9e-6581-4678-877f-4b99963569f1",
        "cursor": {
          "ref": "27254c2c-262b-4a62-a3c7-01fdfeece5ae",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4a73852d-1860-46b8-9895-ed74c25d4532"
        },
        "item": {
          "id": "151c6b9e-6581-4678-877f-4b99963569f1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7c6c8d14-515e-4fde-bb98-60dae38be4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad67faec-ca0e-4e8e-aae4-687d83dd5ce2",
        "cursor": {
          "ref": "d6bb8331-581d-4ef5-9831-4df0933ffb8a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "258d0bf7-c2fc-4160-8d53-f46d0b419ab3"
        },
        "item": {
          "id": "ad67faec-ca0e-4e8e-aae4-687d83dd5ce2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2addd214-e005-4ac1-8860-90cf50a5df58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22759d0-96c3-4bc2-8212-29b12c1ea51c",
        "cursor": {
          "ref": "1571340c-4f61-4d64-974a-e50e7dbdc006",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "df5596ac-243e-4463-84de-3f2c7c56c268"
        },
        "item": {
          "id": "a22759d0-96c3-4bc2-8212-29b12c1ea51c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "70f935e3-6d3c-4757-b877-94950cce1240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87ef4d3-b5f6-412d-a1ef-348826f9e09c",
        "cursor": {
          "ref": "3a0b5870-d5d2-4491-881a-6f16c5519ebb",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "262914f9-1081-4ed6-a7d2-5c2e919a5633"
        },
        "item": {
          "id": "c87ef4d3-b5f6-412d-a1ef-348826f9e09c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "be6ac5fa-6f00-473b-bd0f-30e9d5981923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7629330d-fa87-43ec-b94d-f412d828f06e",
        "cursor": {
          "ref": "74904076-f5f2-47a9-aaae-d6451f1d4df0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f2b83c25-38c8-49d0-b604-a454193970bb"
        },
        "item": {
          "id": "7629330d-fa87-43ec-b94d-f412d828f06e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f25c3b0c-375b-4699-b6d9-6834c50fda6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5368100-f9e1-472a-8575-a3bd1eb05756",
        "cursor": {
          "ref": "5538f775-06de-4e75-95ad-82d4f53d4ae9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "090d72b4-be86-41b2-8c08-260592c7881a"
        },
        "item": {
          "id": "d5368100-f9e1-472a-8575-a3bd1eb05756",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e5f4aa3f-454b-4b15-b769-f953ead281f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7e68f2-f84b-4c71-8afc-a78da172a7df",
        "cursor": {
          "ref": "7f18334d-ac6b-4153-9acb-27fb22f8abe6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8ea6c9b9-e8b8-4a14-b8da-a1bab0a1a7d4"
        },
        "item": {
          "id": "2b7e68f2-f84b-4c71-8afc-a78da172a7df",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c3fbab2e-99f2-4fea-8d9f-058498ef25e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5adda86-01e0-4496-b601-5779451d3b86",
        "cursor": {
          "ref": "5902407d-0f91-42e8-8fdf-0d13c2401202",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ed12a335-e6ce-4d44-88e9-0b274efcf602"
        },
        "item": {
          "id": "e5adda86-01e0-4496-b601-5779451d3b86",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fb1351e6-cc1e-4d14-b795-7c68e0c6ef28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800912cb-14ba-4193-a04a-ba416e2f0927",
        "cursor": {
          "ref": "e1cd9aa7-ed40-418e-ad4c-513108b839e6",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "98a60cac-735d-46d8-a3d5-349ab385ffba"
        },
        "item": {
          "id": "800912cb-14ba-4193-a04a-ba416e2f0927",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1ebe301e-9f22-4bb8-9e8e-a13fd57f8fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2bebd4-0cbe-427f-9483-7c93966a2ff1",
        "cursor": {
          "ref": "4f20cb4d-47f1-45e1-8fd5-0004ff7a7333",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d3be34d3-a1ef-489d-93a9-2df385da1f35"
        },
        "item": {
          "id": "1a2bebd4-0cbe-427f-9483-7c93966a2ff1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0c922c43-7e3f-490a-8239-7715c948259a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f5c44b-5c32-4c01-9a7c-f11c9c77e505",
        "cursor": {
          "ref": "c2ee2cf1-4658-4793-a8ed-f545ad81a5f8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4ad1cedf-6aa3-4546-b744-3a79c6f463c6"
        },
        "item": {
          "id": "04f5c44b-5c32-4c01-9a7c-f11c9c77e505",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "53fd5d64-503a-4344-a0fe-083961f24d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f143bc-b05e-4648-b81c-e30af1556244",
        "cursor": {
          "ref": "3231ab76-53f2-4b17-906f-af3fada32b46",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a8ce05b5-7c01-4b6e-b352-04e6ac776458"
        },
        "item": {
          "id": "c9f143bc-b05e-4648-b81c-e30af1556244",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2fda6950-2cb0-4453-b7a7-8bff67521c3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f92d89-f48f-4294-a5e4-9a734a484d46",
        "cursor": {
          "ref": "225da6a0-c414-4d0a-8813-8ac06a0a7c7a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "668f0db3-7a58-4f47-803d-eeb521cd0fed"
        },
        "item": {
          "id": "35f92d89-f48f-4294-a5e4-9a734a484d46",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e575f7b9-cebd-4f26-aa14-fc95f6b21c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "fde794b5-712e-4620-b7e8-af5d12b67f12",
        "cursor": {
          "ref": "44161ff3-d4db-4575-b33b-c0d0cd68a3dc",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c7666c8e-5568-41df-a07d-06a0f1330c33"
        },
        "item": {
          "id": "fde794b5-712e-4620-b7e8-af5d12b67f12",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3e4e0d89-6a5f-4365-8a10-cfadf0cfc2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "2dce517e-ed10-43ae-bcad-4fc085c5d35d",
        "cursor": {
          "ref": "1e9e5a96-8a58-4313-87c9-e6307177a699",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "463b718e-089f-423a-b1d6-ff89b4ba7dbe"
        },
        "item": {
          "id": "2dce517e-ed10-43ae-bcad-4fc085c5d35d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "09d1f193-86eb-4f56-8470-06976291f26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b5c88331-7bc8-4db1-b831-70ea1e9b2723",
        "cursor": {
          "ref": "cffbe15e-9158-44ef-a918-111ab6c06ecb",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7c6ad0d9-d493-4195-8626-9ff6dff75d10"
        },
        "item": {
          "id": "b5c88331-7bc8-4db1-b831-70ea1e9b2723",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "140d1e27-dbba-48f4-a6df-dc45f884d312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4cf75dbc-1a78-4476-aac7-8b39a40b1577",
        "cursor": {
          "ref": "5f83be15-6164-4ef3-b757-fd74b9fe515a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b8cceaa2-661d-44db-9efe-d445ae235d7a"
        },
        "item": {
          "id": "4cf75dbc-1a78-4476-aac7-8b39a40b1577",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "03c8f90d-1eea-49b2-8530-3affba106fd9",
          "status": "Created",
          "code": 201,
          "responseTime": 9930,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3940d131-8c6c-46f4-af61-d9b34162c55c",
        "cursor": {
          "ref": "60f01332-9131-4bed-ade0-d318babbcc9a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec26e11a-79e6-42a7-91d0-9183f8df5021"
        },
        "item": {
          "id": "3940d131-8c6c-46f4-af61-d9b34162c55c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6820f69a-3cbd-4a1a-a1d1-466bfde1148d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "dc13af0d-b7d0-4445-a22e-e5091355f9fb",
        "cursor": {
          "ref": "796de713-f3d4-4cac-8b72-76921d99358a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "42bfc61b-2f65-45e9-8c26-83cea2a53092"
        },
        "item": {
          "id": "dc13af0d-b7d0-4445-a22e-e5091355f9fb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1f9c40f0-6111-490e-8bf5-53ee52fa9d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "921db353-26f9-4be9-a059-6a0e35f6a6f0",
        "cursor": {
          "ref": "fe1cffb5-fe38-426e-b368-9c6e45e7466f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6cf4acf9-d832-4e1b-a6bf-614a8df1e2da"
        },
        "item": {
          "id": "921db353-26f9-4be9-a059-6a0e35f6a6f0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b3bcf5a5-4195-4f4e-833e-ff99e155b39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814a4e38-125f-46bd-b95e-40983b7030bc",
        "cursor": {
          "ref": "cae81ad6-e5cd-4098-8256-21b2290643fc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "58077502-14d9-4510-8476-a7c5b25c048e"
        },
        "item": {
          "id": "814a4e38-125f-46bd-b95e-40983b7030bc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b83abb9-8aff-4047-b382-4715dcc319f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4241007-8717-4cfc-8a40-6ccb672ae003",
        "cursor": {
          "ref": "bf4858c4-7832-479b-9b64-36b3d206964e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "476ccba7-b9d6-4c76-a700-02d07fddde9e"
        },
        "item": {
          "id": "f4241007-8717-4cfc-8a40-6ccb672ae003",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9f7615ab-2869-40c4-8ca6-6baaf3fe54f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e642de-cebb-4648-b298-c1d53dcc2a76",
        "cursor": {
          "ref": "f4b0356c-d0f2-4527-8c4e-3130d5cf3cc9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c41db395-0c93-46db-91d6-e18e20fa4f4a"
        },
        "item": {
          "id": "21e642de-cebb-4648-b298-c1d53dcc2a76",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4dcbc5fb-8bb6-49dd-9b2a-7053183a7157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e132d9-c6cd-44ff-998d-cbadd08b75c9",
        "cursor": {
          "ref": "310b803b-f836-46a7-b0ed-a0b1e0bed6a1",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e03abb06-3ff5-4c25-a210-2cf50b60b791"
        },
        "item": {
          "id": "b3e132d9-c6cd-44ff-998d-cbadd08b75c9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5465f80c-31ec-4b7f-9ab6-fe4ffff0c18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d30267-69c6-4463-993d-c44ef1d73a57",
        "cursor": {
          "ref": "895deaea-fb54-47a5-9263-a335a8403316",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c0048a45-19ae-4fe0-9d97-c661bd905a1a"
        },
        "item": {
          "id": "91d30267-69c6-4463-993d-c44ef1d73a57",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8dd7bcfa-39c6-4dd0-863e-41fe5dcf0324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19d243b-f3b2-4c9b-a89e-88674abec44e",
        "cursor": {
          "ref": "925f4388-34a8-45da-b2a9-6098efd8185a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2f28ca0a-f52f-4e8e-a3a4-9dd4aa0d091c"
        },
        "item": {
          "id": "b19d243b-f3b2-4c9b-a89e-88674abec44e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0817d5aa-084f-4e0f-90bf-3de64cb24e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7059f4e-0068-42a0-bf2b-dec7bb0a1181",
        "cursor": {
          "ref": "e7b09bd0-08a2-4048-8b4a-6556f7c9a5cf",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "404d9760-1c32-46a7-85cc-b3e698a190ce"
        },
        "item": {
          "id": "e7059f4e-0068-42a0-bf2b-dec7bb0a1181",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8bad33ac-b621-45da-92ff-b1e0631aa17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cd460a-9d66-4ee6-af03-b7cedc874e8f",
        "cursor": {
          "ref": "365eb0df-a720-4016-bf0c-5a6542335e64",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6b191434-e282-4149-a865-d04760ff39ad"
        },
        "item": {
          "id": "43cd460a-9d66-4ee6-af03-b7cedc874e8f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b27a1c72-0ddd-4375-b14f-856da4eed8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b65c1d7-4aee-40fd-9c8f-6858205f74b4",
        "cursor": {
          "ref": "5de62ee6-a8f7-4729-8191-6da0da0dfeb5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b93f9d53-6aeb-4ab1-91a6-9ad41ebf9766"
        },
        "item": {
          "id": "1b65c1d7-4aee-40fd-9c8f-6858205f74b4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f97011f5-00cb-4d4f-aeb4-9e796770b4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f3ee2c-f241-481b-98d0-d513fc342f48",
        "cursor": {
          "ref": "0a777d2f-e290-4fdf-ae40-5422fc88e37c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7598cd84-956b-4912-a0e2-aa34d0f34723"
        },
        "item": {
          "id": "e6f3ee2c-f241-481b-98d0-d513fc342f48",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8d9a96b8-f558-4d05-ba2c-762deaf6d171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f73d678-261b-4fda-b399-3ce2436c562a",
        "cursor": {
          "ref": "46aaa783-789d-4796-a26e-8bd903094586",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fc1c4889-1fb9-47db-ae92-1f666307d377"
        },
        "item": {
          "id": "2f73d678-261b-4fda-b399-3ce2436c562a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "32fbe49f-178a-4390-a36c-b4814e0c96b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c21052-0bff-49cc-88a0-cd3f34bd97a0",
        "cursor": {
          "ref": "ef4b6749-2ce0-4461-8093-1a9d044fda39",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "25f11119-58d1-4e48-a59f-1f9a3277b4f9"
        },
        "item": {
          "id": "f2c21052-0bff-49cc-88a0-cd3f34bd97a0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3661a5a2-df61-44ab-968e-1f273ced465c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8cef26-d28f-4308-9fe1-3c57725bdf89",
        "cursor": {
          "ref": "00e10295-ddeb-415c-80d9-da6874f0303b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "04b10914-7048-43f1-8b9d-8720286459bc"
        },
        "item": {
          "id": "ed8cef26-d28f-4308-9fe1-3c57725bdf89",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "298f5128-1128-47a1-b736-5f7992a98319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d411e29-3bb1-443b-abad-b2ac921d5006",
        "cursor": {
          "ref": "2d515e8a-3a6f-4868-964b-0b4bab8f2fdb",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e3bd8cc3-4827-42fc-a644-f60bee30265a"
        },
        "item": {
          "id": "7d411e29-3bb1-443b-abad-b2ac921d5006",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bb2cd034-d209-4afa-8f0b-555c8469e27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6748386f-4300-41ed-a25a-064f2c5432ea",
        "cursor": {
          "ref": "202834da-1957-4e69-a935-489a1f7b644b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d48b7c8d-08f8-4233-bd64-c1c9d0bd506a"
        },
        "item": {
          "id": "6748386f-4300-41ed-a25a-064f2c5432ea",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "61697202-cdc8-4e0c-aeec-5438632f3fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc7f107-35f2-4e4d-a085-d5b1ceaabb4a",
        "cursor": {
          "ref": "aa56c8ca-1aec-47b6-bdc1-51f7ba6359aa",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "40f6a2c4-1fd8-4d49-90d3-6efb54d83a48"
        },
        "item": {
          "id": "5fc7f107-35f2-4e4d-a085-d5b1ceaabb4a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1a1427ee-9e6f-4192-8b79-1fe9b338e8df",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "0962e09d-66e1-4e49-89a6-b85a63638f9f",
        "cursor": {
          "ref": "62937200-95ab-43e2-b812-ec824fc4a4cf",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "92208ea4-095d-4e7b-97e6-5040017b6cce"
        },
        "item": {
          "id": "0962e09d-66e1-4e49-89a6-b85a63638f9f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ef1b4652-f5c8-4323-b967-7f33addaf961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c114c8-4f1d-4d3f-a384-bcdeccfecef4",
        "cursor": {
          "ref": "4ed60746-3f8c-4d0f-8d1c-51017f318531",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d55f85f6-a980-41d3-892d-51aaa8d77848"
        },
        "item": {
          "id": "37c114c8-4f1d-4d3f-a384-bcdeccfecef4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "71e7372f-5ebb-4dbd-9aaf-3c5d5ea03d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e4cce8-8b39-44ea-9952-cb6ace9c237e",
        "cursor": {
          "ref": "880dd61e-3eb3-4907-8a78-b8384489d3be",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8f0fd1df-8df9-4a8a-9336-8d82764c29d9"
        },
        "item": {
          "id": "c7e4cce8-8b39-44ea-9952-cb6ace9c237e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "60a1404b-49d1-4c3e-a2ea-8b8a3c299caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4e0159-598c-4d8d-b86d-78c8cefc4f80",
        "cursor": {
          "ref": "2af0abab-168c-4fec-8eb7-66556b4900a7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b470c197-8014-47a3-b79c-a09ef929bb21"
        },
        "item": {
          "id": "2c4e0159-598c-4d8d-b86d-78c8cefc4f80",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "18579a4c-c2f1-4fd7-bb87-8c9740b99162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75784dfe-21a1-49c9-999d-7fcfcc436174",
        "cursor": {
          "ref": "d2755f1b-a533-4ed1-aaa3-639e0fa4fd12",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f693e041-a756-43dd-b246-aebdea502045"
        },
        "item": {
          "id": "75784dfe-21a1-49c9-999d-7fcfcc436174",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c0558294-7d77-4bce-93a4-1cd7b9fc07a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7da9ac-3879-45aa-9c73-28a025e557a2",
        "cursor": {
          "ref": "2bfa1c75-44f9-4c7f-a2ad-d78e704e2860",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5d20a52f-2965-4def-a744-209c4a1c4c36"
        },
        "item": {
          "id": "3f7da9ac-3879-45aa-9c73-28a025e557a2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d91c3dee-b095-4897-9a1d-b0e521a6ead3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a908948-4690-46f4-8e07-66066d72a72b",
        "cursor": {
          "ref": "fd5e6dcc-3381-4f21-8c3b-85aeed167d8d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "64658632-14fe-49c5-994b-6167fde5e6d1"
        },
        "item": {
          "id": "9a908948-4690-46f4-8e07-66066d72a72b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c524ff16-4877-4125-ab88-f0b4426d308b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780835e0-6156-420c-8214-a0a3323c5e01",
        "cursor": {
          "ref": "4db75bda-b70d-48a4-8f24-fda12f2196e8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a7656d64-c5f1-4b38-954e-53fe1d89b4fe"
        },
        "item": {
          "id": "780835e0-6156-420c-8214-a0a3323c5e01",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c02ca22a-ce10-4a2e-9fb8-3324832fe1fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c4b5fac5-7ddf-4cd6-acce-e39afdcf68a4",
        "cursor": {
          "ref": "fe949d8a-8ec8-4e34-9556-898ca3829e48",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "289e39f5-280b-4725-b652-6570f71f2d34"
        },
        "item": {
          "id": "c4b5fac5-7ddf-4cd6-acce-e39afdcf68a4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5881d989-254e-4f79-afcc-545b827ca74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930004f9-897c-4b31-9462-547dfc32ee51",
        "cursor": {
          "ref": "5fb65731-cb9b-4a46-972c-b1d00ffc6d1c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "34702e1b-a1be-494b-8c3f-43929d79972b"
        },
        "item": {
          "id": "930004f9-897c-4b31-9462-547dfc32ee51",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5c938ca5-2259-42c0-86a6-892f70bd1916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01dc79f-b138-48ea-bb01-82cc5fbd1b82",
        "cursor": {
          "ref": "2d1fea0a-6b52-4b2d-9f4b-2e8f8f69a715",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "465d81fb-83df-4af5-863a-4974db1f341a"
        },
        "item": {
          "id": "a01dc79f-b138-48ea-bb01-82cc5fbd1b82",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e4ba30e-e947-47ba-b561-6cc6323146c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0258c5ad-9335-467e-99a5-1bb787869945",
        "cursor": {
          "ref": "e070b307-4786-42e5-8d49-f6b8ad976201",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5f4e6891-1e2e-484d-9d95-ca3371619363"
        },
        "item": {
          "id": "0258c5ad-9335-467e-99a5-1bb787869945",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1d5892c4-8c3e-4f4f-a8cb-1ab31e899253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f8b52b-bcf9-4244-b1e1-f81f32be4379",
        "cursor": {
          "ref": "c6527ae1-7771-4f69-ab66-7f737dcd2b63",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f96dd28d-276e-46a3-a114-2bf05d5dc440"
        },
        "item": {
          "id": "86f8b52b-bcf9-4244-b1e1-f81f32be4379",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0483e790-b64c-4290-b059-212b175915e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08875fcc-ffb3-4045-b043-1fbf8a451559",
        "cursor": {
          "ref": "833d8252-334a-49c8-8544-cfe3dee33c8b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ca56b2a5-cdd6-47ec-bba8-ed2def260025"
        },
        "item": {
          "id": "08875fcc-ffb3-4045-b043-1fbf8a451559",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "73fc4524-d3c0-4c9c-8f62-b29d3dda29bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80502e10-4f6e-4e5b-85ac-55408c5503cb",
        "cursor": {
          "ref": "a73a7d38-37a5-46ed-8cef-a014c54897da",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8aa810f2-a6b0-45bb-86ea-4dd0d74fcaf3"
        },
        "item": {
          "id": "80502e10-4f6e-4e5b-85ac-55408c5503cb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "53f8812b-f63f-4b81-ad96-b8ebc1506599",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f963d299-a16c-403f-8be9-a41dc969ae36",
        "cursor": {
          "ref": "e14f91f1-ac8d-432a-b62f-1f6f20d4ba98",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d9f68df4-75b9-4a74-a6ca-17a241024400"
        },
        "item": {
          "id": "f963d299-a16c-403f-8be9-a41dc969ae36",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ced5901a-5174-4a72-b67d-d9ddb44bf30c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "cef20142-b1fd-4912-a865-dca4a20dbbb3",
        "cursor": {
          "ref": "dd945299-4030-43dc-8836-76343d798e6b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "81e59c8b-28af-4ca0-b9c4-49de944ae22e"
        },
        "item": {
          "id": "cef20142-b1fd-4912-a865-dca4a20dbbb3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "df21396e-c6be-4fe0-866b-17431e3b83e6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "70f08f49-8269-4c94-ae14-eeaee86df898",
        "cursor": {
          "ref": "18dd9c4c-5523-423f-9ff0-8b3dbbcce3e0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c4abb72e-93b5-4fbe-8c8c-d0f841520e98"
        },
        "item": {
          "id": "70f08f49-8269-4c94-ae14-eeaee86df898",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6acaf76d-6b62-437a-9b4d-74b3323c2f9d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b6cff19a-d87b-48d8-a387-3c0f6034b5eb",
        "cursor": {
          "ref": "e35ae77c-610d-4b4e-871c-0c169af792a7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "67568cc8-9d8e-4af1-9d63-74f94baa9dce"
        },
        "item": {
          "id": "b6cff19a-d87b-48d8-a387-3c0f6034b5eb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1190b4e7-0631-4691-8fc6-0d9dd18068ad",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ede77496-e858-49b0-b3f6-007869cc120e",
        "cursor": {
          "ref": "0d02fb08-a1f1-4db3-bb86-9edcc10c8d93",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5ee1ce00-4f5e-468a-aaf4-5eb810b1d757"
        },
        "item": {
          "id": "ede77496-e858-49b0-b3f6-007869cc120e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d4c7f695-3063-4f65-965b-6739df891660",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "a84de8dc-66c7-4c9c-b90d-6849d73a0a2a",
        "cursor": {
          "ref": "b57bacc1-43d0-4038-9663-09f0c35563bd",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b92d1ae8-dae2-4d47-a711-2fca3bc53217"
        },
        "item": {
          "id": "a84de8dc-66c7-4c9c-b90d-6849d73a0a2a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d1ece138-9991-43b0-9cbf-30982f454816",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ae8787-cf0b-407b-ac28-3063833088c4",
        "cursor": {
          "ref": "86e85f98-8db9-4e5a-b179-94f7e9d3d4a4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c699487f-7efc-4ca4-9d44-c7a22fc53a3a"
        },
        "item": {
          "id": "a4ae8787-cf0b-407b-ac28-3063833088c4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "11cd342e-3bca-43a1-a4a4-04e321e8253e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203584bb-82c5-4944-be7f-cb4f5a786dd1",
        "cursor": {
          "ref": "2301d0c0-a288-4fc9-9391-a86841f7b112",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a33f8238-c8f8-491c-a066-dc511235bcdb"
        },
        "item": {
          "id": "203584bb-82c5-4944-be7f-cb4f5a786dd1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8bcbfde8-c6e4-4e6f-a1ec-b0cc76672928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1e6c47-e5ad-44f4-a088-d4feb6ccfcdc",
        "cursor": {
          "ref": "1cbafa3a-1656-473c-a9d1-205564e1839e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "72854037-3363-4418-bdd2-150f6f6c1866"
        },
        "item": {
          "id": "ed1e6c47-e5ad-44f4-a088-d4feb6ccfcdc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bf22af5d-0d05-4a51-8d64-db517ad158de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5011168-5fd0-4938-b07c-6c82cbcd266e",
        "cursor": {
          "ref": "d703af59-4269-46b0-bb15-771ec9e1b984",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "94c0b579-cbbf-44a7-b390-b6b51e37255c"
        },
        "item": {
          "id": "f5011168-5fd0-4938-b07c-6c82cbcd266e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "37bb4a0b-99df-47c5-8976-fa41c9ed5e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a358f85-7898-4df2-8d25-10f841611dbf",
        "cursor": {
          "ref": "351c9989-730d-419a-9491-31af0e6292a9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "31f774e8-53ef-4c33-b283-8adec6fa0b4a"
        },
        "item": {
          "id": "6a358f85-7898-4df2-8d25-10f841611dbf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0ce1260c-7bd6-4c0e-99fc-12aa7c1e915d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7032fb3e-1625-4f5c-a3d5-5f46baec2db9",
        "cursor": {
          "ref": "25483368-fa77-45d5-a956-338814362cf8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4e46e2ef-1dec-4ad5-8670-c0e247c4a257"
        },
        "item": {
          "id": "7032fb3e-1625-4f5c-a3d5-5f46baec2db9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a5bcc3fa-4f61-4814-b847-8920ae6ef09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aada99a7-9764-4040-959d-b6fa5fbe3dfc",
        "cursor": {
          "ref": "200cc7ce-6eed-47ec-b252-91cb51f59d1a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4c04acea-0ef4-48da-83c5-93cfafa18d77"
        },
        "item": {
          "id": "aada99a7-9764-4040-959d-b6fa5fbe3dfc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e6e977ea-769e-46d3-9f3e-a0c2d7a1cb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0c50fd-5f24-4a62-a90a-cf3bc95817ab",
        "cursor": {
          "ref": "727a3c06-9341-48e6-9efe-64b77eb41850",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "49a3fb97-7674-420f-934a-df20e1a5974b"
        },
        "item": {
          "id": "3e0c50fd-5f24-4a62-a90a-cf3bc95817ab",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3fb1a5bc-fc84-4fdf-a66b-4b5699f4ffe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41a1c16-aebe-4509-b134-62ad1522372d",
        "cursor": {
          "ref": "f7db4c4d-0592-4a10-843d-e9b40b8e50cf",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3047111d-bf6f-4204-8f72-7d585e7ebfd4"
        },
        "item": {
          "id": "a41a1c16-aebe-4509-b134-62ad1522372d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2dc97554-3dac-4046-820c-d820f54fbf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd9698c-de96-46ce-9c28-8ad03b1e5a09",
        "cursor": {
          "ref": "7b061c8c-2c05-4a5d-98c6-1f27c267f2a5",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2730acf1-3ee3-4578-9e50-0bc7fcfeef4c"
        },
        "item": {
          "id": "1bd9698c-de96-46ce-9c28-8ad03b1e5a09",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c9e18ad1-4917-4d05-95f6-ae3e5dab5f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e692f8-8a1a-4940-a788-fd56732b5372",
        "cursor": {
          "ref": "9a7ab410-0b94-459e-885d-88d83aee9a56",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f2104c69-623c-4737-b032-34c0e441f9ee"
        },
        "item": {
          "id": "47e692f8-8a1a-4940-a788-fd56732b5372",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ed52af0f-ca8c-4585-b128-92005f04e75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c661b3f-5bc4-4ba2-957a-684fae083414",
        "cursor": {
          "ref": "23d1cabf-8a96-4429-b9ee-2a2073164a65",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5e4d2d85-71ee-4ccd-b295-5bf80d53cd80"
        },
        "item": {
          "id": "6c661b3f-5bc4-4ba2-957a-684fae083414",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "20fc795d-6e70-44dc-8c13-888f901b2e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c41d0c2-6524-42ea-a692-063ffb631c75",
        "cursor": {
          "ref": "78c65ac7-7edb-4e59-b856-8c1eca4aeded",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7a1f0a91-e267-4236-b092-87872c292a62"
        },
        "item": {
          "id": "9c41d0c2-6524-42ea-a692-063ffb631c75",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e2606428-17da-4246-9c73-63b9f3081bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fa116a-bfbb-4484-815a-fbae6b1e0833",
        "cursor": {
          "ref": "46a09d92-5fe1-4d09-88d6-db8ed721f1f2",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a70509ef-1ec6-4886-a93c-d77e572d4765"
        },
        "item": {
          "id": "d3fa116a-bfbb-4484-815a-fbae6b1e0833",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c44588eb-9bf5-4ddf-ba0e-65df41bb1683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3850d914-fb79-425d-afd7-728f9e1f3f00",
        "cursor": {
          "ref": "0992f91a-2f68-4fb1-a63f-a9b8dbd3c83d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e9bd49bb-48ce-41e1-bdca-9ede76714f8d"
        },
        "item": {
          "id": "3850d914-fb79-425d-afd7-728f9e1f3f00",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fbdff103-3db4-4418-96af-8de7d63ef38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa83ca5-1199-44a5-a824-7e763da2b45a",
        "cursor": {
          "ref": "bc79745c-554b-4e85-b60b-1a05d744778f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "145dc106-b947-4f70-9892-8df064b5a3da"
        },
        "item": {
          "id": "9aa83ca5-1199-44a5-a824-7e763da2b45a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "57cc8dd2-3a16-4008-9a91-fd1f61523e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135d6664-4b59-4eaa-bb23-3e2fda09b1d9",
        "cursor": {
          "ref": "d46f11f1-edfe-441e-99d9-f33c38e4c6b6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a3f508ec-3ddd-44fb-acf2-bee8e328c6ec"
        },
        "item": {
          "id": "135d6664-4b59-4eaa-bb23-3e2fda09b1d9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "406ad724-bbb5-44d8-b53f-eda50fe58522",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "91f4a64c-8fb2-4f54-ac9e-848ef5a0dff0",
        "cursor": {
          "ref": "8d59db2d-494e-4785-aeae-d8ae5692934f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "24dc853f-35e1-40e6-94e5-2535aca08c5b"
        },
        "item": {
          "id": "91f4a64c-8fb2-4f54-ac9e-848ef5a0dff0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7e900363-f9ba-4d8d-8da6-1d2dcb5ece70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5aabb0a-523c-4f88-8b5f-be390e33bdc0",
        "cursor": {
          "ref": "6d275f3f-b40e-4295-aa2c-7d48b5920e7f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e4c887fb-ce5a-435e-ab80-6c6d6d194718"
        },
        "item": {
          "id": "b5aabb0a-523c-4f88-8b5f-be390e33bdc0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "48c2dfd1-43ad-4e32-ae47-a6280d192739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf14b65-b809-4db8-96c0-cc7ad0520cf8",
        "cursor": {
          "ref": "816f9cd6-74c3-4318-9019-2fc56252f907",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0f13f4f4-ee61-470c-97e0-5367d9077aad"
        },
        "item": {
          "id": "aaf14b65-b809-4db8-96c0-cc7ad0520cf8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "24af7a7a-ae56-4c26-9dc4-1bd59d856313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7679ea-8c36-4134-9c4f-9515d66f238f",
        "cursor": {
          "ref": "d2f34f20-da37-4f72-82cf-00b0ce3c7d82",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a0fbff67-2740-437d-88f1-bef747ae378f"
        },
        "item": {
          "id": "8a7679ea-8c36-4134-9c4f-9515d66f238f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f7af9fa0-8904-48fa-bbe7-4617c353eac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f34d2d0-c7f7-404d-94dd-351d3473adb0",
        "cursor": {
          "ref": "f53ac563-5385-46a5-a93e-e4429fd67583",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "71f280b8-3d95-4ccf-b73a-749d37ffef4c"
        },
        "item": {
          "id": "4f34d2d0-c7f7-404d-94dd-351d3473adb0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "349785fd-6da3-45ac-8e22-59523804147d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a3c5a6-debd-4c92-b7e3-dd6367f17f0d",
        "cursor": {
          "ref": "26e479ad-9091-4964-96fb-a7f4e1651e74",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c6838872-ad19-4b7c-bd02-e0d2af97110c"
        },
        "item": {
          "id": "e5a3c5a6-debd-4c92-b7e3-dd6367f17f0d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cfcae1e4-78e8-49c5-99ae-8075a992874e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712bdcc3-5e39-4750-a420-5276d11ae6a0",
        "cursor": {
          "ref": "4e6cdef7-835a-41b3-8c4a-e9d4a0b14999",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "95ac4e04-4939-4e2d-98ca-a49fd3523075"
        },
        "item": {
          "id": "712bdcc3-5e39-4750-a420-5276d11ae6a0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6b086a2b-2a4b-4660-a383-f155dbd70e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fddda4-9430-4c89-978c-a1758c8be2e0",
        "cursor": {
          "ref": "8bdddc49-fffa-414f-b622-748255027ca9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e8088058-c7be-4a64-823b-601e087a2f74"
        },
        "item": {
          "id": "71fddda4-9430-4c89-978c-a1758c8be2e0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d0a5f8ab-0f0e-4257-9d31-5f4bcd936e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414082b5-ff1a-4af1-80e2-ae1b5c01c1c0",
        "cursor": {
          "ref": "c226436e-5144-4436-b3f3-1d9a6a18d8f6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "15467b62-06c9-4401-87b2-70df6d78fcdf"
        },
        "item": {
          "id": "414082b5-ff1a-4af1-80e2-ae1b5c01c1c0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "51e31df4-3676-4f63-9505-4a67f049c281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd166e40-c3a1-442e-beff-d973fd7ebc50",
        "cursor": {
          "ref": "3cfeaef1-83ad-4c75-88a1-c884a88ef5e6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ea3bb356-c70d-4cf3-bd96-a412c8aa6dd8"
        },
        "item": {
          "id": "bd166e40-c3a1-442e-beff-d973fd7ebc50",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "93c1fe61-a813-4307-877d-001095515790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686b7f96-b38c-4faf-a82e-d81651199887",
        "cursor": {
          "ref": "c90fa32f-df40-4d72-b2a0-18028103908b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8c2c574a-b11c-4584-84f4-a12572f54ed1"
        },
        "item": {
          "id": "686b7f96-b38c-4faf-a82e-d81651199887",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "793cb9b0-83bd-4c64-ab2a-4da52c330638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11c8854-f274-4b09-88af-66d6339983ab",
        "cursor": {
          "ref": "a2ee4885-e451-4bd2-a5e8-69ef0f7c66ac",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ffe95447-2d1c-46b9-8dd8-3754ed19c0f8"
        },
        "item": {
          "id": "b11c8854-f274-4b09-88af-66d6339983ab",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "935b8968-2eff-4086-886a-2fe17c1f990e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e4a6a7-d07f-4c3b-973a-c82a963fae8e",
        "cursor": {
          "ref": "266fa09a-3a1d-496e-bd76-b8d807a2d81f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ce5e6db7-ff3c-4818-b859-f3049dba4604"
        },
        "item": {
          "id": "b4e4a6a7-d07f-4c3b-973a-c82a963fae8e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8dd78839-e650-4826-af9b-8453a2c16a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e114098-433b-4bd1-b3cf-4e778f57a7bc",
        "cursor": {
          "ref": "d9f973b9-029e-491c-9c34-863991539ae4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f6f0b75b-6787-4e48-ad4a-8a15b60678fb"
        },
        "item": {
          "id": "3e114098-433b-4bd1-b3cf-4e778f57a7bc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "880570ef-db27-4752-86b8-4d2d844f5cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7620968-1acf-4ad3-9b93-ecff5d8154ae",
        "cursor": {
          "ref": "861a3104-2005-48eb-a41c-30b0bb2ed3c5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a52cfaa3-952b-4aa6-b5d4-5f5b7812e437"
        },
        "item": {
          "id": "a7620968-1acf-4ad3-9b93-ecff5d8154ae",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "98a09087-a3f6-424a-82c6-ad36a05c1a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975a2723-4528-43d5-8993-528bd7f709e1",
        "cursor": {
          "ref": "26bbf60a-ee5a-4fb2-8fa2-512dbc9466d9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fba3bfdd-003a-4ba4-825e-7f5f6676ed81"
        },
        "item": {
          "id": "975a2723-4528-43d5-8993-528bd7f709e1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2acb1e10-2c80-47a4-aff2-5ff51843b522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715fbfe8-66c6-40a2-b889-4045cfaf6e63",
        "cursor": {
          "ref": "5a4850db-0d7a-4c4b-b149-352a07d100a2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b248c301-4b51-4fe8-92ec-5100fd9fef92"
        },
        "item": {
          "id": "715fbfe8-66c6-40a2-b889-4045cfaf6e63",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8b88bfe7-d168-4107-900b-6dd84b428b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a498121e-5a14-432c-98ea-107b17510e3f",
        "cursor": {
          "ref": "8f28f5a3-4adf-4d1c-931f-8fec6c1047f6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "321e097a-b0ed-4a10-80e9-ec12d3d1f427"
        },
        "item": {
          "id": "a498121e-5a14-432c-98ea-107b17510e3f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f427dc12-4e2b-471b-9bb3-3c0492d351c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60664e86-b212-4368-b6d0-aa4815d16108",
        "cursor": {
          "ref": "90288ce2-5680-4943-905a-ef432a8e83d7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b7d54d73-84eb-4977-8dce-08dade159b89"
        },
        "item": {
          "id": "60664e86-b212-4368-b6d0-aa4815d16108",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cb3b6c6d-d843-4bf9-9e6f-cc2752afa9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80ef980-2a61-41aa-b6a3-3a49ffc4f60d",
        "cursor": {
          "ref": "025326bc-1f34-4544-ba58-e0eb9862ada2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8de6d538-e22f-4abd-9654-9074e5f89e60"
        },
        "item": {
          "id": "a80ef980-2a61-41aa-b6a3-3a49ffc4f60d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "19d60764-5182-4ed9-be62-71273b3931df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84a65b8-2eee-4d3b-b181-f4116f57d80c",
        "cursor": {
          "ref": "3d196317-c61e-4d09-b601-b03f8a0c7743",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4596f59c-5823-43a9-aa29-684f8c77130c"
        },
        "item": {
          "id": "b84a65b8-2eee-4d3b-b181-f4116f57d80c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e7c61434-e349-4352-9450-a9bf5646ff75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315b02e7-9fb9-4f1c-8a2f-893e3e377037",
        "cursor": {
          "ref": "619508b8-f611-4dd9-a09f-1a884e9e6125",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c45b5ea8-1710-4619-acf8-237f284fd439"
        },
        "item": {
          "id": "315b02e7-9fb9-4f1c-8a2f-893e3e377037",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "58883828-ba3b-430e-bf04-9692777317e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b756be38-df6c-4d9b-8c86-af2f48acc65f",
        "cursor": {
          "ref": "91285d47-5cd9-4dbd-836f-aabab696140d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b3002b03-8213-47c6-bdd7-bee7ba3f39ef"
        },
        "item": {
          "id": "b756be38-df6c-4d9b-8c86-af2f48acc65f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4ad0e310-538c-4de2-9658-896fc5a29c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3380a61-9ea2-43db-b81e-6c84b9e95bbf",
        "cursor": {
          "ref": "fe95f6bf-63fa-4bae-98a7-2b6c11aeea02",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c5b82591-1f9e-4b09-b94a-ed4b2db24aa0"
        },
        "item": {
          "id": "e3380a61-9ea2-43db-b81e-6c84b9e95bbf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "937dbd16-61a1-48c2-913c-cf7bc31a829e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb9db6d-75c2-42d7-9515-534fa84ec4fa",
        "cursor": {
          "ref": "a290c1f4-033a-489f-aaa7-1aaf604d97d9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f444c29a-51e1-45de-b553-617b27fbd8f8"
        },
        "item": {
          "id": "7bb9db6d-75c2-42d7-9515-534fa84ec4fa",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "49d4bd92-b4e6-4a10-a095-41bb6f01fc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e558b8-9d2b-4f03-aba8-d150618e90b9",
        "cursor": {
          "ref": "6ffc7c5f-dfdb-4924-be71-574527cacbe9",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "209371b0-c5d3-4b84-91cd-8362aa07a25b"
        },
        "item": {
          "id": "29e558b8-9d2b-4f03-aba8-d150618e90b9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c6ae89dc-06da-44a3-a1f2-6bd5be3ea821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba273845-27c1-408c-90c7-25c478f82a98",
        "cursor": {
          "ref": "1144cf49-3101-4c4b-893e-1c5db92a0f5d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1c02a52f-0176-41b6-a755-601aa0feb0b6"
        },
        "item": {
          "id": "ba273845-27c1-408c-90c7-25c478f82a98",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8879e1b3-3e2f-4e0d-b7e3-bac739846a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88b6d6d-7025-42a5-a91b-4f4d624c4853",
        "cursor": {
          "ref": "3f548823-3862-416d-a2e9-dbf58fcf81d9",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7cd36ba5-f0e7-4ced-834a-d73960edbfeb"
        },
        "item": {
          "id": "e88b6d6d-7025-42a5-a91b-4f4d624c4853",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0808994e-bcf0-4a68-a569-f480f8827861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c76138e-be19-42a6-80c0-aeccddc93ac7",
        "cursor": {
          "ref": "6865098a-a18d-464f-9bb6-249a47af805a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ecd52fdc-a3a8-4790-aed3-c10bb33a7398"
        },
        "item": {
          "id": "3c76138e-be19-42a6-80c0-aeccddc93ac7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3568d0f4-0591-47f4-93ee-5238ca949d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fab94d-5471-461c-9ae2-781ed6454c61",
        "cursor": {
          "ref": "28ebbbf9-c3e9-4e67-b566-ef632e5868c6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ae435f00-c8c0-45d3-88c7-07832725cf3f"
        },
        "item": {
          "id": "44fab94d-5471-461c-9ae2-781ed6454c61",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "23909f0f-b5e4-4188-95e9-f6129f732dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03371d68-e8e3-4bf8-986f-6b5837eaeaf2",
        "cursor": {
          "ref": "a743473f-f746-4497-ae4c-ad2274cf4dd6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "02f9f44d-c800-4605-a30d-a5a87d7abfc0"
        },
        "item": {
          "id": "03371d68-e8e3-4bf8-986f-6b5837eaeaf2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "18226dc2-643b-4c0a-9941-81f9417ec09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19c565a-dde3-40a5-bec8-f47c87d1f675",
        "cursor": {
          "ref": "b0b3008e-c40d-4ae3-8f34-5ad8945b32d4",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ddb976ca-67f9-46d2-8cb5-48cca14407e4"
        },
        "item": {
          "id": "e19c565a-dde3-40a5-bec8-f47c87d1f675",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9f3ccc5-50af-42e2-a3a4-9f73bee30322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83697386-cbb7-45d6-b353-b9fc09888634",
        "cursor": {
          "ref": "98010dde-8e9c-4ce1-87db-ac28136a5579",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9c6953be-7e6c-4057-a32a-a17c168ed322"
        },
        "item": {
          "id": "83697386-cbb7-45d6-b353-b9fc09888634",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "54112738-a7fd-4a84-ace0-f18ed0efec75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c065c4c8-acaa-49e2-ad4b-e3b3211bba94",
        "cursor": {
          "ref": "7e270d1b-78bd-4c5b-ba8b-83af05a95771",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "703905d6-3767-485a-8e36-bea242ab40b6"
        },
        "item": {
          "id": "c065c4c8-acaa-49e2-ad4b-e3b3211bba94",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "60327e7e-1c7f-4ab4-8e6a-8159ca6abb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230dcc8d-38fc-4176-b96f-d9eb43180a6a",
        "cursor": {
          "ref": "5e3346e4-3706-481b-ac37-8ac8f8bfdd18",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c676df11-fdce-493f-8d82-278916b2b0ff"
        },
        "item": {
          "id": "230dcc8d-38fc-4176-b96f-d9eb43180a6a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4702b8f4-f369-4789-99aa-93664d0fdefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551f6ed7-1345-4f8c-ae7f-b54270777939",
        "cursor": {
          "ref": "a24ff648-d364-40da-8020-8979e6f457c2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "04bdc22e-2b38-46d0-be3f-17d068944685"
        },
        "item": {
          "id": "551f6ed7-1345-4f8c-ae7f-b54270777939",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f8986806-1765-46d8-a5f3-1a5455517ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323870fc-928d-4c07-a704-0e853b50fe91",
        "cursor": {
          "ref": "8d4310f0-859e-42b3-8729-b68c76fe8b10",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e3a76591-9925-4b28-afdc-9dd68cc8674c"
        },
        "item": {
          "id": "323870fc-928d-4c07-a704-0e853b50fe91",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5f381e03-dd9b-43b6-b1de-9a90bbcbcc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8b2e94-f24a-41ca-9b6d-0c38b83c8401",
        "cursor": {
          "ref": "9c5948b5-8b1d-4ba8-826d-be783079f14e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "11e14eb5-e6be-4a21-ad0c-1c6336735448"
        },
        "item": {
          "id": "2b8b2e94-f24a-41ca-9b6d-0c38b83c8401",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4ac1ecb8-7b8e-4417-ad9d-b8b03a269bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e7b944-d4bb-4d4f-8c81-2feab6c3d082",
        "cursor": {
          "ref": "dc8e1ab0-718a-4fc7-adb4-f840a8f00754",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3afbc39b-3d30-4f4b-bc22-d26755250015"
        },
        "item": {
          "id": "16e7b944-d4bb-4d4f-8c81-2feab6c3d082",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f2cdc1dc-6101-4f17-b239-9a38ec6077c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0cd3e0-9c1e-45f0-8731-abd119a2fdec",
        "cursor": {
          "ref": "c6a9ae07-c905-453d-90de-c4dcee38c142",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1f5ac5c5-8a86-4b3e-8470-397a7ee2c151"
        },
        "item": {
          "id": "ed0cd3e0-9c1e-45f0-8731-abd119a2fdec",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "11a4b999-795d-4088-adb4-5ea890a88499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cae9c6d-dedb-4188-a6d9-a49b19a2f695",
        "cursor": {
          "ref": "890d2702-de62-4147-9517-6add59b124a1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dcd1d23d-ce73-4e4e-b844-c8f28720c295"
        },
        "item": {
          "id": "4cae9c6d-dedb-4188-a6d9-a49b19a2f695",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b045f069-cb1c-4aba-bbd9-63c359b34fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557d17e6-f9c2-48c7-b3cd-4ebc57118048",
        "cursor": {
          "ref": "8a9187a0-8391-4515-a2db-ca18080430bc",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "062ef0aa-17ee-4585-9d63-5f764b9e54bb"
        },
        "item": {
          "id": "557d17e6-f9c2-48c7-b3cd-4ebc57118048",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "55d50c9c-0aa3-42cf-b584-cea9261409d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24963978-e7ce-48f7-ba01-5ca6ffe3ffc6",
        "cursor": {
          "ref": "c218b151-2be5-4fac-823e-6b0efd247c51",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a3818148-d71f-4a45-8c8f-7a2aa3cce27a"
        },
        "item": {
          "id": "24963978-e7ce-48f7-ba01-5ca6ffe3ffc6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e78854e5-1902-4a2f-a729-87b29c4b67c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16c459c-3055-4cf0-89f4-ef3d0bc62e66",
        "cursor": {
          "ref": "64c25396-0015-4b1c-8cb5-683a0eb88a1f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a3a28029-85a1-46e0-bd45-25df4781f270"
        },
        "item": {
          "id": "b16c459c-3055-4cf0-89f4-ef3d0bc62e66",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7a62c4b1-00c3-4759-9875-faa319a6e34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575328e2-b851-4fb9-a490-0bc512703e36",
        "cursor": {
          "ref": "ef52d1a3-0864-4060-97fb-438b402a50d3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2383422f-3b54-4d8b-96eb-a75e3ff75348"
        },
        "item": {
          "id": "575328e2-b851-4fb9-a490-0bc512703e36",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f2a815f2-dde8-4096-970b-d6e17d0c1be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30f34ad-cb88-43d5-b355-c92e7a66af96",
        "cursor": {
          "ref": "a37a86c3-2303-4801-ac77-e7fd363af358",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7efb5f14-f82d-44df-8ec6-86f845a9992a"
        },
        "item": {
          "id": "a30f34ad-cb88-43d5-b355-c92e7a66af96",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e128edf-652d-464a-bf53-67010ac32fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5938e8e4-c70b-4516-a0d4-7eeaf9f9ac58",
        "cursor": {
          "ref": "91468cc4-fe66-4f28-bfdf-f8a08d51d471",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7446a34f-dda1-4107-ba91-3000fb9a54b3"
        },
        "item": {
          "id": "5938e8e4-c70b-4516-a0d4-7eeaf9f9ac58",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2d787950-4005-4496-95ad-2d76258ee4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aae0fa-3bcd-4fa4-8180-98ce0ebd5be8",
        "cursor": {
          "ref": "c421ac0b-dfa4-4b77-9c39-d1e40a5b7a89",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e79140af-4e88-4cf5-86aa-56b41d0aed1a"
        },
        "item": {
          "id": "b6aae0fa-3bcd-4fa4-8180-98ce0ebd5be8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "53275eef-c0be-4fc6-9085-45c785886eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa84445d-b40c-485d-89ff-e7b559f5e6f4",
        "cursor": {
          "ref": "b75cbdc7-db77-4262-ba71-ee235477d68b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0a3c1b20-d483-42fd-872c-4d3e5e9c9f3c"
        },
        "item": {
          "id": "aa84445d-b40c-485d-89ff-e7b559f5e6f4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7905ca80-70fc-4fa1-b87f-fd2fe0cbe58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b30869-4ef7-4ee4-b745-4b0eec1a7832",
        "cursor": {
          "ref": "413566df-1d43-4c81-9583-e4faeb70e502",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f2472b88-468d-4f41-a924-574293e7411b"
        },
        "item": {
          "id": "62b30869-4ef7-4ee4-b745-4b0eec1a7832",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d0d61aee-d1c0-4bac-b763-60e23a7b2e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2be1208-8b0a-48ba-8698-f65f8887d4a1",
        "cursor": {
          "ref": "af1edb0a-ba9c-455c-b804-bd0d6a806398",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c555f0c5-5d43-4463-a1ec-d5b87334c8d8"
        },
        "item": {
          "id": "f2be1208-8b0a-48ba-8698-f65f8887d4a1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8cf8c0ed-ec6a-4f91-aff7-f8cb5b8e2c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3caf7c-781c-4834-887a-e377ab62ba9c",
        "cursor": {
          "ref": "ae1e5119-749b-4213-b28c-c675806c1bec",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a65d6c62-4b1c-4896-b199-f9a29c3e85dc"
        },
        "item": {
          "id": "8c3caf7c-781c-4834-887a-e377ab62ba9c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c3001d4a-8100-41f8-bf59-04a584c35387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67642c8-809c-4664-86b5-95bc2fd45dd5",
        "cursor": {
          "ref": "c86c3b3b-4d33-47bc-916b-037589092a8a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "acc712d9-39cc-4039-b967-48c7589a1225"
        },
        "item": {
          "id": "e67642c8-809c-4664-86b5-95bc2fd45dd5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1d5ff2d7-a71e-44e0-b291-1a2faeb7bd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b7208d-add2-4158-ae85-abfcb77a5ed3",
        "cursor": {
          "ref": "5f0fc0a5-31dd-4791-97c4-3580e4a1eb39",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3b0ed125-a89c-480a-b6e0-4c51014d36f2"
        },
        "item": {
          "id": "f0b7208d-add2-4158-ae85-abfcb77a5ed3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1e19d250-a219-4e16-bec8-e4a1f6761372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9a9da3-7d8c-44a5-b530-d4f0b631611b",
        "cursor": {
          "ref": "d4ddabbd-a4d2-46a4-8685-992e2a35cdfb",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "08a7659b-a8e1-4de2-80bf-2c613d5267cc"
        },
        "item": {
          "id": "bd9a9da3-7d8c-44a5-b530-d4f0b631611b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e49ff4e5-44fb-44e4-9236-2fadcf3f4404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55f507e-ca0e-40cd-a78f-5781b02b2e10",
        "cursor": {
          "ref": "445dc251-a807-4f3b-8603-df188ade1783",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "007c99e2-f7b5-4417-b8e9-8438974bdf42"
        },
        "item": {
          "id": "d55f507e-ca0e-40cd-a78f-5781b02b2e10",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e62ac6c0-7995-4b16-aa5b-1b92936731b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e02abee-09ce-49db-9d44-a194ef1c9635",
        "cursor": {
          "ref": "3661e3cf-b353-48d8-82d1-a5ec23950213",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e594e08d-06b7-4e9c-aad4-57deb6651ad9"
        },
        "item": {
          "id": "6e02abee-09ce-49db-9d44-a194ef1c9635",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "22982915-a162-4fb7-a269-60361e2d2f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2b3530-24c1-44a3-9aab-70e92d1e442a",
        "cursor": {
          "ref": "f388a9dc-d8ed-4d7c-b9fd-f1669a032fd3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dc8afc2c-a10b-43fe-a7a3-8c330cabc354"
        },
        "item": {
          "id": "aa2b3530-24c1-44a3-9aab-70e92d1e442a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ab389e0a-4ae2-4111-bec8-15e970559589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197a1c27-7351-4b0a-b3df-228babf44f22",
        "cursor": {
          "ref": "84d542b9-573b-41cc-96d2-9e8a074ca621",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2d53ae86-c686-4dc2-a61c-2784291b7898"
        },
        "item": {
          "id": "197a1c27-7351-4b0a-b3df-228babf44f22",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "878ab9dd-57ff-4e82-826e-faf490afef4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0034479f-a09d-4d48-9dec-cdb08979803f",
        "cursor": {
          "ref": "0436a7fe-f5ba-4f43-ba0f-d2fe6034a0e8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2316591c-bf64-4ed4-8f02-75a908ee009d"
        },
        "item": {
          "id": "0034479f-a09d-4d48-9dec-cdb08979803f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7006f3ac-b04d-464d-9663-d3c75023cd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9a941a-6729-480d-ad11-873ed549c79e",
        "cursor": {
          "ref": "23d72c9a-4d53-473e-9120-4929d4ce8fdd",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3d9dbe75-d1a8-4e11-896b-9785a451b54c"
        },
        "item": {
          "id": "8b9a941a-6729-480d-ad11-873ed549c79e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b191d710-479e-44f4-99bc-9e3ddb4bf305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853ee0c5-b2d6-48d7-9a8d-d5ff27fe5107",
        "cursor": {
          "ref": "e1c7d076-a0d1-4813-994e-2b0bcac98c24",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7a35afcb-3e28-4fcf-812d-e8f2a31726dc"
        },
        "item": {
          "id": "853ee0c5-b2d6-48d7-9a8d-d5ff27fe5107",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "23e5776a-0a97-4015-9cdd-f4fa41c86797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cfa592-0454-4c7c-a112-7b5569901c3b",
        "cursor": {
          "ref": "9371eb81-0069-4984-8621-299b31882c0e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8a3a5989-27dd-497e-a94d-0429ead78411"
        },
        "item": {
          "id": "d3cfa592-0454-4c7c-a112-7b5569901c3b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f77b601b-78a3-4bea-b48e-1ce67c96ba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cf18c9-c5b5-42af-a94b-ffd21c0c5985",
        "cursor": {
          "ref": "76a702bc-2ef0-443d-91b6-f50185c6464a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "25ea0499-3b4a-4336-80fd-a956b6c68c5f"
        },
        "item": {
          "id": "c0cf18c9-c5b5-42af-a94b-ffd21c0c5985",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2bc96899-9f58-451c-8f5a-c24c0a1899a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fd1456-3526-499e-8099-708432d1afc3",
        "cursor": {
          "ref": "2a823c28-efb3-43ff-9d11-e6da86c52ccc",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f24b4a22-b7fa-41bd-919d-ba3fffa8e679"
        },
        "item": {
          "id": "35fd1456-3526-499e-8099-708432d1afc3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4081ac4f-9789-4b45-a763-95840b8b53e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b048bb-bc6f-4b7b-9e46-08e970124364",
        "cursor": {
          "ref": "8cab390c-49bd-40d4-a28f-62bfd9da1d8a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a720f828-dd3f-4396-870e-6932fbfb15c5"
        },
        "item": {
          "id": "b7b048bb-bc6f-4b7b-9e46-08e970124364",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "94b85fcf-5b1d-48b9-8fd5-78da7a692b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801efa92-4b77-423f-8a97-ae277419e683",
        "cursor": {
          "ref": "075b0f6e-37a2-41b0-a74e-f7399733694c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "668e6982-93fe-417a-bb26-70f4dc20b7aa"
        },
        "item": {
          "id": "801efa92-4b77-423f-8a97-ae277419e683",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ad44a439-6f1a-4b67-89a2-a3febfc23f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7503d94b-098c-4a5a-a189-6be1173ee4e4",
        "cursor": {
          "ref": "5ca6d973-0919-4c93-94d1-1cfa01e6e2dc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1d54caf5-29f1-4141-93f0-33e76009d9f5"
        },
        "item": {
          "id": "7503d94b-098c-4a5a-a189-6be1173ee4e4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a98b5267-3745-452b-9b97-e2541af560b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e68cb1-5473-4500-8f23-ccf0f1d31ea2",
        "cursor": {
          "ref": "c33d9f74-b4b2-422c-83d9-9d53751dbb7d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0b304edb-a257-48f1-96b6-843912d837a6"
        },
        "item": {
          "id": "f6e68cb1-5473-4500-8f23-ccf0f1d31ea2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d4249cd2-e054-42c7-abb7-3abb63fb092c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b16192d-16c1-4a6a-b86a-3e9f5752855e",
        "cursor": {
          "ref": "c2646339-cb12-4788-9a66-8e01b0a8495f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "958a86d2-b70c-4a37-af4d-936ef247861f"
        },
        "item": {
          "id": "3b16192d-16c1-4a6a-b86a-3e9f5752855e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "45a68ef3-0898-4aac-8587-2a8c9aa120a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb843b63-a521-41ec-9597-ec2f8d55bca9",
        "cursor": {
          "ref": "9f670774-74a2-4e9f-94a1-55c95199fb1f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9a2420f8-6c6e-4cef-90dd-9ed470a090ec"
        },
        "item": {
          "id": "eb843b63-a521-41ec-9597-ec2f8d55bca9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "50333630-67d1-4a07-891f-e5ad48ea6e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda73593-8fa0-4177-a193-206073e38c19",
        "cursor": {
          "ref": "1630f533-b77f-4f2d-a500-8e54bdb74b6b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "969f42a4-eda5-46b2-aabe-86cd29e0418f"
        },
        "item": {
          "id": "dda73593-8fa0-4177-a193-206073e38c19",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f965c704-fead-44e3-9625-7b4a8afe2623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71de538-0642-4e9d-be3d-1b12022d9ace",
        "cursor": {
          "ref": "76af80e8-09ae-44fe-a2e0-a6065051e72b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "666c3898-4a3c-4843-beba-f79fd7e67950"
        },
        "item": {
          "id": "f71de538-0642-4e9d-be3d-1b12022d9ace",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f5efd442-d6a8-4d8a-adae-81bfadbef46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55821bc9-7b73-4309-8189-6e7f5fefce80",
        "cursor": {
          "ref": "bc30d8cd-2108-4499-847f-5b7b9ea5278a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f4f60138-79df-408a-b4da-b6cb91d51251"
        },
        "item": {
          "id": "55821bc9-7b73-4309-8189-6e7f5fefce80",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3150fc2d-b547-420c-9e7c-d83bcc075129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1373f7-c314-4e45-9b7b-8ea0ffbf6dd3",
        "cursor": {
          "ref": "c70c792d-2dd7-4e10-8522-fbf70b851780",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7bc22165-350b-41db-8fa5-00448349945a"
        },
        "item": {
          "id": "1e1373f7-c314-4e45-9b7b-8ea0ffbf6dd3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8731092b-9e36-49fb-8f26-ce24c082d772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86a49bc-8c7c-4c87-b247-4b0e0570a840",
        "cursor": {
          "ref": "48007652-faee-4286-b34d-c93f10594eb9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f99c0cfc-e7d1-4b03-9a98-8b6fb6d3d64e"
        },
        "item": {
          "id": "a86a49bc-8c7c-4c87-b247-4b0e0570a840",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "417d1983-5e55-48c9-8ca6-bfb560849069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8fe85c-3108-4fbe-9b8d-8f914a618aca",
        "cursor": {
          "ref": "136529e4-3390-4c17-98fa-3d5d7147077b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "491f1c1b-5c5c-4f68-acce-4a4838e9e7dd"
        },
        "item": {
          "id": "1f8fe85c-3108-4fbe-9b8d-8f914a618aca",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bf7f5bd7-d605-4f85-b502-f578f1f256a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73824d19-62bc-416b-8179-86599b3aa1e4",
        "cursor": {
          "ref": "eddd9008-c238-446a-ad8a-d12cc764547c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a71fcf5c-b46e-40a0-9101-bde76c98449e"
        },
        "item": {
          "id": "73824d19-62bc-416b-8179-86599b3aa1e4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "31b1ccfe-2d76-40df-8e32-11a62dd4d36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21ca702-a5cb-4100-93ee-739469eb8851",
        "cursor": {
          "ref": "54dd066a-350b-4113-ac7e-11cd23680883",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9821a24f-13f7-44c4-a095-7b4857d5555f"
        },
        "item": {
          "id": "b21ca702-a5cb-4100-93ee-739469eb8851",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "52a9264d-2bc5-494a-ab38-aad893678829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7868a3b-0942-4224-8cf3-dd78130640ed",
        "cursor": {
          "ref": "0d495997-6fcb-4217-8d82-c8f3480c112c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8e27f787-924a-4d12-bbc2-5f9a8a433dca"
        },
        "item": {
          "id": "e7868a3b-0942-4224-8cf3-dd78130640ed",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "327c2682-caf9-4986-bc30-0d5e01ad156d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93d5b69-f71d-4387-af97-20d8ae2b9edd",
        "cursor": {
          "ref": "a73fcc32-2ce4-4f77-a7c7-8adf7b758d8b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "514fb4f5-5a06-43bd-b45b-15d1e24dd1d1"
        },
        "item": {
          "id": "e93d5b69-f71d-4387-af97-20d8ae2b9edd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "962f8ebd-7b13-40ab-900e-f84ab3688f87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0412b860-c3d2-4026-a9b3-0f18b23f38cd",
        "cursor": {
          "ref": "65796988-c41a-4c57-aa24-09d2d0031781",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "82df498b-c5ea-41c9-b056-a159f187f56d"
        },
        "item": {
          "id": "0412b860-c3d2-4026-a9b3-0f18b23f38cd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "96e83565-a24e-480f-8269-b95e9e2453aa",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaae43b7-b7f9-431f-a52d-b0f99fdef74a",
        "cursor": {
          "ref": "903e1a11-855b-49c7-9ecb-dcef9b08ef07",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7be3c256-8efa-41d1-8a9f-52236df240ed"
        },
        "item": {
          "id": "eaae43b7-b7f9-431f-a52d-b0f99fdef74a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fe6de461-e951-4220-b885-65bad582876e",
          "status": "OK",
          "code": 200,
          "responseTime": 2633,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe2d533-84fe-43c6-a546-80b831d1155a",
        "cursor": {
          "ref": "5ad399ce-141d-4857-a9c5-afbb523fa28e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "51d1d124-4e74-4176-942b-4c246b471d39"
        },
        "item": {
          "id": "3fe2d533-84fe-43c6-a546-80b831d1155a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e004e626-1640-4aa7-a0ea-9e258b223997",
          "status": "OK",
          "code": 200,
          "responseTime": 3010,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f11717-a9cf-4ba5-bbef-041f1c4b121b",
        "cursor": {
          "ref": "2fd26f35-219a-47b2-b210-f933f43ac01b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8bb698b5-0044-4ec2-88de-b822003d67fc"
        },
        "item": {
          "id": "09f11717-a9cf-4ba5-bbef-041f1c4b121b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eca2e455-ef33-420b-a695-34ebb2756202",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f11717-a9cf-4ba5-bbef-041f1c4b121b",
        "cursor": {
          "ref": "2fd26f35-219a-47b2-b210-f933f43ac01b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8bb698b5-0044-4ec2-88de-b822003d67fc"
        },
        "item": {
          "id": "09f11717-a9cf-4ba5-bbef-041f1c4b121b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eca2e455-ef33-420b-a695-34ebb2756202",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aa2da2-c3cf-4621-8ada-2049434f4dcc",
        "cursor": {
          "ref": "0850fb9c-2d6c-40d3-b45a-b2af63993c9f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c00fc0a7-a7d5-4b19-a84c-e0075eddc40d"
        },
        "item": {
          "id": "a4aa2da2-c3cf-4621-8ada-2049434f4dcc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5b860f6b-c075-4dd3-81c4-3b3f6f143934",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24df47f-6304-4f01-a862-f9ea36c1753c",
        "cursor": {
          "ref": "5f764702-9b21-4a89-8692-918652655cac",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a72e865b-02bb-4b21-8a06-a5d3232133f0"
        },
        "item": {
          "id": "f24df47f-6304-4f01-a862-f9ea36c1753c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "420e4456-10fe-45ee-b664-62f5efedf98d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}