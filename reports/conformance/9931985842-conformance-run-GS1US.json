{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7dc5a027-1a26-444b-8d53-b1eba3fb3734",
        "name": "Clear Cache",
        "item": [
          {
            "id": "daee70eb-45cc-4998-91c9-08e368fb2bd9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c08481d0-5bea-4f27-b078-e6c67fad79d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e8741ac1-c167-468d-8c4c-99daf800509d"
                }
              }
            ]
          },
          {
            "id": "c3327b42-af47-467a-a77e-d920e0f990f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6283fe5d-08da-4e48-9ef8-67fa6c6099f6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b0a9c9af-b6bd-41cf-94cc-6be9a48eb33c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "956cf161-a123-4a3d-90b0-7ce8288acb27",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1ea60e4f-566b-47b4-b20f-d4eb0b16e1a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce0d8e7f-1ded-49ac-8aea-a22c265c363b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c9b1683-3b4e-487d-9c03-952f182cc485",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74c6ba29-5562-476d-8ba2-1d7118bb829c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d680750-8c88-4ebc-a548-c5c137bfb008",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0e42a58-dba7-42d8-a18d-bfc3313861fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e981cb8a-ed59-4a92-932b-2f7e655c4d45",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "905450b2-766d-4f60-9f5c-aca2afbd17c8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "974bd385-cbea-4ca8-9ee4-acd243814725",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d65964f4-626a-4547-87ae-9c687a594e9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9fa2c94-a774-46ff-8527-2ea355826a43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e91ee0ea-5e35-4a3e-af51-4802dff0dd5a"
            }
          }
        ]
      },
      {
        "id": "2847ec98-cb29-4953-9dfa-95322071081c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7ea056f8-fd0f-4abe-be5e-17546bc55bb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a521bf9-ccfa-413f-8d63-2f8acc926416",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b8252174-39ee-496a-a930-c86aa795a6a4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12a475c-cc21-47d3-91d6-5f13577f19d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "645bd98b-2baf-46d4-bcc6-b2ae544c9b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf8f81a-e2a3-4159-8f2a-7f619a1ba2b2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d2bfbe-0460-44af-8a8e-673c6acd5a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ac03b3d-f131-4f27-8a7a-e7b3da3a16cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ce13aa-f08f-4a31-8f3e-831befa85759",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8065111c-a1f3-4d60-aa95-6d0f8452a326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbace337-f335-494a-8068-80d0923800ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cad9a0ce-31b2-4afb-9926-887ff44e5334",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e68e89c1-2a85-4770-9fd0-475cb6cefb37",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e6b1e5-3a71-42bd-b89d-488218dd1933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01e1a7ed-559d-40d8-8adb-1250f55c3321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3febdf9f-acde-4a62-a4c4-1f57f60dc68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ca4f6a-0bbc-4c88-a3bd-37bf79dae743"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2185b266-b3ec-409b-bbda-c7447c524d8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4402683-476b-4a30-bc05-436a0668a8bb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "747e909a-7f3b-4fe8-8753-98795bf95ce1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dd039de1-d703-4365-8fc6-0dd2570cf3fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dad1176-e0f2-48b4-996f-8281e02b8b42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "04b23550-5e06-4a5b-aeea-433b3cca2e6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa737f66-dc5a-4f92-b629-abb5aaf762e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0643339-96a0-4fd6-af3b-84c1863f10f5"
            }
          }
        ]
      },
      {
        "id": "ecf8bc66-5171-420c-bfcd-2b09f54f0fc7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "12570bdd-811e-4e0f-a276-878ccbd5474f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "baecf8ca-5352-414c-b276-59917764d654",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8c7c523d-5181-4ff8-bfc5-4428f2eb0b69",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdca40d7-9748-474f-b1d4-5711192fe2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60eabe95-14ae-4fa1-97c5-c8fca3a362c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d556f62-cd30-4db1-a0c4-2a77aa4322e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cbf47b2-fce4-4789-885d-66befed47750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf47f21-5f18-4e37-905f-dc4256394fcd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2f6066-8468-41c2-9291-fb1890321af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18d2f69-9f8b-47e4-aaed-9f83a4f63196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b416535-11ca-4a14-9341-020e7b8aaf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "411b105a-6b31-40cb-bee7-4447552afb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cff24c-1d37-4493-b589-9bd5e736179b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986e5eb9-70b5-4637-bd8b-1157043a9f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1f3db0-99ca-4752-a281-8c133c73e215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553a637e-3541-4459-b645-9bfd585eb871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89c69cae-1dc5-4f23-aee7-98e478060cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a494cc-0546-4bf6-b97e-ef1c4d28ab18",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07844bd0-208e-46ab-8e33-ecb492b5f74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0d4c99-f930-4a36-acbd-699823acec33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3ae719-2d2a-47e4-aff5-b296f3d4e9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2ec3e54-24da-46e7-b9c2-58714b1bf89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9cfc71-f56c-41d1-ab2b-2d0daa0b0e61",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c71b9f8-6b22-4cc3-8d14-e9f1fa314652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c06cf09-9898-4802-9c53-568af6a09481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6272e32-122e-450f-b794-83ba00ef9e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e542d744-0a32-456c-9101-1bda5e7489ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85500843-fbfb-4b84-bf36-54e2c47d6045",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c082c4-20c5-40ba-a8b8-312132f5d479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f49963-e7dd-49bc-ab0b-2eab6c10fa90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2d03e9-53db-4843-a0f7-51b3cf66867b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cb99361-42ab-4888-ac8b-ee4dbd3f3f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc4bbca-a5a0-4251-9ae1-249957f36e8d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd92bea9-99b8-466a-bb29-ecf8554ad84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fbaa10-47df-439c-a6df-a060645dcb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682bea26-fa5d-4083-8774-f099cf8e0049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd2418b2-15de-4b45-bc19-971f948b84e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99039b2-2017-49c7-9b7f-aadfbff16ae2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba904672-d254-4dd1-8dd7-d28b19251011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcf1eba-9361-4ae9-a567-11521cb35e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8ec001-d495-4f39-baa9-6c1abbe5a208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e5802de-64b4-49ad-883e-dcc275cbf8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacf5137-7982-41b1-96ca-f40ae9aa26db",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353916d1-cc75-4d78-b8fa-e227bf5bcdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51936de-332b-4d12-b1ea-0fe9ff1d0165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80bd08f-0571-45b8-843a-ff6750f822c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d22a10f1-f408-4fb9-8fc1-7ac26d3810a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15fa3af-85c0-4008-bbf9-b138ba15309d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c43094-7b95-4dda-bc4a-db7de9ba3192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee3a190-42f2-45c7-9e69-5e2518541820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb436c01-79c9-4631-91f6-3ae57106645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12b63eef-c8a0-4b67-8e02-039aec88d65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b894d16-8c83-40b2-8a21-928087a556e6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400115e3-8989-4c73-b91d-bec148722d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76cd265-5853-46f1-8f66-7bd83a70a6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a29bad9-d0d5-4397-8cb5-6eeef552fc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "355649eb-3fc9-4741-84c6-14e4fa0bb1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62be431-5724-47aa-809d-f16709a4dbc7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1edb67d-a771-4119-9d51-225e779d85df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0c4f31-cab7-4298-bc4b-d03d3c2f00da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7494f4-4ef6-4d69-8250-4fce398b7164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a439cd88-bf70-4d3a-84e6-3b1739c2741c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ac6099-8774-424d-9e61-ad77660bd019",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aee5dad-c6f7-4895-a034-9519e67cd472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2ca2b3-2d8d-459c-be20-65ebf90bda3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84273afe-aa93-4e47-affb-027c5b1443bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87cce171-fa9f-4129-9bee-d2a3409ab1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c674fe62-f3e5-4e36-8ad2-281d5d5f91b6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a51e30a-b9af-46fe-9be7-6c428e07aabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f86af89-ba7b-4516-a8b0-c462530fc37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee57483-fc0e-4c53-b82f-9db91373dceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7674af29-094d-4dce-aa25-5a0cda3d20b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe2eb45-09ae-4097-82fb-633d67490359",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673e59da-f183-4d04-a654-f6169d2c3d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2774964-4301-419a-ab5a-2bb9dd26c0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231c6a4f-0bb5-4273-900f-ae2c67bc7947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef7f4b8d-4daa-4626-896a-962dd3adb744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e6bf0c-471b-4e8f-9371-568abf304b45",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7f8cb4-e3d5-41ff-a676-08e63e440a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634498ef-4571-4aac-8ab3-dc9f779eba65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692ea8ce-3eaa-4f17-990f-2673272ae7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "230da6cd-109c-4098-8dbf-2cf6e027e975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969eeee1-c885-4abf-8d00-163bdd55e563",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c2fb6e-3dc5-46a6-a649-21af10ea46f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b64968-992a-4cf5-87e0-784aeb13617b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a80659-ecee-4270-b7c8-8b8305f919fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56f22404-be7f-4479-bc5e-e0514ef286b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d091fb7-01f0-417f-a5e3-ea50b741e8fb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6b63c3-c3c6-4634-a038-83a2ee7718e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4689c5e6-79be-4ca6-ac9b-34cfa746d507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24762dc5-ea40-4009-ba21-bcefacf6baef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "94776959-51a4-42d8-9ba8-853c5ca21ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ddeb8a-ac60-459b-aefc-d65859c92cc3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad0bb45-cf3f-45f2-bbc6-031264ecc2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d42fd07-d9d0-438b-b196-535e1d851a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf52ddd-0b6d-4ce8-8726-f9e3c0f92941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc2b30f-8a40-4182-a719-b92398872569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09ee95b-c7ec-4666-8408-3a4a47fac404",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a48df15-8ef9-4771-91a6-0c5074986d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7938d4ef-c420-4f69-bcf6-088b0b4df196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85974431-e4f6-4b2e-af5e-b89fa98ecb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd15c6ee-e13a-4f20-845a-32cfef8287fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4dfb37-11bf-4493-943f-f67adc59ad1a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b02ace-0dfb-4537-b95d-070d20e4eb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387f5096-5a81-4542-aeee-d1e571a36e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134da205-3360-4409-86a6-330fd1d37212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce5ebd7-e5df-4e99-bbb7-913705c9372f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7ca257-f798-4508-b910-2effec1de8a0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651619ec-a6ce-41cb-8792-28f77dcd18bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39273ffc-ab3c-4da4-896b-4d1905ff8d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581de9a-e670-4a53-9b3d-6ef497ed316c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f92941-7a60-4f3a-bd57-ed85c3a3f9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66230555-a787-4bb9-aece-3f36896ec14d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34452be2-a58d-47bc-b458-586a13b74c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912d0a53-7505-437f-99cc-ca70d7da1d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db23812-b65d-4ac3-93f1-67434a4f2084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf71233-ba3d-41c8-8280-67bb019ea41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636cc5b3-1bb0-4cd8-b2b0-4c02a32dfbad",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f07922d-a943-4a3b-8e30-51230c3f98e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dded23b0-ffff-4b62-836a-153a50647bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9525cac-df4a-4f7a-adb5-c20e88c71148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7da08c3a-d856-49ce-9713-e0bc459ec978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bba1b1c-d0d0-4c96-8a69-deef68cd455d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9376f299-8936-4670-bece-e2a6a843b8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676d914b-e9ab-481e-a581-a5085371318c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d73f0b4-6d0f-439a-8c0a-2260be8d7d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "999a043b-7de6-412f-8a98-b81e4c1391f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e131d84-518f-4ee3-afb2-3b8b203cad2d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e514f692-a2ea-46c1-a167-7f930b791806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a9fdfa-39ea-47bf-8adf-d462af091c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8a7784-db91-4608-a70f-4b159647afa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3281d4-0334-4ca0-8732-d5491fb90d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c890c09-3368-443c-a320-92f719aaf475",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7676e48-c397-4334-8123-722d4cdc78d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41831866-50fb-4390-9ae9-90c9260666a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3827d2f7-b742-49e0-bec9-30388407c7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78087588-c281-4597-913c-0430f5df610c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da35e45a-408f-492b-80ca-b552795e8ff2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039989fd-4117-43df-9e36-7f7091be638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973311a1-0c6d-44f1-a330-89d87b026665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f759cec-a74a-40f8-a72d-ea21dcd3f91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6367f780-942f-49d8-b109-809c8036e1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293ed19f-669c-41b8-ac62-0d7a1792e5db",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d8c119-9bd3-4658-8264-c44a2c7b66ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75223b8d-2bdf-4f07-8ce5-77d86ff739b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14300d33-f895-42e6-91c6-0e8f37c67b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fa6cb7-24c1-4be9-9292-f713a4b532d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68667b3-5365-48a9-8bbc-cffbd8ac194a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e308a43f-f301-42c5-a34e-b74b372e41e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6c405a-7be4-4679-b5c8-3a50ea463121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e475338-235a-4b7b-b5d3-34ccf082adba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea39263a-8ec0-4758-91de-675d8304bf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cd007f-b5ed-4742-b53b-cf9c82191986",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0d0ef3-6ce5-4d5b-bd72-c8c3b4d52535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b47e73-6194-4616-be39-de6d8c834240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969e62f6-7477-490c-8829-7d34ee2ce2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6db4b41c-58ee-442a-97a2-f71db62db0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8f0602-b875-412c-8274-ea2d3c5e8131",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f4ed71-ce09-44fa-9847-684c7cb53e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43d10a9-3847-4635-9f5d-b3836e0da3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbab82a-66f2-42c1-b114-1ec8c47dd998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aea8f5b-9c05-467f-8307-77e6f6499daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa8821c-cf16-4152-b8a9-74476814e6d3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3551c2-b5b6-420d-b9c6-e7594d18ee40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5093e732-d608-4012-928a-53cb1a01fb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f08625-a0b2-46f8-916b-36b9095edf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f399fb6-cbbb-452c-955f-1b60010ba0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2b49af-95f5-4136-ba8f-3e529ac0c66f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a609e090-8bac-49f5-b7cd-cd7f80d4e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68be0d3-a416-4663-b8b9-5e5a67ee39b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da827ff-62d3-4548-8f67-7b1329845c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c865d8-2efa-4aee-8419-b12774c5f81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed10b297-5c1e-42c9-92f3-5fc1cdb6fe3f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44070648-d257-46de-af3b-9f7baac2d3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93563856-e5b7-497b-b9c5-5df5ef6a53cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9da1878-535a-46cd-932f-a5dabf81f462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "39584e6e-5d2e-410d-9684-604dcaa423ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77289bc-a0cf-4f95-bfb0-83c79ade9552",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d5ce3d-6911-44c4-9f3c-8b3cd7d846ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "968da289-d7f9-46ab-a7df-ea56c9b8c84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3034e228-52ff-4555-8bc1-9003e19f4bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89f10be4-a831-45f3-a383-d8c320038954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034a3ba0-9b31-4505-9b8a-d71b42c73f8e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa617a79-2728-4973-8a0c-aa82d7564008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1974a358-cb95-4a64-831b-ee347499a364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe7c61f-46fa-49a9-9bac-635bc1c4ac8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31f1c3d6-b216-4386-8245-96f3216b4005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ed7636-6b72-4bd0-a465-10c10e80f83f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb326b0a-973a-4abd-876f-ec6c876204f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808f0d50-cf8d-4245-a214-501979976c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72724a5e-5dc7-44cd-bae5-fae563dc1464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0153bc0c-89f6-4df5-8f48-1215e8ac8476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52882a68-131b-4d71-b706-85d2ce03ce80",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8786fc0-7d12-49a5-851f-4616f032d7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3721cd33-0154-4871-b55e-ee62c1f74909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620e4cbb-ecfb-4866-9e77-b3b411db666b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7295d3c3-5f83-4fa7-bf86-e9a85d65fc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c426bc71-a023-4669-b9e6-de43769329f2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f2c0e7-f4e4-4487-8195-6c530e2acf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f34921-54f4-4f8d-a968-960a22ab39ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff08c867-4662-441f-86a4-981f43b0c306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "016a7899-eaa0-47e3-b2f5-76dcee088a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4870be5-a84c-4573-9ce6-9cfd985d08bc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f861195-94db-4619-b458-94c72c73f6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ed6875-1739-464d-bbc8-1a9beb4fa445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b15f1ff-92ec-49e9-9011-56d99945fd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a852d1-c98c-438f-8dcc-3a04d853439e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6fc7a0-93a0-405f-ac93-ab0452977ab8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f68f8d-a075-4d57-8e95-474af98f9271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61971797-3281-4d84-897a-49e1c11dca9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c0de21-5a68-4c57-be31-c569e35ff291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "45f84020-29db-495a-8659-dfeff0896b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597e26c3-5b54-4701-bffa-297916522e95",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313e7b61-0b7b-45ed-9ff7-dd7cae94dbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf57ba1-06d9-455e-975e-17f237a03d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdd03b9-bd6d-40d1-9925-f1b58461a3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7267486a-ecfb-4b62-b0b2-845614747ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83eaf4eb-9404-41c7-89b9-f9b366cd89e6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5149df53-8920-4109-a84a-ed845049de02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0112f24f-a019-4eb7-a04d-160529225b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ae318f-c2d0-405e-9769-c8d5ce4cc982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "efcc22d7-af74-4644-a011-affd68c7a4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618a6004-9a08-420e-b19e-6a4d75f9412e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2594fb-ab82-4620-b990-c26520d9b8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09bb3c7-872c-4f58-bf0c-d60a11f56ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7874a27f-b7ab-4760-bfb6-a42aa49202d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed3e7c6-9b9e-4d51-af93-332f525b78c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d196eab-6d24-4718-a567-be6e4f0bbf82",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985a63de-149c-46ce-84be-d1d489317f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e92a259-bcd6-4c06-a757-9437ef3eb5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5a869b-2e57-4f12-aa91-575de6b8cfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72eaee80-c024-4572-938e-6c49e3debe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117427d8-0936-4432-995a-b3c79457ba47",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a28038-4f1c-4450-9716-090f2a9c3a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bb196c-c18b-48bf-8bdf-8fe629189854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93e53ea-845e-4578-8717-eab8c2b7ac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6956fb43-9533-4c39-8206-d4f7710e26ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e359b0-353a-4c1c-86c7-22e8567eb9c4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980d0f70-625c-4503-97e6-93bdeed8b354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c15da3-fd41-463a-b47a-8ae5a853392d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef55ec6f-03a8-4181-b050-5c038c1b675e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f74985a-8ccd-4fb3-b9d6-28c6fdd5da62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d0621e-511d-4ea7-ba6b-19631cc12664",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a615808-f2d4-4204-a4e8-58c78edafbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1cca6a-bd47-43eb-ba02-b781025be8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dda34b-0b94-4fa9-a1a5-eb4776b6d420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b398c8b-d287-48aa-afa0-650afa437749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1436d37-adf8-4856-97ce-d8f3e0140069",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c46719-3eed-4c40-8ea0-517f9db4681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d039d1dc-9ddf-4eda-bb48-1ae7390157ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d593951-a149-4394-9942-b4561f0e6586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd88a70d-8129-4739-b0f1-06ff33d43e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bc73b2-4fd8-4d63-a970-5dd3d8af82ca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f752ba-c6be-4766-b2fb-37fc13d0c0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a783ac48-8194-4dbe-84b9-33b94c8f6224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcebedf4-7cbe-4d93-80a2-93105c95d078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "995dc77d-03b0-4ce8-b184-06b055e660e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee8747a-c226-4cff-81b0-4dc81dbf5c25",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda73ad5-0881-455b-9f53-518feb1ec41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05df15fa-d2c8-4868-9803-bbdd4865e2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cde5a3b-ebc6-418d-a361-7991fdcad3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc5f3b8-3cd8-4709-ab1d-8c62561093b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263e224e-eac4-4e99-9cd6-e6a4f25b5747",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4308f3d5-3ee9-4fa4-b3df-020afd958208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f740ec1-1016-4504-bbf8-4b4458f03bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d343d7a-a050-4474-bec0-4a0606eefeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25234fa3-6cfa-4ab1-8e3f-d0f394a42fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75d0a4d-9e26-4862-8644-530da07c3afe",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81364bdf-96d1-45de-8502-65de890aa178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ce8f10-a6e9-4969-9f5e-2796236e410b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a87591-b14e-4d3b-bb20-d7f0684ed712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6205e00-b1ab-45dc-9a97-f7bb8df14c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718f3524-3fef-46c5-9905-d44db3a5cfdc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cb1fc6-c6e7-47d2-a1d5-a6af70e875cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdd84b9-e459-4453-9dd1-684a1702a72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34014118-16d7-4e07-933e-20e415aac6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f29cb2f-d884-456b-a373-1fa9c45dca39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c32d73-32e3-41dd-ae28-77d465d4cb41",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65f2166-7540-44d8-b458-7e7cfd4ff3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9da0b4a-4ff4-4e4a-915e-c4fe4ac10a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bde0a2-a9ef-4722-8493-d8b8aaf47e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d5299101-b7c8-4d6b-b9cd-e73eed5f803f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49ca03f-7ffd-412a-8c65-23f965c45152",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e9e29c-ec9a-46fe-94e9-50e3ef608cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06047f51-07f9-47d4-a5ee-dd4d882438be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8037569-d18b-4a8c-83b6-9c59050b2a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57d32974-5b09-4f58-bf67-dc915eb6e362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2547ce-12a4-453a-a0db-4bcf317cfe1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfcb04c-bddf-4506-98ba-353d21f5819d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8acee4ad-b17f-418b-80f6-9e11cd44e994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0ee57c-8683-4094-afbb-a41c71ca5663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a33baf5f-0593-4146-be5b-69ac57a3ace7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6bf6f5-aa0e-4df4-97a0-dab1c4765df7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b023840a-7fb9-4139-abe8-772842085186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f8ae75-02aa-4606-a982-0afd57d3ee02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cd86e6-e563-4755-aa57-c7298b018f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "34fd66f8-63f4-4618-908b-13bafdc545c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ec48da-0985-4973-956e-fb28fa796ebd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2187d64b-7558-43b4-a45a-564506fc5d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1114f5b-abbf-49d8-8c7b-873eafa3ffd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71a7694-e2ae-420b-b534-53b421025c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0fcb85-14ad-4a74-9545-62894dc251ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980fc927-6a39-43c4-abfe-3d5008db74f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d29fd1-1a44-4b26-a9bd-9f161a596e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66038de6-b493-4db0-9fd6-966397b43091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce07bcb-7b68-41df-b52d-906a806e0fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "55ec4cd8-3d8e-4e5d-8da7-319cd39d24ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10fd0b4-d085-4548-8659-915da6c5305a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588316c3-cf24-4c62-9b34-ce6750c01abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fc8a95-5fab-4c04-91b5-151a6110e844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42855189-3957-4030-a674-cd20a79adbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e689888-75f6-49b8-95ab-48390e9a0fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88950ff-cd94-44e3-a1a0-64691a0c8341",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e873b112-bae8-48d2-a647-96cc374f463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684964bb-083a-4384-9631-f3a5f13b03a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3c12aa-3023-4d17-9846-28908e1c66a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33fa398e-adb4-4080-ad9d-b9c134e6fc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62535c8f-3e76-4660-80f1-d3d99ede2cc8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bac9be-bc59-49e8-9cc5-3fe7ef684874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0b3aa7-5b05-4501-ab26-d2738cdfba55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d5a602-a087-4890-8117-55e10d6e8b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8c09ef-c9fd-4ac5-b909-88edf8d3ddc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feeb468-a1d5-4223-9c6d-c68d75172801",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ae2508-7af4-4f67-b739-8063ad3cf8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530d1283-c2da-4a59-bb58-2a0515c75810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a8eb05-afdf-423b-b7ba-08ee9e9281c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "607e41cd-d987-4ee6-92fd-9ab7f70ec861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a872bf-30ff-43c2-9bec-81f5ea3cd8c3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfe943f-1751-4703-a42d-99979cd5a2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4824173c-c1a4-49f9-8ee1-63b28ad6eff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce76103-1bd6-43f4-b452-08e3bd4b1964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4233288-c7f4-4dca-a3bc-8e23416ea3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a267d139-566b-4cf4-8d14-2a46bfcba80d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c412ab2-9e39-462c-a17d-68cac3744934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a10844e-af33-4457-8465-f31e6b04d134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff24ba9-5bd2-4543-9f67-2c352ccdc941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa5e587-94cb-4735-8786-e903aeb86d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7becf546-7de7-4440-9463-eac5e317a5cf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a8d0a2-0874-485a-acf8-a06276199bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11535f1-b7da-4026-bb72-c5d2fb2d2c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c46ee4-ad3a-48bd-b767-8fbc17651476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d0b310-d9be-4074-8507-cc1f8f3d01ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3ec038-91ed-45ed-8225-1d8d5fbf3f91",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030c389a-d1f5-47a6-b370-a6faa55ed7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b338d72-34db-4b3e-b40a-33189c94ab33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7cd183-72ff-4d0d-a1e0-e1d511df8ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f1c234-de0e-4d70-b844-d2f3fd19bc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081e1c58-1843-4278-af48-d5f20b102cbd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497f5ce3-4b08-4405-aad0-3ff575f79ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655d423c-b7fd-4b16-89e3-eacd0492f110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5359f12-d406-4db9-9096-a1d2907aff15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "def4a59b-99a0-46e2-9a84-6eeae340613f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba1d5de-dafb-4891-b785-662c84303c1e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4de2b5-3a02-4879-92d7-c9270bbee999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d8d381-1d20-476b-831e-7023c122cae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b7c349-a6b0-4728-86a6-196182ca7545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a84a3b-fd73-48c1-8dcc-268796b1f3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ae7bd0-5424-4ebb-b456-d4725d968363",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2faa2de-d981-46cb-8910-21803aa04a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529569cd-f360-4649-86de-6fa9761036f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17ce67c-8180-4662-a6b8-d31a26c0b654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bab689fc-7954-42dd-8e6a-1511e1540dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcf1312-1416-4950-9e02-6519fdcd46e0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f05db4f-4367-448b-af59-eccf508dacd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfd713a-d341-43d6-ab64-c98c929e43b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955c98c6-168e-44e9-951c-07731ec68ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e80f916-8815-49bf-85d9-3f89b4a70522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee26fa7-273e-4122-9239-b1adba0a83e8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e83794-6455-4a05-b008-af9784496afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5079c927-14f5-494c-95f9-8059e4d8c69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9a2d8a-d7b1-4329-8979-bbed2f9e4da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc5419d-4248-4851-a34a-fe43de94d559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5393a57-e0f8-4fac-9739-69787ccd800e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b341613-a7c9-404a-b8a1-15877160405f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f3a254-5c5b-4ff5-9242-5f2c752b6377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e9bc15-57fc-4d80-b906-29368a6766b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaaee9ed-daa1-4abf-82b1-c4f05803b195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ac9685-3ff3-4de8-8d0d-9bca9852622f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dffab18-2dfe-49b5-98cd-07337965737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d88814c-ea2d-40e2-8d0d-67ec5615076d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6f5f53-9811-49c0-8f12-d1ec87ef226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c4d213-ced1-4c81-8be2-6f0c7a9189da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686bd87c-5dfa-4a83-b415-1e5482d72a06",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc43bfc-9eb2-412c-9cc7-07c6c360c550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e35451e-397d-4678-a01f-a615f3964126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2f942f-33a6-435d-8cbb-83314329bfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4603fb0-5827-48e2-9335-dc88b1106bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becccb5d-7082-48e1-a1bd-f02b3606563a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328fd2b8-18be-4020-a42d-4c1c146c40d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b915a113-63bf-4814-8b79-dd046193498c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d4a69e-c42b-4d46-9487-be9fb8ed0ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44dbe7d6-a4e5-4bbd-baf9-7d7f21ac8d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec7ae98-baff-4daf-9355-0666333a67d2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436e8440-132b-4a93-8336-debe3d44b65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27057cf0-e92c-4bbf-aef7-552f0c9ba952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55439fd8-8f03-4e91-972c-b9fd54f4642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84c07fbe-d27c-47ca-adeb-d1fa98ee50c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d379f97-e38b-44e2-8ed5-4241fe313b60",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824d434d-e0e5-4d2d-b8f8-d7e98d33d12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62cb758-bea5-4996-90a3-7557e72d9f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce33fd8-a357-421b-8822-b430c7a1ee8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c98006f9-134f-49a7-9f51-090e3d4b3fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d5c987-577d-48fe-86f8-50aa4087cd27",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45de420-482f-491d-aeb5-709879c426fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fc2944-7ce0-4a4b-88c4-6f69f08037e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d38fba7-e850-4329-b9e5-a3d85186862a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e63fca3-cd78-4172-b6c0-ef67bb1eb9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fc188a-1b11-4229-88fa-dccf544aca61",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff03d40c-4007-4560-bec6-bcf67452dec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed77806-0fcd-4adf-a1de-b9436c37977d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6b3196-2ed0-43fe-900b-3a351450fcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41fe04a6-cbb3-470b-9f7f-a676b49f495e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bee347-293c-43ed-b87a-514dbf97fc28",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821d03f0-5286-40cf-8199-1b92ac8105d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5c271a-d7af-418c-9e03-72feab1aa48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7228f109-c125-458e-b4f9-0be4fa51ccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52755b3a-caea-4122-b999-b048ec8e26d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c79eb1-0504-4d41-b8fa-f26a7f188ca5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aa0c54-a948-4f66-a19c-e05ca6785fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add59e45-7824-4f43-9b9e-760c5489ffec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf167e1b-d216-4380-9b94-8877b432ebcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f46929e-b15c-433a-9c19-2144f063a735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8223f2-c6a7-414a-81ae-89ec24cebc30",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c441608d-481b-415d-a52b-a2c41f9ea5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0897ac7e-423f-44f6-9dec-52998308ed43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d22fcf-6c3a-4c8b-ba81-231e9e8e9c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdc5dae-7f5a-4e80-a7cb-7c134dbc54fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb15d9a5-9302-4a4d-adac-adcc554e1024",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2e2bc0-436e-462f-833a-76ba550e0f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ca26b8-917c-4794-bdd4-4a1dddcd3443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8228aab5-25ba-4dc8-ab02-40f4406b804c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "230d6809-81c0-466a-a67a-2bd1bf7146d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf24d592-8a82-42bc-adc5-53c8460c2846",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc98733-8c01-4d1e-b097-cb5a8e6417c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39f00f5-c386-499c-a94a-20554e2f7547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7f2c71-cf1a-495f-a30f-3b85c516cf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "28d60f91-0d56-4ae4-99e4-9dbdad37157a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfcd06b-26e9-4d11-8ec3-cf719b82e488",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1391b0c-2c31-40bc-966a-9359c865c530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c33329-96c8-4851-a659-b676ed407f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d25d6b1-9504-4c83-a235-9c2e966c5843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bcb6cd6-6524-4fba-beff-910a0382abf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f79435-5da6-4491-bfaf-318c6470dd4e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a888686-31e8-4ef1-ae1f-0c34cf7fb6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060921ea-b65b-41a1-85ac-9823e89a2596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2790ba-029e-4525-8902-7e35b981fee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "261e18aa-9efa-4954-a11b-40dbbab6a292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270e2956-d02f-42e9-bc8f-dca934ebc88c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935e8724-ace9-4807-b1ef-15afebf6e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d569ae0b-8063-486e-8cf1-fbfddeb429be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47dacea-f8e6-4949-b11b-7fa3b2adc4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "903d81c9-03bf-47fe-9439-e1a72fb7d967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cc24ee-a477-4561-9859-5f23002d8f23",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d808a82-b5b2-4d3f-9717-ee09136e2b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239e8a2f-cd51-4ca0-a6a1-fb3c8059c227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54d5391-0a63-4247-891f-af6092daf300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1538ec-d877-4c83-9b1f-a6a2faa4ad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b22cb0-36f5-4718-8e5d-1587ba7ae6a3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ab020f-59b0-4063-9b08-c804d69f9c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "849d0e23-1d58-487e-ae40-808bcd99d16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8095dd21-cba0-4801-b5d2-117918e51c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "56b129eb-33c6-422b-99fd-720e97db8efb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d4744b2-88ee-4b6e-8f60-6f655127d731",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d5f5492-ba8f-4cf3-a040-d2bf5bd139d0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc9637b-36bb-44e6-ae0e-f0d862445684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "140209a4-d2cf-463f-ad76-ddab7eea72e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a422824d-067c-4444-bdb0-a07aafbd7cb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c38f2f4-289c-40ab-8401-8d4983f6c654"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f19f4022-e279-4b00-b6be-37475169f25d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecceb849-cd1e-445e-b8af-c2421dc39b4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c11657e-e76e-48a9-a3f7-7e7b33567910",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d3e45b0-ccb6-4bcd-bc3d-f1a778969199"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71f4232c-7e8c-4379-9d5d-e06ea95cdd48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0488c32f-1075-498d-b757-1d35410177a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "964bf5f0-a982-482e-b6ab-85f5664e6bd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4cc3f8e-eb93-459a-8534-d93a68d021b1"
                }
              }
            ]
          },
          {
            "id": "43a1d38b-e1ae-4e2d-ada3-6260a459e8a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5623c9ad-c2b8-4529-bc96-260c55e23abe",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "42cd3687-4f61-42f2-b247-b67e87f24919",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aa810d-c3a4-485b-8dea-9ce67402abfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ed5242f3-e805-490a-a966-9562e76b5841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c074626b-bf4a-498c-bff8-6170b15e13b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0797c3-716e-4bbd-be74-dd57e8adce99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3029acab-5658-45b0-9633-dd6ba071618d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d250cc75-91e8-4d41-b403-399a5f6b3b05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb91cdaf-6fa7-4b40-b9dc-162327059ada"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14baa3a1-4638-4ae2-8046-19c6c4c68cc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b90b3e2e-07ce-4d75-9220-3ada5a2d7a96"
                    }
                  }
                ]
              },
              {
                "id": "676140f1-15d2-43d6-acb1-f85a4768cf5d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0708653-ff61-4aed-8167-b8e5cfe7f12a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c1045d8-b3ce-4e98-94b4-9977eba787c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2f7e3dc-3993-42ad-879b-9b925263b8fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cce85f42-e3fe-4feb-8be9-32fb4775c0c3"
                    }
                  }
                ]
              },
              {
                "id": "e4ea443e-b759-410e-8939-7c1336045e85",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d5e612e-4b99-4b01-8cd6-64b656b746a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d89081f0-ca26-49f0-9406-349baa169c61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce70a5e1-7809-4552-9795-1ca1fa543277",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad2d0047-2e40-47bb-b451-0d9521c4f22d"
                    }
                  }
                ]
              },
              {
                "id": "510c1d60-cbe7-49c3-8d49-264c558dabb4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a1ce4c6-c934-4598-8012-062ffdfda4e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dbced34-725b-4cbf-acc1-d8bc6933e043"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa4df236-e495-4b52-b9f9-a84dcb2c65ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9b60f54e-9a75-449b-a662-174bb46bf26d"
                    }
                  }
                ]
              },
              {
                "id": "cb5335f9-7b49-43a4-acfa-ddc19c599d6e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fb70f95-1094-4e71-8bc3-9eb8442846c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "368aa943-58d9-433b-ba7a-9eceb02c399e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6922697-5f81-4c69-af9e-186ff54c74a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5d3e4421-837d-49d4-b83d-054101f7e68a"
                    }
                  }
                ]
              },
              {
                "id": "77842b42-3c11-426b-8970-bdc2d463b43b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43a82582-59d0-4116-bdfc-10e365dc21c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e67b5393-a269-4b1b-8c4d-1bbf21f53185"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e1d66e1-3e90-4c0e-9d02-7ab7d30b2a87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c127446-27fe-4318-b388-c7b7a72a3780"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dffcf763-f608-4718-983f-7fb5fff9feb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44947074-74c7-437a-b78a-8a68659c2c5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ed5c443-2eac-44e8-8c4e-e4ea65f62d63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d54c5419-7eee-4345-bcf3-6db94b7c5419"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ca8c4e7-abfe-4125-a061-ea3bc1962dba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "db5fb5d0-cb96-4af0-9c40-58a6af6d6703"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ce05895-b2a9-4835-b030-a90a12f47956",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0222326a-e79d-47d3-81ce-583bc6564d27"
            }
          }
        ]
      },
      {
        "id": "bb8adaa5-fd29-4996-b780-8b47bdd5de4d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cf6cb60d-34f3-4d2d-8963-8261554e54b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e666a7e6-898c-4ec2-b580-eece88d80446",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e5335b3-e9ed-4093-98b7-47991700bc14",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677147eb-7c10-4cd7-942c-c9155e660d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81dc816-7da7-4346-900c-ec3a1be4ddc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0824d36a-914e-4787-bed6-f910df233e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab5adc3-b51c-419d-9ccd-acfeed5501b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d46e773-b4e0-4c9d-b5ca-8346ffdab100",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1271375b-f300-4ca8-bbf3-6048f8039057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2594520f-1634-47b4-a388-03ce56ee9821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1b4bb1-9af5-49e6-a6a0-9a3745e6d07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f564a57-45e7-4544-8b0f-11f4ddfdaae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e3086f-e0d7-450d-8305-760cd0eb33c9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250a82dc-6a88-4d18-9786-aa34d00aaa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4264b824-8fac-4576-b0de-a3638aa4e06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c730a1-6d59-49ba-a6a5-d20ea774bd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe45fc2a-8f4f-4ddc-8eab-d1f6ceb63e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285bc9e6-be66-4f86-ac46-564fc1056f0d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f86207-84d6-4efb-bd76-ed27656a86a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8588c4e1-9666-4094-b0dd-6e63f0ff8802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a6ac51-b213-41aa-a5de-028bd3ec9433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "963e1624-c59d-428c-9ca2-611984552df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4a330b-3abe-461d-b74b-4336309d7073",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b60ec15-1f14-4833-a7e9-d9ed42d68902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2ccefd-e0cd-4a07-b68f-e23cddbaa709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8156825-3cc0-44d9-996f-c41427344576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca6f142-2f4b-405d-98a9-6ba6922e36c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ac2315-663f-4f0b-a055-8252b25fa8c9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c90b2a-3dcc-423e-813b-7d7247d5a15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384eb6d2-bc80-4ad6-bff5-348ceaba01f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8e43b8-5894-4fe4-afb2-f5716906fc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c191e1ed-5303-4143-bf33-d3f3b533ca37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874ab5ac-5ec3-4e9e-abf6-8448bdb822c2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3575ef9a-1a30-4029-aa7b-c79a626ef097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c94a22-cd74-4d69-ae36-6920768b11db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300905bf-9b5b-4e56-a25b-8d16ff4ec209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a10643-f75e-4ee2-a07b-82e1b4f320f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e3a1eb-147f-4ba9-8278-629f74485f8b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4250336a-7617-42eb-82fa-d48141714fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc10b8e-9089-4724-8890-607d15ece63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40037a8-e3f7-4ae4-96b4-6d09821145b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3feb73e4-3060-41d4-bc69-52eb29809225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08791fb7-68e9-40f7-ab0b-210291de54ad",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9a2b56-b16c-4ce7-aea1-7341164e1889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41702432-d274-4309-9e82-8d9ff92f3132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe71ced7-4207-47ca-b2e8-314800d1b382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc926736-138f-4ea2-87f7-1098d31d0928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360e20f9-a010-4677-8b91-a8abacfe0f76",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a6f94c-542f-4b0e-88be-04e90cca8c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a76af8-1abd-4c2e-9961-a6dfdea30025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9450b2e1-ba6a-4182-9892-64d310d726be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3512d1c6-ad4d-4408-8de6-a5c898d9a59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927e835e-2e71-4bd9-a2c8-35417afb87b3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd7bfc8-4d35-4873-bd48-d11af70b0567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523c647b-bd23-4d96-9752-0d8790efbc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61af0b94-4c89-481f-a38e-57d9a055ba31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "29228112-9f57-4876-9a4b-89458af7e97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece31b1e-7bb6-4b23-95d8-ef119295b5ae",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3a90ba-c9bf-4287-aa6a-0048b2e6f255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6a9895-6932-433d-ba54-877a6e53e76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b511931c-f7f9-4258-8e7e-a2d5bea08d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cecf0df6-d1bc-41ef-90e5-05516b9d7750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3454f5b9-e310-4b5d-a527-a46617343a4a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d4cbaa-82e3-47b6-b06e-156be04161fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6ac865-9bfc-4d35-9a5f-63c26fe0b2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de023b9a-719e-4bb8-b70f-dcc698b9ad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a21c5a50-f4bf-4922-aed3-494074111fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3918cc9-0a2c-45ec-b822-dcc2533ffe96",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609792f7-ecfb-41d1-9479-4828ff4a87e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f399057-62cb-4aca-b885-e04c4fc7d094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1343a8-8214-4f8f-a6f7-85880f7b3cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35ec4ba-2978-479a-8cd7-17dece69ab1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4898ec52-0a9d-46c1-9daf-cb608cf7ae42",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78619f83-7904-4c7a-8117-b4df1531991b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1f584a-06ae-4104-b422-a8ff063321dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e778655-fa10-483b-8711-fae1fa15fe71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d22101c-8cd1-4fc9-9e45-b11bca8d2e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45397e5-817b-43f7-a226-a1b28e4c53e3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba5dfcc-2f9f-43de-9286-ab32a791ddf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4161428e-b2aa-47ab-800f-089bb45e720a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97882f99-8a7c-4d56-bb6a-f4274de31ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "56fa0047-5434-4f43-bc74-6f1907702d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e6ec9a-c143-431d-ba22-6541c2d39643",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32748d1f-cdd9-4e0b-a6c1-c3d29ce842bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1f30ad-1625-43e9-9660-9a77485be959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c790fb4e-dbd3-42f8-828e-5e773428e3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "874b0cb8-12fd-47d5-a062-96058af525df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5856fecc-7796-4760-9557-5c0e1b9ed947",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b63edf0-c7b9-429d-a68d-6987300779fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca8fb61-49b9-446a-b3a2-89ea3e3914a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7628ed1-056c-4e46-afde-ef426acad2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b41083-2075-405d-8a19-aa61c44887a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaa1c29-44b3-4819-a230-d48d14e0fd04",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb71c12-3f50-4249-a439-75e2cfada092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab5b2b1-2bee-4dd0-b1a2-559e04c31e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9186cd6c-6a41-44a1-99a8-7de6bc0fc43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55afda86-26db-4620-b6ea-98e205076ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e08a5d-369b-47be-8403-a2e6a361f360",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9247aa1-44c5-4126-9ab5-d503e2844843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d68262-7543-4672-8fb0-b2b725f0028d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8012c6-d1ba-4bca-ac16-a3b6ec3232d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d8b04a-bb62-49af-8a13-957e63a25c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ad05c2-e4c9-4f22-a292-296955e67c2a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5892bdd5-34f8-431a-b618-6cd3b8bbb253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb42d17-6a72-4bc9-b26c-bb9a53f85723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d533bf9-fb95-4fd6-888d-08afd95b1363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa13be4c-3ccf-439f-9395-734eaca03eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f0010b-1643-4c12-8c60-f2991e28f3bf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837d2771-0280-4980-85b7-1ee1416fc999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db29829-4c80-4e2a-b7b0-aa2169e446c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bd9863-7eac-42c9-aba4-ae697a2c377d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9996d195-3dc2-4ddc-a118-deefd1328097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fbc22a-92b1-4f5d-8468-2a411a30506d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a918c5b-18fe-407f-9c62-903e5a1b707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65025990-6654-4703-83ec-a5ac8edd5d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e804c41c-91e1-4d91-9a50-4f1c55214250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8865e06b-8df3-4229-8118-53b459a9ed2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14eec6f-d5de-4db8-a1f7-14e71bb6966b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ac1774-6390-4caa-bbb3-ef35ec3aa3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671d7de0-e1d4-4326-aa57-742431a178e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a620b8-10d7-494c-b451-606f3aa11759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "148108b6-6e4d-4029-9f45-0d4b2e676d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25c472d-c305-4737-aea9-c17ae2f31457",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424c3a02-ab66-4dd2-8d58-84024c945fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26421be-86e5-4d5c-9938-e85c32ceb307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b6d6e1-686a-40df-b5eb-8973a0479344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9084f8-4aca-4971-8154-c2787b4abf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce436d2-9662-48bf-b4f4-05e44b8bfa4d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2d7e56-90ae-4235-9343-71bb21a7ba77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d37a778-760b-49ed-81a0-6cf68fe7cd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6a5881-3e5b-493a-8a84-c1510ed3bb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33bfa7d-5d4f-4b61-90b1-8600819a29e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562e30f0-3a84-4dfe-b701-dfce59306f96",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b01eabf-4c2c-4073-b0ea-2ab3fbe3c223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f26ff6e-8a63-4a05-b8fd-d62427c63bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87a544d-1c50-47b5-a1cb-c58edaa2b854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ad6a78-a74d-418f-b412-d32ae3cac464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c1f0bc-830d-44f2-929c-ccbc0cd28df5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c001c9e-90e4-4f02-aecf-9f9dc8a57ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbb2f61-7285-4471-9813-5b11ffa5d14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34452943-f31c-479e-a8c4-bb271e82b0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed9391b-9edb-43bf-bb76-18dc5ed61527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b42a61-76c1-41a6-a0d1-3bb0d5213898",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b16373f-d230-49f3-a8df-af2937e4b459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a108e12b-5170-447f-b500-0ccd274dea57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f473c28d-f37d-40e8-ba7a-e9f0c0f3ee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4297938-ad73-4ebe-a79c-934f64475fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d0b340-4a41-441a-8990-5882adeae880",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18d84e5-0ecc-461f-929b-e665d624db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c3979c-c556-4b61-9e10-24c8c3258eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5422fc5-d85b-4c76-a507-e3d29a0f4a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364c7ce1-3c53-41b9-976d-8652bc9bf356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273320e2-c3bd-4446-8e22-eb5f0fd11c2d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885651c8-1ae6-457b-891e-d647a7f55bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d8edf4-373d-4c00-812a-504a73e4e3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e18e7b-080b-425a-9be0-8b47dd7fcc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "074bbe46-52e5-4732-b64e-a3041e4b91f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb2064b-16c0-4c6b-a0e4-fe570f8d64fb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b203379c-2d89-4929-9d24-7414b14f3c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4f1adf-a90a-4d88-8a62-be7eec89ffa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58651457-ae23-4cc0-b0d4-01525e5e3e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "152db6f3-7bc7-47ad-9e80-5ee530176390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c65cf2-d4b1-4eda-b58c-82ec24e1eb36",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06db94e0-09c9-48fa-bce0-7deda9ac2fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d064ae-cfd4-4d92-88d6-a16a85a55814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9abc82e-ec2c-461d-9239-27d97e58dc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ee3c80-c69e-4904-95a9-1c832dbfd8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2152af-a1aa-41a1-84d8-61932ae503f4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3b016d-7b6a-4d49-9a9a-a469be01daca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bec3f51-24f4-406a-bdae-17438fb7516c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f7f03e-f766-47a4-947c-72951a2cd3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b316328-2a0c-4a51-be1a-0d7ee5e6018d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e552854-1d08-4e4d-99a1-020641098b53",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec291c3e-f04b-4ff2-9df9-49ce3a8ffa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c174f40-2a46-4f2e-914e-3380853449d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c70cc4-d21f-4cb4-9e95-ce4e41d70798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a375848e-69c2-4522-a706-961cbca38e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8440a5d7-bcb8-48b9-8663-705289811dff",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e76be4a-8e96-4805-b316-d42df9e3e17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdae6bc-2ea2-4b44-8050-591e68fc4731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6319de3d-533f-4e86-b927-9446d0eb9891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbe2148-08bb-4bc5-96fb-a4033813c19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67930a6-116e-4af3-9c32-fa900201e278",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1747392c-f924-40c7-bc2c-78d9165adb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b672288-1cd8-4f08-a225-b380cb6a4897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b1ec85-e458-453c-9d4c-91963cc584f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1007a798-0d16-4c6c-9f6d-3c5609752ad6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0a2264d-a691-46e0-8d37-98fd6fd2e4a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f4070f8-07a3-4946-99ad-11bba58e5fbb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddb6524-0ddb-4f48-865a-e8bbdc6b391c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "274a2a1c-9028-4d4c-96ae-4c4a03809694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e988b3-ec69-48c1-a503-9c7f14ad2f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc5e9260-878e-4ef8-a2ee-66604ec036a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4c8e11a-d65d-4fb8-8bd7-e646506c2725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d72d47e8-ffe4-42f1-aef1-dc01166bc18f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f006ba0-b861-48ac-9126-e2463425118b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "387a8d71-d292-4f55-a0c1-29dec975e8ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2907fc79-702d-4eb0-8104-f5bba6669e0f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06a9efe2-8871-4c35-8994-4a8ba77514a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97702796-bb99-475e-9ebc-f0eb04253a45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7a92c71-67b0-4811-a5d1-865ce1ee2867"
            }
          }
        ]
      },
      {
        "id": "d8526f6c-c8a7-4692-8875-b70feb65a5cf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "658de833-9370-4c29-ba22-acca84016d0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61f45ae8-d1e1-4a4f-a2aa-82fa2ebeae0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b5ecff6-344c-4cd2-b2b8-b62e6516d076",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a7c5c2-9e76-47f3-8f00-7d3b559c8261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0562c4-44c4-4114-bf85-227a11802f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d729b2-0ac1-4212-80e4-b4579ffc16eb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4c6a6e-be25-4c60-9aaa-dcd66fc76822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e33850-019d-457a-80f4-b2b17cce2e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf438e8b-775b-40b7-af95-f905795edd7e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9210aad9-1524-4c1c-8e82-3609b179be53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6268489f-6f49-4418-bc90-a1c4ea438d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ebefa4-74ef-456c-a670-368fdb3603d5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69914d5c-0e25-4a82-b51f-73b7f5785b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ec216b-d6cd-49f9-ae8c-7c9629d2b745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c42031-ddb0-4b39-ae14-7b99c4d92f62",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411baeb5-0873-4214-9990-fa5ee935dd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9c89df-8811-4f46-a874-189926c3fa58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0be84e-25c1-4b3c-85df-3c63843d49d3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40381005-ee1c-474d-aa3b-01f222aa88a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83c97cc-1f96-4cab-93ec-300faa53bc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a6f7bb-d701-42aa-979d-8dc418768e4b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2caad5-e733-4293-b238-29032eb2923c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a96d7d9-9817-4e88-9d37-848f718351dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c9ff79-ae3b-4654-be21-f9b0f5c70490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c849c97-09c7-4b9d-b143-387f3b0a6e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70d331e-5a85-4568-bc19-21091715afe7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daf8975-b16e-4ec2-81d6-e23008a63099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f35ada-9215-4ffa-9f58-7cd665d89040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c83f2a2-bafc-45c3-ba9b-ac7ffbbf8b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ee65b9-f392-47df-901f-806c3f916542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b402e2-2d07-4f08-9216-b6c88065bf50",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60d28a9-b5c8-447e-a5ae-b105a7cbfe25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e43d5e4f-147c-40b5-8cdf-0b9c0e0a20f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423ef92e-fd1a-4c8f-8ed2-613e210c72a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1cbb0f-2516-436a-9967-e1f55933de55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e46a4b6-4432-454f-9670-12548e362bb7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f828125d-ab70-46df-a5e1-b7506d4fd26c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d28dde99-3ea9-494b-9601-f1bc65dd33a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69efb1e7-9907-4b4f-900c-026580570429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8157a95-5e66-4f96-bc1f-f995319bb9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df6c9eb-93be-4ef7-8ad0-a6df1fd9ce6b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ce60f5-5b4d-40f5-b56b-eeaa706a0bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3264b7-26bc-4519-95db-299617d3e64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2273f3a5-1b13-47cc-ba3a-7ed04faafc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6cec094-3a2d-44dc-aeab-bb81c0feff6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cac776-d52e-4d1d-8513-7554a80af659",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd027be-ac4f-4aa3-8c78-19dd05b42875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8256fe-cd38-43e2-9053-033fcd59ef0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea13b376-56bd-4792-be89-df922186a207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df255404-eb17-492d-bf1f-ebe7e2aa9a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fb8432-5076-4a8d-a8d9-d5a8b6b7e803",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3122b81-6a3d-4cea-9a77-8522531bf678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d1e6b1-c55f-40c2-8490-f5fb5a478ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403c9dd8-6239-488a-9eea-6b3c864d2470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0175df0a-b061-4408-8401-dc51ee2ee2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5523ab6b-9364-439c-a9ad-cbf4d25e2705",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a25f5d1-57ec-467b-bbf1-e9a8bc1865ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c6e7bc-7f60-491c-894c-e136833f2990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8136f80-0a8e-4862-8db6-0aa0f622892b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8391119d-05d4-4f4c-b6c5-017a90a1840a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987d1229-8574-4d73-b926-442078418dd9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d851864-8ac0-4170-b3d6-bf8ad3e4b3c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa797f05-fd85-45c4-8381-a3849cfd7ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd220c95-230f-4516-a925-cad396809533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8ad766-5ca7-4861-ada2-12cb129b3cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4167d50-2899-4e9c-8ff5-075be2f70ebb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65795c13-0cf8-40e6-82e9-2ba78031dcfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bca2063-d4b0-481b-a164-c706e9f29479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea98ede6-20ea-4829-8679-2aadca75c219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37ee720-179f-4912-a73f-044537467535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88310ea9-5596-45cf-9be7-8586f50e1f23",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571d349b-7728-410e-9153-0465fe0a9770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b955966e-d1f6-4977-9af7-c9d65e88a83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988aeb50-33ae-41ea-9993-d874eb90b0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674517b4-0900-4ba9-854a-5b3a35d77d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6203d29-0e9d-493e-b32d-9d796449b173",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3f9583-a705-4028-ad6a-ea201e1aa028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d74929-7f05-470f-8782-b4041420182a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00afdf41-0b6f-4a66-9f63-701ff5dfec1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42f9c52-363f-4c06-98c7-345512e6840d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee55cccd-7195-457b-88f6-1cc3070dd367",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fef43a-4957-4ad1-81e7-c9f7da7b8ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374f3afe-1426-4f3f-a885-b744a00f714f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4e79f4-1c34-4205-9ee8-7cfc1d046bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0da27d5-9761-4471-9431-eef405b0bcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b604beb-89e4-4ee5-98b3-29c52b7061ad",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b62e5f-85d2-449b-a0ed-114636113feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b17495c-cb29-4db1-9791-7624c322516d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fe0806-0a84-4617-8538-5c9f976569a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec5ed82-7ec6-4b5e-9be8-c09fa365ad83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bdb0d7-55fb-4cdc-8218-d34a5d43a78f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b958c6-41e2-44a8-9d72-5da900eb14cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f004098-7d5e-4a35-8ed5-3cb5fd583a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b545a2d5-b110-4b8e-92e4-2211d1155435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8c60f7-a1d7-4cba-ba78-704115b0beed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd6837d-fde4-4654-9f84-ab120e62d921",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b09092-6b04-46ae-bc58-8687d61d2075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84251d60-97e5-4ebf-b423-c67df67aedc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588540eb-8548-40c8-ae56-13ba16a282ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e49957-8561-4094-b9c5-b23259f84b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2f34cc-12e1-4336-a97b-9775c7acb47e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340b34fa-bbd0-459d-8bbf-1b1a8c295e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4a0171-fe14-4d7e-9d6e-47dca8f52b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7305b0ea-a58a-4178-9f29-4806d9d06610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb49fe9-c516-461f-9b32-c5ac2727c5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5029008f-4cc5-4b39-9053-e3f5d81ec3db",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1766b90-11ed-4556-bcae-87291c4ec0dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48add090-d447-413d-b352-34e98c892f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fff083c-a05c-426c-9d64-0e9a2a0be16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a139f2-6f17-4e23-9df1-dd3d4c3da0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6026b613-324b-49db-9469-807c30ed5437",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8156cd08-aac0-4dc6-8629-a964591f5575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3251a8d9-68e5-44cc-9403-c10c965f1e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3529d184-0911-418c-be5f-54d33306cd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ecea2f-70f3-469a-9ee8-bbfa8a353ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1543212-e5cf-4407-b682-8ab8c087633d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607c09aa-5f43-42db-a1c6-7530260090b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f733d6e9-652e-4477-bf82-ad3c60c8f92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfea5471-78c7-496b-8731-a4b243be66bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8128f5-c0ff-41d0-a32b-5d94e1d06cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fa14ca-72e8-4822-9831-a95f516dafbc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9179864d-7c02-457d-8e1e-305309559509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8aa46a1-f5f3-4719-a0a8-1432296b846c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c081dc63-bfac-4103-a4c0-c99fcb16e2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75979ebb-4813-4814-9880-2170bf3271ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeaf2c7-8343-40f9-bb18-ae0983ac632b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b558ec7-0cc9-4546-a786-64e6b9785321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9727149-246d-44a5-8737-a10cb85583f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe2edb2-e9bf-49b0-8c96-1a84b4f18d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef05aa2-90c2-4874-bc83-d141b8bbb45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6861f6f2-b83e-4523-89b4-5778c7cb8444",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db501fe7-2c9f-4c38-8ae8-af14f6668c1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f32d81c-38eb-49bf-afb8-06e5a2ba2fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942cfcb7-efd0-407e-8363-865d94e6ca44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f7d3ff-4760-4027-92f2-dcf1b3def342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd7eb60-a46e-4827-87d7-70326bb36a1d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fabb221-c6ed-41bd-bbfa-b58019e991e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ec4554-ecdf-4219-8d47-55c37968602b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970703fd-b2f5-4c04-ae11-fa0bf499bfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcda5f03-0e15-40f0-a29e-ed039ef11a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1013d0ef-e561-44f6-81c7-439905e14a50",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2343322f-464e-463d-8d4d-5b547c563510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af2fa699-bb4d-4696-a844-b78437df03dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5104658d-d95b-46fa-bc5b-6220ac6a13f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4340fa0d-ae1a-4470-aaf5-9ee59f7929e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d38555d-ddf2-419e-921c-966858d29100",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754e9f33-590f-436e-8678-53788dd5aab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da263bf1-ccd2-4feb-a739-41945bb45937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941aafca-3f3b-48d5-920d-d20838780a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c46a8b-2390-4d82-8a4f-de4423b187df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf90ba-a0a8-4e6f-83b2-375d3f460c21",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b34cfc-4f44-4822-b277-9a071b8bdafa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9921bda5-2426-40cc-8fa4-985a93378c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f95063-aeab-4103-8cb3-042028b4bcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a97cb4a-0a52-4dfb-b687-0d141bb1ea4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39426b6-ed8b-40a8-a177-e6c1938d54cb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6ac295-9893-4921-b476-d1d80798f02c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b241a8d-5464-4e26-bba3-7d52057453d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a26558-2f67-4a5e-ac04-3c058af2f1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43de48bb-0000-4698-a233-5f062e3d9914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309624dd-ad37-47f8-b567-72855b08bd48",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf27391b-695e-4539-aa27-22732dbc5d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dce288f-6754-4bab-b427-fd3071f17c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed44b70d-9df2-4ec6-b346-1b6816bc5920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a050744d-3d7a-4d69-9f66-2b51edb086d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dd3f5e-b6aa-4b90-829a-3ddeadeb1862",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586b2613-cdf3-4c21-9f4b-3c4d96447309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5329ec09-1a13-4ece-b00e-ce13de653d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbaf8ca-e8a1-4fad-b9ae-f49373b01b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df9ea3e-a2e2-4037-aea4-d9ab673cf37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b5a57f-1eee-4a79-b7d6-e6ad4686f4a8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee08819c-3f90-4d27-a613-09f6e0977a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3a49cf-f6b4-4a90-be47-5eaa294fc514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da43a45-c714-4ba2-9e08-ca9d1a984de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5d2ad7-97bc-4332-964a-285987f9ee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1568a01c-8b64-4f7f-b7b9-abe18227f478",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf2d6fe-3209-4be0-ab5f-0f48831b16fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ce75a5-9a57-46b2-960d-f47f6be782cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bb55fe-62b0-4848-8247-ec340296b6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096354fa-626f-4acb-a6ca-24f307cbc2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99791acb-8984-46b9-9090-35271869aac3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f923491e-9d0f-4bb9-8d0c-887d7c4dc7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7257cec1-20b0-4606-afdb-fee4184bc654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e5c7a8-bb68-4b66-9810-ea8c8a08f66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75feab9-684e-4047-a7da-74652f26941a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069451c7-5b39-4d31-9067-ec807043c046",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f25404e-fd90-4c9a-8cc9-7a87d5d1e3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046900b6-89a4-4b6f-b80b-4e895ff31c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422c7d72-b4be-4a1e-af05-1e706789d8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1461190-39c6-40ff-9b64-9bd6bf2e7a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815cbc6c-5bc8-44d8-a696-1c3b4d77b9c3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf947db0-5883-4a38-a979-e37ca040d9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f3c6b9-bdf3-4c1c-a186-d4899fa478af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5855981f-2e8b-4af7-be58-f970ed7cfb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6a5cec-6cd8-446d-91c3-09f6980ad41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ccd0b4-5928-46d7-ac03-4340af81c25a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96779824-b020-4040-bf85-3a9b439c80a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c25d267-548c-4f2b-8004-5dda24ef2577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfdcdc0-120c-42d1-958a-230cb7f87036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceda44c7-77df-4250-a86c-67819396ca3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce526f49-441b-4a51-9066-ef666ee9f3ec",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eee906-b5d1-4381-8e5d-8131425f3e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849da616-8f03-41ca-a713-eba81caf81c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5ea32c-e783-411d-80a6-1d4f0a80aa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ad388a-a192-472f-9284-512b5639d508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eab4942-32bf-4294-8751-9f06d4fbda95",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba7b2f9-5d83-4772-8166-b4cb0a4fc496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe485bad-247d-49ed-85d6-72afe412582a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b772bf56-ad7d-4c7f-948b-444c34a46c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cc3a92-0ca2-48f4-9ee6-71834d37a83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1df7ea-d3f9-4436-b1e4-a04deca37f11",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfd4cf7-027d-4309-a5fd-b0748f7bdf28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d63016-ebb0-4a13-a882-0c4005197000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fa0d0a-cb95-4a55-9c8d-66cd1f4cdb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb87383e-b894-4783-b487-3bcd7260a0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69902f25-0486-486c-8885-4526e4fdd870",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe22c1e3-cd40-4e8e-9cf3-f574a7cbb808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63088edd-8dac-4f69-8f60-f302cf7de84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21890ea2-403c-4574-848d-5c7a01383b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef339c50-e3fe-413a-acc2-95b4890a304b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd99c7d9-1e76-4fe0-ae93-0887056fd703",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd61ea1-2ab3-46e5-9680-f8cc76b898a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bcbbfd-d337-4224-a8a5-8d0dbaef938c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443b4f7c-b136-4d49-8daa-93ba2518ceed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16361b10-02a9-4dd8-8b25-ac71b68c3004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29907a1c-aa23-4bfa-a270-92a39af430e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72e3c92-5407-4e73-833f-2682418a1967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a1ceb8-2eb0-43ab-addf-8cb016191eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49b1d4c-b614-4a15-a3e1-890ee3890ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f57f333-3fb7-4ac9-83cd-7608f8a064f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030deec1-fc7a-497e-810c-eeabc3bf52c5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4a9652-a7e5-4b73-a249-7cbaef1cda8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ab6072-9c89-41c2-afbc-011f6e115915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7200bd-cd33-4b50-8add-fa5a74038c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf050ed-634d-446d-84ec-a27ea4353a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43f7ce0-b4f3-4ccf-a8ab-aa00f2b9a8cb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88a9b3d-a416-45e9-a842-d516292632ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412e23aa-a1c0-4d59-9f9c-58e04036f204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f642a697-60e4-47de-906c-a21e2b9d6237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb11ffe-2f18-43e5-8207-3755cea59ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c127f5-406b-4c57-9b77-e213e858c943",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9641494-68d6-4b57-b335-7fc2cdb1f9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbe9a7c-05b5-4968-888c-862f2012f596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bab3b1-7618-4631-891f-148f10cec692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e485d4-f4dc-4078-94c6-1f8653ca0048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201097a0-fe77-41fb-86bd-6e4a69baadbf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd94b148-0872-47b3-9abd-9f7a86a9d212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f235ae2-6434-4db3-8b51-292c67a374f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90888bb-b60d-4d0f-a06d-1b3a99c197e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489fdfe7-b558-447e-953e-bc05bff693da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e95f0be-b805-4241-9738-954571fb353e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac607af-21d7-475e-bc2f-aaeded3d3ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a636695d-91ac-4f67-84ae-94f38b58e7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0381d958-e955-412a-a1a6-e439e79a0c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da35fc28-c244-4753-a490-6cce754a31a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0703cfe-42ac-4383-9410-ecb5fca2dc7b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5870113f-fc73-4b45-9c6d-bb5572fe1474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88aa1aa-70f6-4948-a94b-8170f195a7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8599b12d-8b95-4bf0-a08f-18c06b48873e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e698b32-3773-4248-b819-37dc139240fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849ceabd-24ac-4c72-8a98-ce1947f71844",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cd6472-3851-4e26-b56f-aee741433dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0711e5-185f-4449-b82d-eea5d1baacd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995bcd8d-736c-4ec8-aa02-ebc0a32f54db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd6c921-0df9-4f1c-8c4a-bc08df9ff7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18d8406-427a-45bf-80db-ca2d399fe793",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44108198-7a55-4399-b4a3-00cd75996cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b185eb54-6c7a-44a3-b248-5fe33bc2dbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9088b92e-30ae-4bfc-8017-fe36021d5b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d192fb17-4604-4d9b-8a12-5908a4019e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600f59cb-b1d1-477d-9b93-7756364be41f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7c234e-2ca7-4175-ac84-3b1c823167a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd4bdc6-a112-42d7-beb9-fbe802c54027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfe9081-456d-4646-b634-67f8ab68a275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e382549-51f5-4a69-9946-c7c0835b2313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20633e7e-606d-416c-8695-c28f2c6eebf3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626324c9-df7b-4a24-aec8-754e74deddc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592d3481-8532-4de7-a798-1fb9e60f9c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814807a0-2755-4176-a3a6-939828f1eef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716c26db-6e14-49bf-b8f1-d18cb4f38f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6073bc71-89e1-4380-a675-1dd44828f5cc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45cc5c7-cfd7-4829-8760-3484e84a9a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12f43a4-e6ad-4740-94ec-59ac2cb01f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2118f7af-0056-48bf-97e2-9361c3b11291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b2c9bc-736c-459d-997f-abc293712e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b78fb29-39fd-4282-99b0-7dbd18998987",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0378b3a-c607-46a5-aa53-a8e93a0ec907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa48f411-cef8-410b-abee-82793f03530a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23c340c-c828-4022-87b1-daf87f5552e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755ab671-1b8c-4a36-bac8-cb9e77cb20d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4b975d-3e2a-4651-8e89-a986c0e0c4d2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0a2be6-ad0d-409c-ae43-b2b03fd82840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4865d312-cef6-42e1-a191-9932d564cf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7016149b-c360-4e5f-a998-099c2f5b76e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affa9447-c7c0-4f94-9708-07bad35b37b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543476f9-023c-4cf0-a359-862b15f6c807",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e379809c-3276-4a44-afae-773accce87fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7b9ae0-94b8-4f46-95c0-12d2d88c072d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ad5075-bec3-42af-8587-34ed47853830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644c93ce-c4f2-4490-99ec-c5abbc78ca78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b761af1-172f-47b7-9000-ddb07675f8a9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd936f2-f5f5-443a-8745-10db54b50c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f7a59b-a9d0-4bf7-b757-004f6ca8c467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2c9e79-659d-472f-b731-257cab3881f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d931e2e-e3eb-4357-a136-82e85eb71b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90555d9e-c511-4d88-90c0-f7b5d3c72c19",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b09f07-3de1-477d-a939-46eb6b42001b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c38995-01c6-497f-afe1-2f40486c7ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceaf8fc-4199-4133-9651-dbd0f0f56a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e1c5d5-c5a0-43b3-8b2b-2206ab5d8f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e9e923-ca7d-474c-8ab8-a11fa52c05fb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f876969-4d3c-4dd1-b62a-af17336150af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21fcf49-a9ca-4f59-ade5-4f6ebe93e7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaca4fe1-88cc-4077-a534-9dda6cf0b080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ace368a-6ad4-48d0-82b9-9cd99bb0871c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0928219-a464-42ba-8364-0a44079392c0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952c8757-31e3-42fe-bda0-f2cbfb681147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae6ffa5-e6bb-40bf-b905-848ea2bce4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05d2f87-e860-4116-9673-aed15b1ebac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84658e8-bc04-45e9-8f89-5cb601bfc3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6b7d4e-ef37-42d0-8476-d2b8ee7f6445",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80d2f66-bf68-47c6-a1d2-e7334c8b9e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307c6ebd-8bca-4a29-873e-f03b22afe17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5ac195-372f-4264-a4fe-f46119317f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e47764-e483-40a4-9123-b3c9bec861a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7928fe-cf24-4c16-b857-ec9a5c21b821",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f629d8b2-9561-4cff-a519-d098ab5b1d1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08074d35-b9b4-47f4-bf12-dd47ca3f6acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee1b10d-26b5-4c49-a677-e8b8d8c1ced2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3db7e66-4389-4dab-937a-9342127b5aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418b4e81-0a8d-437d-a122-84e322cd9863",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7014698-6bf3-4235-a1d6-0d443e4bc3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058dff20-f909-4b7f-9af0-5a6b73a28fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cc9d67-d405-4646-9563-2865ab339366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af019c0-9b78-4f07-a0b9-5ba5a40254b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c766ed-1d66-4430-91e1-2fbab47a99c5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be348a15-c63c-43c2-812a-821c9c83bbba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32cd6ff7-fd5a-40fb-ba05-1aea8cf2f4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc0f769-3d63-4548-ba57-47014cb648a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083b42b8-6d85-4335-a54d-6c0fa443e72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18955899-fb06-4f45-a1ce-f9ddee79219f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b0c5be-335a-44d2-bb2c-7a08ebbceffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd666ff-ced4-4a91-bd62-a71862a06698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2715b1-7f2d-4e08-b19a-a2d6fc413abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a0058a-d3e6-42eb-ab79-40a8a47db1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ba1fc2-07fb-4402-9a59-e9332a89a649",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb354d3-cdb2-4c0b-b474-996f9c3ad64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4cde074-cdb5-4c71-a672-ad9e4526d051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a3a9d4-17a7-4af0-bb45-50d49dc5e47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23564511-fbe3-4441-ad1e-1368465262cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec215658-2f17-42f7-a065-485967430c85",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ff9a3f-ebe6-4503-a7ee-f2cfee18de1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c180f195-0ef3-4bfd-9eae-3cb38167b9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5718401c-a046-4682-b67e-3ab4caa3eece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d4c208-628e-48a4-aa9e-2e3845342163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb33589-db3e-41ef-b777-a761b8f469ba",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905d02b0-a12b-4651-9da5-15a5635b8b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b16b91e8-2d6c-4c40-808a-6e9bbc3bb4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aae3e2-2691-4ec1-a842-6b600c71b681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e2d016-eef2-4886-bc1e-ab71052bcc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c20c15-ffb4-497b-b434-d15c16db79b0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b19ffa-70e0-4754-8bd7-3d6be5eaf2dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101d36c9-a783-4a69-93a8-01a30412f585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eced0f71-27c5-41b1-94cd-d3eb909f5328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49e678b-90ec-431f-bf17-196ba3371418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eec80b-fa51-4ff7-b17e-1e8f0a672f7c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ba832a-fb69-4ebc-9d00-b0266a3cb53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70617600-5c15-42f7-bfc0-ac235e1b0dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efea08dd-0da8-4396-ac7b-5884d6629816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ec344b-501f-4e35-8323-2d204122e0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9715d08f-9ffc-4755-a433-d6117855f52a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36f405d-8f8e-4c58-89a3-302c87270449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934756a8-3987-4595-aeed-1782024bc7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890ac5f1-969a-48f8-93a2-f0ee3303b87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0290c9-412b-4ac5-a0f9-25135e892f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430a0fbe-372d-48df-ba93-e856e773d058",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758e2c56-9348-408c-96c2-c2f40acca4d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b9b816-40ae-4df9-a64a-492d4aa874da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bba635-d1e2-4c07-8696-c81ce1aa806b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d97c06-6b2d-46a5-9f71-20636dfa205d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5541a38-7189-4b0f-ba23-1fabffc74eaf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee95cc3c-c162-4765-b8f1-3b45c4771292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22eb0d25-9c8d-4c92-8adf-76aef4d20da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbba28b6-88c0-48cc-9dae-d3580c49133f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef646df-cbb4-4ed1-ae06-99a9f245a298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48b94d7-55e0-4cc1-a107-29c55386d92e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7af90f7-6e64-46a9-b4c9-4e016a34bbe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5312e9a0-7e25-4df4-ab0c-735f1bb64782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b67c97-d2ad-4c60-b518-530331f5eb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78170eb2-6d02-435b-9301-612d1ab59a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b9f5fc-0cca-4bf3-8583-5e0b05a57577",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fcbccf-5fd7-4c87-bdaf-f6c3444a9dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca1d9dfa-0c4c-4d29-8db5-6b99eabd1b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2814c4d8-8811-422d-9f8e-610f364931c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd5f5ae-4b9a-454d-b91d-2afa84b553f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb6341b-0247-4ca2-8531-05d256eae9d3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2a1393-baa5-492d-b6b1-09ed76294ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0393f1fb-c7df-4fe8-b796-f089df42ef54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4222363-6aca-4715-ba5e-ee89cf7cdb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b616a93-45a8-41af-a934-2b76f9344057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea74d22b-f610-4930-a8ed-1c0f1475ea8e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762e357b-43f0-4d09-ac17-0c1497f10517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "005e253b-67c2-4c9b-af9e-daaac62e2ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f92ed02-89d9-4e7c-83de-400c7d38a7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d65033-2b2c-440b-aa0d-a52622b99aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bce8e6-f220-42db-b68d-7848e156b011",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac51fe1-c417-419b-b5d1-31f6caf30d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b737d9-f9d1-4b51-bab6-303b7726fd12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fb0fae-efad-4ed9-83d7-94634030c44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fe3f71-324c-4e95-a834-e146e77aa93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30954599-22cb-4d95-86b7-cf10e5fcc394",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71c8288-f4b9-4612-882d-a4e170cab4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782251e1-859b-4e43-8fd5-06e5382a270c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feb6924-189d-418c-8f43-ccb42ee8c5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ed6044-2913-4ade-91c7-c2451714f198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658ef8fe-d81e-4715-bfe0-711edaf2fd6a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9360b7-d60d-4704-be2d-fa41a0f4ffc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acdfe27e-0dc6-4b7f-a5f7-22ee8786d2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5ee5d1-6a68-44ea-a265-559cec58ae55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e3dc54-7b72-4416-a624-91aefb3fd88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1b9bb7-b817-45b8-ac89-778c83b139f9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acaaf62-d432-4aee-869d-013c9a4e2f0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3778d30-bc7d-4dcf-a7f1-e9cc9f0177c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0320d6e0-9200-49c3-a6a3-4c043daeaf29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21aed182-1dae-450e-b9ee-ccddcf8537b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20103aa-a8d5-4659-baee-f14d6bb5f86a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b729f62b-68bc-45af-92be-fb9452d9ba5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22f3a47-a542-4b3c-85dd-37b86711ef90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7679a9-a5ce-47fb-9977-6b4648d89fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffc38b9-4d5b-4995-ab14-5fd170018726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc85ec4-d185-4af4-b714-757f3d4448bb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d081532-14fa-4b4e-afaa-0612babea43d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a3471d-114d-460f-a9d4-de0182017907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1846eec5-c4c6-45d4-8f76-c9844d649bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cb06ef-3a4b-447c-9c0f-636552e0952a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce75191-44e2-42c7-aa02-e80bdc9acb9d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f91c50-f56e-4c9f-b784-9f76acd10101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dbdba4c-60b9-4eba-93e4-e126429026a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a51cb5-4299-477d-8f82-5309da5fd6c3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a94567-7611-4525-91d3-73ea7c71acb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a39eac-bbb1-42fa-9660-e226c0c55be6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad90e4ce-7d02-4f35-99dd-678075d7dd75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3144aa3a-b57f-4dad-86bd-6496d012ad56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a47904-d8ad-4a2e-807d-bb534d31de4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f2c25b-1229-4bbf-bc9c-dd7e5aca97ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775af536-6fd9-47c4-a3f4-6dbd5dca4a3a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11d1c1b-7ec1-4406-b1d9-48ad5cf1c482",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18cc1f21-6c6d-40f9-aad3-9eed9ed9420e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c3da04-aaee-44a5-a61d-64c02080ac77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4de3f92-deeb-429b-bc50-eb9e63a74ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204e45cd-aa90-46f0-a339-8ed576581d54",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23764106-26b2-47df-9b57-5eccf2669d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ecf5a4-35d1-4444-abca-aad3d9937b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b7b989-6354-4835-9da5-a13a8bd800e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb973f60-e563-4b49-b21a-784c5c1e47b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3530628-f871-4aa3-ab32-8789a0f25ff4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e332760-e6be-4718-b9fd-1f5757dc8b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1d621e-805c-4cb7-94f7-01d7e362ec71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71a2793-b6e9-4874-84ec-26c88a999c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71489a29-ac34-4afe-8f05-f7c05edbb83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e42f58-3b52-478b-bc5e-3899090c8352",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82a12b1-adea-4210-a7d4-e2dd8edf2844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9815da63-16d1-4d78-851e-c0cb7bb418d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b135b0-fdc4-4103-b95c-06b0c3a12077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf4968f-2264-445f-b7a2-4ac1f7a6c7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf7f3e9-8fc7-431d-9388-c54bd5035722",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d616a0-ea13-45d8-98ce-dd6e3aaf18ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea3a8fe-e3d5-4188-8b8c-3e63293c99b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14ff810-7bd4-4326-8f66-89f665a63aa6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ec68af-cd7e-4947-9ec9-d35ba7899409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1834f33f-ab86-4390-9375-8ace3236625e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37019405-c96f-4b2f-8ed5-b65d9f3720ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99bb61b4-2779-423c-9bcf-025955486df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34b2950-648c-446a-9013-479e7539ce2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4ac8a5-b168-4290-8dfc-3130f86e9961"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "152ae658-7569-4ecf-a83a-fa52c0693894",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "047c1dd8-d6d9-4c61-9a11-24f9ddac5537"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40f98e4f-cab6-41f2-babb-77e433cf061e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f198e38-91ec-421c-9ce5-e666eed01c9e"
                    }
                  }
                ]
              },
              {
                "id": "73352d3f-524a-43fe-82a7-3973e28b055f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0956d137-8bc0-4e9b-822a-7503948f6bbd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9806f3a4-5b41-463c-ae70-26f8eb429e11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "662cc839-bd44-4a65-b69e-7929edb21e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c72fb6-21e8-45ef-a8eb-8b2455c24626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5a6a599-03fb-4248-a9ae-c144e68dc73a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21dc7c3a-749a-4414-8867-1f1562ab8a19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4057a8e-6552-43a3-b760-2fb118ee745e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b1322e3-1ac1-4edf-9abe-3d7e4e71d81c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4c4b431-fb19-4baf-8d87-9bfe2267b356"
                    }
                  }
                ]
              },
              {
                "id": "137fe7d4-096e-4f41-93ef-a12080bb63be",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fa5d05ce-a10c-43ce-9f7b-5281b3165011",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5884b11c-d45f-42d6-9e3e-fe26ea2fa7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ff59f85e-2dde-46da-926c-3801852dfda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fc3346-6955-43b5-a4c4-ed3ef4a74ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c48fe35-fde6-420a-b1f4-3684df4a8348"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "516c3f8d-3ee7-4eb6-87f3-a2609f2170c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b9f10ad-a70d-454e-9cef-49efe9be6f28",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35c9e340-259c-44e9-b04c-ea6515a8032f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00074e48-d98e-47b6-ab30-ca7634d5aa26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e09bd461-b14d-4ce7-b53c-ac0d11cd61d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ec07d7b-2ac6-4d72-82db-7709325bdbf6"
                    }
                  }
                ]
              },
              {
                "id": "2a01d62f-ec77-4be1-8663-bb2e4df54d57",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64ce5d4e-db6a-4170-b58d-7d33a8c874c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a1df1166-36b5-4f78-8fbf-1f654995e015"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b8030d4-f6f8-4655-ad61-8cd04d544e96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cfbf592-59e1-45b1-97eb-e0afad4c4687"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a588608-a8c5-4171-ac6f-e7b4b6d0801a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f613b059-0765-4853-a9d8-8f48ebed547a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc2d4f9e-1c48-4e52-9731-fe018017070b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcb9b597-973c-4378-8820-8e91ca3a48d3"
            }
          }
        ]
      },
      {
        "id": "aa68b469-e1a6-4156-9af9-f0d9b3b48a52",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "88613433-0266-477f-a536-8bd77e6a2730",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b29a366-f0eb-4901-beb6-5756ed5f649f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14eacb02-cf53-42aa-82d7-8c2b49097629",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c9745b-95a5-40a0-8555-ccea4a77a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c30d2d02-2579-4eab-9103-ac11d9cbd067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2028d1f-6281-4eaa-8034-22b53d56f624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b192d7aa-e270-4948-a271-08ca0bee6e17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ef43de2-14f7-4c50-88ad-35a10b9de7ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cacc84d-ab44-4b55-a453-8fbad75e01c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "687e5379-0475-405d-94bc-380fc58d91ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42797b9e-fbd5-4cf9-a13e-0649600170be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fb47cae-e1e3-492b-bee0-ab65ec42b30a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "70185de0-691f-4f58-8327-4fd490083000"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe14935d-56fd-4fda-aefe-2dfdd8918a76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18fb1db0-cc1c-4f39-8fbc-e22060660f19"
            }
          }
        ]
      },
      {
        "id": "a5432365-9e38-48d4-af9b-8e0bd2badd50",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e8a0ed57-d194-4f69-a672-f66bf95115a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db05b761-aa28-4d11-bd90-405efdb33445",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13e03b5b-ce98-4575-bc46-c4ae803e566f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4176b0f4-c1c5-4104-83ac-8b03a1c8d677",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bf9fc99-b86b-4ca1-b3c9-7574539f885c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5e74d4-039e-4194-ae82-181e5f69d410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dcf4a6c-1bec-45c5-bdb8-7761c5ad0e00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df8642e2-c9e7-4bc2-b28d-05f2d7388059",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38210bc5-bda5-4b92-ba94-5404d8a6c708"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f58140c8-d4df-4809-92d0-1431355d0794",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fa2b756-1cb4-4cb0-9a5e-a924d9bcd6c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c86d89bf-5013-4d42-8a21-b13249523c60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc314551-c24f-4e59-abdf-443cdf9bb3f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3226a9c8-aabf-4bb1-99ac-9a7d96d08c7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ab015e6-3f49-4130-beef-281e7fd1857c"
            }
          }
        ]
      },
      {
        "id": "05335d17-eeb1-499d-bad0-4b9f314b0e81",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7d38a543-b974-4fd3-be50-5e63b89a7105",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68a0a20b-4977-422b-b94e-47b8e1b049e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "072f3dd9-cdaa-4bd1-b9d3-5ff21332c613",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d89d86-f687-4654-ae71-43978a9926c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a571a906-76cd-4a50-b03a-309aa288579b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be56bbc-7b9b-4b77-bdf7-e00c938d69ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c01baf24-f723-41f8-a386-fd66bea3acf3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fbe4bfd-5a14-423c-af20-a8d443b7a416",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f32c35b4-19d7-454d-928f-83832363dc8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00b25403-d6ad-4f2d-a3b1-a5ef75e51cfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "583af72c-b7ce-42b8-ad2f-fecea5a1894f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc457267-982b-40b7-bfe6-4432c634a6d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d21f0d27-7984-4836-8c1d-385f3dd818cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f210e688-7df4-4f61-8bf6-536a2e0e76ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "370e034f-37c1-4528-9d18-f64483033336"
            }
          }
        ]
      },
      {
        "id": "1243b624-be10-4583-a97f-9f7fe4e777b7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2eb7da99-a723-425b-8d33-704cbcb6319f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00661ef3-08b9-49d8-9bfb-889c3a86d71e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b6c771f1-7857-4baa-9e61-00468b7da562",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e188cc9-344f-485c-bb77-feea5a80ffa4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1981c1d5-27cd-413b-b5e4-6a0f2834dd0b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 159.83333333333337,
      "responseMin": 20,
      "responseMax": 9049,
      "responseSd": 671.2531605553577,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721004061279,
      "completed": 1721004109792
    },
    "executions": [
      {
        "id": "daee70eb-45cc-4998-91c9-08e368fb2bd9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "57c4449b-2531-4a30-9abd-c30f42b0f6cf",
          "httpRequestId": "1b9cda62-b5c2-4a5f-846c-3311cabe4dca"
        },
        "item": {
          "id": "daee70eb-45cc-4998-91c9-08e368fb2bd9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ea510f25-58a4-4a4b-959e-00613190d1a6",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "c3327b42-af47-467a-a77e-d920e0f990f9",
        "cursor": {
          "ref": "500d5472-db86-474c-89e6-ddecba23e3bc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "30094982-fbc0-493e-903d-acc01b239168"
        },
        "item": {
          "id": "c3327b42-af47-467a-a77e-d920e0f990f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "391cbf98-8f58-4d7a-b77e-0e5d3a7a1a41",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "ce0d8e7f-1ded-49ac-8aea-a22c265c363b",
        "cursor": {
          "ref": "1b86ea2e-e4f0-4dc4-855a-b79ab173d047",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1ccf0a38-65fc-49ec-bc1e-6915096a5f19"
        },
        "item": {
          "id": "ce0d8e7f-1ded-49ac-8aea-a22c265c363b",
          "name": "did_json"
        },
        "response": {
          "id": "21f248a8-1959-456b-8153-bc8993d3192a",
          "status": "OK",
          "code": 200,
          "responseTime": 523,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8252174-39ee-496a-a930-c86aa795a6a4",
        "cursor": {
          "ref": "d1a8d824-4b36-4204-85da-452f5a2b98fd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "220f4a14-1dd5-4374-9966-1bfe742e018d"
        },
        "item": {
          "id": "b8252174-39ee-496a-a930-c86aa795a6a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "a779a0dd-6111-4cfe-879e-78409a3d2ddb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1855,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8252174-39ee-496a-a930-c86aa795a6a4",
        "cursor": {
          "ref": "d1a8d824-4b36-4204-85da-452f5a2b98fd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "220f4a14-1dd5-4374-9966-1bfe742e018d"
        },
        "item": {
          "id": "b8252174-39ee-496a-a930-c86aa795a6a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "a779a0dd-6111-4cfe-879e-78409a3d2ddb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1855,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf8f81a-e2a3-4159-8f2a-7f619a1ba2b2",
        "cursor": {
          "ref": "2a2a4164-583a-4ea4-8729-2e1d5eb9f12e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c7a7a228-c0fa-474e-975f-a40a5cf3567c"
        },
        "item": {
          "id": "adf8f81a-e2a3-4159-8f2a-7f619a1ba2b2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eca117c5-b5ad-4a08-a7f4-19d269b72b9f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ce13aa-f08f-4a31-8f3e-831befa85759",
        "cursor": {
          "ref": "15d4f8f8-7273-4775-8c72-c63b221a4346",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "677df6c9-61e1-4a11-a49e-992a0847cac4"
        },
        "item": {
          "id": "c3ce13aa-f08f-4a31-8f3e-831befa85759",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "06112213-ae38-4a8e-95ed-02d7a5d03e27",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68e89c1-2a85-4770-9fd0-475cb6cefb37",
        "cursor": {
          "ref": "a95aedf9-05cd-4bfb-8c98-42a12e19abde",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "51c56da1-4c43-43b6-b3bd-5adb8b4920a5"
        },
        "item": {
          "id": "e68e89c1-2a85-4770-9fd0-475cb6cefb37",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "36524b64-3593-4c53-9261-997b45032202",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4402683-476b-4a30-bc05-436a0668a8bb",
        "cursor": {
          "ref": "6770c98a-9415-47e8-b256-f1273de54b48",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "63ff3315-da60-4400-bb31-582a31700100"
        },
        "item": {
          "id": "c4402683-476b-4a30-bc05-436a0668a8bb",
          "name": "identifiers"
        },
        "response": {
          "id": "86d7ec0f-fd31-4d44-bd13-79843d85da0c",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7c523d-5181-4ff8-bfc5-4428f2eb0b69",
        "cursor": {
          "ref": "8e6662b6-1158-453b-97fc-af860a57bb92",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9ffa8341-ca70-4c1f-9b32-752f0461ea5c"
        },
        "item": {
          "id": "8c7c523d-5181-4ff8-bfc5-4428f2eb0b69",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47007957-3abc-4d37-89cd-5c935d7aafd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf47f21-5f18-4e37-905f-dc4256394fcd",
        "cursor": {
          "ref": "0cbeb8b1-71ed-4f23-8f68-413f7f9cd914",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dce0b843-0c72-4b53-9918-e54a34b2bbb2"
        },
        "item": {
          "id": "5cf47f21-5f18-4e37-905f-dc4256394fcd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8ac4a9cf-86dd-4d12-bf54-404dd8c17a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cff24c-1d37-4493-b589-9bd5e736179b",
        "cursor": {
          "ref": "a676a2fb-1dab-4898-b150-4d7b59cb9678",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0a30de36-2a41-4e2f-9509-fe43e9b08db3"
        },
        "item": {
          "id": "39cff24c-1d37-4493-b589-9bd5e736179b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d1529359-5faf-4cb8-9fed-6829d75c382d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a494cc-0546-4bf6-b97e-ef1c4d28ab18",
        "cursor": {
          "ref": "928ae285-fddc-4b67-89e2-5e00036b0143",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "adb1bf2d-7fb5-4f5c-982c-f9434a0842a3"
        },
        "item": {
          "id": "77a494cc-0546-4bf6-b97e-ef1c4d28ab18",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f2b84aa4-a1a2-4ff3-acb2-b64d3dc09361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9cfc71-f56c-41d1-ab2b-2d0daa0b0e61",
        "cursor": {
          "ref": "8052400f-70a8-4ced-853c-d9d2cd76ad54",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "98267af9-4ccb-4d36-b6cb-f85c3d6a99b9"
        },
        "item": {
          "id": "1e9cfc71-f56c-41d1-ab2b-2d0daa0b0e61",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "150e6bd8-acd6-45b9-beb6-30760b20e929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85500843-fbfb-4b84-bf36-54e2c47d6045",
        "cursor": {
          "ref": "b9a9f685-2935-46a5-a9a9-50beb70d5eff",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6ca3d705-9641-487d-b761-ba66500bb15d"
        },
        "item": {
          "id": "85500843-fbfb-4b84-bf36-54e2c47d6045",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "90e31ed6-c711-4ac8-bb44-d806f5884405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc4bbca-a5a0-4251-9ae1-249957f36e8d",
        "cursor": {
          "ref": "52b7951b-ac94-4b1c-b517-a246151d66e0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "93edb968-cc3f-442b-bb21-46ce675a5007"
        },
        "item": {
          "id": "5bc4bbca-a5a0-4251-9ae1-249957f36e8d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "30777e6b-6647-4b4f-87c0-c61574a4f6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99039b2-2017-49c7-9b7f-aadfbff16ae2",
        "cursor": {
          "ref": "ca6d5851-ec05-45d9-bffd-76a3e419781b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "35803ff9-bd68-4769-9d02-fb32fee85783"
        },
        "item": {
          "id": "f99039b2-2017-49c7-9b7f-aadfbff16ae2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fcbbd5f9-648f-4215-b0db-b38c56d8149e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacf5137-7982-41b1-96ca-f40ae9aa26db",
        "cursor": {
          "ref": "5c33d8d3-8c6f-4436-825e-2cb3c7bbb0fb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2049b0e1-93d4-4b98-9199-069578c9417a"
        },
        "item": {
          "id": "aacf5137-7982-41b1-96ca-f40ae9aa26db",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8738cf9f-de12-4a8e-99cf-1b3a3236b2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15fa3af-85c0-4008-bbf9-b138ba15309d",
        "cursor": {
          "ref": "8b0391ac-2758-49eb-96bc-1209e786704c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "aabb5d01-805b-4798-a465-121d338bb091"
        },
        "item": {
          "id": "e15fa3af-85c0-4008-bbf9-b138ba15309d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "db3881df-3b8b-4462-bb38-175c4cf29d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b894d16-8c83-40b2-8a21-928087a556e6",
        "cursor": {
          "ref": "9d996b9b-6360-4435-b09e-65c4d36bbe53",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "92f4f634-0a70-46fe-bdc1-a20112734020"
        },
        "item": {
          "id": "7b894d16-8c83-40b2-8a21-928087a556e6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e4d587d6-6ca4-4b99-8cfa-4180c6b4c6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62be431-5724-47aa-809d-f16709a4dbc7",
        "cursor": {
          "ref": "187cade5-946d-4e0f-b2f7-4015397a8407",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e246a63b-5263-4d84-b8f7-8f5409de027c"
        },
        "item": {
          "id": "f62be431-5724-47aa-809d-f16709a4dbc7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "25b5c4a1-4c26-4035-9edc-a800ea234415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ac6099-8774-424d-9e61-ad77660bd019",
        "cursor": {
          "ref": "739641f1-8205-4229-99ab-d72622aa5233",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "eb38f182-3c71-4ed9-a6b8-8d9324be7024"
        },
        "item": {
          "id": "39ac6099-8774-424d-9e61-ad77660bd019",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bf9669e6-36c9-47f2-9088-96e3365ff9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c674fe62-f3e5-4e36-8ad2-281d5d5f91b6",
        "cursor": {
          "ref": "2ae1950d-7dbe-4d78-9b6e-d2e1a5b2dd18",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b32be5cf-a393-41cc-8834-8550ad87f466"
        },
        "item": {
          "id": "c674fe62-f3e5-4e36-8ad2-281d5d5f91b6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "85defdba-6e32-4656-9853-6af87a0e571e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe2eb45-09ae-4097-82fb-633d67490359",
        "cursor": {
          "ref": "11062d0f-389f-4fb6-a285-5195095668e0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "11c370c8-9f98-41fb-98a8-d06be72e8f89"
        },
        "item": {
          "id": "bfe2eb45-09ae-4097-82fb-633d67490359",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "081270a3-1d0a-47e8-a550-1001b903f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e6bf0c-471b-4e8f-9371-568abf304b45",
        "cursor": {
          "ref": "2a6c32b7-02a7-4ba0-993b-2ab91babbdb0",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6774a0d0-463d-4973-8c41-33435ee6be63"
        },
        "item": {
          "id": "c2e6bf0c-471b-4e8f-9371-568abf304b45",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "596cd554-9bfd-4939-864e-e6df9e457722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969eeee1-c885-4abf-8d00-163bdd55e563",
        "cursor": {
          "ref": "1ef77447-3c33-4a72-94c4-aebf43f9de4a",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4108cf49-141d-4653-b6b9-58c3fd2ad247"
        },
        "item": {
          "id": "969eeee1-c885-4abf-8d00-163bdd55e563",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7281b943-a09b-43da-bcbd-f38b54c06dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d091fb7-01f0-417f-a5e3-ea50b741e8fb",
        "cursor": {
          "ref": "c95b32df-41d1-4745-8a5a-95ca6c75ba55",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b0e52e96-a561-42c7-9188-2f69e0de5fbf"
        },
        "item": {
          "id": "9d091fb7-01f0-417f-a5e3-ea50b741e8fb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "302be417-dce2-46e3-87fe-a818d783babd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ddeb8a-ac60-459b-aefc-d65859c92cc3",
        "cursor": {
          "ref": "1bd92858-3a8a-4575-89cf-d78568b78998",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "46be0e6f-93f3-4fcd-98fd-62c46db9358c"
        },
        "item": {
          "id": "f0ddeb8a-ac60-459b-aefc-d65859c92cc3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "48ea0373-2858-4abc-abe9-096e10f183ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09ee95b-c7ec-4666-8408-3a4a47fac404",
        "cursor": {
          "ref": "aabb9a5b-f8b8-40e8-b5d1-30b51510560e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ce6f165b-87e3-4706-acb5-5df83007690a"
        },
        "item": {
          "id": "a09ee95b-c7ec-4666-8408-3a4a47fac404",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "33938439-a752-491d-b1b6-aa47b76f49da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4dfb37-11bf-4493-943f-f67adc59ad1a",
        "cursor": {
          "ref": "dd230f56-1bee-4a47-a13d-ed4a8c4e830f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "78f4cfd6-679d-4d69-983a-ac47ae686675"
        },
        "item": {
          "id": "3b4dfb37-11bf-4493-943f-f67adc59ad1a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "96e5c77e-7b63-4c96-ba73-f4e4c4ab21b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7ca257-f798-4508-b910-2effec1de8a0",
        "cursor": {
          "ref": "d694b200-9aac-4dfa-ba11-39dd449baa81",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c53c1088-575b-4e55-a79e-e8329d4618fd"
        },
        "item": {
          "id": "3c7ca257-f798-4508-b910-2effec1de8a0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dd9f3d6b-a92f-4f89-ad6f-c1eb3bb96703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66230555-a787-4bb9-aece-3f36896ec14d",
        "cursor": {
          "ref": "4380ed01-17e4-43b4-971b-ba71552e9431",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "90be13d6-6266-499d-95fd-6d8937eb7537"
        },
        "item": {
          "id": "66230555-a787-4bb9-aece-3f36896ec14d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3a3dae31-b6f5-40de-b617-48096179e38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636cc5b3-1bb0-4cd8-b2b0-4c02a32dfbad",
        "cursor": {
          "ref": "1cd27e2f-f0ac-42c7-ac66-703e16b9a7bc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2a5d9279-930b-49d5-9ec4-d39831371b24"
        },
        "item": {
          "id": "636cc5b3-1bb0-4cd8-b2b0-4c02a32dfbad",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "97750452-4ff0-41e7-90f5-403cf0797f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bba1b1c-d0d0-4c96-8a69-deef68cd455d",
        "cursor": {
          "ref": "49b299ca-3eb4-42e6-ae9c-984046348c40",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a3791918-0f54-4842-9408-25dac265e1c4"
        },
        "item": {
          "id": "5bba1b1c-d0d0-4c96-8a69-deef68cd455d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "72388e0b-6fa5-4d7c-872b-18a2582a3d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e131d84-518f-4ee3-afb2-3b8b203cad2d",
        "cursor": {
          "ref": "e5bf8fa6-c723-4e38-a700-af53d3d26c09",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c9b88a1f-cc89-4f39-b403-ad9b3a73210f"
        },
        "item": {
          "id": "5e131d84-518f-4ee3-afb2-3b8b203cad2d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6466bd1e-c96b-4112-9c82-a2519e414167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c890c09-3368-443c-a320-92f719aaf475",
        "cursor": {
          "ref": "4023595e-032b-4878-b851-655f2f8cdec1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "05d97db2-cfdf-434e-87a9-83bc5aa29266"
        },
        "item": {
          "id": "6c890c09-3368-443c-a320-92f719aaf475",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c8ddba1b-691d-4464-9d85-32b9346894aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da35e45a-408f-492b-80ca-b552795e8ff2",
        "cursor": {
          "ref": "bd76f419-f910-4778-886e-608453e28f30",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4a195f58-fbf3-4e79-b7e6-e3df2210314b"
        },
        "item": {
          "id": "da35e45a-408f-492b-80ca-b552795e8ff2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e6c48107-494e-4278-9e8b-c4c7e7867259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293ed19f-669c-41b8-ac62-0d7a1792e5db",
        "cursor": {
          "ref": "4a4090d1-8591-434c-978b-3eb50341f9a8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "903130a2-1af1-43a0-a1ad-e20b178e470b"
        },
        "item": {
          "id": "293ed19f-669c-41b8-ac62-0d7a1792e5db",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e19612dc-f76a-46e3-bc49-00677a486b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68667b3-5365-48a9-8bbc-cffbd8ac194a",
        "cursor": {
          "ref": "339c5109-546c-4318-abea-863f4fbec788",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "444b4045-5737-460b-91f7-daa6c647c6eb"
        },
        "item": {
          "id": "e68667b3-5365-48a9-8bbc-cffbd8ac194a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2b7b0ebf-1499-472a-9fab-9091eae3f3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cd007f-b5ed-4742-b53b-cf9c82191986",
        "cursor": {
          "ref": "939bf876-d273-464b-b9a5-92ba8b171dcf",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1a7f64a5-4fa1-4ef5-8cba-927a01ea3417"
        },
        "item": {
          "id": "53cd007f-b5ed-4742-b53b-cf9c82191986",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1361c335-85c8-4fdc-bad0-faddfb99fc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8f0602-b875-412c-8274-ea2d3c5e8131",
        "cursor": {
          "ref": "1ef8c1d9-e2d3-4ed4-bc05-728b5bb833b4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8b23f7b8-f31e-442b-a46e-76a46d811e82"
        },
        "item": {
          "id": "bc8f0602-b875-412c-8274-ea2d3c5e8131",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d3e161c6-3f49-4a4f-b311-58eaa9e219b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa8821c-cf16-4152-b8a9-74476814e6d3",
        "cursor": {
          "ref": "dedbff47-3b63-4f80-9966-31d7b8ce4fca",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "853160ab-9717-45bc-b9e0-b300dff595f8"
        },
        "item": {
          "id": "aaa8821c-cf16-4152-b8a9-74476814e6d3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7aa17904-6cc3-40a3-a4ac-4b10376a38bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2b49af-95f5-4136-ba8f-3e529ac0c66f",
        "cursor": {
          "ref": "fccb5e96-da53-405e-b93e-a067dd8b6263",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0b2eb49e-6d05-45a8-8393-dbbe74cefc9a"
        },
        "item": {
          "id": "1f2b49af-95f5-4136-ba8f-3e529ac0c66f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "48f2761f-fbcf-4eee-a717-c7636830356a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed10b297-5c1e-42c9-92f3-5fc1cdb6fe3f",
        "cursor": {
          "ref": "0a31cdef-74bc-497c-a23d-b3d772b559d8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d271fae8-8213-4460-a596-fe04d872491e"
        },
        "item": {
          "id": "ed10b297-5c1e-42c9-92f3-5fc1cdb6fe3f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "062e1b03-e605-49c5-a91b-a209a97fc3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77289bc-a0cf-4f95-bfb0-83c79ade9552",
        "cursor": {
          "ref": "e755e48f-b5bd-4c28-8fd2-6bdc694fe6db",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9592663c-371b-485c-b8d9-162b1f1ec136"
        },
        "item": {
          "id": "a77289bc-a0cf-4f95-bfb0-83c79ade9552",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "047818b5-2d12-4047-846b-a267205bfd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034a3ba0-9b31-4505-9b8a-d71b42c73f8e",
        "cursor": {
          "ref": "74365d8c-9cf1-4107-9155-0eec91d4c3ad",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5fa5cb8b-79f4-4704-9c38-531c13d6b4c1"
        },
        "item": {
          "id": "034a3ba0-9b31-4505-9b8a-d71b42c73f8e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "82d1f0ae-2bd2-4e78-b941-6507eb9e581e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ed7636-6b72-4bd0-a465-10c10e80f83f",
        "cursor": {
          "ref": "45870c2f-5727-451b-9bb1-0aef4e5dd8b8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9964a709-46fd-4862-b87b-568bec357ea8"
        },
        "item": {
          "id": "65ed7636-6b72-4bd0-a465-10c10e80f83f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a4c7a605-436a-43a6-9197-991b1c2c1273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52882a68-131b-4d71-b706-85d2ce03ce80",
        "cursor": {
          "ref": "7c0ef0b9-7851-4dc4-bab4-c6c8281ed136",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "93c8eb6e-f132-44df-8908-bfcc935ac4d7"
        },
        "item": {
          "id": "52882a68-131b-4d71-b706-85d2ce03ce80",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5ba560e8-719b-43ea-98d1-d9d02a8464ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c426bc71-a023-4669-b9e6-de43769329f2",
        "cursor": {
          "ref": "c79833ca-d038-4505-a21d-ec899833eaf0",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7c4ced01-c26f-4ce1-a28d-cc69eb7719b3"
        },
        "item": {
          "id": "c426bc71-a023-4669-b9e6-de43769329f2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a6b88270-ad3e-4b9d-a864-7b8b9ff23368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4870be5-a84c-4573-9ce6-9cfd985d08bc",
        "cursor": {
          "ref": "c6bc8368-2cc2-44e5-9435-379ed42b96e9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5256c972-dfb0-4dea-9196-05c145fa2eac"
        },
        "item": {
          "id": "f4870be5-a84c-4573-9ce6-9cfd985d08bc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "44e3f1de-6fb9-4caf-a34c-ce5e1e3b42a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6fc7a0-93a0-405f-ac93-ab0452977ab8",
        "cursor": {
          "ref": "ebb69b2e-ddb7-4fcf-bf5d-2d62018fa292",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "75390bba-5644-4c85-a04e-55a25e8f9f30"
        },
        "item": {
          "id": "ac6fc7a0-93a0-405f-ac93-ab0452977ab8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "52a1992f-0af3-46cf-a1c6-a623f3244e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597e26c3-5b54-4701-bffa-297916522e95",
        "cursor": {
          "ref": "db4c3cd9-ecf0-4c3c-848b-38bcbd1091f1",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "85c86b20-4f8c-4e3a-84d1-ab6ad54db67f"
        },
        "item": {
          "id": "597e26c3-5b54-4701-bffa-297916522e95",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6e72a45b-2fde-4ed5-a986-310f8adc771c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eaf4eb-9404-41c7-89b9-f9b366cd89e6",
        "cursor": {
          "ref": "a6dea578-b288-4fdc-ba5f-dd46640c788b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "67ec785a-7596-42b8-a1ec-b8b9b56d5916"
        },
        "item": {
          "id": "83eaf4eb-9404-41c7-89b9-f9b366cd89e6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "412b3fc7-d041-4783-ba56-9a67033a0a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618a6004-9a08-420e-b19e-6a4d75f9412e",
        "cursor": {
          "ref": "1fa7fb00-1038-4bc3-9ca9-42246e3dfd3d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "483ee236-f861-401e-a1d2-92d00e81d76b"
        },
        "item": {
          "id": "618a6004-9a08-420e-b19e-6a4d75f9412e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8846e881-d96e-4f8e-81af-d7222aac1d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d196eab-6d24-4718-a567-be6e4f0bbf82",
        "cursor": {
          "ref": "f19034e9-56eb-4e37-bbd1-2f097b0a2f9a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6db70e8c-86c0-4ae9-a9f4-20819fe818c7"
        },
        "item": {
          "id": "1d196eab-6d24-4718-a567-be6e4f0bbf82",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "42e37b62-4e26-41d2-a686-d893a085a6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117427d8-0936-4432-995a-b3c79457ba47",
        "cursor": {
          "ref": "544b09cc-dd84-435f-9fb5-290206575c89",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "65c132a4-aef7-4ebc-8e76-7703aa14f579"
        },
        "item": {
          "id": "117427d8-0936-4432-995a-b3c79457ba47",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "22d9a138-4050-44e2-a1bc-ecf7a54ef4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e359b0-353a-4c1c-86c7-22e8567eb9c4",
        "cursor": {
          "ref": "8d1eb939-07cc-44e3-87fe-1fb54875d476",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4f3a1157-9016-424a-9acd-6a8920778113"
        },
        "item": {
          "id": "e7e359b0-353a-4c1c-86c7-22e8567eb9c4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8bc769b2-e449-4d4b-a529-9d5e85369fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d0621e-511d-4ea7-ba6b-19631cc12664",
        "cursor": {
          "ref": "1aec3028-9694-4d41-9d04-d76dbcaee0da",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6ab5a21d-7927-412d-ae3c-998d89dd64a1"
        },
        "item": {
          "id": "f5d0621e-511d-4ea7-ba6b-19631cc12664",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc876409-24c2-47cf-b96c-235678d8e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1436d37-adf8-4856-97ce-d8f3e0140069",
        "cursor": {
          "ref": "ced5c383-5ab7-4497-8038-7af165f5c90f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "397c756e-1f80-496f-8812-f86e53998e4f"
        },
        "item": {
          "id": "a1436d37-adf8-4856-97ce-d8f3e0140069",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b186a62c-d1c6-45bb-8a8a-004faaec82ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bc73b2-4fd8-4d63-a970-5dd3d8af82ca",
        "cursor": {
          "ref": "02739f17-5226-4e87-ae4d-9629035fa364",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "924c57ec-c7c9-446c-9e98-816a0d65736d"
        },
        "item": {
          "id": "96bc73b2-4fd8-4d63-a970-5dd3d8af82ca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cf79eb85-2010-4169-b7e2-2e8e5a5275f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee8747a-c226-4cff-81b0-4dc81dbf5c25",
        "cursor": {
          "ref": "9c6e44cc-855d-4648-980b-41485d2fed88",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8662e09d-eec6-4c20-bc47-f58f5ef42817"
        },
        "item": {
          "id": "4ee8747a-c226-4cff-81b0-4dc81dbf5c25",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "218bc329-9005-4605-b1fc-801580101dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263e224e-eac4-4e99-9cd6-e6a4f25b5747",
        "cursor": {
          "ref": "c28e9518-7ddb-4242-aa42-6f23c9a259bd",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "47f70823-3796-4164-9210-8b74038795a6"
        },
        "item": {
          "id": "263e224e-eac4-4e99-9cd6-e6a4f25b5747",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "134f6463-7e4f-45fc-8c91-5a986cf09eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75d0a4d-9e26-4862-8644-530da07c3afe",
        "cursor": {
          "ref": "805501bf-40a8-457c-9513-d3a0f47b91eb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a3585ed7-b75f-4eed-9b21-46ca267d9130"
        },
        "item": {
          "id": "c75d0a4d-9e26-4862-8644-530da07c3afe",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2cb8a7ee-c298-4c83-aa5b-c65d2e4626b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718f3524-3fef-46c5-9905-d44db3a5cfdc",
        "cursor": {
          "ref": "0babdf11-3cf7-43ba-bd68-b1f995e061f2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "07219565-e13d-42e8-b560-23b53df51d2c"
        },
        "item": {
          "id": "718f3524-3fef-46c5-9905-d44db3a5cfdc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f2fe1a6d-b665-4335-b322-de9a6ec02cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c32d73-32e3-41dd-ae28-77d465d4cb41",
        "cursor": {
          "ref": "f47a604c-4715-4b51-825b-f6cdbb001fe7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ddee3a3c-e450-437f-b5e9-67b1b0850ace"
        },
        "item": {
          "id": "37c32d73-32e3-41dd-ae28-77d465d4cb41",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3983fd45-b0aa-4545-be6e-c65193ff9054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49ca03f-7ffd-412a-8c65-23f965c45152",
        "cursor": {
          "ref": "87748a96-e033-4152-b8f2-6f966524111d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ebabf421-45ec-49d7-8746-fd43044e6554"
        },
        "item": {
          "id": "d49ca03f-7ffd-412a-8c65-23f965c45152",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "de9cdb95-6c47-4618-bc66-2f9853475149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2547ce-12a4-453a-a0db-4bcf317cfe1a",
        "cursor": {
          "ref": "ca67c664-5957-4339-b21e-e1a6e82c9637",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bc5b505a-40a3-420d-ae45-8153bd395913"
        },
        "item": {
          "id": "6b2547ce-12a4-453a-a0db-4bcf317cfe1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d22597a1-89ac-409a-bc43-babc45fa910b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6bf6f5-aa0e-4df4-97a0-dab1c4765df7",
        "cursor": {
          "ref": "aabd352b-126f-4e65-8fb5-f77f5aac6c3a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c97636f8-37eb-4bd1-b676-48b9f5b10fc5"
        },
        "item": {
          "id": "2f6bf6f5-aa0e-4df4-97a0-dab1c4765df7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a45475f1-65af-444e-8708-6a4a87962fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ec48da-0985-4973-956e-fb28fa796ebd",
        "cursor": {
          "ref": "82b540eb-2976-43c2-80a5-7760f3ce807f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c0626b31-de4f-49d7-a1cf-d7b874253347"
        },
        "item": {
          "id": "23ec48da-0985-4973-956e-fb28fa796ebd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9afb2590-758f-45b2-894c-9e660c19b8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980fc927-6a39-43c4-abfe-3d5008db74f5",
        "cursor": {
          "ref": "c9fcc1d9-a2d4-48b3-8935-573a3d9d272e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1ac68ffc-5ae0-4771-a11e-23c917eeb7b0"
        },
        "item": {
          "id": "980fc927-6a39-43c4-abfe-3d5008db74f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "901b4d90-baa6-4650-b5a6-7558d58ecf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10fd0b4-d085-4548-8659-915da6c5305a",
        "cursor": {
          "ref": "918d49b9-ac34-408e-bb4a-5950078c8b01",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "57542427-3770-4d9a-a7f6-bb8469782bd3"
        },
        "item": {
          "id": "d10fd0b4-d085-4548-8659-915da6c5305a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ee4cb29e-915f-4e82-956d-6d195f68305b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88950ff-cd94-44e3-a1a0-64691a0c8341",
        "cursor": {
          "ref": "342be5b1-3c2d-4b46-9c30-5dd33c5c7a99",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1c50e23e-5a12-4ec2-b1a7-41c618504ed3"
        },
        "item": {
          "id": "b88950ff-cd94-44e3-a1a0-64691a0c8341",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8bebebdd-6eea-4a03-98e6-c60e1a3aac4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62535c8f-3e76-4660-80f1-d3d99ede2cc8",
        "cursor": {
          "ref": "a6fa82be-cdae-49b2-ad5b-777e88ec56b0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8a291019-134d-4fed-9f74-86da40c4af4b"
        },
        "item": {
          "id": "62535c8f-3e76-4660-80f1-d3d99ede2cc8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8610a51b-bdea-4672-b874-244b9fc4e370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feeb468-a1d5-4223-9c6d-c68d75172801",
        "cursor": {
          "ref": "edf154c0-3673-4579-bd0c-7aa8f6555ec3",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f1da2f2f-b786-4da5-925d-51fef70071cf"
        },
        "item": {
          "id": "8feeb468-a1d5-4223-9c6d-c68d75172801",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7dde1c5a-6045-4bff-87f7-b66c6fdfa516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a872bf-30ff-43c2-9bec-81f5ea3cd8c3",
        "cursor": {
          "ref": "bc1702bc-6c66-4738-9ce4-5b7c7d9a2dc8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e59f5f27-3a02-42a4-b2e2-ddcd1d31ea6f"
        },
        "item": {
          "id": "00a872bf-30ff-43c2-9bec-81f5ea3cd8c3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "45db08c7-c3a8-4bcf-91b0-dc5c70e8329a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a267d139-566b-4cf4-8d14-2a46bfcba80d",
        "cursor": {
          "ref": "83efae77-2948-4f88-95e8-6dab0b59704d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "02c6e161-83e2-4ad7-bcde-b9904feb5569"
        },
        "item": {
          "id": "a267d139-566b-4cf4-8d14-2a46bfcba80d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1fa2e7a0-a83f-4dce-99cf-13b8e44cc472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7becf546-7de7-4440-9463-eac5e317a5cf",
        "cursor": {
          "ref": "4eb64821-e113-4be8-a51d-cd4b6b1e12d8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "333187ee-2e69-4876-89f4-0b6a51cfc7d7"
        },
        "item": {
          "id": "7becf546-7de7-4440-9463-eac5e317a5cf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "870fbabd-7f38-4fba-bef6-e8844bef6a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3ec038-91ed-45ed-8225-1d8d5fbf3f91",
        "cursor": {
          "ref": "732f9d4f-0bc6-4b79-acd6-d95fc9ebab32",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "37f9e684-eeac-4272-9a65-cace955912d5"
        },
        "item": {
          "id": "7f3ec038-91ed-45ed-8225-1d8d5fbf3f91",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1a074ad4-7a97-4589-9b2d-890414694dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081e1c58-1843-4278-af48-d5f20b102cbd",
        "cursor": {
          "ref": "f3641240-fc2d-4b84-9821-902f6913d23a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8fea2e2e-91d4-44b5-b8dc-cf8c2fa63c83"
        },
        "item": {
          "id": "081e1c58-1843-4278-af48-d5f20b102cbd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5120f200-4829-4b82-b803-840a854ca27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba1d5de-dafb-4891-b785-662c84303c1e",
        "cursor": {
          "ref": "2d1df0cf-05de-4cac-a494-ecd564de1c34",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "12490a8e-13af-4363-9e13-ca101a98a08a"
        },
        "item": {
          "id": "fba1d5de-dafb-4891-b785-662c84303c1e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "29a12567-8a6f-4ed6-8306-c1817dc7ceb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ae7bd0-5424-4ebb-b456-d4725d968363",
        "cursor": {
          "ref": "03d62cc3-c853-4a60-b68e-6fc9a0b9171b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3149aab0-7e95-4c60-ab1b-c4e4a567ed63"
        },
        "item": {
          "id": "12ae7bd0-5424-4ebb-b456-d4725d968363",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c074a748-4a6c-4422-b549-c90cb965fcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcf1312-1416-4950-9e02-6519fdcd46e0",
        "cursor": {
          "ref": "447e7d38-044d-41b0-8b3a-ef3298e9f2eb",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c89636b1-8351-47f9-b185-9dac3516fc14"
        },
        "item": {
          "id": "6bcf1312-1416-4950-9e02-6519fdcd46e0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3747588a-9383-4815-9d74-8de6a4416862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee26fa7-273e-4122-9239-b1adba0a83e8",
        "cursor": {
          "ref": "d22b7273-9d89-463e-a69a-8183b7a1777b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9e7fc71f-46d7-47fc-802c-545305531fdc"
        },
        "item": {
          "id": "fee26fa7-273e-4122-9239-b1adba0a83e8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8bbc06ce-cf92-47ed-8e17-2bca99a42639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5393a57-e0f8-4fac-9739-69787ccd800e",
        "cursor": {
          "ref": "4d41e6ce-eae4-4c0e-a5cb-12b35ae804e7",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fb3ab0f0-c88c-4b4f-b8b0-b2ad23e00345"
        },
        "item": {
          "id": "b5393a57-e0f8-4fac-9739-69787ccd800e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a096d55f-a34b-4eec-b5ca-da5b36cb11b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ac9685-3ff3-4de8-8d0d-9bca9852622f",
        "cursor": {
          "ref": "458beed2-5efa-4d78-8d07-ca418f227c09",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a84d6516-029b-4232-a092-c6ae5e62f69b"
        },
        "item": {
          "id": "a3ac9685-3ff3-4de8-8d0d-9bca9852622f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b84a386a-77f6-4eff-b152-1269826c7aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686bd87c-5dfa-4a83-b415-1e5482d72a06",
        "cursor": {
          "ref": "17015430-6633-475c-8f8a-48ab9dfbd3ff",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "75d65f87-4ddf-45a5-99d6-fc27c6c69c54"
        },
        "item": {
          "id": "686bd87c-5dfa-4a83-b415-1e5482d72a06",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ddb0cb41-2de9-4628-99e8-1ba376bfd34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becccb5d-7082-48e1-a1bd-f02b3606563a",
        "cursor": {
          "ref": "72adb7f2-8acf-4255-b271-fca2aa5f6fa7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d3ab7885-1df6-4b96-9596-a21baaca39f1"
        },
        "item": {
          "id": "becccb5d-7082-48e1-a1bd-f02b3606563a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c6d3ad45-0d2a-4f5e-ab06-fe2f45ff421e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec7ae98-baff-4daf-9355-0666333a67d2",
        "cursor": {
          "ref": "6192ba27-65d3-41e2-abd5-ef6a40a41e85",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e88380e9-ec62-446b-af81-214519f77b84"
        },
        "item": {
          "id": "6ec7ae98-baff-4daf-9355-0666333a67d2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f1320c61-33f0-445e-93e8-fc7e16597246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d379f97-e38b-44e2-8ed5-4241fe313b60",
        "cursor": {
          "ref": "a6aadee2-ceb1-4db4-8fa0-c140747532c8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5fa1ee62-3716-4ca3-89ad-a1f4d917bc4a"
        },
        "item": {
          "id": "5d379f97-e38b-44e2-8ed5-4241fe313b60",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cb453ab1-92ab-47b1-9236-9fd671cc0d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d5c987-577d-48fe-86f8-50aa4087cd27",
        "cursor": {
          "ref": "574a718f-c9d0-4f9e-8b56-6627e5240f83",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "728eafda-eeaa-4b07-b116-5e0819120848"
        },
        "item": {
          "id": "34d5c987-577d-48fe-86f8-50aa4087cd27",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "da74d9fc-9528-4d01-80f1-a476a117195f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fc188a-1b11-4229-88fa-dccf544aca61",
        "cursor": {
          "ref": "d871fc9e-72c6-4a26-b3ca-83e27fe0683c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8d5430e1-dcf7-41af-a7e0-9823222cc726"
        },
        "item": {
          "id": "e5fc188a-1b11-4229-88fa-dccf544aca61",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "30550b16-5680-4c96-9903-9229d7d4bbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bee347-293c-43ed-b87a-514dbf97fc28",
        "cursor": {
          "ref": "90ea4565-02ec-48a0-87dd-9d563af168b2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fab40210-300b-4dac-a7e7-f02ed198e13e"
        },
        "item": {
          "id": "a7bee347-293c-43ed-b87a-514dbf97fc28",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b968dc77-cd53-4e07-adb6-e8b35cfac0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c79eb1-0504-4d41-b8fa-f26a7f188ca5",
        "cursor": {
          "ref": "862589b8-d07b-465f-a69e-722766da489b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "64c4feb3-05c9-4bea-823e-eba1f5e36bcd"
        },
        "item": {
          "id": "b6c79eb1-0504-4d41-b8fa-f26a7f188ca5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "035a358b-fe4f-47bb-a99c-67cbf694e6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8223f2-c6a7-414a-81ae-89ec24cebc30",
        "cursor": {
          "ref": "77432d4a-7e68-461f-923c-9f75fa18d1bf",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7601af0a-4b3c-4e62-a052-7e90d123d4c9"
        },
        "item": {
          "id": "ce8223f2-c6a7-414a-81ae-89ec24cebc30",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "54b6cd6f-5094-4d68-9492-ecbf5d9495b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb15d9a5-9302-4a4d-adac-adcc554e1024",
        "cursor": {
          "ref": "9720b619-a08f-417f-aa93-cf7f9ee8d857",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7f4bdb2e-77dc-4155-a106-db70aa27992b"
        },
        "item": {
          "id": "eb15d9a5-9302-4a4d-adac-adcc554e1024",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1e5c61ba-7bf0-4129-9ab2-050d746fb357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf24d592-8a82-42bc-adc5-53c8460c2846",
        "cursor": {
          "ref": "c8cda885-969a-446a-b6c0-d2199aa77739",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e4499d62-48bf-49e2-ab97-9022dca14515"
        },
        "item": {
          "id": "cf24d592-8a82-42bc-adc5-53c8460c2846",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3b9145c5-a65c-4566-85c5-54772a6b61a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfcd06b-26e9-4d11-8ec3-cf719b82e488",
        "cursor": {
          "ref": "999ebd5b-6855-4f24-ae36-0becf0c71623",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f05e6e2c-2e2c-4883-937b-e4f5a4a3b3d7"
        },
        "item": {
          "id": "8cfcd06b-26e9-4d11-8ec3-cf719b82e488",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8b4802c2-f8d9-4d0b-b292-1e42ab0c128a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f79435-5da6-4491-bfaf-318c6470dd4e",
        "cursor": {
          "ref": "0004a054-f58a-4e85-8306-d1addecb67b2",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a73c7e59-52be-4571-8a0d-9de395a21dd7"
        },
        "item": {
          "id": "76f79435-5da6-4491-bfaf-318c6470dd4e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "76968abf-6061-468e-82c8-3a76438d8e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270e2956-d02f-42e9-bc8f-dca934ebc88c",
        "cursor": {
          "ref": "26bddc4d-c2cc-4853-89ff-5c0cdabfc4be",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "75632b40-dde4-42c7-8ca5-47e301fea09a"
        },
        "item": {
          "id": "270e2956-d02f-42e9-bc8f-dca934ebc88c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "91086b33-ec05-4dbd-b756-852609c7974c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cc24ee-a477-4561-9859-5f23002d8f23",
        "cursor": {
          "ref": "fbb6fe26-0a20-45e8-90a9-1ddaf8308953",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8b28a4c5-8112-40db-9635-71afda612b26"
        },
        "item": {
          "id": "d3cc24ee-a477-4561-9859-5f23002d8f23",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8a18f5b5-2acb-4053-8705-27a387de592b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b22cb0-36f5-4718-8e5d-1587ba7ae6a3",
        "cursor": {
          "ref": "d6d87a2a-d007-413e-b3b9-b68c759f0eee",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "782665fd-564b-4687-b161-b435fa1acd10"
        },
        "item": {
          "id": "85b22cb0-36f5-4718-8e5d-1587ba7ae6a3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8396ddf2-4c3b-4aee-9a74-1a9d7e48b330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5f5492-ba8f-4cf3-a040-d2bf5bd139d0",
        "cursor": {
          "ref": "a8370cac-c54e-4c63-8020-42208f13cd14",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ddbacdfd-1a17-4918-8c82-c4e8a0d7d7eb"
        },
        "item": {
          "id": "5d5f5492-ba8f-4cf3-a040-d2bf5bd139d0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "55236963-4adc-41d6-b08b-81ea4a254da4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cd3687-4f61-42f2-b247-b67e87f24919",
        "cursor": {
          "ref": "0f8937ce-6e67-4cf1-9197-4ddb6e346b5c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ac4c36ba-5e34-4c2a-a75f-5d38516e29f3"
        },
        "item": {
          "id": "42cd3687-4f61-42f2-b247-b67e87f24919",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9a690ca6-e499-4da5-a286-94422d6c1991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3029acab-5658-45b0-9633-dd6ba071618d",
        "cursor": {
          "ref": "8548453a-244d-4bae-82f3-afc47206ea87",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ccad8862-9ec2-44b6-ac23-ced71168c64f"
        },
        "item": {
          "id": "3029acab-5658-45b0-9633-dd6ba071618d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "949cfd67-36c2-4605-ba99-a542804dda95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "676140f1-15d2-43d6-acb1-f85a4768cf5d",
        "cursor": {
          "ref": "c9e1c506-8035-40a0-8658-754790b0cf35",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "182682eb-6ccd-4df1-9e6d-aec04aa64fb6"
        },
        "item": {
          "id": "676140f1-15d2-43d6-acb1-f85a4768cf5d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "803dc032-2813-4775-97a8-60664c08ff24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e4ea443e-b759-410e-8939-7c1336045e85",
        "cursor": {
          "ref": "9ec53c73-795e-4e74-9cc4-085816bfcf76",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "60249199-5665-41d0-a062-bb11e3b8e6a2"
        },
        "item": {
          "id": "e4ea443e-b759-410e-8939-7c1336045e85",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c3fe334c-5eef-4861-9702-c83735973798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "510c1d60-cbe7-49c3-8d49-264c558dabb4",
        "cursor": {
          "ref": "d6d07c54-0699-4d72-963f-f2daf5b758d9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e3fc9c59-07b3-4551-909a-3d17cd53aa2e"
        },
        "item": {
          "id": "510c1d60-cbe7-49c3-8d49-264c558dabb4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cdb373d6-d722-4cee-aab5-b788c8950c69",
          "status": "Created",
          "code": 201,
          "responseTime": 9049,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5335f9-7b49-43a4-acfa-ddc19c599d6e",
        "cursor": {
          "ref": "fc9e8fb1-2da2-4b9a-8b7d-0dc9b4363186",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b3b81036-182e-426f-a80d-5b19afa9abea"
        },
        "item": {
          "id": "cb5335f9-7b49-43a4-acfa-ddc19c599d6e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9f1da2b3-1a08-4b6f-ad7b-11608f9c63e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "77842b42-3c11-426b-8970-bdc2d463b43b",
        "cursor": {
          "ref": "3bdac048-4c1c-49c2-8d68-65672e77ebdf",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "20adc0ed-c84d-4448-938d-d219e0f9bfa0"
        },
        "item": {
          "id": "77842b42-3c11-426b-8970-bdc2d463b43b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "babc7e96-31f3-4e1f-9637-a37b5acdce8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3e5335b3-e9ed-4093-98b7-47991700bc14",
        "cursor": {
          "ref": "3f8e4f3e-7b33-427b-8308-ecf8f4c5a758",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "98cc0fd2-d071-44c8-9da2-210d1957f5d0"
        },
        "item": {
          "id": "3e5335b3-e9ed-4093-98b7-47991700bc14",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fd9b3adb-7dde-404f-b687-9ee135359115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d46e773-b4e0-4c9d-b5ca-8346ffdab100",
        "cursor": {
          "ref": "3b36b988-4bcf-453b-8ceb-0c5cd784fcc2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fb65c4f3-2616-4bb8-9617-a34e4a1ff702"
        },
        "item": {
          "id": "6d46e773-b4e0-4c9d-b5ca-8346ffdab100",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0e1111d3-021d-4335-bcf1-621893af48d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e3086f-e0d7-450d-8305-760cd0eb33c9",
        "cursor": {
          "ref": "de629175-c12d-4cc1-8ea8-01492764c0c6",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cd87e177-5649-44dc-ae01-b2f6bf7aa9dd"
        },
        "item": {
          "id": "c3e3086f-e0d7-450d-8305-760cd0eb33c9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4e1dc9f8-df9e-40e3-9ef6-f7357cdde80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285bc9e6-be66-4f86-ac46-564fc1056f0d",
        "cursor": {
          "ref": "bf4aa414-f378-40f0-8ef7-26f74423c7f8",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bb1a7cb9-b4a3-40db-ace1-f64d328a1779"
        },
        "item": {
          "id": "285bc9e6-be66-4f86-ac46-564fc1056f0d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5a404189-4fce-4f57-af44-22edef6a0845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4a330b-3abe-461d-b74b-4336309d7073",
        "cursor": {
          "ref": "32dde727-b57c-4272-b9cf-e7e2092948ad",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e2d6e6fd-85e3-48f4-be7e-1a65e36dd53c"
        },
        "item": {
          "id": "7b4a330b-3abe-461d-b74b-4336309d7073",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ee81fa81-8dc0-46b1-83af-6e30ec4037b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ac2315-663f-4f0b-a055-8252b25fa8c9",
        "cursor": {
          "ref": "964b5727-d8a1-430e-abb7-ccab35350acb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a7b9100f-ddf9-46bd-9729-4519bc19498e"
        },
        "item": {
          "id": "b1ac2315-663f-4f0b-a055-8252b25fa8c9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4110d2b1-ef24-4a36-8065-fdbfeb1b5d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874ab5ac-5ec3-4e9e-abf6-8448bdb822c2",
        "cursor": {
          "ref": "0f225cb3-e449-47fb-9df7-ea3928e8f29a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "64399f99-bbd4-431a-8b25-18e0a19f7a46"
        },
        "item": {
          "id": "874ab5ac-5ec3-4e9e-abf6-8448bdb822c2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "315d4079-8729-4377-ba9e-a8984c543914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e3a1eb-147f-4ba9-8278-629f74485f8b",
        "cursor": {
          "ref": "518ad434-56c3-4dfd-8dce-b7f312c2a097",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "08b9f817-1125-45bf-8c64-fbae6e045190"
        },
        "item": {
          "id": "82e3a1eb-147f-4ba9-8278-629f74485f8b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8db9f12a-ae3b-4bce-81f3-04f6b587672b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08791fb7-68e9-40f7-ab0b-210291de54ad",
        "cursor": {
          "ref": "ddc2f59b-44f0-4da3-acab-5d50ee4b827c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "59eccd66-fdfd-4d3a-8c4f-ce577140bcb7"
        },
        "item": {
          "id": "08791fb7-68e9-40f7-ab0b-210291de54ad",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c92e1719-e744-44ec-bce5-b450dcb39c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360e20f9-a010-4677-8b91-a8abacfe0f76",
        "cursor": {
          "ref": "0d35bb76-fa54-457a-9276-1567ffcb9ce0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c4ee3093-5c82-4dd4-8bae-7c35550510d0"
        },
        "item": {
          "id": "360e20f9-a010-4677-8b91-a8abacfe0f76",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5f46df2b-4e3d-49cc-a873-e722bafe169d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927e835e-2e71-4bd9-a2c8-35417afb87b3",
        "cursor": {
          "ref": "93775f1e-94d7-4fb6-94a4-212ca0ea2292",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "997e892f-b88d-4321-9c0e-8d5eac2e8858"
        },
        "item": {
          "id": "927e835e-2e71-4bd9-a2c8-35417afb87b3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "807b86cf-c6b3-4b68-b630-992f984574f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece31b1e-7bb6-4b23-95d8-ef119295b5ae",
        "cursor": {
          "ref": "39b060d9-99b9-437a-8123-88310b3b5755",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7f1c4f6f-058b-4cb4-b110-25db472d0a46"
        },
        "item": {
          "id": "ece31b1e-7bb6-4b23-95d8-ef119295b5ae",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "467a611d-941c-4658-bea4-d8ab6fd44245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3454f5b9-e310-4b5d-a527-a46617343a4a",
        "cursor": {
          "ref": "65b176e7-649c-4762-90ef-88fe60ec6065",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e1a01e5f-1d48-4054-8d79-4285969de81f"
        },
        "item": {
          "id": "3454f5b9-e310-4b5d-a527-a46617343a4a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c87fe26d-443b-4ba8-a5e4-0ab68e63fc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3918cc9-0a2c-45ec-b822-dcc2533ffe96",
        "cursor": {
          "ref": "1bafc2c9-e90d-44b2-aebd-84fcd01140c9",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4d93f7fc-60a7-4887-8c63-8f34c7332dfc"
        },
        "item": {
          "id": "e3918cc9-0a2c-45ec-b822-dcc2533ffe96",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "61c1768f-0e4a-4897-a9e3-45f9ea514c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4898ec52-0a9d-46c1-9daf-cb608cf7ae42",
        "cursor": {
          "ref": "f85e9d2b-364f-4788-90fc-de2c25e89b10",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "abab6223-7d53-469c-aec0-e899bd059bd0"
        },
        "item": {
          "id": "4898ec52-0a9d-46c1-9daf-cb608cf7ae42",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1d971b89-0def-46a2-ad55-3135874c13fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45397e5-817b-43f7-a226-a1b28e4c53e3",
        "cursor": {
          "ref": "8382c030-df8f-4d11-aa49-252c4d6027e6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7c959d7c-f7df-4856-8f6f-c5b61f0f353c"
        },
        "item": {
          "id": "a45397e5-817b-43f7-a226-a1b28e4c53e3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ae6eaa6d-fb82-47e8-97d1-fe822ffc9f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e6ec9a-c143-431d-ba22-6541c2d39643",
        "cursor": {
          "ref": "7154ec50-89a3-4de1-b42b-726fab24a156",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "492803e1-7bba-44bf-9455-7ba59b52f876"
        },
        "item": {
          "id": "96e6ec9a-c143-431d-ba22-6541c2d39643",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2449d5d2-e21e-469e-bd9e-b693e25b958b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "5856fecc-7796-4760-9557-5c0e1b9ed947",
        "cursor": {
          "ref": "6815467c-7a42-4771-abdb-7a5fe59c9347",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "81d1e7f9-0a4f-4435-b5c8-9498a32ea6b4"
        },
        "item": {
          "id": "5856fecc-7796-4760-9557-5c0e1b9ed947",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bd0a2648-3311-457c-8f27-1fdc5c14f6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaa1c29-44b3-4819-a230-d48d14e0fd04",
        "cursor": {
          "ref": "f059a9ef-f806-4388-9698-092321db5355",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d15e41e7-2ec5-4bf2-917c-ff9d0a6fb2bc"
        },
        "item": {
          "id": "efaa1c29-44b3-4819-a230-d48d14e0fd04",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f33391a9-202d-4fff-8743-59031beca3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e08a5d-369b-47be-8403-a2e6a361f360",
        "cursor": {
          "ref": "30da0fb1-4715-4b51-b3f6-4f9f966378ec",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b80ad7b7-6a12-49b2-ba80-20ec630c7b87"
        },
        "item": {
          "id": "e0e08a5d-369b-47be-8403-a2e6a361f360",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4a12eb7a-dc57-49d3-92f5-b484facee17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ad05c2-e4c9-4f22-a292-296955e67c2a",
        "cursor": {
          "ref": "288b16f0-9ce2-4096-a6ce-80ba056910f6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "291f2e30-35d0-4396-8487-1986466482b5"
        },
        "item": {
          "id": "f5ad05c2-e4c9-4f22-a292-296955e67c2a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b5a02413-d5a0-4bd4-a890-9384238ff587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f0010b-1643-4c12-8c60-f2991e28f3bf",
        "cursor": {
          "ref": "41b79484-25e7-4d9c-8121-017679ad7568",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bdc52997-117e-4366-838a-96bcf159af0d"
        },
        "item": {
          "id": "60f0010b-1643-4c12-8c60-f2991e28f3bf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9045dd91-3ae2-4fed-b00e-355f4e7934d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fbc22a-92b1-4f5d-8468-2a411a30506d",
        "cursor": {
          "ref": "f8e04abb-85c7-4d37-bf4f-274ba8b1f363",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "28e653ce-d0eb-4d97-8f6e-94b51eac7ff1"
        },
        "item": {
          "id": "b1fbc22a-92b1-4f5d-8468-2a411a30506d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "110f1300-f0af-499a-9b2b-84347a615f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14eec6f-d5de-4db8-a1f7-14e71bb6966b",
        "cursor": {
          "ref": "4a97f7a7-b1f2-4daf-9076-272395985864",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ddc03d58-5d50-4108-a3d4-942f31ddbe04"
        },
        "item": {
          "id": "c14eec6f-d5de-4db8-a1f7-14e71bb6966b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "61a604ef-96e1-4a4c-876a-65e317dda3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25c472d-c305-4737-aea9-c17ae2f31457",
        "cursor": {
          "ref": "2af3a02f-7683-4160-96f1-68de7500918e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3bd2e3fc-f776-421a-b643-32a550032fea"
        },
        "item": {
          "id": "e25c472d-c305-4737-aea9-c17ae2f31457",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "445e9a40-49ee-458d-9856-44395664ac42",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "9ce436d2-9662-48bf-b4f4-05e44b8bfa4d",
        "cursor": {
          "ref": "4d4998b8-0245-4a12-a845-963ab7deaca0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "153ae848-9b86-485d-9d9d-2ffd5a55a1e4"
        },
        "item": {
          "id": "9ce436d2-9662-48bf-b4f4-05e44b8bfa4d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a5866bc9-7ca1-430a-978e-30bc22be1fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562e30f0-3a84-4dfe-b701-dfce59306f96",
        "cursor": {
          "ref": "c48dd7f7-dae0-4671-9b2b-8c1c96726b92",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fba15920-c3df-464e-9fb4-5d73a92ce1c7"
        },
        "item": {
          "id": "562e30f0-3a84-4dfe-b701-dfce59306f96",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb173d72-421b-401e-8268-f2b37063ba3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c1f0bc-830d-44f2-929c-ccbc0cd28df5",
        "cursor": {
          "ref": "ad9a8a5a-0a37-41d9-b0a6-cf6cd8115d3b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "51cca228-fa4f-4d3d-aa69-47d4152fc7ee"
        },
        "item": {
          "id": "59c1f0bc-830d-44f2-929c-ccbc0cd28df5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "363e19c5-de20-4632-bfe4-838fed8d0f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b42a61-76c1-41a6-a0d1-3bb0d5213898",
        "cursor": {
          "ref": "de892d7d-e195-4a50-b41c-3e215d73e3e4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9185dd3e-d8ab-41cc-9f75-87d45cab0ae7"
        },
        "item": {
          "id": "91b42a61-76c1-41a6-a0d1-3bb0d5213898",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "51f04bb6-4e68-4465-80f5-088b0d94d099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d0b340-4a41-441a-8990-5882adeae880",
        "cursor": {
          "ref": "e997760e-a888-4f51-8f61-836858b79acc",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9e230bc4-c1fb-4f74-a7af-f9b73a04b7d1"
        },
        "item": {
          "id": "e4d0b340-4a41-441a-8990-5882adeae880",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "94ef7b56-e501-4147-b24f-aeff5edc3dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273320e2-c3bd-4446-8e22-eb5f0fd11c2d",
        "cursor": {
          "ref": "44ca870a-6fe2-453c-a020-7739a4e8b89b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0560e6dd-d30a-4903-b42d-db4686d501a9"
        },
        "item": {
          "id": "273320e2-c3bd-4446-8e22-eb5f0fd11c2d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "58c03c8f-c611-418a-96b8-df8d026829c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb2064b-16c0-4c6b-a0e4-fe570f8d64fb",
        "cursor": {
          "ref": "a13ea3d2-3a9d-4465-8c02-1b587da50439",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "41034faf-d2d1-47a8-8606-d6fa4a840898"
        },
        "item": {
          "id": "ccb2064b-16c0-4c6b-a0e4-fe570f8d64fb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8d2d7c84-9466-4c3a-ba22-afd1e0966314",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "45c65cf2-d4b1-4eda-b58c-82ec24e1eb36",
        "cursor": {
          "ref": "9a41e609-382c-4f85-ac42-d72b6b871e65",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9904a372-54d9-42e9-a576-c024e6d48f00"
        },
        "item": {
          "id": "45c65cf2-d4b1-4eda-b58c-82ec24e1eb36",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b972e743-d851-4c5c-88ec-10308a2817e6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "cb2152af-a1aa-41a1-84d8-61932ae503f4",
        "cursor": {
          "ref": "80326f8c-4d86-40b7-9693-eb93a6438b78",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "68fb28d2-854f-422d-bc89-b9a4a4dab8a5"
        },
        "item": {
          "id": "cb2152af-a1aa-41a1-84d8-61932ae503f4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "18f55891-899c-4eca-ac4b-8e73c6b1ee7f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "2e552854-1d08-4e4d-99a1-020641098b53",
        "cursor": {
          "ref": "9d516c44-8974-4b23-9e4e-fcde52228959",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be2703d3-0e70-4c92-8f95-424710f08e85"
        },
        "item": {
          "id": "2e552854-1d08-4e4d-99a1-020641098b53",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ba1d2e5e-5d7e-4582-ac1f-ccb913e29498",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "8440a5d7-bcb8-48b9-8663-705289811dff",
        "cursor": {
          "ref": "914b2b70-7bd8-4330-bce5-8bc652c3e49a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "59130182-ddfa-44a6-a5a9-2096071ac8eb"
        },
        "item": {
          "id": "8440a5d7-bcb8-48b9-8663-705289811dff",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "511c31d0-271a-4079-9492-6ecb3750db32",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "b67930a6-116e-4af3-9c32-fa900201e278",
        "cursor": {
          "ref": "3aae1d3a-8fcf-4402-b835-c28b499f83a3",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9fd46b77-2a24-4d6a-9a68-0371ba5ff1ad"
        },
        "item": {
          "id": "b67930a6-116e-4af3-9c32-fa900201e278",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ea046326-84fd-4d78-93a6-bd0cbb12ecca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "0f4070f8-07a3-4946-99ad-11bba58e5fbb",
        "cursor": {
          "ref": "615aa98a-afd0-42ee-9a59-bc282c7b5a3e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9884e0f8-6a2c-4877-b5d2-31aee56d630b"
        },
        "item": {
          "id": "0f4070f8-07a3-4946-99ad-11bba58e5fbb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "30b18fb7-6a6c-449c-80d6-f5b45f223208",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5ecff6-344c-4cd2-b2b8-b62e6516d076",
        "cursor": {
          "ref": "c81d94b2-372c-4431-a060-aa494cd36e76",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "138e6f2a-8ad4-4698-91d0-fa4fbd81de4e"
        },
        "item": {
          "id": "3b5ecff6-344c-4cd2-b2b8-b62e6516d076",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c9bc95ee-0876-48c9-b086-d33bbb218e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d729b2-0ac1-4212-80e4-b4579ffc16eb",
        "cursor": {
          "ref": "66e61164-f7c2-4a6d-8ace-6713e7c8230e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ab05a105-d5e6-42e8-a954-bd945be0cafb"
        },
        "item": {
          "id": "71d729b2-0ac1-4212-80e4-b4579ffc16eb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "51ac4280-7e67-46a7-b5bf-fdb59807318a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf438e8b-775b-40b7-af95-f905795edd7e",
        "cursor": {
          "ref": "01b53676-2203-44f7-98fe-dd69e87c2cef",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3b29bd0e-af32-4430-9716-5b9ae66a8c7b"
        },
        "item": {
          "id": "cf438e8b-775b-40b7-af95-f905795edd7e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "273950d0-cc39-4d50-a187-28c6964b897a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ebefa4-74ef-456c-a670-368fdb3603d5",
        "cursor": {
          "ref": "9b945ed0-126b-4dd8-84f1-9492b4e1c928",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c53ee81b-a606-4e91-bc17-3c2234dee11b"
        },
        "item": {
          "id": "04ebefa4-74ef-456c-a670-368fdb3603d5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "39d2340f-33ef-4fab-ab70-e514490cf6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c42031-ddb0-4b39-ae14-7b99c4d92f62",
        "cursor": {
          "ref": "c916bdaa-7f62-4969-a428-a5a05e8c4b32",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "65571c17-34b4-4293-8353-0baf5f58953d"
        },
        "item": {
          "id": "43c42031-ddb0-4b39-ae14-7b99c4d92f62",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "74aba48f-7fb5-4055-96df-db601b26e340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0be84e-25c1-4b3c-85df-3c63843d49d3",
        "cursor": {
          "ref": "f3eb50d3-d37a-4833-a3e4-a9c2925a0e03",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "080b8051-3adb-4513-bd29-7440bb41ad36"
        },
        "item": {
          "id": "fb0be84e-25c1-4b3c-85df-3c63843d49d3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "17f5a22a-d165-4b80-8409-08133df5857d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a6f7bb-d701-42aa-979d-8dc418768e4b",
        "cursor": {
          "ref": "3a5c1c56-2668-43fd-b445-ac4c97807e30",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "72be9e56-36b8-4bdb-9a97-1958099b2a42"
        },
        "item": {
          "id": "03a6f7bb-d701-42aa-979d-8dc418768e4b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cfc5a68f-8fb9-466d-aff7-019e921efdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70d331e-5a85-4568-bc19-21091715afe7",
        "cursor": {
          "ref": "a65cd528-ab10-4fe6-91e3-a13411f66a72",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "48c32b69-782b-4db6-a174-f639c65e634d"
        },
        "item": {
          "id": "f70d331e-5a85-4568-bc19-21091715afe7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b83ee9c5-0f70-4e55-ad27-4122d78bd1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b402e2-2d07-4f08-9216-b6c88065bf50",
        "cursor": {
          "ref": "4e765022-686f-4273-8f57-e126d27ce14c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d87ca393-c355-459c-92a1-642e6ec803d5"
        },
        "item": {
          "id": "01b402e2-2d07-4f08-9216-b6c88065bf50",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "592c5527-db2f-4c1c-a2c6-97f2b676f0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e46a4b6-4432-454f-9670-12548e362bb7",
        "cursor": {
          "ref": "adb5307b-f906-47ce-a158-1fd42410e8f8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8500113f-32f6-4365-b18d-9894da695172"
        },
        "item": {
          "id": "9e46a4b6-4432-454f-9670-12548e362bb7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "141916c2-4b3b-44d8-829d-816fafe74b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df6c9eb-93be-4ef7-8ad0-a6df1fd9ce6b",
        "cursor": {
          "ref": "03c41798-9a7a-4ede-bf28-32cbc7ca93e5",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "96837e85-1e93-4ecb-b06e-f5d942e7a310"
        },
        "item": {
          "id": "3df6c9eb-93be-4ef7-8ad0-a6df1fd9ce6b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0e5d895e-041c-4a2d-b3a3-141bcd50b705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cac776-d52e-4d1d-8513-7554a80af659",
        "cursor": {
          "ref": "02a1b937-248c-4c59-9c31-a4b7d8dccbe1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dc9bb94e-3ac2-4812-b5a3-bb8ff7c59ed6"
        },
        "item": {
          "id": "e0cac776-d52e-4d1d-8513-7554a80af659",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f249b37e-ef71-4d02-a705-01518df5b3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fb8432-5076-4a8d-a8d9-d5a8b6b7e803",
        "cursor": {
          "ref": "5ce613a5-45a3-4057-987a-9ed85c4de7e2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b283230d-c0eb-4c77-bf75-3feace169b14"
        },
        "item": {
          "id": "e2fb8432-5076-4a8d-a8d9-d5a8b6b7e803",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5a744368-797b-47da-8508-606bf822d6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5523ab6b-9364-439c-a9ad-cbf4d25e2705",
        "cursor": {
          "ref": "28e1180d-48ef-4a67-b03b-9fad4025f113",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "965c9fa1-5c59-4bd9-8082-b36126848e86"
        },
        "item": {
          "id": "5523ab6b-9364-439c-a9ad-cbf4d25e2705",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "671b4238-e813-480b-9245-8c7c2986be03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987d1229-8574-4d73-b926-442078418dd9",
        "cursor": {
          "ref": "0ebb3b3d-a4fb-4af5-b2f1-9bc79b2a82ba",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "51a717b7-18d3-4c25-867f-f01efedadb8c"
        },
        "item": {
          "id": "987d1229-8574-4d73-b926-442078418dd9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "51f643c0-5117-43c0-94be-b09fc5502552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4167d50-2899-4e9c-8ff5-075be2f70ebb",
        "cursor": {
          "ref": "37ea994d-7fba-4708-ada1-13051700bbd3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e30ae21e-a8dc-4c3c-ab7b-e0d638c79de9"
        },
        "item": {
          "id": "b4167d50-2899-4e9c-8ff5-075be2f70ebb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "76868a41-d357-4d98-8b0d-b4664fc1b464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88310ea9-5596-45cf-9be7-8586f50e1f23",
        "cursor": {
          "ref": "f673a84a-0c42-4045-997b-7fc4fd8fe1da",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5ba49b0e-283d-4eee-82b7-ade57055d771"
        },
        "item": {
          "id": "88310ea9-5596-45cf-9be7-8586f50e1f23",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6f73ab8e-883b-47be-9a35-08618cb08699",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "d6203d29-0e9d-493e-b32d-9d796449b173",
        "cursor": {
          "ref": "f06dca30-a5c2-4af1-a55a-d9aa819118be",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4dc6a624-30ef-44e9-b133-da228189653a"
        },
        "item": {
          "id": "d6203d29-0e9d-493e-b32d-9d796449b173",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9f4b0c59-8904-4d6b-8a49-d1888460b023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee55cccd-7195-457b-88f6-1cc3070dd367",
        "cursor": {
          "ref": "1d7b6a63-c32e-4b77-bc96-ed345faf1c91",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "23c275f6-4197-4269-9e63-bd8498a08321"
        },
        "item": {
          "id": "ee55cccd-7195-457b-88f6-1cc3070dd367",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fa659b13-c5c2-4480-91ee-cf4d15678db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b604beb-89e4-4ee5-98b3-29c52b7061ad",
        "cursor": {
          "ref": "80ca0a0d-18d4-4eb1-8798-fe6c521c1c23",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "288ad538-6862-42c3-b0bd-b6dc35aa0c09"
        },
        "item": {
          "id": "7b604beb-89e4-4ee5-98b3-29c52b7061ad",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1e4128b4-7daa-499f-8bae-6c1cbdfdca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bdb0d7-55fb-4cdc-8218-d34a5d43a78f",
        "cursor": {
          "ref": "385e4bde-8342-4d80-b3f2-7a2092c4a614",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6f2eff9f-b832-43f3-9612-712d3d7d4127"
        },
        "item": {
          "id": "f1bdb0d7-55fb-4cdc-8218-d34a5d43a78f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1b11dc1a-a446-4749-b4c1-de9900df4d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd6837d-fde4-4654-9f84-ab120e62d921",
        "cursor": {
          "ref": "f20c3202-f81c-44d3-ace4-0bcbc28f4c4c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f6ec61ca-d02c-43b5-a98f-93cd9f588b94"
        },
        "item": {
          "id": "2cd6837d-fde4-4654-9f84-ab120e62d921",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c02178ad-c028-4304-9b59-d9d086d94dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2f34cc-12e1-4336-a97b-9775c7acb47e",
        "cursor": {
          "ref": "498f3df4-fd1e-4e8b-b9e7-14cacb57135d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "198c6c1b-e783-45e4-9a04-96e289f67c15"
        },
        "item": {
          "id": "7d2f34cc-12e1-4336-a97b-9775c7acb47e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1493aef4-d672-40f8-9290-327e1885dbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5029008f-4cc5-4b39-9053-e3f5d81ec3db",
        "cursor": {
          "ref": "5dc8375f-48f3-47de-9e61-2e1530073b25",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6228f40-6810-47c4-a93a-6e10e25ec0cd"
        },
        "item": {
          "id": "5029008f-4cc5-4b39-9053-e3f5d81ec3db",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8b8323db-5e84-4b53-beff-a322a91d35b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6026b613-324b-49db-9469-807c30ed5437",
        "cursor": {
          "ref": "1fba5613-df27-4ade-96a8-aa09025af063",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "386cb04e-7b45-4409-b796-bc42c66758a3"
        },
        "item": {
          "id": "6026b613-324b-49db-9469-807c30ed5437",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "274ac675-2c93-4346-8fb0-96ac38973bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1543212-e5cf-4407-b682-8ab8c087633d",
        "cursor": {
          "ref": "2d0f4c5e-258f-405a-81ac-e40065319080",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fd3b3afe-1dd1-47c7-9d74-d95c4985249d"
        },
        "item": {
          "id": "a1543212-e5cf-4407-b682-8ab8c087633d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "84dc8c31-1ba6-4b80-9786-1aa9a6311d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fa14ca-72e8-4822-9831-a95f516dafbc",
        "cursor": {
          "ref": "360d60ff-5008-4daa-a59c-93142a7837b0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c4d696fe-fcdf-422c-badb-5fdd6dfd634f"
        },
        "item": {
          "id": "d0fa14ca-72e8-4822-9831-a95f516dafbc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fcd2256b-d2ee-442c-bb1b-ab9baf14cd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeaf2c7-8343-40f9-bb18-ae0983ac632b",
        "cursor": {
          "ref": "ef74bc59-fc29-4b6a-b030-d1a6fc9ab584",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8c45a256-34ab-4f27-9ad8-2bb1dfc2e69f"
        },
        "item": {
          "id": "2aeaf2c7-8343-40f9-bb18-ae0983ac632b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "47c82d24-d819-42d9-9bca-93a4eec9bc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6861f6f2-b83e-4523-89b4-5778c7cb8444",
        "cursor": {
          "ref": "1964a111-2e57-4017-bfb8-6523bee9a5f6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0bd12b65-d9c3-478d-bd76-50f80f4c9919"
        },
        "item": {
          "id": "6861f6f2-b83e-4523-89b4-5778c7cb8444",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1f93d8cc-8b8a-4968-9eed-fa1f7a2f3f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd7eb60-a46e-4827-87d7-70326bb36a1d",
        "cursor": {
          "ref": "373a9752-ce71-4209-89bb-f4aed158b134",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7d65e84f-0f6f-4d08-8d3e-3410c73994b6"
        },
        "item": {
          "id": "2dd7eb60-a46e-4827-87d7-70326bb36a1d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "439b5481-388e-46d6-b927-fb0af71e01df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1013d0ef-e561-44f6-81c7-439905e14a50",
        "cursor": {
          "ref": "724846a6-67f6-4977-95b7-95bf4d98f477",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a16930d1-6bb0-4b33-9a02-5e6c816f65d3"
        },
        "item": {
          "id": "1013d0ef-e561-44f6-81c7-439905e14a50",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8a27eda4-e207-475a-986f-8d64afaafde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d38555d-ddf2-419e-921c-966858d29100",
        "cursor": {
          "ref": "36614972-1221-40d0-9db3-1882fcb0603b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "90d6f3cc-2718-4e73-abb1-69cf55f9e8dc"
        },
        "item": {
          "id": "8d38555d-ddf2-419e-921c-966858d29100",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e829216c-b8c0-4221-b466-54dc48d05548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf90ba-a0a8-4e6f-83b2-375d3f460c21",
        "cursor": {
          "ref": "f13037c9-ce21-42f3-8874-08ae01eacc0e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ad61d39f-74c3-4735-b1f3-ad8f38acf865"
        },
        "item": {
          "id": "d8bf90ba-a0a8-4e6f-83b2-375d3f460c21",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a838bbde-2c9f-4eda-affc-8b1a0ab928dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39426b6-ed8b-40a8-a177-e6c1938d54cb",
        "cursor": {
          "ref": "7b8bddff-c241-49aa-8991-dd962101a4fb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1d9b32a7-ae98-457c-b88c-b23bac88b9b9"
        },
        "item": {
          "id": "b39426b6-ed8b-40a8-a177-e6c1938d54cb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7d3ef688-6093-4484-bee5-5162f4d600c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309624dd-ad37-47f8-b567-72855b08bd48",
        "cursor": {
          "ref": "4c460645-2639-4e46-a0bc-f4d627d67368",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4cb90e80-6199-4ab8-b9de-3019cf4cd662"
        },
        "item": {
          "id": "309624dd-ad37-47f8-b567-72855b08bd48",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "420cda9c-49de-4b77-ade8-afd7d74832db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dd3f5e-b6aa-4b90-829a-3ddeadeb1862",
        "cursor": {
          "ref": "9f4bd5c2-c946-4e18-a8e1-15e8c0c3722a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e8978e21-4feb-43e7-a372-2901f214e17d"
        },
        "item": {
          "id": "d5dd3f5e-b6aa-4b90-829a-3ddeadeb1862",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "59a1a6a8-9e03-4b3a-985d-8da2a70a8b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b5a57f-1eee-4a79-b7d6-e6ad4686f4a8",
        "cursor": {
          "ref": "27242cde-5b2f-4768-9a25-0b321c419ece",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "628666dc-dcc6-4a12-bb7a-b8f0b7fb0fa0"
        },
        "item": {
          "id": "52b5a57f-1eee-4a79-b7d6-e6ad4686f4a8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "515253d5-4ad1-4192-98b1-038421a55578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1568a01c-8b64-4f7f-b7b9-abe18227f478",
        "cursor": {
          "ref": "2b14edd1-cb42-4a3a-a3e7-fd589ddec6fa",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fc254b26-82a7-43e7-8321-36398bc16375"
        },
        "item": {
          "id": "1568a01c-8b64-4f7f-b7b9-abe18227f478",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dbf03900-667f-4c66-a135-450fd987f5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99791acb-8984-46b9-9090-35271869aac3",
        "cursor": {
          "ref": "f519db30-0dfc-4858-aa00-bad3b0d441f8",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "93fd5692-2371-44af-aee4-3375f2407953"
        },
        "item": {
          "id": "99791acb-8984-46b9-9090-35271869aac3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5f1131a4-c949-49f4-95f0-1f7ddc1db72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069451c7-5b39-4d31-9067-ec807043c046",
        "cursor": {
          "ref": "34d558c5-0728-45b7-9224-430b928e22ea",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "11847d4f-fae0-4aeb-99e3-af01a87773b2"
        },
        "item": {
          "id": "069451c7-5b39-4d31-9067-ec807043c046",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f1c103b3-d093-4149-b19c-7356ddfe0de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815cbc6c-5bc8-44d8-a696-1c3b4d77b9c3",
        "cursor": {
          "ref": "a7255b2c-d429-483b-8fd1-fd9a98626a26",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "245b41b1-7409-45dd-85d1-80d9fcc40022"
        },
        "item": {
          "id": "815cbc6c-5bc8-44d8-a696-1c3b4d77b9c3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1ff35456-0560-493d-9e12-beb0291135b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ccd0b4-5928-46d7-ac03-4340af81c25a",
        "cursor": {
          "ref": "636dbf5b-1934-4391-9833-c5bd40b4868c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b9ad2a36-5043-4ded-9626-0678749f1062"
        },
        "item": {
          "id": "b4ccd0b4-5928-46d7-ac03-4340af81c25a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "02f9023f-b9ff-44e5-8da9-b94ccb279b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce526f49-441b-4a51-9066-ef666ee9f3ec",
        "cursor": {
          "ref": "32dcf949-173d-4693-91d5-809c08873472",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "aad3f9b6-6f5c-447e-9769-7fbb3f23a929"
        },
        "item": {
          "id": "ce526f49-441b-4a51-9066-ef666ee9f3ec",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9a0737f0-652f-4a00-a341-60862faabdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eab4942-32bf-4294-8751-9f06d4fbda95",
        "cursor": {
          "ref": "7f07f49a-ebae-4a1b-b628-7b63741e5b20",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5cb79ddc-6add-46ae-b279-6c24b1d2779d"
        },
        "item": {
          "id": "2eab4942-32bf-4294-8751-9f06d4fbda95",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "90c26f06-d255-426c-ad9e-8157394916cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1df7ea-d3f9-4436-b1e4-a04deca37f11",
        "cursor": {
          "ref": "c98df8d6-f93f-419a-b918-1d68200985aa",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "798cc8b4-c632-4cbf-91c7-7d69fc0395c3"
        },
        "item": {
          "id": "ef1df7ea-d3f9-4436-b1e4-a04deca37f11",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "343bc9f3-c227-4588-8ce2-3c293b70b906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69902f25-0486-486c-8885-4526e4fdd870",
        "cursor": {
          "ref": "3362bf8d-28dc-4695-a65a-974fd14dfbf1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "48703a71-e4a4-42d3-b858-23f61323f3aa"
        },
        "item": {
          "id": "69902f25-0486-486c-8885-4526e4fdd870",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bc850cc2-dfe5-4b6b-813e-5dd71e9e0d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd99c7d9-1e76-4fe0-ae93-0887056fd703",
        "cursor": {
          "ref": "bad1462f-36ad-4e4b-94d0-eeddf79d9e85",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f7999325-e811-4fec-afa9-499825eb4d7e"
        },
        "item": {
          "id": "cd99c7d9-1e76-4fe0-ae93-0887056fd703",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "842ca465-7a37-4f5f-b1c6-4199bcb6283b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29907a1c-aa23-4bfa-a270-92a39af430e1",
        "cursor": {
          "ref": "6aaf16c1-72aa-41ed-b3c6-1a77c85cfb72",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6cbc54ab-8167-4a46-a052-7fff73b60200"
        },
        "item": {
          "id": "29907a1c-aa23-4bfa-a270-92a39af430e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0b42f606-aed1-44ba-a3b0-d115665494a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030deec1-fc7a-497e-810c-eeabc3bf52c5",
        "cursor": {
          "ref": "226dad33-2cb3-4d9b-8d54-c4994b8f8b40",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3e77c6a0-1ee7-4052-a43b-03659e3f156a"
        },
        "item": {
          "id": "030deec1-fc7a-497e-810c-eeabc3bf52c5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "057c819e-9155-4c60-8928-6b96542953ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43f7ce0-b4f3-4ccf-a8ab-aa00f2b9a8cb",
        "cursor": {
          "ref": "6fe60b43-6440-43f4-9fda-ad6b40cba471",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1a8881cf-1afb-4716-bd03-57bfd58000c6"
        },
        "item": {
          "id": "b43f7ce0-b4f3-4ccf-a8ab-aa00f2b9a8cb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a80be94f-1a9c-4839-98b1-6ce0dcfd5755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c127f5-406b-4c57-9b77-e213e858c943",
        "cursor": {
          "ref": "c7fbbb8c-c5c0-4bfd-8bf4-b39feaa18da6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "aabc61ec-c7e7-41b0-af61-337b648bfff6"
        },
        "item": {
          "id": "63c127f5-406b-4c57-9b77-e213e858c943",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dabb0988-661c-4167-bee2-cd61a484e107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201097a0-fe77-41fb-86bd-6e4a69baadbf",
        "cursor": {
          "ref": "4c0da9f8-3cbb-481d-87f9-be27eb1bd41c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2011be1c-c77c-455b-a836-32f5a5fa44ed"
        },
        "item": {
          "id": "201097a0-fe77-41fb-86bd-6e4a69baadbf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9fee0035-1458-42fc-b4ef-1f7e7a7f218e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e95f0be-b805-4241-9738-954571fb353e",
        "cursor": {
          "ref": "e3a71624-5cfc-41ad-848b-475073a72732",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1ef01c33-43fc-40f1-bd41-f1fb24479cae"
        },
        "item": {
          "id": "9e95f0be-b805-4241-9738-954571fb353e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0718be7b-4443-46a9-b475-3b212147565c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0703cfe-42ac-4383-9410-ecb5fca2dc7b",
        "cursor": {
          "ref": "1fb9bb69-a17f-4835-94f4-aa33b7d936d8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "849497bd-3e13-4a56-96f0-736774521734"
        },
        "item": {
          "id": "e0703cfe-42ac-4383-9410-ecb5fca2dc7b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "53178b73-5514-46b5-b315-e7f0b529e35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849ceabd-24ac-4c72-8a98-ce1947f71844",
        "cursor": {
          "ref": "dd9dbca2-82fc-45cd-9fc5-bddaec652b8e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7558f183-fb57-4413-a303-d59a1576cf49"
        },
        "item": {
          "id": "849ceabd-24ac-4c72-8a98-ce1947f71844",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c32dc2d0-b72d-4068-99e7-627f4011448d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18d8406-427a-45bf-80db-ca2d399fe793",
        "cursor": {
          "ref": "9890d267-bf4e-464a-b9ba-c03fa3275da5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7b5a830d-bbfc-432e-b5f8-d43b8bd6c5cb"
        },
        "item": {
          "id": "f18d8406-427a-45bf-80db-ca2d399fe793",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "06ba4c5b-c434-4e6a-9ea6-261562b046de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600f59cb-b1d1-477d-9b93-7756364be41f",
        "cursor": {
          "ref": "b04e2bad-aaf5-4116-bca9-ed7adad539e6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2347b9ea-8812-48ea-988a-a01e7bca7dec"
        },
        "item": {
          "id": "600f59cb-b1d1-477d-9b93-7756364be41f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "94c982b4-cff6-40ba-a75c-905411a0f8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20633e7e-606d-416c-8695-c28f2c6eebf3",
        "cursor": {
          "ref": "7a5ca90e-b608-4c7e-96a2-3aa20e628beb",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9d3fbe9a-24fc-41d0-8349-cd41a394eb5d"
        },
        "item": {
          "id": "20633e7e-606d-416c-8695-c28f2c6eebf3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3e6b26e9-f5e1-42f1-9167-b3b520e7ca19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6073bc71-89e1-4380-a675-1dd44828f5cc",
        "cursor": {
          "ref": "e70dd81b-f2f9-4c67-bd41-a24df6d2b39f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2f0a68e9-038f-4a18-a6c2-59c132d98edf"
        },
        "item": {
          "id": "6073bc71-89e1-4380-a675-1dd44828f5cc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "34fed301-a3e6-4652-aa8e-3284476f7246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b78fb29-39fd-4282-99b0-7dbd18998987",
        "cursor": {
          "ref": "53cd4c81-992b-4dcb-84eb-45bfb9150267",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9292382e-1fc9-46e8-a028-7b66e00c165a"
        },
        "item": {
          "id": "5b78fb29-39fd-4282-99b0-7dbd18998987",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "99ea6dc1-38ee-4d69-b7e5-e24171d0a8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4b975d-3e2a-4651-8e89-a986c0e0c4d2",
        "cursor": {
          "ref": "6e0f9c44-d876-4dc1-ad14-77abf36119c1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2f7faa0f-dd87-474b-9725-8d5071b93bd6"
        },
        "item": {
          "id": "0f4b975d-3e2a-4651-8e89-a986c0e0c4d2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b31ea6e1-945e-49d3-b6f5-925efa8ea91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543476f9-023c-4cf0-a359-862b15f6c807",
        "cursor": {
          "ref": "36b8b773-f482-4b7e-a3bd-2d5dac7bed3c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5f1a9f3a-d477-4e09-be88-bf5a1801c99c"
        },
        "item": {
          "id": "543476f9-023c-4cf0-a359-862b15f6c807",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1e3bb9f6-0ca2-48d8-8757-ca5144cae321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b761af1-172f-47b7-9000-ddb07675f8a9",
        "cursor": {
          "ref": "2ab20bfc-129c-463d-abf3-8ad8f4d2a9bc",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ebab9c38-b478-46bf-afda-ebba717f0fe9"
        },
        "item": {
          "id": "1b761af1-172f-47b7-9000-ddb07675f8a9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0c064dc2-0d20-4b58-a2d9-0ab364e010ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90555d9e-c511-4d88-90c0-f7b5d3c72c19",
        "cursor": {
          "ref": "9d2ffbc2-76e7-47e6-9ab3-ef7faaf2f536",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c48c3542-f48a-40ab-a2dc-db09062ecf44"
        },
        "item": {
          "id": "90555d9e-c511-4d88-90c0-f7b5d3c72c19",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fc1b0af8-15b6-41d1-aca4-325027b6b424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e9e923-ca7d-474c-8ab8-a11fa52c05fb",
        "cursor": {
          "ref": "12e5eac9-fe82-4f40-ba1a-c0efc783c773",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "aba50c9c-f4bc-4523-a626-206ad5c0d5b5"
        },
        "item": {
          "id": "11e9e923-ca7d-474c-8ab8-a11fa52c05fb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4a557cdb-250a-4b04-981a-3ed785cdd233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0928219-a464-42ba-8364-0a44079392c0",
        "cursor": {
          "ref": "07e84b21-d097-47b0-ae24-35cbf9df0c02",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c44ce54-0220-4614-bff0-58a74c36dbb4"
        },
        "item": {
          "id": "c0928219-a464-42ba-8364-0a44079392c0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "94bd4c0b-69b3-48bb-85ff-52a6e0334daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6b7d4e-ef37-42d0-8476-d2b8ee7f6445",
        "cursor": {
          "ref": "818d1043-0bad-4c5f-93ad-43363c2cbedb",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b322d088-2a2b-410e-8553-d26a9838ed3f"
        },
        "item": {
          "id": "5b6b7d4e-ef37-42d0-8476-d2b8ee7f6445",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "663570ef-5880-479e-a151-ff64fc8be27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7928fe-cf24-4c16-b857-ec9a5c21b821",
        "cursor": {
          "ref": "ae81ae08-dd95-4dca-8c36-5cb55b2d1a7e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1d9de57a-b8fa-4626-bdbb-23323608211a"
        },
        "item": {
          "id": "6e7928fe-cf24-4c16-b857-ec9a5c21b821",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cc97aca6-e53c-4980-a4f2-ecbbc75f55e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b4e81-0a8d-437d-a122-84e322cd9863",
        "cursor": {
          "ref": "5c25d4eb-31ce-45fd-b7d4-f71299c4a053",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "06c5d674-d16a-469c-b885-f87c14e85ca0"
        },
        "item": {
          "id": "418b4e81-0a8d-437d-a122-84e322cd9863",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6b76a2b7-ad74-4a56-92a0-9fd1a0ff89d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c766ed-1d66-4430-91e1-2fbab47a99c5",
        "cursor": {
          "ref": "2a99d6cd-c46a-4488-a488-11615fb58727",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0b2854f8-272e-41bd-8738-ccf9e32f34be"
        },
        "item": {
          "id": "f5c766ed-1d66-4430-91e1-2fbab47a99c5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "351de667-a5a8-48a2-81f6-699002f5b7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18955899-fb06-4f45-a1ce-f9ddee79219f",
        "cursor": {
          "ref": "a93f9747-d6b5-48bb-b25d-0ad6e38c0083",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7d7d7399-a561-4f26-b0df-0ef68d2d225d"
        },
        "item": {
          "id": "18955899-fb06-4f45-a1ce-f9ddee79219f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "59fe9e0f-ff63-4a7c-a717-d305a281e024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ba1fc2-07fb-4402-9a59-e9332a89a649",
        "cursor": {
          "ref": "585689fd-8389-4641-a290-af6ff8ecbe9a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f0a9cbd7-8f17-42b5-9f32-73dfe349aa7d"
        },
        "item": {
          "id": "69ba1fc2-07fb-4402-9a59-e9332a89a649",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ce30928c-f7f0-4c39-9f3f-8641af06ed7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec215658-2f17-42f7-a065-485967430c85",
        "cursor": {
          "ref": "dd69bff9-7a81-4689-bb43-9c2729f5cf15",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6cc4e226-ff10-4ad9-b183-9376255ac730"
        },
        "item": {
          "id": "ec215658-2f17-42f7-a065-485967430c85",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "350faa22-c457-4c3a-8cb2-bdc29f33e875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb33589-db3e-41ef-b777-a761b8f469ba",
        "cursor": {
          "ref": "fa93fb82-889b-44e7-9e92-a68571c8068b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8bd87f7f-e8c3-4422-940f-1e5abdc680be"
        },
        "item": {
          "id": "aeb33589-db3e-41ef-b777-a761b8f469ba",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3ca5d255-43fb-409d-a4a5-bb4abd74ae1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c20c15-ffb4-497b-b434-d15c16db79b0",
        "cursor": {
          "ref": "6aa92d98-a319-4d2d-b6f1-e774d521e5bf",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "52fd76a4-cb03-40fb-85c5-37d75f2a1ce7"
        },
        "item": {
          "id": "02c20c15-ffb4-497b-b434-d15c16db79b0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fa69455d-b99b-47b7-944c-aa8b5bd68bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eec80b-fa51-4ff7-b17e-1e8f0a672f7c",
        "cursor": {
          "ref": "058c1234-0611-4860-827e-26367db566e5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8455d7b0-7a6e-4128-87cd-31642108426e"
        },
        "item": {
          "id": "e8eec80b-fa51-4ff7-b17e-1e8f0a672f7c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "83f1de34-91f8-4b9f-be3c-fb0607b438e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9715d08f-9ffc-4755-a433-d6117855f52a",
        "cursor": {
          "ref": "82345c66-7d4f-4a8a-bfd6-05ad824f1c72",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e8fa6568-cedd-4479-98b5-cf6266a0d714"
        },
        "item": {
          "id": "9715d08f-9ffc-4755-a433-d6117855f52a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0887ca0e-9f7f-4719-b732-ec629a160e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430a0fbe-372d-48df-ba93-e856e773d058",
        "cursor": {
          "ref": "e327e1ad-c871-47f7-b2a6-d3f721746c27",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1788d166-4a94-46ef-a7d9-ddab01c9c477"
        },
        "item": {
          "id": "430a0fbe-372d-48df-ba93-e856e773d058",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "92826f21-c246-4eae-8745-6601355631da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5541a38-7189-4b0f-ba23-1fabffc74eaf",
        "cursor": {
          "ref": "eccb8063-35f2-4115-bd93-d790118eb107",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a5c66043-1583-40b6-a673-77dda54beb9a"
        },
        "item": {
          "id": "d5541a38-7189-4b0f-ba23-1fabffc74eaf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a2a31adc-ccc8-4737-9386-38a7c3a39acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48b94d7-55e0-4cc1-a107-29c55386d92e",
        "cursor": {
          "ref": "90559c3c-ae5f-498d-a615-d7d98eb62657",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "83715845-592e-469d-bf7f-cbf4eaefb6b7"
        },
        "item": {
          "id": "f48b94d7-55e0-4cc1-a107-29c55386d92e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "52509234-2e60-4109-ae7a-65a679b2eae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b9f5fc-0cca-4bf3-8583-5e0b05a57577",
        "cursor": {
          "ref": "30b6ad75-1680-4558-b5ba-c77f5fb451f9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8982df7d-8593-4b6c-bd34-cd61113d4570"
        },
        "item": {
          "id": "a1b9f5fc-0cca-4bf3-8583-5e0b05a57577",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c9cd4c69-7869-4aa9-bace-9331aaa0db0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb6341b-0247-4ca2-8531-05d256eae9d3",
        "cursor": {
          "ref": "2158b3df-de8c-4be4-b99a-8debee4c5ab5",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4170abaf-9643-46b6-9ed2-4cbaea38eb28"
        },
        "item": {
          "id": "2fb6341b-0247-4ca2-8531-05d256eae9d3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c0dba592-a8bc-4634-8bc5-b95fa18f9cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea74d22b-f610-4930-a8ed-1c0f1475ea8e",
        "cursor": {
          "ref": "acee50d1-0dc8-46b6-8c1d-c3384841e4fe",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c1248a3f-ab23-44b5-b7ae-559049376228"
        },
        "item": {
          "id": "ea74d22b-f610-4930-a8ed-1c0f1475ea8e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b937fd02-d7c6-412a-8442-4dfc4abf66e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bce8e6-f220-42db-b68d-7848e156b011",
        "cursor": {
          "ref": "21a822c9-a081-4ce2-89fa-e756da449f27",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "07a5a97a-ecce-4491-8b86-0abdd6d3a018"
        },
        "item": {
          "id": "e6bce8e6-f220-42db-b68d-7848e156b011",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1a8fddb6-f902-45eb-b00d-a8ab205d7ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 969,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30954599-22cb-4d95-86b7-cf10e5fcc394",
        "cursor": {
          "ref": "77d7c6ca-bef7-4332-98f8-8a7f28aaf6dd",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1cf726d6-af01-4f7d-a36f-e002f6c02493"
        },
        "item": {
          "id": "30954599-22cb-4d95-86b7-cf10e5fcc394",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "099bd124-2671-4d5a-8a8a-9ee48cf2f393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658ef8fe-d81e-4715-bfe0-711edaf2fd6a",
        "cursor": {
          "ref": "f974401d-c6d5-463c-bfcf-88c44472fef2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "80d614ca-3645-410b-a85e-36cf7c364bc4"
        },
        "item": {
          "id": "658ef8fe-d81e-4715-bfe0-711edaf2fd6a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "61e605b1-1b5b-401e-8f84-cb66ee2aafa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1b9bb7-b817-45b8-ac89-778c83b139f9",
        "cursor": {
          "ref": "df5cb861-8688-4445-8239-51535ee9bd57",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b827aa49-ae94-4275-b3d8-f41460a93386"
        },
        "item": {
          "id": "1b1b9bb7-b817-45b8-ac89-778c83b139f9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7e3701d0-5fe1-491c-9e1c-479176cd6a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20103aa-a8d5-4659-baee-f14d6bb5f86a",
        "cursor": {
          "ref": "b7c3bdca-5d19-421b-b868-ab5d83618c2e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "48b3bb48-35cf-4424-91c6-a9a348bce66d"
        },
        "item": {
          "id": "a20103aa-a8d5-4659-baee-f14d6bb5f86a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2181d93c-217f-4f48-8150-cc40912add5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc85ec4-d185-4af4-b714-757f3d4448bb",
        "cursor": {
          "ref": "f26f6ebc-bc59-4641-b034-5afcb7bb5437",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c6b7a165-7d9a-434d-bcfb-594dbd06f096"
        },
        "item": {
          "id": "2bc85ec4-d185-4af4-b714-757f3d4448bb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "27ce05e0-7b3a-4fc2-a145-2f8d7616758a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce75191-44e2-42c7-aa02-e80bdc9acb9d",
        "cursor": {
          "ref": "fc6a5520-50d6-4e26-968c-57727a362aae",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "167c9c04-e960-4620-8120-e56f69aae9e5"
        },
        "item": {
          "id": "0ce75191-44e2-42c7-aa02-e80bdc9acb9d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "af597ed7-d023-4d3e-8def-4dafd826620b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a39eac-bbb1-42fa-9660-e226c0c55be6",
        "cursor": {
          "ref": "932ce8dd-2abd-495b-bb8d-df6a1ff352e8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4472fe28-5345-4b5d-aace-23245e1a1086"
        },
        "item": {
          "id": "48a39eac-bbb1-42fa-9660-e226c0c55be6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9619cfd4-e9f1-4a8b-8b01-22e4d4b960e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775af536-6fd9-47c4-a3f4-6dbd5dca4a3a",
        "cursor": {
          "ref": "c7cad12b-25f5-4914-ab8e-5be81fd12466",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "49c5ab72-ca4e-481d-b1ae-1ed3c6b9701c"
        },
        "item": {
          "id": "775af536-6fd9-47c4-a3f4-6dbd5dca4a3a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "47db368b-1d41-4569-a718-c4446a50410f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204e45cd-aa90-46f0-a339-8ed576581d54",
        "cursor": {
          "ref": "5048ecb5-0429-4420-905b-c99dbbbeae4e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b0480ede-f84a-4109-890a-1cab8744be13"
        },
        "item": {
          "id": "204e45cd-aa90-46f0-a339-8ed576581d54",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2b759cc8-4a09-4ddd-9238-ca413f0ce1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3530628-f871-4aa3-ab32-8789a0f25ff4",
        "cursor": {
          "ref": "8e590234-e91e-4e1b-9ff9-3ca38d8ededa",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "61bf0452-65fd-4146-8161-ec1264df0c2b"
        },
        "item": {
          "id": "f3530628-f871-4aa3-ab32-8789a0f25ff4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "42f6d64d-9832-4f2e-9857-8971e8f53525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e42f58-3b52-478b-bc5e-3899090c8352",
        "cursor": {
          "ref": "2afa978e-59d1-4b4a-833f-def67826de0e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4ca7a338-16ae-490b-a005-c0fca01b5bb2"
        },
        "item": {
          "id": "78e42f58-3b52-478b-bc5e-3899090c8352",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ce2bf7b4-88cd-4f5f-a47c-3f0c4804f6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf7f3e9-8fc7-431d-9388-c54bd5035722",
        "cursor": {
          "ref": "a11f3098-ceb9-4461-a45e-e25b0ebde056",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f74c247e-6a0f-416f-aefc-b240614e5631"
        },
        "item": {
          "id": "dcf7f3e9-8fc7-431d-9388-c54bd5035722",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "642ecc51-7abb-454c-be38-d1d263065e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1834f33f-ab86-4390-9375-8ace3236625e",
        "cursor": {
          "ref": "dc65d61c-86aa-4fb1-8e12-6f539f490c50",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9d2ac580-597f-475a-a385-12953c6769e7"
        },
        "item": {
          "id": "1834f33f-ab86-4390-9375-8ace3236625e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "83e14ee5-ea4c-4242-b574-d46b75abfb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0956d137-8bc0-4e9b-822a-7503948f6bbd",
        "cursor": {
          "ref": "5d792645-a4fa-462b-a776-a230cefa084b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3f480779-57e6-4c9f-88ad-63eecd36e491"
        },
        "item": {
          "id": "0956d137-8bc0-4e9b-822a-7503948f6bbd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f68533f7-2e16-49ba-ae4f-a751b789c1c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5d05ce-a10c-43ce-9f7b-5281b3165011",
        "cursor": {
          "ref": "eb8a40be-2a5e-4ca5-a716-8e2ede3e0f48",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0a12521f-067e-4574-85c2-c9d3dbe4d328"
        },
        "item": {
          "id": "fa5d05ce-a10c-43ce-9f7b-5281b3165011",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5e35ba7f-3c32-4650-876b-bf669c98e396",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9f10ad-a70d-454e-9cef-49efe9be6f28",
        "cursor": {
          "ref": "ee077cda-7d5d-4202-ae96-ed8ae8fc248b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3dc2b78e-75bc-4ee6-a277-8e27b27de884"
        },
        "item": {
          "id": "8b9f10ad-a70d-454e-9cef-49efe9be6f28",
          "name": "credentials_verify"
        },
        "response": {
          "id": "631cc232-2bbb-4f1d-8fc7-67d66a3f94ca",
          "status": "OK",
          "code": 200,
          "responseTime": 3364,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a01d62f-ec77-4be1-8663-bb2e4df54d57",
        "cursor": {
          "ref": "5469cb93-9fa5-4b58-bdc7-41b61130272f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "239e7874-54d7-4a51-9d7c-5f299084cf04"
        },
        "item": {
          "id": "2a01d62f-ec77-4be1-8663-bb2e4df54d57",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a312beae-4d60-48e1-8471-3420ec6a6ca4",
          "status": "OK",
          "code": 200,
          "responseTime": 2710,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eacb02-cf53-42aa-82d7-8c2b49097629",
        "cursor": {
          "ref": "b36477fa-fa19-4585-af6a-38bc6b4cec39",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "677d6644-92fa-4c50-9983-f7d3fe913eb1"
        },
        "item": {
          "id": "14eacb02-cf53-42aa-82d7-8c2b49097629",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b21a104a-1b93-4e65-be04-f6d8a2677b9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eacb02-cf53-42aa-82d7-8c2b49097629",
        "cursor": {
          "ref": "b36477fa-fa19-4585-af6a-38bc6b4cec39",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "677d6644-92fa-4c50-9983-f7d3fe913eb1"
        },
        "item": {
          "id": "14eacb02-cf53-42aa-82d7-8c2b49097629",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b21a104a-1b93-4e65-be04-f6d8a2677b9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e03b5b-ce98-4575-bc46-c4ae803e566f",
        "cursor": {
          "ref": "b87b18f7-0575-46a9-b488-8a87f6e34632",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b735b649-a5a7-48ed-9132-fae606a3538d"
        },
        "item": {
          "id": "13e03b5b-ce98-4575-bc46-c4ae803e566f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5973d66a-d7b6-42c8-bcdc-a3521788a297",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072f3dd9-cdaa-4bd1-b9d3-5ff21332c613",
        "cursor": {
          "ref": "88e50739-3061-4482-8654-64d7c1f31ce3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "93b15b14-a9f3-4ea4-9750-c157171b34a7"
        },
        "item": {
          "id": "072f3dd9-cdaa-4bd1-b9d3-5ff21332c613",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8d8a7783-3229-44db-a1a6-47945717ad28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}