{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "711ab3a3-5efe-4ca3-83dc-ed9ef8850f84",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8c5034e0-7b49-4fd6-a60e-e43595f52468",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14de0f08-515a-48e6-9050-bf78b90ac194",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d6672e63-101d-49af-8225-1114cb53e323"
                }
              }
            ]
          },
          {
            "id": "3989c663-d0f9-48cf-bb45-8dc946a671db",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1bd292ae-6af5-4b9c-b5a9-f7b764fc658e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ca9512e6-2c10-4b2e-a7cc-f491dac443e7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f166de54-966c-4c0b-aca0-c586bc278c16",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3c7519c6-8f98-428d-9364-61783766095e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b110fba-9af2-4614-9807-96f948e6f5e6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61ef4e72-ee82-4900-b510-2da673e78b87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa365c29-a7ab-436a-87ae-4b5484dd62d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3506ea6e-f797-4e3d-96a8-728d230e9514",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c6016cf-aec2-4706-a7d6-c7cc98c6524d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "56a52618-4efe-42f6-a0cd-36e29db45572",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1fab390-24fe-4762-bbb2-42ac187f6745"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a93438ca-9c5f-48af-ba31-f4bd8d22a951",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f08ffb71-12e2-4f6c-9794-9cfaab258bea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a61d1b33-7061-4653-8b77-acd0c810cf59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14772268-1b15-48d4-9fed-87ea26409c72"
            }
          }
        ]
      },
      {
        "id": "5a4d3a97-1194-45d7-a5f9-0a3159234eb7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "14d79822-4a41-4716-aa32-651e9820a860",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de342a48-7294-477c-a51d-f5af616d7c3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef35ad4c-60c5-42a9-88a0-c225b7082dde",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6937a122-aff6-424b-a565-4bd5e5361e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "281bb86d-8319-4f5e-bd9f-cefe86ee2835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b72df4f-694e-4796-8201-130c52b131bc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153973cf-eedb-4c5c-873e-361b31008ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad7ee583-1131-40a9-9a9c-95cf2cff5178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049c2a9b-3161-4c64-9666-bd6799923abd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704682ef-4972-4618-941d-9884b5c8e072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3740b67-ab26-4752-8360-a5e705877150"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d65c8483-617a-4aa9-8837-d0bdad5e2216",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3216afe-14c4-44b1-a272-062c83632837",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc9cc6d-4267-43e7-a837-e65eb8a68c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "778fd990-c25b-4dc7-a82e-cc70cca1bb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5564d104-77fc-420f-a3af-5c1fb11a0605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2820a83e-770b-4648-b949-4c422837364a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "caa87f79-1185-4e00-9dbb-02c1bf3e379c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60c2c51a-5502-4185-8cb9-70c42d3da325",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17bf70ee-b475-4e3d-9efd-be1389926a66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1a28fadd-7544-49da-9f08-b9ea9d219eda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec04ce2f-48ad-4765-8022-64655c732652",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4b5b6d53-9bc0-4177-9bc7-3976d1309fb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f652aa6a-4c02-4947-bbd9-4909f574f835",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69a243e5-4dc9-42c1-8753-36730a795962"
            }
          }
        ]
      },
      {
        "id": "20987c28-2585-44aa-8eb0-ac5289150e32",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "110fcc36-9123-4407-95ca-cb35480106eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74a6df91-12a1-4105-a1cb-064e39495fb3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ef98f505-b347-420c-bff4-3570b917c769",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bd37af-ad50-4f1c-8590-bf92a4e5f3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077eb7db-d4b9-4106-b695-bfcde936aee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3478b443-0fb8-412d-8da1-76c7ada72f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a70e4da-5c5b-4dad-a131-504495d2beb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2e1684-e94b-42ee-aafc-3f314e725c95",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0a46a9-0a2c-4190-b901-271841a6e12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec64aa2-9ba9-4f61-9070-2dcbc69bb1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da31e66-370d-4829-9af9-418cb11ed35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52bdbbfc-2fab-4cb9-b774-92041c1a9c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950d8268-c973-4cba-9fda-b3c0e6540ad1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83041154-1c98-41cd-862f-8676e2ace24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30d3dcb-5a8a-4082-8f52-6533fa385fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeea14e-58a1-4395-8fb3-9f1b1fe51e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c933b0f8-1ced-4e45-8cf7-c5649002b481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b498d09-8a8e-4fb6-80c2-c8d68edcd811",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7b887e-ab6a-46ee-a0b3-1821f44a7153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d59a873-6e32-4521-abd6-c97c07707ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a429ce-34fa-4e7f-b451-211fc7137a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44ed9158-6923-4182-84b7-26bfc9d0ae95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b5e924-674e-4cb1-8914-5d83d056a9b8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec0594d-ca54-4a8a-959e-fa18c6c42f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44b8143-a681-42c8-8a79-5b366145b204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a826d358-e3cf-4a48-9151-dc5aae5ec1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53f12647-7dda-44ab-a4bb-0c8e4a6c2090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b423ca-2f38-4069-baaa-ca82eb210517",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cffab8-9055-420d-96e1-ac30a3629c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0621f71-e6a1-4077-9b42-ece994225bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a10cdc-ae8f-4939-bc59-03ad6428a5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b960d16c-3aab-4ef4-9033-344c464d2008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb1556c-86f1-403b-8aa4-3d5358d51b40",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3260c19b-0ccd-4de7-aabd-b5c1c7299465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e678b9-a813-41bf-8239-0d168ad2548f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d35f747-863b-4d11-aac5-949841dba717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f2a09fb-a452-43b1-96bd-6a3e474c0c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1a5db8-e294-4857-a652-840045aa006c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f179c44f-83ae-495b-b754-a71718165a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ec09f8-89d0-4970-acd6-fc38ca076d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a709adc-a64d-42bc-9b04-ba513ee54f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50756b3a-940c-412c-9694-565224ae9a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778d8616-d6c1-4882-bf4c-d36426b35ab0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2371e000-9097-4225-b2ed-19ac3236309a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a915cdfd-e29d-4bd8-a580-d47d56ce270f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6150b282-ae2e-4660-b1ea-df74eb759e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65deb87d-21d3-4696-9399-36917103726f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b18aae-3c63-4328-9b5d-e221e0531b4b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315502ff-6f37-4b03-b9f1-60dc58ff2a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab4340c-d381-411a-9e27-eaa7903c9899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785937c4-d560-4ff7-a66d-667da9a78fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86e31a8b-7817-43f3-bcef-3490446db6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaf2c61-6c0e-494d-b494-c590f09e9cf5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f63d04-12f1-48c9-805f-a8c2caa440f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce63102-e2af-46b4-8c0b-cee9217068de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05ddff3-824e-4eb9-81b3-8eceab7a4284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151e04dd-ed19-4501-96c4-43216c118862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9913c80e-f311-4085-994e-53ceb4c4edf6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f303dcc9-237c-48b8-9ad5-d390039496fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3a88e8-2661-4b86-9ba0-81b81a94822b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa15199-4890-4e32-b95e-47f3ee610987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b995f42a-bf13-43eb-8a3b-25acc854a4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90adb573-29b4-4b2d-bc9d-5011e73a7a01",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcc3589-5636-4f30-b7f5-ddfc12fc0739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2bce24-f2cf-46f8-8071-189637f0f2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6d6ef4-d306-462b-9a5d-3c3a9f9265f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba2a3e24-e688-47a3-bd2e-a7fab94abfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce69bb5-0140-4ac3-827c-e5a5517c32e3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3caac006-2028-453a-9121-a755825cc6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662e67ae-a406-4835-a7de-6f59a77df9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb702c4-48e7-4b90-82a0-975907547f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dc62553-4c6f-44e2-b9a1-b2b1d38db161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73c4e50-47e9-47ae-bf39-95874fe6dcc4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b959b42-0f3d-4ccd-b38b-33b788e73970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281ddf81-5d24-43dc-a350-5503d6542acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a6025b-0278-4f18-97ca-ace702280d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba8ee917-1957-4494-9241-ed72eb377820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f5850b-0ac8-40a0-afe2-52089de854a4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84a15fe-cff8-4736-b6fb-74f40b2bc1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e013af57-44d4-4f0e-9e71-f32c23128b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce461cec-ee2b-4d13-a9ef-21e8de780822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b83ac45-c38f-422f-b4a8-bd3caca3f384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe23db2-49e9-4201-aa6f-29f2f211309f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dfe025-d6b7-4aa3-ad6e-1faeb72408b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12ce6b0-57ec-4051-b7e3-1e3bfbe6ce27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500c8d42-e56a-4762-8784-6c2edf21bbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c04c7505-2e1f-4f49-8869-1d06e14f358e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d95d763-8897-4e2a-be47-e2b7a16c82c2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c879e10-2189-4c83-ad20-3a8ca77de998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c43049-57e3-473a-a5c8-5c629e33be10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921b4bd8-0f85-444b-9ec1-30db46a626b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e61448-d626-4a91-99f6-49013807fc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d28964f-913a-465a-a986-ee18900156ee",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3c4924-6b5d-4c75-abd9-c1fe6657847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744d0c8e-7255-4f82-99a6-627808dae7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0665398d-75ff-4488-a1a1-5b08b906ed01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2394e910-57d2-4258-9b7d-08099bced04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8972720-954b-4c1b-80dc-bbe4df7af00f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ce016d-0df7-41a4-9595-80abd542b257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397a0fac-592b-4ec5-9821-88cb9815726c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36e0d0b-0f06-4058-997f-5931a5bad28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb27b89-cd5a-4356-b2b8-d79e4d3bb137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6eb171-4cba-47bd-9f90-48fbd1ffd1c4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bf0da2-759c-4af7-8382-30f48dd3a3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e28bed5-899a-4d04-97de-9e5696c12722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166b24e3-c99c-4257-bae6-01771667c291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba9dace-2892-42de-8a0d-f4f776e262e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bda59fa-3162-4d1e-b99a-6c7f1c8b6b1a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40144c12-92e9-40d9-b381-e3d838ee9244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71e2701-e59a-4d1f-a478-6a78d1dc3cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245b388a-b9b5-45e9-a377-20eb296a56dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7fb1cb-41ba-4c97-9b14-973e7c5b6513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5934c34e-5d38-46cc-b44e-3e0a688756cd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd2df78-d7b8-407d-986d-e862872db319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e9d72f-aba1-4e0c-a295-60090300bc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994fc77a-6d8c-47a4-a854-7ef9566eeaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adfb6e7e-a1ec-496d-8b22-94e7dd31ce4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a33b0b9-cdd4-45c2-a161-a978ea2a9367",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810f1034-c435-4c8f-97e6-dd9671b3b4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d24b70e-f537-4141-be19-5d9a9ea6b55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91469d7-1ff3-4e03-a9c3-e8cc956f323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2237153-8e49-4be5-87ab-6ec06046a651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c587cb5c-3fab-4994-ab41-388bcf6e5eae",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946580ef-7767-48d1-8627-a2b9046206c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c03604-36e2-4e43-8504-b6199bb41786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b7a613-a908-4a15-94d5-200414c06f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca1e501-844a-4c39-a6f4-d2bc35848424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee62031b-43a2-4c51-8f0e-f0e0cb403048",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99568450-dc82-4738-92f2-63b5ea7d5d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2292cb3-11e4-4348-a246-4134b934994a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fe2a04-130d-4d21-86d2-15960d1b5bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb765cde-90df-4b42-b566-d2b12829b333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28ea6e6-fb3f-4eaf-afa2-9412615703e6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50d48f0-4836-4a38-9da3-4c2823b1389d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfba6bf-3b93-4480-a01a-49e4345b977b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b425a6-cb70-428d-9752-a10e89dc280a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5924552-5bc0-4de2-8e6d-158a0fd4445d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9df436-2928-4748-ae40-7d811113ba9c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfadf50-7442-48f3-bbde-55fb075e8971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606b601e-2911-4baf-b554-c78e4c6011b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4db2cb-e204-4c9e-bca0-e093d25e313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80416450-63fc-4393-8a44-0946a50e302b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595a942c-d341-4dad-8b37-311a77247d2f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38f8144-cbe5-4a16-ba25-06f078d795a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65113f77-5091-468b-8d18-bd41e73d0121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff52c01-558a-4b12-a7f1-f6f31a68abb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dfcbb8-5e10-47ec-9f99-d5863f119fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fda40f-52d7-4752-bcc9-db0abe0509d2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9413b18f-1043-45d2-b8a4-4948f1886629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4087496b-260f-462b-af2b-3ada871a3fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2aa2c3-89c2-46b6-bce1-d853e5947043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "851e1ff9-bcf1-4b3c-b82a-32eb367d0b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d858025-6b50-41da-8f4c-8c2d105c6e6f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dacf27-a432-4032-84f2-1c14e53c405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efee018c-82d5-4163-b02d-92631a319c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63ca0fb-73b7-4ca9-b3ff-a63191d6ac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "233643c6-898d-4581-8a21-f833d3cee3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b099861e-9adc-4d48-b9c8-53711379d549",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14743dac-d11b-4d74-b39b-db61d7a5e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a00c100-b1f0-46c6-8556-e277ea9b2c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e20a94-3373-4a47-a780-eec21d126347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "259906c4-dcfb-4d18-a381-07a7d87a14ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00897394-5def-4164-9ad4-8ff376c7a73a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3f34b3-4919-4df5-aca2-8f1d4299118d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0e6d7f-33c2-4c10-801a-9450abe1540f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbeea7f-cba6-445a-b008-07647db5c164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "840370ef-5d31-40d0-bd6e-61d199d8f2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb764e5-028e-4eb8-8c84-1e430d2996b1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739d0a5d-d2b2-4484-9781-4d6cf662e66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb40ca52-30c4-4555-86e6-ad981479b86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f806540-12f3-4a76-a32b-908a75a9734e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a03fdbbc-f384-4247-b091-f15a88af9dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a45e38-61cf-453c-aae0-7712ab8928bb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127ce690-0bcf-42eb-935d-d47e9da48100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92a26ef-e662-48f6-b427-6caaa094dbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f900bfbb-16eb-4502-a401-47a9274f08f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d532d226-44c1-4822-8816-d3c0010731fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713cd65b-07b7-42b2-b4c0-40a84c4edb14",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361ed99c-64aa-4551-a467-569ce89ffa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eddf2847-a616-4470-95c6-6b028a841051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53fa7cf-a0c7-4d49-9f10-7e7510cf4190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9425be-de24-4af6-8a69-20900680ca45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11a4f4a-5115-48ac-8e31-245fefd0c65c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0385657e-8357-4cb5-a46f-bd4b111bce92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01460efd-c5a5-4a7f-bc04-d8596dca5c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd87b423-3360-4b0f-86fc-88b932b4900a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "788abfe9-668d-4a2b-a4ee-910daeed6f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583efcf1-b3f4-4cce-b3c4-c9c553d45af6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcb57bd-6413-4757-b668-4b60f63e888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4159261-f4dd-470d-8aa9-0a9c3e39c556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8de44c-1e0a-48ae-94e0-9d000342dc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c145581-d6fb-4d5c-8fd3-f04cf791dc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d553ca5-0406-4543-840f-43f84bc970ac",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8832b66-74b6-4ef3-8da6-e528896c13c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bae4eeb-e02c-413a-a0c8-049388d5b55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2ed6e3-ca3f-432f-98dd-90fb39be463e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c589941c-db9b-43ed-83f6-d778fbdf2079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0d4265-bf92-434b-a8ce-48aeb8cee2dd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dea0bb-6948-4206-be44-4ae38da584aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85522332-9a9f-42ff-94a0-a05fd11c1612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace57b2c-eb2d-422a-b67a-5106063e4bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7ffac5-21ee-4d44-9eb0-286dc1537458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec92ca2-97cf-4a5e-ae7b-4b56885e1dd2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6940eb03-d4ff-4413-a17c-4e9cc61eca39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2030ef-5b64-4819-a594-3d03a3a26c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e73816-bbd9-4b94-bdf9-539a847b5f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a33a11a9-a22e-4a30-9b6e-94a8a681876c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a148f6a-068f-466f-8c42-415b5c40b700",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b15698-ab7d-4bbe-b901-36b2bfcef474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48e0ffc-c3d1-4b80-b4d7-cb7e0af375a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23de8c2-5b96-4ba6-84aa-3f2a6b40e5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2031bb77-1103-4ed6-8161-48a84c85c30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db3a3c5-a5da-4ec5-903b-0250ae677494",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f7f853-e478-43c8-ad7e-6fc4368a1ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb29d8ba-002d-4efc-8e39-e1ecbdc1ffab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f0d344-e9e0-4970-b438-c021313c2f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c18335f8-ee70-4c8c-88f1-73ba70c5c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f28b4b4-9eb0-4588-b119-383cd41423f2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840e9443-5ead-4f67-9799-10fe8011ec2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a421fb5a-a9d4-4449-8dd3-272fb4ef9ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620c5d29-a6a6-4a7e-b931-aa9240c11ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d385f72d-f38b-43eb-a41c-3a1141304ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3724ead-e02b-4817-a423-84c622c68b7f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efae208b-834a-41aa-a94f-dab94ad3b919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc672d5-670a-439f-a481-05fb6f2d39fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae3a697-d13e-458d-b6eb-0e9476488859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c02309d1-8085-4326-ab27-c8204395b8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8acf1d-b8d3-409f-9061-a47f53d910f4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f86835-f6de-4636-be96-d06ca9f0248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b4b893-d276-4b65-9ebe-a40f9fcd3bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd910f2-3898-4464-affb-6d9cbe30e4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed488389-e89e-45a3-b62c-6c4d4c8f60ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc9e92f-3ddb-4802-a9bb-f273a7f837b8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7209e632-ce19-49cb-875c-79c1e44c0382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd7a833-0988-48de-aa4c-93c4ef3ef20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd494868-0b40-4721-9348-a10ee9eb92b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ff0e53-f479-4224-99f0-67d38dbfa402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0820a49-b94c-48f5-962f-f365f5641a17",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeec175a-7ac7-4f22-9286-81e11ad4fdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe1ed1c-d9b5-40af-a722-36af539fd208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5a7159-e59f-45ee-8a75-14a0aaec6259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e427281-c517-4936-83c9-831a446d0831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5758e49-4be2-4375-a3de-0d1e5d7fe616",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3680e3-478b-4777-96a0-d8f54c6bffe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc5b3a9-c2fe-46a9-a420-a7dde1a8d9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80108bc7-11d4-40fa-8931-6c99e0eaa260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d49575f4-bf0a-4cc5-ba5f-0465c518ac43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7b5dcd-6f78-4f6a-900b-b70d3709340d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd57cc02-bcbe-4e4a-a091-3c4b24caa75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14bda7e-4571-4173-80ca-3ddd63828bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dfb2d8-3c42-4a66-a6a3-e0e131073d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee501de-c597-42c4-9654-a6dc20ce6b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd9a708-a66e-4094-898d-f1af12e7e559",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eb043b-9d3e-4586-b9d5-5800c7b2df19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b8cdf5-135f-43e4-9337-fd1e855f19ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e523b75-d114-4953-933a-3341d59f9bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b875878-c33d-4b6f-b8a4-90c96bf7a888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693b81bc-7f64-4a33-a171-95fa5f29f4a7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36bac53-4f04-42f8-a98c-41bb67dcbe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cc9444-afa3-417c-a113-92addda67b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c2f5fe-a5fe-44d4-9793-f35ba78fbc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a340b7-d45d-4907-bcf7-f4f28599d32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73e8c4a-200a-4293-8afa-863db6c77f75",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b27ec4c-612b-4218-a27f-d88ce3022922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d46fe90-6d89-4bd4-ba8e-98e359a85e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8da2a3-0afb-4ae2-8f33-b8c67ee874ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00777e07-f7d8-4761-bed9-92c578e48616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf6cd80-cd5e-4b31-a04e-f771cbaab9ff",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3abff8-c7a7-4894-8edd-a9bd783ff8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc1ad5d-21ed-4058-b39f-03752795ac71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e5fec8-f4bc-47ab-85d2-99917f622568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "863e462e-d2ff-487a-a77e-5181a6fe36b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5b0a3d-a3e9-471d-8bb5-d8cd28965c40",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55e55b5-6024-46ad-a393-46d835197e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b2502d-8f0a-4fd1-9951-f7e375ce102d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03573438-57e1-4c12-a38a-8012900f80cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daea912b-675e-47d5-bcb0-f71592d66b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038a8ec9-c88a-408f-9d7e-bcf50c12ec2d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d740b76-f04a-4c7b-a1d3-479ac8dbafb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d048167-7326-4007-afe1-4875d4d4ff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa20b47-4613-4ac3-b52f-f4f122b72e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dc812e38-ab16-4736-a2dd-361cd9c88787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031d9040-fe79-43e8-b061-b29e25f5f307",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546c044f-5243-4bf7-9403-a15eae37d82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947e199e-432a-4577-931b-9837b25591a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a536575-b6c9-408b-b3ab-513a995e971d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb25d1f-ce07-46af-9779-3655033aeb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fecf67-39ed-4899-a863-7f90b733e157",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f3debc-d15b-4fa0-a9c3-76ebc2897c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950850b5-fd16-41d6-b9d3-6c8eb2e5131f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394cc18a-e731-4e20-acab-fc89d5ed5cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de818cae-22bf-410c-b1bb-833e929aee64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e940a6f-3cc5-42d6-b53f-f1db47cdbd54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d98d3e-b56f-4be5-b61f-ddc9c9423e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2ba9f9-5c27-469e-9ca1-6861515dcc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8f02aa-7fa1-44be-be41-67fa2a0a5090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "524da5af-ecd9-4714-bf9a-022a8489d3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9850ecd9-51d9-439f-bd63-735fa1c7a37e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cc1b28-fbe8-439b-b885-b3d75613cc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a3adbe-56e3-4105-84d5-19cc897cbcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101672e3-6470-4964-94a2-80c8e5c7753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95866881-86da-4b59-af1f-3276c1b6f050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f174f7c-0127-4e50-a1d2-9adf13a8e884",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7626eb-25f6-4fff-a97c-3fcde897437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1081f77-af4c-4441-9f23-b3250925dfb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666eb509-2dad-4c6d-bba0-429bdf0c19bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfea4e2-7f0a-4808-b2e2-e7e351f1ca50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e44203-eef0-4922-b2cf-0a5cc666e1c7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f4ae0e-7dab-4c5a-a09a-cd88298ddd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b449b71-9f8f-404c-91ea-fb33e85f7361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c151bb65-c235-4743-9a0c-db28aeb738d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "047cfd3a-1ca6-4c9b-8118-2c5d8f2918fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd80d6e6-46a5-4f0f-9daa-bff86f47cce5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11ce0fb-738f-49ed-b227-58186af0efc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823fd312-eff1-4d31-aad3-dadb5491efe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ee923e-0dfb-4f13-afb9-27aaab34c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd5dc0d-651f-4bec-b262-4aed53271bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7a58c9-b1c3-423c-b5b2-32c2d7a37440",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bac5db-4caf-47ab-9086-09b85bb673d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3780fd6-ff81-4517-8249-69a20124b355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4d9bed-e3b1-4f55-8638-0ab1988574fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68540dc0-448d-45eb-a9c6-2bf2be2cb5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e013c5ab-d41a-408b-bc3e-4cfc9cce9106",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca724259-fda4-4d06-b99d-cedd6974a58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fd6b3d-6e28-479b-8c0e-1ca754bfa29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665a5e30-3bcb-43b0-87cd-f0e975ab60ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81402038-087d-4ced-a6cb-813a2db4dac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcf156e-52a4-4d5e-a59b-270fd00a4d1a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebf2c83-2451-4998-97d1-6b90a5cf4283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169e97e3-4e02-4193-9615-5f1a304d2b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0091d83a-fd51-4fa9-a5f1-faf38b2798b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11da8321-06f9-41c5-9abe-8e9171ac6a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3c6d64-3689-402e-8b88-9c83abab0545",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325c81be-e04d-4057-8a09-4ef7249c3577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e71dd46-137d-4590-a1d8-00c66010ddbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adaa5b8-6c9d-46a6-a60d-7623048047b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cf5fd2-4f4f-44fd-b70a-2942075fffbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74154e79-0b19-4ce7-8d33-0005d5ebb231",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe163b8-7ce6-4600-882c-5e136debbcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b6b8ef-0c3f-4f78-b532-907903964efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba87f60-2ffa-4f48-b6e3-9f0d976de8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c484a45a-0e96-494f-89ef-bf6d56ea924d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7e11a-5d5a-4af6-9404-b1e28c106680",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264f041d-55f3-4da2-aeb8-db8968e8fa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b62347-7cfb-4de2-89a1-b879a86bc3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a7f708-d51b-4ea9-ae7a-3ca05e2f8052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "46679216-32f8-4e12-a563-9d33aba156df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b64883-05a9-4279-baad-6358a96ef071",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79991507-dd90-4abb-a363-b03b4812c7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93845d0c-ed6f-4f3c-b1b0-56e280f4f0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2520b223-45d5-4a9f-9021-da3326c12449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "406ef788-02e2-4f86-a9a3-8badfc1d6407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789b0e2e-c533-4bea-baac-5a8e1a12d8d1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7176c9-35e8-4ff6-a6d2-879a97fc8ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af99a611-b71f-48b5-afe5-d641eaf9cb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0ad5c4-7c5c-43a6-8c75-6f47bf7986ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c79e6c-830a-450d-a9f7-a82f1a2b5f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef8cae4-4b8e-419d-a0f1-f96b05ff77b6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436866bc-f5bc-4aa7-aff2-dbf47e441617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ebe40c-5148-45bc-8f86-8668e8964df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b29d867-9ca9-4a6b-8fe3-515aa884665c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d562be6-2bf6-4a23-8a5b-856fc71e6e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63f72ab-d017-4475-8139-003d7c6a7e57",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956de4a2-b582-4c3b-9534-23cfe1b1f8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e6854d-01b7-4a4b-abc4-cf121c36d4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf737eb-c19f-4354-8f83-37771bad8e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b36d86df-da09-4651-bf5c-d99e70161042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97635129-2e90-4b5a-8d74-382dfb687072",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52703170-55e3-4730-bce4-b59ca8fdd787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e172cb3-205a-4111-815c-95decd92bee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244906e5-70b7-443e-839a-ac7334b7b14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "206d1b6b-3eda-4dab-abea-0496c16c37f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646011c1-5bdc-4178-8aa2-d86932f8e0e8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d1d438-96be-47f3-91cd-2549f2a8c19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4d96c1-7f62-49a7-ab89-58c04107936e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032b162b-3a8f-4601-843e-5ca898dbf94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "901d592e-5dbd-4401-9260-bb489f0e5027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fd88cd-3fa4-4645-9227-cf25cdc2e4e6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0c772f-a285-4bbb-8b2f-99eacb0dd1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fb6cdd-b438-48b8-8e9e-22975dc8d998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51af7f8d-583c-4880-b7f0-6e6a184cbaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b80c1e55-ba62-4861-8c8e-0ae4f1ec3291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0be7f8-31d9-4ff8-9988-6e0c3155c81f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718495cc-49e4-4c1e-9a68-4db7101490f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e086ae83-bc40-4c95-8a56-c6412fbffe92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3420138c-0c04-4608-891b-e2ead3d22439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a607b5f4-1b9f-4c9e-9fc4-ff7bd2ac0694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f147fc3-6754-432a-85e5-29a63328dcb7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f86e894-2116-44b1-9a3f-139929ff076d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9408e8ba-b320-4730-950a-6b6b65b4528f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da000ad-b82c-4753-a639-98b867294719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fb678a-5732-4282-a7b8-c6efc6b7bdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675c0611-eb61-4f45-9dfc-5ac24dcbed15",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7ced2f-03ba-4346-86a5-5a7100b117ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbae7643-b7fe-4e2c-920e-e21023c186d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8f4b6d-248f-4a08-bcc7-5f4ea058a031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e98a45d-9e66-4937-9184-98d7614cb541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a6bbeb-2152-4c34-b772-caad554341d5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd22449-9b79-4e7d-9a80-faae078c479e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f9885a-c8c8-478f-9067-ff868b8f863b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5382a782-f1cd-4b1d-9853-9807958ce6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a63a63de-72fc-4652-97e9-d92f0e759d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524c96dd-9ac9-4258-b862-9b4ade0dcff5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c0e5ce-9ddd-4534-9fa3-2ce1f621f3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c054cb7-a99b-4472-919f-7c265459ca64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9b1d35-5d82-42a6-b130-1060a12c15f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "119e7705-1637-4a60-a518-bb2ebba5c765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d47414-13de-4e88-ae3b-8adb39c6b4b6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31b2890-333f-48c7-b2c2-7a0b02d7ecc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab05faa-88f2-471e-b6e2-c44ec279aab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ef8f2a-e7ae-4745-9859-d45cbf8069c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "956f4dc6-c54b-40a7-9930-d02597440c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e1ca43-e1c1-4bc8-ba8f-51802a8e4627",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2641b449-af90-4e1d-a7bc-4f7edd89ca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c82cee-b5f6-423c-bcae-2fefe56824cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89888ed-5875-4592-8de0-11e56ded20f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c76a73-5926-4b68-af3c-aa3da235d4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d0c6c4-127d-4c50-b0b6-7e426a6e9dfc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62a795e-96b9-4374-a5d4-fa9a1403c655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538ee2ea-6e32-417a-98b0-78f962831ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb083312-b922-43ee-b0b4-10738e66a934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0e48dd-b1de-453a-ac70-51ab5c8ffa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a98457f-6f6e-412c-8faa-b6f2fa51ec4b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7724bb-306b-4374-b1d4-9ba384d9ef92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a98b1e-5c5b-4f02-94db-925651773340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedfb7b8-3517-4ae3-ac5f-94c6027f98a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6e2ed9-6b92-4792-89ff-c958e21df0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7962f048-bc52-4359-b64d-4836152fbbcb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cee2f3-60c3-4edd-9eae-c13679008eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ec6aa2-4964-4c22-b08f-4d7a2089e9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac480cee-69d4-439d-b7a5-fba10f12dd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "433625cf-72b6-4e6c-92c4-fa30dd48150c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a850df-c028-471f-90bc-2bc8a7648a04",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16df9a30-2d13-4637-a5e5-73fa1f202570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376802c8-8a02-4cba-97bf-4da995b20243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02432e3f-a9b8-46f5-ba41-77ac905f891a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "89a39a5c-7d68-48e6-9249-40ebef2e0da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ffd11b-0684-4639-a1af-b7a209f660b3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da067d25-8edc-40ba-b2a2-524a4f31b934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b938e6c-f3e9-4c21-a610-4f3682313fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f782cdf-0851-4b01-98ea-adbc6b6b6690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c65c5b5d-54e1-419e-8808-bdb6fa6b2861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d75f89-6628-4c7b-91da-20e700109971",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7320a22e-cf66-44e6-b4ff-3c774d58a580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d15972e-cd53-4ef1-9203-9f86b94f02ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd56e771-1ab1-440a-9c28-0f4727415302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0536526c-887b-41a3-b307-2082c2bf0789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdc1835-bbf8-472c-91bc-02c60ab087ea",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d04dac-3244-4216-88ed-009b553d3e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8471b15-51d6-4e3b-ae96-f5e44808b9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157f4de3-6666-4555-b8a1-cb8eb04d8776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f081dc4c-b0cb-4ef4-a2e4-f20eab881d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4e41eb-e75c-4c32-ba31-5d0251f5f591",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bd3192-b523-4555-851b-76e3735777e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a64f26-d6c1-4105-a832-93eaecfeb861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cd369b-a9a5-4bd1-9ad7-5a6a783b0cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b689147a-ba89-429f-b675-2b01666cbdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e87fe4-30e9-4ad9-b7da-43d30d7334a4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f976ed9-089c-482b-b909-4fc9a34844d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1ab2e650-9cca-4129-9402-9ae2169f5001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee08a43-62d7-4eaa-a984-c65d377d94dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "afaf95fd-6ca1-400b-9c9f-17124fbe5720"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1db07304-f19f-41c6-a16d-a105e0b18ef7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c7ee8cd-eea8-4e80-bb47-e723e32df880",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9040f49f-85e0-4208-be1a-19a3614d8fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d15c5ad-2ea6-458a-8312-19866d236c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8dbe0e-dd92-4f55-910a-41bdd898f94b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe36f102-f966-4ad7-8004-38df052938f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "921962a2-708d-4534-8a77-9f4e10071e32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4edff878-4438-435d-ad55-ee6779c0c4f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82beb734-6061-436e-9594-20dd222d94f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c213f802-7782-48de-9c86-70b2e4f4c3a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db45db36-e348-4192-a72d-a7557d0f3688",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f25e6ef-30a9-4294-989e-d67156dc1bc7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c4530e9-b0ba-4065-9543-58c673df27cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a93e9dfb-b047-4814-9148-57fa3160e22d"
                }
              }
            ]
          },
          {
            "id": "5e375491-99b0-432a-ba2f-50b89947e596",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3668a055-9bd5-4e0c-a849-bb3a599b915f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "20d54343-dba2-45c5-8370-4ea8365630af",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae95690-8952-411e-8bfa-519e0b717421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fa470c50-c8f8-4114-bddb-d18b0ef232ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089f1ccd-03cf-485a-8b7a-18af0824771c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70211303-402e-4c30-9dd7-5bc06f911fa7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d462638-baaf-4e2e-a3c7-99dac25b5e81",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea854cf7-ec4a-405e-8104-8b073d82e202",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dac939e7-833d-4369-920d-16db8a47fbd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd233837-d197-494c-99cc-7a7538e65c6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eece3e66-cd70-4ba8-bbff-926309c4429d"
                    }
                  }
                ]
              },
              {
                "id": "ba486f2b-5708-43af-b737-d9bd7bc97a20",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3eb9f336-23c2-4551-ac2c-a2ef72ca2c13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88dc673c-353e-4753-ab50-b6c65580e44a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4560135f-ea28-4ce4-9928-2452a25b39d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53f64abb-8db9-4218-a935-8aee2baf8207"
                    }
                  }
                ]
              },
              {
                "id": "097439b9-fa5c-4c09-a1e1-e954e472df4f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3589727c-03bf-4f94-8a22-b4f579941acc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c769a340-d7c3-45c3-b595-3dabfdc01ad9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c1451a0-ddf2-42de-85a8-d2468f89faea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "058a6bdf-da29-44b3-8eba-1a4c4ca6737c"
                    }
                  }
                ]
              },
              {
                "id": "521b8b9d-e7c8-49bd-add7-e75a0cc4ecf6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe3c4a81-e38e-4c4e-be8b-0294bae89f07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32299514-a3ea-49fa-8e6f-2266d33da277"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a99e0c56-dda0-406f-8a62-58ebb952426f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7e63c0b9-581e-4869-ba2c-d8c31c43b11f"
                    }
                  }
                ]
              },
              {
                "id": "bc067a8c-e96d-468b-8eb0-2e876c7d66e4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfefb372-b967-4ba5-8dad-003d53d4332c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f12685c-ef86-4ef1-b6ab-dc1b6a036f35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b247f77e-6be5-4b9f-a139-6f6ac8e799ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "61840c26-9005-476b-ad00-55a2f398fd75"
                    }
                  }
                ]
              },
              {
                "id": "2a02489a-d201-4e8e-b6d6-ac83c791e8d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efae047b-acd8-4546-8536-b95b75b0362a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "847565cf-3a8e-47af-86d0-bd00fae486b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f6e62c3-3cba-4a7e-9fed-cdc21d5770f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74cf14c0-5d61-49d8-a548-f8d6d84a3fa5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "678ff41f-1626-42c7-a776-49d90b589832",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0819bf5-251f-4c1e-8bc8-b341ea616bec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "80c92e05-0b95-48d1-bd57-1948da1ae65f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80a449f5-f662-4b16-90e2-1403999ed492"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60080196-12cd-4a98-807c-fb78f9ea839f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9b66732c-4d7d-4520-9b9b-ee702630185e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f676726d-13de-43d4-a912-6d711ce9c640",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1831e621-2b05-4255-a4a5-48bf73deed45"
            }
          }
        ]
      },
      {
        "id": "99cdaa28-48d9-498e-af14-89dc783e094e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bad89c36-0042-44bc-90e2-86d792bfd265",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97ff2a08-c415-4647-b25a-1ecdd38651ae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9229ceab-cb4e-4b77-b9f5-a16cb05082e0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c380166-55a0-4bcd-b48f-0b57ddf39da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5cf80d-0f2d-46cc-89ce-1199f4868cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5cff13-6ae3-4b14-8644-2157d6012353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "928370f1-22c9-41c9-8acd-229959609402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca5bc41-64d6-4721-9490-9cfc1e12fa17",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8a309b-8f34-49ec-a582-114c8b6843db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8c553f-31fb-42fe-87ed-b9b90d20a8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34088c0a-3364-45d0-bd33-afcd0b7490a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ad1e8e-eb86-4cda-b3b7-9b39f565c1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abb4dfe-b81e-4aa3-b832-355edc35ecd2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8044ed91-a40a-4bad-9617-dd744228477d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80eeb136-d03a-4054-86f7-ea1ab17d2570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a018015-1400-4565-99e1-4c7bca8a6230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e548b8-387b-4d8f-9d8c-b7a517e83d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99a65c8-4eb8-4f74-acc8-2f63ee19a10e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cf9983-e87e-473b-972f-4676c82b8328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2545923d-f6d0-4f16-a0fa-bdd52a9e7079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a377ab-3fb6-43cf-a0ee-4a6a05f57909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b214f61a-4a14-4cc5-96d1-4c304bcd2ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2834e6ce-9b84-4404-b846-d64c7995b6e2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e10ed4-5502-4918-b8c7-09e96b8f497b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b53fae0-69e8-47e5-b2a5-493018c4ec39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965ac2ad-99f8-41f9-94b1-a664847e71b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ce4ac2-c4a4-417e-afb9-8f71ff40de93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb39e3f4-82f7-40db-bc69-4837c44af753",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b491dcb1-0fd0-4807-8f6c-7a26a85500d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708e7e03-56cf-4c29-ad78-1ab3296e1ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4dea1d-b468-41ff-aedd-df9ca195ca4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e7a0de-d036-49db-b393-ab2904b9032f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583e4e89-ad34-4c3c-96fe-2759662058b6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b51b86b-15e6-482e-9691-d2d639b8b531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac91e4e9-6288-4afa-8ce2-55ccbd881135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe305625-ba30-4cd4-b920-2de091d44439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c75e5cd-1b17-446e-9c43-33b0159ae809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b7adb4-7321-4c46-accd-0f77025d8ad0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643e1d46-15ff-4036-aed7-c816de1f4a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1ce30e-97ff-4324-94fb-378dd627b7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e415404-7b0c-424b-9299-d1005856d43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce70e847-04de-4df4-bc08-ecca4cfbc0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75134f24-1313-4cbf-bc25-bfda47e95670",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1972a67-322f-4c77-ba62-1565ea803247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb0b606-99db-4963-ba07-d6e81f35e6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2acee37-7e5d-4987-a0fa-609791b41026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "904d8873-f7a4-4103-ad4c-39afe4fea537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933d4618-430b-413f-8e3b-38bdc23603b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cd3d3d-c8f9-4db8-b9fb-df6767d6ac38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9684b979-9c43-45ba-96b4-6b98dc9e9170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d428f3-4493-4e5e-8998-1f0656db35ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd46cd1-1925-471b-a8c1-4fd508d57051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8752e227-d79c-42d5-8fb3-85b10817e2d5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d11e70-bdde-479d-9db0-106c547bb06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ea6d7e-66b9-45c6-bc96-da83d36c8d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df8e21a-790a-4d36-8aea-7510ce667491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e0e023-c5a0-4ca1-a920-52b3c51a6b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83482952-48af-4965-bc69-0980830982d3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0358bbf-ba39-478f-be1d-96999f21a6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356fada1-a4c4-4dbc-8c52-f7047afcb26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0278a87-0e52-4f7d-a857-85c2a7276f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82227412-0c14-4f5c-8450-b3884409281b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c460f175-4a4a-4c3a-83ff-4889a8b6022d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278e44a5-2c01-4065-ab67-698dec1d4d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2224cdcc-ff6d-4ed0-88ae-9f9f23be637c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05907e81-ad58-4dd3-abcc-402f97b3cab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efea501e-53d5-4cf7-9994-edd2a2f2b144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ca97fc-440d-45c4-9ba0-edeeaae9dd37",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c7e12e-c950-43c7-a42c-5d10b2222139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083e317b-415e-4eb6-875c-0ff92e18fb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73050f08-663f-4e69-afe1-45d716f6b956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d776bd-b83a-4334-ac65-bb7d5a3b7aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ee90e7-f7e3-49bf-a7e1-5c4f24109ba2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44323c61-b84e-4c73-b671-da895c681962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d3cee2-83cd-46f4-be8c-9233f33b3769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025cc232-066b-4125-9cb9-cbfa9114d1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "93464803-0eda-49c1-9aba-d94162e6860b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b9ae93-ee03-4fbc-b9ad-423d598b76a3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6846e244-98df-4c34-976f-53a61adcb881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e0094e-0690-498f-b5e9-dff514771b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b92cf2-1cb7-4d2b-80ca-95e60a9d38f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "89000d27-a561-4c05-8b77-40de85d6b58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69896d8-4315-4439-aadc-a7fcfc3fef08",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165179c7-b9f0-4658-b659-6408d214493d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebb0743-fe82-40d1-a698-fa3a5af41481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04bfd06-3f53-4d69-b7e0-ebc8e322e5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2acabeb-f9d6-4a55-8bd8-71f24cac33ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb482c6-8650-4234-b71f-98f538e20617",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195d4bf7-ab48-44e7-93bf-b446e91e1453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30616889-2148-4126-b04d-e9c09d966718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6453c0-5e29-4129-9bb6-22d23116df14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e78ec0-0e01-4135-92e2-cbfac8646b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98f4d27-39a3-44d5-a8c4-db582de03cf7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae49b96-aa9f-4335-8bb4-734238f8ca8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536419cc-ae84-4f8a-ae0a-3930ce8e50d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec010e3-bf4d-4d56-bb36-eee08a46d3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c3f96c-bd4e-4543-868f-12598921c140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01e251d-c7b9-48a0-a86a-266b16be5e41",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6760526a-b97c-46b7-b8a0-6b6e5e1e3b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c34fe7-25e0-4acc-b456-561ac7978b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583ba208-07f5-4260-9381-6d33bcbbbe6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d09f7e3-6021-4779-8fcb-064c8d6b075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f48622d-11da-4a08-9b7a-d00bf9bffdb7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d141bdfb-7a4c-401a-b04c-b88931fc4272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4384ba9e-bdc1-44d4-96eb-a6f90b831e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517564fe-8a41-44ac-9cef-41b1105a27a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "447690ed-d34a-488a-998a-50589d4187ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8857c9-12a2-4616-9dfc-423f12bfbd79",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e684c03-7566-40c0-942c-6100b07ad4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aee328a-57c3-4ce2-b4c0-1181fcb5f519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719e182e-45af-415e-b25e-fb9f6c75208a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08206ec1-482c-452d-bd0a-a351cf4c65e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34c60c1-cbdd-469d-804a-d77e789796ce",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c1c862-a9c8-4dc3-938e-4bf1ab06c876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc6cde0-4c73-4e6b-8db2-a23612743245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915e8cb8-6f5b-4983-ab37-83c53a663484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c37fcaa-fb2b-44ec-9c28-0428fa5ac0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3830a78-47ef-4e41-acaf-63cb25fe7035",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a5c84c-19a1-4f88-b2ac-750afc463f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bc60b2-75d6-4c77-94ba-5d88cb55c292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fa184a-5365-40cf-98cd-f9a76bdf2a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce48d12b-aa47-4436-98b5-91341bb098d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b20c20-09e6-4899-a181-772cf3ec9307",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7117ef5-5fbb-4e34-816a-5d1f66e3e739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac847957-fb10-440d-972c-bbf699b32e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a33b5e-bc06-4030-9b3d-eb18843ab0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29925f5f-80bb-494e-8a86-21068f12feca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d784215-a26a-4dfd-98cb-1af7de553382",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ada8664-ecd4-4461-94c3-61bbd63c4645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c39ecb2-5fd9-46ec-8560-b1e2322d0f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ebe113-b5c5-4171-a443-7671a028d901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b59110-e1bb-4efd-9610-bbf45ccf2c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54355e7f-c289-497d-96e5-687006406357",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f2694a-bd38-4e20-adcf-78955b7613aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f1af90-7291-4beb-855b-9cffd3644cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e552f2-c0f4-4c24-a68e-edbaa356cee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced52805-4af6-4e8b-b158-f8aeffa06025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6965a94-df12-4be5-900a-52355d5b4af9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76a5e0e-54bd-4932-a2d4-f175c4874577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca23bff6-e898-4e7d-8c92-2b0f6787b08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90332fe4-4315-4d88-ad43-39bfb8b6872f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adaf783f-5f3a-437d-91eb-d7b56b92c852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f080901b-e011-4bd4-bd48-fd530504a2a7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7a22de-3a53-4bf9-9be1-b4c5f13bb56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd658a59-d563-4e8b-9518-cb34d2ccc0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a29b6f-9673-4e2f-849f-eca1a87f055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "936f04e9-038d-4888-8bba-881ccf593d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f3b086-b49b-43e8-a8e3-f8407f9d66b9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbe9fc4-6a7d-4c44-a6cc-8e3d80976522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0b1451-da9a-4a4b-a83f-c987e30cad7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32defbc2-91fa-4313-bbb3-ccdde7d9f171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a56faca-6557-4c6c-ad1f-f287e1390f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45b0218-bad4-453a-a272-a043d6830751",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea12718-5075-4b16-a9e8-41d9e7dcded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c3846c-6679-4c0d-a991-1ba724ca1172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afdd023-d838-4cf5-99aa-12a3eee1c3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c51f07f-7522-4f91-ae8d-2785872845b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b40515c-2f02-4526-8db9-8440eabdbb8c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3c5f11-4af6-4758-8516-7a20b638d43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6356b01c-5834-4bb6-b476-c38026215d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9fad2f-92c1-4828-9030-31fa150f6c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81eb813-e366-4f30-bf43-a3c0598ec40b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67b41da8-66e3-4b1a-a603-d0e425787752",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82ace8d0-df3f-4eee-9b1f-035cbf4d7395",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd979a33-62e6-4f6c-92f5-dd24d5912b70",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a451e9ca-c912-4401-9f34-ec7d4bf42881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f85da4a-90b2-4db7-b93a-520759d394da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b951e73f-65b8-4f10-a7a6-c2b30d0c9dde"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "088de19c-3abe-4020-b979-fb2380e1eeb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "254597e3-86c0-4f44-b4ba-8573d040f218"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16ceeb0a-a4b7-4c11-9db1-c2680e425dba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4464395d-642a-4585-ade7-84b67d5c5df5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "598cdf73-d0fe-4af0-a957-fb133e02815f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17648110-a2b9-4871-96e3-3c1c2c4992ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fcbc7f8-bf35-4a51-986f-b8b09d5b7c33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1585f0ae-d784-43ca-96f7-19879511a9ce"
            }
          }
        ]
      },
      {
        "id": "c5782b3f-15e7-4fc3-99b2-ab0e5ac02a74",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b5d7585a-601f-4595-abbe-e63159bfbf15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68033a91-637d-4aab-a4c7-cd93853d3ccf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c40fff2-3142-443a-b2a8-1082bfb26cc4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a50d97-aea7-45ad-9a09-1b4e8270a1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a5483b-673b-434d-a06c-2f030385068a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51708329-ff30-49b3-a612-02234da50450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd07a1a-4a14-475b-998a-2faea4919ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481461ff-98c7-47f9-bccd-b4fefc6b6cb1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9768a6b0-092f-47e0-b59e-9dbad1f99036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f9c15d-cde0-4582-9668-5bd0680abc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebb6b40-df57-4a13-a9f2-35516079885d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e80b91-71a5-4b34-a2f7-af7d9b4fb5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7de0b2-d671-41a6-bb4f-aa78473b739d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44be6ae5-77af-4290-8eef-46b2989d7a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79bd1b4-5778-4202-acf4-ee78073b1682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ba2189-e924-4245-a44d-8975594848b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37f70e8-c0c6-4d06-a967-a0c7770244ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c114d93a-8586-469a-95b5-e98e84ba7cb2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f42769-25be-4036-af45-c25ada4d7ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8250f6-ea8a-46c5-aaa6-cdbe3e0c75fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7f9f87-23cf-4205-9090-542e3fc1647b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4efd0168-40ef-4b48-8d5c-58cde4115869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e394af9-d27d-4152-8c8a-fe515b6adebd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9285be6-1026-4834-bafc-6da3597c7e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547e52ed-5062-48cf-957d-c202ddcdc268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae7f0c1-9f90-4982-9b9e-b109416ff053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b1df17-5c9c-4e0e-bffe-8db5d810dc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf205aee-b4bc-418e-b040-c3fa13d52f9a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8001ad2-2c36-4526-a8a9-adead25b7a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd660619-1e74-454a-b882-c72aa8c195dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03201189-dd00-42df-8c75-492a6466d5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73400f85-45eb-4d78-bf29-682512e71041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd354a87-9fa5-4ff7-8466-d0f6b85fc864",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ce1c36-b374-40cc-a748-dd02d7f8cec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800c4260-2fe5-4fa7-9ec5-fb21f0c54f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0a9882-3736-49c5-bc42-5a365a058903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "527e7252-5c8d-4179-8d4d-d16e2590b907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaac578-f2f5-4ba3-ace7-fca7dabb23c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b3cddb-08cc-4371-8af8-2877fee56f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c74754-5b45-4361-86b9-d4f4ed5082d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be8b2a3-0c5b-465a-a035-27a6ea679dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bffb9fa8-1624-44c8-ab95-ed4c325ee6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e9c8a4-b5b3-41b6-a79c-6e567e5d6476",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1edc453-a29f-4553-8246-56b2e450fa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88916a3-72ec-46f9-92e1-60b0a953424c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5724c7-7024-40a8-8506-6f782d25feab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "483a9710-4a44-4a1b-b420-08f53d3ab70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc35c6a-3217-41da-926f-04b27ff2fb1c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b34b2d-ecd7-40cd-a8f3-1b2c9ed4b00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f62049-c9d1-4742-b6c1-0ca68e8a4f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f8f014-79c0-49f2-8528-fb4e213be5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4115b8f-f108-400c-a7bf-a7072c6d6fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d31d11-afd5-4596-91c9-605b2657d5aa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c2572c-86ac-4c02-82e5-da6f9e450274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abdf872-3c78-4d98-b6bd-4a51201355c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cdc2c5-db5f-44e0-ba5a-b06a7c3f3dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ac681d8c-8377-42da-824e-4bdf4238bf11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f174caa0-5e9b-4035-91ad-962885115647",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412954af-0f9f-44c2-8280-4b0345ba72df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1ff2c5-8e08-4f83-98a5-91ab0673b0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625724a3-7e2b-4f1b-bdaf-82085ddefb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3a7c9a-4e01-4921-aebb-32422e03b250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699ae79b-0c6f-4059-ad38-2c9f9f97323f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7e3b8f-9460-433b-ae76-ada6b2f79d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abf3bff-88fc-43c6-9395-0f52bd614808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7a6f21-f4d1-4d86-beb6-8ef9ce7daf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4ceec0-20de-434d-91f7-92540c8d5f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8d54ef-2e78-4618-ae5a-0dde3c1f0d1a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a40c072-c973-4eff-8f9a-b2991fe4e5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac967f1-91eb-45d0-8f8b-70c24d2ef903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6444dcc-3e36-4358-9353-22b3449ca693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1e3e03-28e2-40ff-b9d7-d36bbf3bf204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f65550f-e2e3-4f8b-9055-f211ed0f0254",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7508f157-b5aa-4de9-bb02-ddb3de1a2519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec749e5-64a9-4239-84d1-cb5af861e451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16558c2f-41f8-4eac-93f4-b463491cd0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "81bed280-1fd0-41c7-9ece-4c13beffb698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8335f33-71ed-4f9c-8d7d-0c06ce71ac3b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f9ea7-f472-4d9d-834d-8a8bf06a3b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d864c092-87a1-4c81-805f-b97c7a8b6638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee7cc75-47ae-466a-a04c-e13af96abb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e53e112-cf03-464b-9215-10fd5425e29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95de93bf-120a-4bcd-8ece-f57d621dd494",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82372703-8e85-42c3-bba1-4ce84e56acf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec990ed-d4c7-483f-b4be-531f9d35d73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471b57cd-d1ed-4eb9-a645-0e8e37a077e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b2cf18-2a79-4551-83ca-ec29d82e9614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fb7cfc-85fd-4072-a919-dab3041af782",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b30b7c9-08c2-46c3-bb76-8b866138fc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae400cfa-f720-4191-b669-222bd56c39c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2587ea3e-a544-4707-8b86-90ca38e2049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cebe9a4-6590-417d-bb05-25b95476c932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5058b1-5607-49ae-bcfa-634e3a35b62d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3465bc28-068d-4206-8e12-318c42b6d4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3668094f-55a3-4a17-9e48-77a11cf4b0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b44db9a-f5de-4987-b55d-d10222b4fe16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae16b9e7-7c87-4476-811d-30846a590e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d31e830-0631-49e0-ae0f-9925c3bdf3cb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e32ede8-6ac2-4dc8-b26b-511471f56c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54111ba9-eb73-4a80-9354-47068da38ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3dadc2-1b3c-4603-bd8f-d1d0576c55fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27483049-da6d-41b2-abd0-4e9d5e32568c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5624a0b-a129-4777-8295-564adced90e6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c8f2ea-fe9a-4750-b275-c17fea87396c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86911b2a-e5d1-44f9-8ad7-7a977752d99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe89a24c-c860-4523-b383-464538331b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b425ac69-5a9c-4180-9f9b-ff5261b47923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da0db31-c1f9-472e-9463-a7b607eed25a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a34e11-37bb-417a-a55e-a82211227eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6055938d-16f2-47d6-a18e-123245ab1c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8a5101-b38c-47b9-a2d6-b2dbec74c648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e31cccc-be60-4e61-a068-fce0e52861c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266e65e0-3c46-44d9-96b0-987b30c86440",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f6c59d-bd83-47a5-b7ef-e1f92cb6e702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f7c715-508c-4073-9367-4f35caa3d8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1495474-31c9-4062-9654-20719806ca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d95d58f-62c1-4fa1-ac43-c992b3e02a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a4bb06-b630-465d-a579-03bd05b1c2b9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bec453-220e-4de3-a7f2-30b8492c7bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a78d73-691b-4bda-a6cb-7e3ea17bb77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8a4424-e59a-49bd-bbba-bd5f05cbca85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8540005-34e8-41ce-bd08-0710261dec3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9247f984-e36a-484c-91f2-0a8643e79420",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06a35d8-ee25-47f9-ad23-8fcbe88c9873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d661ba6-73a0-4556-aa0d-9281f5fb5d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff16c50-7c0d-46a6-83ab-f9e4ef057e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04ed9781-0f70-4590-8196-512887f8b2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5331062-7988-4560-8cc5-d1247cf7cc95",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292ef52a-ca94-446e-b28b-24f1a2230668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bc2d68-ceab-418e-80ea-437972426af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db7de18-33c6-4b39-a629-b56d2d3313bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a6e2e1-037e-4ece-998c-82a5a92bd911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bce4487-14b6-4c1d-9426-07d98bf63100",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63823d1e-1880-4fcc-b49d-190f65eb58b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e434ad3-57f8-4671-8521-cbc09cd26856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4f6e49-984c-432c-97f1-a10e5f0ce6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "610bf87e-6321-477e-b43c-094b0be79de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b3dce1-ed78-4783-af3f-3c7347a4af9a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958bff8d-4190-4fac-ba8a-201fe486b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c042b8fd-4fc6-4724-bdb4-f4e9d4640e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eeb4d22-82f5-453f-919e-f5de9c90ef70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b8f40d-d853-48d0-b344-660e59382bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2020c686-774b-4e81-aa33-4785fd722694",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2ab190-da50-4b6e-ae30-0ce503a2b9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6afa94f-61b9-4c47-bf11-22be474909fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add2eb96-8cf8-40b2-832f-1381d4c20215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8051ce-bfbc-4365-81c5-3c9499ee36df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17b4fc3-ab94-45b1-92ed-1d79915bb4c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31af6fb5-050b-4a84-af74-97bf077451a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d0554b-570d-4538-87c5-c084ad9997e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13643e01-1193-48e4-8913-f97dd8457ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66483549-857b-4c4d-ad5f-839f32dbdfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7115e5-51c2-4eb5-be79-418f8d18ec69",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47805c0e-2491-4ae8-bbaa-868607fdf16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547cd77f-e20d-4e94-ac46-19d3086449aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4f7e4f-9d88-4c39-ac8e-d49491416893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef30da5-4c36-4c10-9614-dde91f8d01b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49f2c9d-33ee-48f0-b0da-786f031b4eb4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a8de90-f78b-4c50-87d9-5908f9c6d63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582bb2e6-adfb-4869-9143-6fe5125aba93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af98094-fa93-4b10-9fd4-e42a480b8732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfdabab-685d-490c-a450-93cbb56e0baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dcd790-b687-4ab6-b393-ad298f939a0f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0111bb-12ac-456e-9364-f31036d4f192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372587c6-9150-46c6-ba2f-695cef45b52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b6e5fb-f0f7-4e19-8d31-f4478b18f075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c369f0ad-4c69-49d2-bffc-77d3023b4d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd92f20-1d58-427c-af9c-16ed465fa1dc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcfff24-9e91-4390-a738-79f7be886312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b35649-a6b2-4e8e-b682-d6f891a1fa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25c80bd-f86d-41ff-97af-82dee8b19f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70cd3f28-07fd-4d2f-a875-6c2ea76007f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bf670a-fed6-458b-8ee6-fc6e816d7e7a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01cf3cd-c1c7-416c-aa7f-bf53b43f16c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b829ae08-171e-411c-b54a-f2f6de835ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1358ad01-84ca-4a9b-8261-20c9b567fa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a199a85-6581-40db-af4a-da69f002f64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4681d0d4-099f-4e6f-b447-3aa4671b2e9d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2c0ff8-55a9-43e9-aeec-5e9e1e00c52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3310761d-121a-46bc-9181-26d60963f087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55423c4b-932f-48c7-93d1-7c42a4b6276d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd9470f-000e-4cbe-a8b7-5c0be48ddfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2ca0cb-de6f-4de1-b05e-9cba0c148fea",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fadab41-e5fe-4965-b0ad-fbcee5b9c684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a285c2-acfc-475d-b1a6-93ce41a29e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e450927d-ed76-4ed4-ad0a-c5bd97af7f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c653ba-b763-4c1d-962d-dccbe29886b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c98005f-e4e2-4e97-adad-50852179261f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3b318d9-a08d-46b6-97a6-fcd95614a585",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6c53d0-f0b9-4358-aba5-93fdbaefdba3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec1c325-807b-41b6-bdf5-2275e216becd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbaaee5-715b-4870-ba93-77071d4cacd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4edf73ad-c52c-4584-9c95-3693bff1e9c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34423d77-9fd9-4601-8fee-e46fa2c7f42e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08fddcb8-2def-40a6-bb81-deefd55c4a5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "936cb9f5-98e1-46c5-bed0-41aa3d126008",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80ecc0c0-58ae-4977-bb2d-4ea8fdd28fd0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "802070f4-f87f-4848-97d1-cc6edfcd2c40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "268f3f33-b46e-43bc-82eb-716c81645f92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7886e2ea-280d-4a3f-a995-92664fb2dc7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11b58456-6766-41d2-ba23-13a7be93af0d"
            }
          }
        ]
      },
      {
        "id": "92660eb4-6706-4af4-88b2-fbc0128542b0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1656bb1b-773b-4877-8c57-ec0fac954e83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "399c8a50-ff82-4cc3-8090-e93403696770",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3eee2dfa-b19f-4828-a07e-43dc7540044e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0c809d-f27e-47a0-9979-b4d648808791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4592ee9-31ca-40d5-95eb-4f666778141e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1bd694-ba3d-4781-a8ef-8e7eaaae05ff",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54bb4bb-2bd9-46d9-9942-9277d1500508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcee721-2cac-433d-9e25-b641a7ecaba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad6cc4f-3322-43da-86f5-142131814d3a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d39b31e-5c79-4ae4-92a3-8cf29ec56788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b9f735-90e5-4460-9ee2-71d1d8e8e975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e5cea4-6f6f-4548-8506-7d3983aaf06d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a2c314-dafb-4587-b062-70264723c57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ce8008-22c3-49be-a785-5f36c5e0bc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a733b614-8361-41f3-93bf-97f67b005331",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f29571-6e4f-4dab-94df-660b209510d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc8426c-e29f-47a2-90a5-16fef7717171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4d19bd-e4ab-4e7e-ad53-8f4dfcd36db9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162d6bd7-c376-47c3-ac86-8a9ec4584611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f20063-5d97-42f7-a4be-7d43a0d15540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301d90fb-b4db-4d4c-bed8-6b29a57b7324",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30afd5cf-367b-4a55-8df9-8f7313134520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a5d6a1-cf1b-4a83-9bef-d4d69f30fadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcdceb0-b806-40d2-b8ee-c17576ec7e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2a71ed-430a-4e08-bdf0-3ad20a8fec37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c852948-929c-470d-8c98-1cc9989e4c05",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c23e0c-228f-4abb-8068-5d598d357eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "716d0659-2470-4a6b-bca9-94b357df944e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b9c2d2-75f4-4194-8892-0183a71a50ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd2002e-5037-4e1b-8266-3cf0ebfd53b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b602a8-3f29-46ce-b3d3-466fdeba8cf0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18082f87-d51f-4f93-b1fe-6ebc2642fb9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a7a59d-a72d-4e8c-86d8-e5d94a09fcb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4941be4c-ed9c-4fb1-bb16-72a648d0c291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4740cfc3-5130-4689-8bb9-1ad9b167946a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da86456a-04d9-4e48-a6ca-e23d87c88f06",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8083a1-d277-4427-8d0b-1db0f85d37cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08576b95-3ff6-40e5-aca5-81008c7e2c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33e42de-b235-4f46-96dc-8dabc6ed104a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89608638-8972-4f86-82d3-a1dbf1f63099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e472956b-4565-43d1-a0bf-f96bbe4e2bfb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef691a29-e1fb-44e2-86eb-218d3178aba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef10f48a-227d-42e2-bbe7-ee656fd340b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8125d8-9019-4fd0-a92f-2d56c32d3703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5475b4d9-9125-4452-9021-d892473efa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a3d459-bb0a-443c-992c-b92d81166d13",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b700944b-2498-44ef-8214-1d4c7baf4548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7358f2-1c4e-4b03-a5dc-13b86b801ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31547fd-559e-4267-8192-b8659531883e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d408ba0e-13a6-4e65-a279-c27cdec85bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde2f017-1160-4116-bb51-0fe39a16c0f7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51f68be-153b-4353-82d4-d2a9bc21caef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9865fb1-1843-4d27-92ab-34078da249c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e69fd8-0767-4b57-8f7c-4fe2801caf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83b735c-6be4-440b-82a9-6436eaf80b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fea8a31-e2d3-4389-adfd-33ff15ff9143",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c9f328-58f9-4418-b576-5fd3abc2104c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a763a6c9-3f9a-4c14-956a-68a683b487f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6a5047-e447-4c32-a560-9ba3ab7bf357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b08b3c-9d03-4ea5-b327-52428b8fb2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e7e026-f3db-4f7a-89fa-224877bcd939",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56d9250-f952-4c95-9dd6-a596bf14d8b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4bd1246-247f-45bb-bb71-8b32e9db0b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8578e3ad-384a-45b5-ba98-2353cc524730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1eee47-1a11-4e97-b720-174732708d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef59cf5-93b8-482d-a876-134324194f27",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9373da0-1b18-41e0-b914-77d74368093f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6d00fa-b028-4b56-8cf1-81a70b66f2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff49679-94ca-44ba-9652-aff84f987dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2244a84c-9296-48d1-b8d0-c8148596cb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94d73f4-c6ee-4d15-8dd3-eb1fd719a69f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae405e8-7d86-4aa7-b7ad-2e213e8a3317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8d6170-3101-4dbe-af4c-a186794f33cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f08883-890a-4263-afba-e4a5b0b4e060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d1411d-fe1d-4a02-b97f-79b05e14fbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977e9f05-59b3-4adb-9165-2c030c11f62c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510daa83-d70d-4e2c-ba9f-0ce65eb48dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cefc4b6-3463-4118-a6f7-1e962664da27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84d8fa7-a31a-4f18-825f-66369cc73b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd17424-d9c5-44e0-ba86-2bfb2d6a0200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b019a6-d2e1-44f5-9d62-1a31dc5e0f0f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63171e6f-d032-42bf-a420-6ea3f5cb4944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874082c6-63c3-4c44-964b-33a5f55c5ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ab13df-eefd-4e16-83e3-9d1766ceb011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41b2fcb-f727-4dfc-a0bb-4696c3d1731e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf31c61-db87-49f7-9597-f7789e4519b9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e76203-3a42-41ae-ab86-77360673b700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b745438a-f0a6-4fae-855b-ed1bce87cbcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2bba09-02e6-49b4-ad91-b377de1f5e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b52948-769f-48ef-840f-b1ab31d69085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cebc862-2f1e-4ec1-8326-5fe28fc30e28",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9fbb9c-4249-48dc-8696-a3c672c30e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d39622-0412-42d7-97a4-cbe6c5eea9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ad6151-cf39-467f-8834-0bcf53eeeebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec3c723-481b-48fc-8972-2a9b1ddc9497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafeb1ba-70af-41c7-87f3-bd7a197e2214",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97580c24-3a24-4cae-ab68-ec2cd0acf81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f733dd-a3ad-41e5-9b2e-9d4d9101ccb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a914a6e-e3e4-4255-8051-3bc7ef61a807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b3b7b5-e9e4-4ab9-b72a-f9d906f44c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d161ef-23cc-46a7-9876-1075c047c8e5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b30a8b-f8b0-4271-aba6-361c0ae79227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a5f7d2-74bb-4a6a-ad4f-6b2ca8d74651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38b191c-fe4e-4fe0-a077-9b7ce1f5c244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d5c3ee-02ec-48df-8a38-e1fd19d3b08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53da4340-63ca-449c-a1e5-1b372a7a3275",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1d33e0-84e2-4d30-8172-1f2c796f5ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b62deb2-d37b-4958-bfe2-64746e40d884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a781b8-9bdd-4951-a3ff-f3fcbd23ef50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70d156f-4c54-4aa4-bfc6-cc30c162e966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd047cf7-1ae5-4fc4-84c9-1bf707d4714f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebce5839-d17d-4bda-92a7-4803520d457d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3781057e-0475-43d5-8388-c4a1bd8c969e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cad246-e475-486a-85a2-150469f06556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c2c8cd-d87f-4759-885c-bddc86e1e237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2db9ec-97e3-423b-ab13-e4f92d92a545",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a752e325-d3b3-4736-9f98-dd7ce7a1682b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e45fb5e7-f23c-444b-bb0b-fc1c11a1d9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28be796d-42d1-4ef9-9a85-e233bf33c357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49413d3-6b6c-4560-beb8-f83b756fef68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503e27c0-ba7f-4b02-903a-bcc6d9a7dd55",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0217f1d2-a2a4-48a7-9f51-c088fb867004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97cb6c09-1644-4348-be60-164e4734921c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9737a3e4-c1b7-4364-8b8b-cbeae1c5a09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660079df-3686-47d8-be3b-0dfb24fc182b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbece991-bd33-4a84-b1b3-1f3951658efd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21abb3ce-56ac-4172-98bd-de03ff11cbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c56685a-1256-48cf-a7c9-41153c8a46a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9691e0-50e4-4852-bc85-a8da6a8a2d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896f42cf-f75f-4fcc-8fb6-a823e71bbc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a87a09c-e9e5-46c4-a585-fc67c12cd30d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eeb88a-de90-414f-9ecc-50dd01f892f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b1fb6d-1153-4be3-89a4-bd1bf4ef3a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8da416-508d-4b0b-bd06-cf4c9795490e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3efe655-b0a9-4512-92f2-65a5ccfeaf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba0848c-0242-40cb-ba3c-d1f23adf376d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8b4f2b-c7fe-4ecb-b628-b36bc607f563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a2a0a4-a4ce-4c29-a085-b3f0fd8a55dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e587e57-8231-4beb-9c50-5a6e50b298f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d36e90c-f1a0-45b7-9419-d3920bd81299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd86ae37-cace-47aa-b3a9-3e86c0861728",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deb2488-bd3a-4fbf-9d8c-56afb407fa1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5377dcd-6673-4664-9e9e-163ab936670e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4254a264-9e8d-4fbc-854d-dae9e30c3c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6996ce-18b0-487e-8f27-d0061f3dd0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4292a000-1ccf-4c43-b44e-b66b45034d2a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6ab263-59a4-43b3-a8a3-e1860a7e423b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4900721f-7da9-46ae-9eb8-f81e70b08491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85748c9d-8422-4d7e-98a0-ac701593a77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bb1ecb-4eb0-4ae5-befd-ec3a75cd596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99083e1-e25e-4112-bb09-b19e0af1bfca",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8335388e-32f8-4e58-a38b-b58a4e793eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7979ece-cef5-44e7-b941-4458333a065e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5d0e35-001c-43b5-b696-61e5e8492a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe13d01-9cbf-46e5-a758-dab823021a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed69dba-516c-497e-aaac-88d097be119a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8f7594-1448-4c5c-abcb-e6310cbff832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33a5c6eb-bb2f-4807-818b-c6138b451d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c668df6c-304c-4a63-aa1a-85d8431778b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01a0bbc-2900-4a87-a610-b25a4adddd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb34ed6-9744-4585-bdd1-02f6ce2bb4a1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c543f8-2d51-44d1-991d-4b854188ed0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65a20a5-f2ca-4865-af87-b4d0e032cb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcff82c-6fb6-4c89-9440-b795a6845721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089b5fb4-912d-40b9-9581-ca3ba911849b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1924f949-e872-43e8-90af-29dfdf4265c4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43cb627-62e5-44af-84d1-0062f4970707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9dd9ec-2561-48a9-be79-81fc23e9cf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e894a58a-1f65-495c-8e72-22af05f29cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cd8eb1-3c7e-4a94-837c-f67025c7fdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e453c93-67c1-4ba9-8ecc-f5ca8b83d7bf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0840416b-495f-42ac-9851-1165349aae2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd26ee31-e409-415b-854c-d450e6fd0b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbf6c60-9db2-41d0-b040-3d24c64be693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4d3464-15f2-4c8b-b00f-d6ae83e72a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5c4b8b-31d5-4af5-b419-567642dcaea0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8e779e-4268-4469-a258-cde28f8696c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0b6a75-0f8a-4f58-9428-00a96003e0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9854e180-7e78-442b-8d99-1cd1c9980a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a600ec4-f20c-481e-977f-b41c0f8b4e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96853b0e-1a67-4bf9-a5d1-35c2b8bed2b2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24aaf717-0f4b-486f-a12c-6d1dcac61102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47622fda-d01c-4c5d-bcc8-f2e8de4faca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15fb491-a73e-4b0f-97f6-8bb4e0787fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919232a9-e8f0-4e05-acd4-f4ea535def06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5089955f-e2f5-40ba-b959-541120a7a020",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c697ded-b562-4a9a-a1f5-40c1fd490877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142a4812-c81d-417d-be2f-c3c0e45a067c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbddbc7f-970a-41a1-aba9-4bc0a0f10802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be05cecb-0d10-4e55-83ce-8bf506d6c155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31fd56d-8a6e-44fb-91d5-4b1e85c7c57c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef552e4-908a-41ac-b64d-21eacad76f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f91f793-1c0e-4bc8-a806-5a4a0a3b4a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a2ec38-e8fe-4345-95f1-c6f9f547e6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b421f655-cce0-43ff-bb52-072f1fd7f068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b84171-5376-4729-92e0-e5e0a9e69fb6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df50e3f9-741c-46c8-bb33-1b298c5fe47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65caeb16-aac8-4cdb-b5fb-2f46d238b88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcb9dc1-7337-4304-a9b5-5cdbfaf7fdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6a49da-d126-4e84-ba13-116c745b1b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ad9244-de7c-47e2-a8fd-0d805feebb51",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06318df6-c4f1-4b38-b665-ee802e4444aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee003e2f-a384-4422-a6c5-708d02637b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457dbb17-dfc8-4dcd-b2c1-be1953af495b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa81e18c-f80e-4103-b0b5-df791ca2d4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a284c9fd-13f6-42f2-a38e-829c675e2498",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce65a4a-ef01-4ee2-8f00-c6c42873dfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd470d9-75c2-4759-aa80-59cd8428dc45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971ef424-1c02-4466-b848-42c9c48340e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e056cb9-67c6-4c3e-ab3e-cf8807627123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8144421e-949a-4e33-8fbe-233af8a4e742",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c65a140-c9b6-461a-985f-b039f0585b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c6ef34-8d48-4863-be15-471003b8f3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdd7406-dc23-406e-9855-baf7ffb7da43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b640d32d-5e3b-4d2e-962c-46ffc3681cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4707d0e-08ab-41ce-9f27-00b8104529cb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de66ab4-2c83-4a26-9c46-80359cf402f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a9b147-d550-4ed6-9383-8bbe327f7dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25facb1-1e06-48d3-9006-f10496b535ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08633604-a035-4f6d-845c-c9a2577e0e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fab7676-d5b4-4281-ae03-f211bdfcbe6c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fc0e06-0ec2-4580-9737-d2498de93a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fc2301-4ecc-4144-9776-ac591e95e36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58edbfd2-2061-4d77-8ec1-4869f01b4076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72adfa8-28ff-4f2f-a371-5050167d8289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df14c28-bf4f-4a9d-9a1c-5af7dba371ef",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dede9ef9-e0b5-458e-aa3e-92a7d44f9e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ff8ebf-2d20-4828-ba17-64f03b2b4972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237a5eef-fcbe-4fbf-846d-1ceec1dc52e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eadd8a2-2782-40f0-afe3-bb2f39269d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c2f63d-ad44-4c92-bbc4-46efed2b8816",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9244b22-69a2-4c88-b62d-2b99c241d924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e7187d-78b5-4037-adcf-3f411d307744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad754d8-b380-481f-b644-a4923120cecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943cff69-d8ed-4ae7-bc7d-8063c0591da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64c2c34-47f0-45b1-a109-044aad1dc54c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91b1671-4a07-4f36-a8bb-ec96900883b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2884f8c-b6d6-47ea-ba34-3ad20f377800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dba4c9-694f-488c-a056-f39a73bf0b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731b40a1-cddb-4aeb-b4d0-bd9f0e4b913e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66a0ef9-78cc-4c9e-b3ad-eb8870cc7e80",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae74856-3534-4b05-9ba8-a76db9526adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf66bd1-349e-422d-99e2-11d95a9f9fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1493be6c-c51a-405a-b2ab-6e96c097f5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6109b2-d5ea-48be-90cb-37aa91011a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e6aac2-b4e8-40f0-af43-78a066f1ff97",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d839aaf-01b0-4a83-9e23-174123e83657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0a4b42-0451-4e5f-96db-28bd054f6e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f429bd-5747-466f-b783-04e767021996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01233c9-1b86-4dc5-8e34-90c6bb489f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d998e9ee-466f-4b33-ae3f-b741e16ae4c7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ec7a89-51bb-408e-b6cf-51862cd00cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a612ead-d748-48ac-8605-214e0930c3fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a731246c-9926-4ccb-94d3-501a6663db9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82f472b-494b-4e79-984d-332c7efe9efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f538f0-8a6d-4e45-8019-80c581813b03",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1acfc0-6cab-421d-bdce-4cacd8ddbd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35308c3-0977-4908-b0db-c9879f73a2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4dba1e-ab10-4c43-a405-16fefa0f1946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575f507f-9c17-4ad8-8726-e096c7c79eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9d665a-9d62-41bb-b913-98415edcc20b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c338fde-398f-4e62-aca1-80e0f1a2a14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7486f44-ef72-4f1b-8519-c8b14a2166ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c603721a-df07-468f-a1ac-39fcf51c3f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38b89b2-bcd9-40cd-9bba-53940ced5355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba7c737-d9ee-4d9f-b9d6-8cf5030404d4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204e0af2-2cfb-4af6-9507-bd6aad8ce44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e0334b-8deb-475a-91da-49215c83df6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965a57da-af71-4c3f-bcd9-90f995f32180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cf8110-9dce-46be-98db-fd09d4b396e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05600b88-201f-4884-b60a-fa549d0d9ce6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ad2e85-c055-4ed9-966e-2f1fdfd851b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4646fda6-d9d3-4cbc-90a7-5d5b9d45ccd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84e8177-6479-488d-adf7-ecc06bfcb432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a3ae2d-c252-46c7-83fa-23082ac3853b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afabd9e-bb15-4bd0-b7df-1daf4c40aa6f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be21053-fe0c-42f6-8ff3-cdd1ee965f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01b5900-f707-489d-a0a4-3b5746963e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65691469-b4f3-4fc6-9d10-9cb68537a8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55c5a33-4ddc-4ba9-8802-7f5e69f02a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95efd971-a2fb-4d68-b54c-af5f5805217c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90646b98-7ed2-405e-a5a6-2f7de7103650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb68547-52c0-460e-ad41-15860ae5d2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cbb5b1-ca1a-4e83-be4e-b12486475b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095f2950-cd0d-4e42-9956-0215356f2fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1096e4-ff0e-42d7-83c1-72afb2a2f888",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79f97cf-e601-4519-af3f-c92140b9bd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d768eb-5f2b-437c-af52-41c6500b619a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a972959f-32af-4984-ac61-9ed742507234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b378ccbd-1386-41f5-a2c2-fd8b8b16251d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d14bf5-388e-4d82-b065-f3283e252171",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1f6d37-4cd3-4436-8e98-b274c07d3c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6336e1b3-af3d-479d-aded-ec09204853de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2487d495-2a23-471f-9505-091180caa8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e29389-717a-4918-997d-916cb7d86741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a48a87-dd81-4ca9-869c-c86931177dbe",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de0fd19-d18e-43f9-9482-b34778934323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3445e7b8-c357-4eff-8626-0ccce4c2eac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf82b24-e35a-47a4-b9db-eb50de609c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7133409b-d7f0-4dbe-9e2f-6095c146869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eace09b5-c0d3-4d1f-bbba-a79b43d3d3ad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5979df0-ae61-4f39-9f14-916de668e6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8443e80e-8190-4494-b2f8-19fe2d410a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349777b9-c32f-4834-9951-bfddcc28ba4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fdcb98-9f77-4f40-b175-451b34882e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fbad59-d623-4844-9898-aa08fc322f65",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7b8447-8fd5-4c4b-a1d5-ed49d5adb495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b42b11-8c44-4a4e-a210-7803f5233648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ce05ab-d90e-4b8e-84c8-b50ff98512a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92672a90-34e3-49bc-8c97-e6a0cb8f200e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa22e0c-1533-40fe-975d-af864fc5d8f5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba6af2a-69e8-4f27-9584-521675a3316b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def32f9c-5a74-4c4c-be24-bd012b57f0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e43e37-995b-4716-9229-245e36f150d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefeaa04-c121-4a6c-9903-6462bc37535e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d017303c-ca4b-45d9-a5fa-db994254d33b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c4ddf1-c612-4a46-a377-c1bd7347e09e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5556dcd-2324-49ed-966b-8c93fe569cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809e9b40-dda9-4460-9727-cba8f0f9c6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10381780-f449-4562-b927-a4149065c8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8d6e26-f478-4451-8b6e-d7491dcd446c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549579ef-6627-44e0-a9ab-e42983ea164d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e81bfb-f72b-4dce-8974-759d081dba58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170fdbe4-14f6-401c-af36-b41fdc51b612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61352301-3600-4152-9963-e69274cb93d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e708470-664d-4165-9eed-fe9bc7745925",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6a3896-b4e0-4b4f-ac85-f6e964e43202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7efc83-e2b4-4233-a8cd-ae1990bf63ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f034401e-a48b-435c-b148-9516dadf0e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d9cc86-62ec-4485-9e62-d7323e41fbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0139214d-c223-4572-b00e-3e7cc8cca5fb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79596bc-7008-499e-beca-a84b7f93b5ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f6e61d-b702-47c9-97e7-f97a3ce215f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2043ba8a-b5ba-4efa-a4f1-fbef2b6555b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d21fc4-95a5-48bc-8390-e5c456ccf41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58f7320-2480-41e4-9e10-506dfe7e7e5b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070d1635-35dc-4065-bff5-db19b1bd354b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cdc8c97-b51e-4859-bcb8-ab888255f2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935b14c9-28f8-4978-9a84-40f1a34d6f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16628bd0-0803-41b5-ad5d-ee29fb7fe321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69edf4cf-65c0-4388-bc26-f1df6311a9e3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aa98ba-d697-4eeb-8f49-e084aa6125cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232318f0-7414-4959-b73b-c52f1568d1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbd1d26-90e2-453a-96fe-c9918981b179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71aeae24-1753-484e-9af6-0ab33470c122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a2ea64-d870-41b5-8bc7-c96a1218a95d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc9c173-d0ff-4162-9a51-72143c4fa6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff26e9c-f02b-436e-9445-0ddb59558bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b724c821-d09b-45a1-b5fc-10ad8723d2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfd8782-3a7e-4753-a7d2-20b81ba8dfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f9379f-c197-48fb-b3c6-73070bfe1bd6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eae0e7e-ab31-4b07-83b4-c0eb808af700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861964ee-cd1e-4921-93e2-e28d2c4a9eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7849e7da-e9b9-4f2c-a203-15aac9a63a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf601936-97d7-4503-a355-a467270371b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe6278b-c3df-4eb7-8f45-0f84bb52b955",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa34f0-0380-4073-a97b-ec2af9e1dec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa7e6972-4318-4f79-8e10-3770d09e4884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621b5453-1166-4865-80dc-ff10382c8097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263ce133-5e30-4080-9c2b-11e31e743de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fdede3-34f5-45c9-9cfc-bfe457b3ad7e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154af150-4dc3-45b1-bb52-fd42a09ed009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35462c61-6c3a-4cc1-8408-03f45571b0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b79d49-25c0-48e4-9b01-fe97dfe204ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053e9e99-627e-4626-9ef1-b4100169a4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c18451e-ad4f-4be6-9bbf-64ea704207bd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc80497-cf1e-48fd-987a-e27e01c50a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b4a4da-0502-457a-8e9f-6283210c86a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b9a61e-2acf-4ff4-b89c-86a1ca96abfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c669a67-10dc-4647-bbfa-3d1e38be189b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c8365d-708c-41fd-aa24-5f1c77a9577d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8af4bd-8983-4bb6-b0bd-e5979c6f7728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f26d19e3-26f2-494b-8c2c-4655f5c2479c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7320e029-6610-4730-9d2e-1d8a15015586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3824796-5d6e-4869-bf77-54bdfbca7484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7522cd-402e-4e35-8126-79ed26f05fe0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017166ed-b986-4e14-947b-e520b2cb5122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccef09ee-9205-445f-b930-bb02034f8787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6196c76b-11d4-496c-82ec-2f58ad588071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e11631-9b61-42dd-8096-b8bf37bf1e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b915bc-7b96-472b-b900-ab7d3a539efc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d90ac4-1889-433f-b74e-3a673b0ef3a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e216b045-f573-4443-b178-2dc2afbf42c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8baf41-9aa5-425e-85c9-5047de851d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facb3a93-5077-4a84-954d-d3ec2b5946d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6147225e-7df6-48eb-84d3-3e8c2e93019d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b977bc-b3e6-4a1f-ac75-b7c40fad31b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c65023-d9c7-40d2-b99a-e877a889bd83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540ab71a-bfb5-4619-b639-f38fed2d6feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5f82a5-6c8d-4a06-8466-96aa328c2974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2485dbef-d836-4c30-8c6b-3ec8545a9d5e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71e5877-ad8e-4143-9294-fd778ada8472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f6a86ab-feb5-4fc1-b79c-494f6b7a74c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8131425-9895-4b1c-87c2-988f07535f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec750f84-dd14-477d-86d5-57638263e192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52074e35-64fa-48cc-82af-e6fa07483520",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b812ec-0144-43d6-b536-2da97553c182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4078876-4766-42d0-9561-b22d08a15d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb91e95-a228-4502-9685-e50c73de1edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e48a36-d573-44dd-9524-171c1720eaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd8f160-8815-487c-88f5-083d795bc471",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34926a90-ff28-424b-b76a-d8f4b14e9f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a29e19-35fe-4b08-bf62-4d9d7d1cb465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74629e6-0636-4a0e-9611-31e4644570b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24067219-937e-4f1a-8a18-f41d6886cce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867fc322-2f5e-4871-8741-421748269676",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3226ea5-35ba-4e45-8680-880ddd866c70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818e82f7-765a-4281-86fb-483a938b0cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6853bae-9f8f-405b-9cc9-e704a6161eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c903afb-89c2-478c-86e3-058e1e87410a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0454c9b-3fdf-40fd-96c4-22c8ab875522",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d569ff-423a-4f3d-9604-4984f64c626c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "174a4086-3774-4440-8338-b062905d26b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5570c0f5-855c-40f1-83f3-ed4e7b76228c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acd9d74-fe80-4933-97db-84c7eb9d76aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422df630-514e-4b1e-96ec-f8edb548f441",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a30ba2-9e54-4d88-b8c1-b9c34a611767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf35c59-f82b-44d9-831b-c901a5d8b3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a5c056-aadf-47fc-96e7-bbbead73f0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65414e3e-68ee-4315-9851-22e8f28dbf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2897bb3-9665-4cbf-9098-3a0ca4cab107",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bec526-8a12-4e48-b02a-5aa039fcb2ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d80619aa-e509-4598-9ea4-001cd98d1a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405ade5e-a60a-46ab-9d26-d55b298e3422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfaea21-ca73-4fe6-9d7c-9c59668e18eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b682cc27-1091-4970-9d52-fbd821d8a815",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5db26ce-ec3b-40ee-a459-c2ab870ed954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd1a3ee3-5ea5-4ab8-8506-26c95c5ff063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ca2d61-f9f7-452a-bf63-e2b945722ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c523d6d5-c334-410a-a5f3-a93eda251acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a55abb-bca2-415e-be22-99435a288d12",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccffb5c9-c72b-4f00-bc17-cbd012710a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2e3151-bee1-4f01-92a0-eb20886568c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5cc60f-7633-4b8d-b528-c0d4abb4bbe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284b43a4-2028-4d0e-91f1-60ca7a4fa773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d46430-5b06-4c1e-8d23-5794fd88da6a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3a02c7-b77d-4f8f-9ae7-416f5270b9dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc21ab69-73e3-4930-a5b0-cde4a38bcb6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa16a35e-9c7c-4356-863c-c4c89a28ad94",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647442e4-fa95-4d67-afc2-a0ac34a04e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06db317-fca6-4aeb-aa5c-865bbdc4724a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66d8db6-4a00-4217-8b84-59f74fddf43c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366c699d-b3b7-402a-b445-f2846df5a74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72562f56-e52a-40a0-9862-d9d6d06d5d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97621d78-0479-4028-b218-3c7bda896e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cad84f-901d-4472-b0fb-b5e25a01c070",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9e9467-57a6-40be-bd98-3637b3877381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f746504c-3f33-4b71-b540-2e6a411ebbc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b447db-c818-48bd-88eb-1d11f51d41d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1485bfc5-498b-49bd-bcf5-3c682ea33fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42eb0a4e-7db9-407b-9518-41fd8cdd2c75",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa012b51-8b11-4f83-bf47-e0f081f6e144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8914c659-c820-4b5e-9919-6e77b41e0a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7a50d8-7d94-47a2-938f-723d3361f7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527f6910-e287-4a03-94f2-bdb58c9033cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03e1fb5-bcb8-4bca-87ea-6d8798a12f01",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be42b1b-2948-48d7-9ade-c6963e7febc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ee3ba7-584f-4bd9-a459-0ac7a0eef480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d39b994-79cf-47fe-9db4-aba138b6843e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50412185-9739-4149-a35f-9826b360604f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1364e818-909c-4388-bbed-2f404cc4e779",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e287403-d6e2-4f07-b2cb-699b3f46c97c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca339652-b8c5-4d2b-a421-a935574b574e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dccf915-ea04-4099-b7f7-c276c2e76863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde5bc24-8d59-4f0b-832c-916694c30517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fdcfc1-edf0-4b3e-b9bc-28c61ee805f4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4f9aa9-c84b-43d0-92bd-d920cfea7ff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3581bed6-8907-4604-9c2c-ab2d5f42a30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd5795a-7a31-40c7-aa92-767b721e6ebd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333c9715-275f-410f-9cdf-6bfa760d3117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76052971-3320-4fbf-8c91-61f5721d0ed5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ffbe41-ec68-4947-86a2-d0a3902c9f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e3f9fae-d998-48d6-8164-4fda2c4c4ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc99ec9a-b9d2-43a6-b187-b867b0ee1204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0325c237-1fef-4f78-8998-1c1902ceaba8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d12bdad-3f3e-476f-969e-8faf5e8032bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c250990-9379-49b4-adab-803c54bedb9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1be57a63-5c26-41b8-b094-9c6173fa97c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4683aa9-bead-4f33-bb19-b58882254c07"
                    }
                  }
                ]
              },
              {
                "id": "62ca8c5d-4f28-44b0-b321-cfa5b09945b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e3b2748-78e6-4154-a46a-bfd7eb77858b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90677972-6848-4f3e-86bb-70cc0c64f1db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f2c3f52a-ca62-4684-a107-7145d3ed93a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dca81ff-b97d-494c-8b1d-3eadb484ac6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "327d6f8a-5d3b-4990-bbeb-472a1ebea7ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2f9d06e-1cae-47cd-b9f0-662f4f6c2a8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b908e6f5-f47c-403d-b65e-ca5738938748"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58df4f02-2d72-47b6-94f4-123807d631c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fceba8c7-b80c-4e20-acbe-cd090d26b9c8"
                    }
                  }
                ]
              },
              {
                "id": "bc2fbcda-c274-4be0-941d-c4fd7a6a087a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "668931b1-44aa-476b-b884-b5e524215643",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6751c77-67f2-429a-881d-9a1afb1e631a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a78d2886-0449-49e9-8c38-bebf7a5c1978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f10c01d-7037-4175-8f19-25be6a436fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1e0daa-8b5b-4892-a078-6538d4427735"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f72f27e8-5cf1-4f88-8695-d32eadf4d52f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03d25d19-a2b6-49aa-8d26-6f09a70faaa2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7261b43a-a3b2-4103-9070-eade94be6f66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c3a8e19d-ec08-4126-8280-df021947d744"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6959da99-5b3e-4b3c-946f-7610704dd4e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "615c418d-ac05-4b79-8958-a5fc2ff6f817"
                    }
                  }
                ]
              },
              {
                "id": "54cb24bd-29bf-4363-a924-c4a102b6e430",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55ce199a-1c85-44e5-9f36-12c2dcb17a67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7611136c-e189-4f1b-ba95-f516e59090df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd760b38-b092-4821-a8af-6ddc3f3e2d9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d75bc3de-e4ec-494e-804c-cccf8deaf26d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "905f30db-dee1-45e5-b197-d967d89b1b58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0bd845cf-0be9-476b-b906-1eec6317268b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "504506a3-79b8-439a-be9b-adc02a8cceb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4928dcb-c367-4ab7-aac8-12516051f679"
            }
          }
        ]
      },
      {
        "id": "8b7dea42-9ab9-4957-91e8-a0e7bd0d616b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9b01cf87-6c45-4ba3-8fcf-8552f0fcf874",
            "name": "Negative Testing",
            "item": [
              {
                "id": "302b1d46-471b-446a-a411-aeaa5dfce0ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "848b40ad-4f57-4000-a46a-2e3805c1ceac",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10736843-d49b-433a-8012-db70e350ab4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "50a79f56-5f17-438f-8bbe-b3ec69105c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9924566c-27b3-460c-9d06-88c18177d83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a89de623-2560-40a6-89dd-da4c295e1b56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36955786-7c78-4716-9c53-f333bd57b830",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dae42d7-b346-4f6e-80aa-cdfc4dfb0a90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "212cdd1d-1850-4eac-8833-217307c28ec3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df8b7eb9-a458-47e5-88b6-20d8ede38009"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12b6c2a3-f7db-49e0-930c-c13fc1ce4d88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7d307d79-161d-4256-aac0-5b2a5a0511d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8089dcd0-3d3b-4266-8201-1689366988e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bea86712-cd8e-43f4-a8a4-f7b845ea3f04"
            }
          }
        ]
      },
      {
        "id": "bc4c13db-f74c-494f-a960-119467991857",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "818c427b-f102-4bfb-bf41-0e0d36b9f6a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de1ac67d-9f0f-4c65-9d97-34e330cd2144",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99504503-8f05-4ed0-8ee7-63b919c36b63",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64aada1f-222c-4db7-af70-3c063b23ecee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e4116e4-69b5-47ab-bd4e-34d0e8500c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab970a6-fa93-4099-a819-6192eb6e585b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfa9d29d-06c0-4c85-969a-fa099e58e428"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e35df5b6-c469-425e-bdf4-71c1d2ee6c74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cebc477-ed97-43d4-a19d-35dbea8a72cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e3b40f9-9f53-4ce8-a3cf-4cd7b36b5232",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8dfccdd-1afc-4d3b-8d4d-742636d66560"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e28488e-594b-4232-a906-f57bfbc13d50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b07a3db-9ddc-44dd-9b9f-eb418806d22e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "609766d1-6582-42dd-a53f-b0d2c7814b2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "703ce927-513f-4b08-a886-d471154589a8"
            }
          }
        ]
      },
      {
        "id": "a8c837fc-a73c-4c21-bc59-715e509ca9ab",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "007d6aad-3348-4917-b77d-019508bce3c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08cf6017-548d-4a23-90b2-c875b9a2f31a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "573cf62c-add6-4510-96c7-878cf872a676",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f3db1d-1d24-4530-a98e-b67d7981fc6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4161dcc8-ec48-4ec6-b194-fb88428d7c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b70d7f-29e1-4113-9a38-c6882c9f9d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "776a9b6d-09a4-4726-9dc0-32c19e59ce21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01fea31a-f408-47c7-8ce2-94348c544e03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "746e4e95-f3fd-4d7d-8286-a8ad6cba89cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc2cae28-af43-4591-9362-43ca3c3d5bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "306c337b-1a85-4687-8641-03c0719c65ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4db5d06a-71e7-479f-b14b-0cbf98ec93a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5630aff1-f48e-4035-af2b-e2f04963111a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "916a23cd-9e5b-4b2f-9bb3-517f34b679db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cce87e28-64c7-4cba-b18d-2969b311b747"
            }
          }
        ]
      },
      {
        "id": "727bcc70-8711-44a4-b693-1eb773255d6e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01ce4f8d-2f21-413d-87ab-b09ee0eea0eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4491c19f-a693-45ac-bcbd-15f78cc9c2d1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d2bd20ea-1479-4be2-8da7-4b42b541fa1e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94560f9b-d041-4d91-9d05-957c568be860",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a83677c1-8781-49a5-aeed-86464f5978cd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.094736842105261,
      "responseMin": 2,
      "responseMax": 270,
      "responseSd": 23.55586432778456,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699230903262,
      "completed": 1699230914883
    },
    "executions": [
      {
        "id": "8c5034e0-7b49-4fd6-a60e-e43595f52468",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "68724737-c41d-41c6-a0bb-ac7c216493c2",
          "httpRequestId": "991c4abb-de1c-4988-9f25-cde431622aa5"
        },
        "item": {
          "id": "8c5034e0-7b49-4fd6-a60e-e43595f52468",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bf447fda-44c3-420c-b8d1-156fbe2c9715",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "3989c663-d0f9-48cf-bb45-8dc946a671db",
        "cursor": {
          "ref": "1e89c1bb-ce17-4538-831c-2f43959937bf",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3f5ae682-9566-4246-82a1-3f01a753d8e4"
        },
        "item": {
          "id": "3989c663-d0f9-48cf-bb45-8dc946a671db",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6b74f9f6-f9e5-4f5d-ae6d-0a5031efac1f",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "0b110fba-9af2-4614-9807-96f948e6f5e6",
        "cursor": {
          "ref": "2ef464ad-f72d-478b-82e1-2b7863f6ce1e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dddbfbf8-3a88-4136-9cb6-6b0dc8b2612f"
        },
        "item": {
          "id": "0b110fba-9af2-4614-9807-96f948e6f5e6",
          "name": "did_json"
        },
        "response": {
          "id": "e8175a2b-b4d0-4413-8161-5fd0cf8d5ae2",
          "status": "OK",
          "code": 200,
          "responseTime": 150,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef35ad4c-60c5-42a9-88a0-c225b7082dde",
        "cursor": {
          "ref": "7d1a1eca-bcf3-404d-b894-022bcf9c085e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a0537c8-35ab-4644-9618-fa0955673a3d"
        },
        "item": {
          "id": "ef35ad4c-60c5-42a9-88a0-c225b7082dde",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa96f4b2-de5d-4672-82ff-6d62fe5deeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef35ad4c-60c5-42a9-88a0-c225b7082dde",
        "cursor": {
          "ref": "7d1a1eca-bcf3-404d-b894-022bcf9c085e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a0537c8-35ab-4644-9618-fa0955673a3d"
        },
        "item": {
          "id": "ef35ad4c-60c5-42a9-88a0-c225b7082dde",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa96f4b2-de5d-4672-82ff-6d62fe5deeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b72df4f-694e-4796-8201-130c52b131bc",
        "cursor": {
          "ref": "9b739cdf-07ba-4230-ba78-a8c4e3d37f36",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b1c8580c-8cd6-49e1-a2d4-3a9c8abd2d92"
        },
        "item": {
          "id": "2b72df4f-694e-4796-8201-130c52b131bc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "09744085-7111-4c1c-b1fd-9c6fd1a37bcc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049c2a9b-3161-4c64-9666-bd6799923abd",
        "cursor": {
          "ref": "da4262be-d036-481c-9559-60be4d925fcb",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b02eef85-811a-453d-a284-d2b0e32b68b0"
        },
        "item": {
          "id": "049c2a9b-3161-4c64-9666-bd6799923abd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "af2ec35e-76b1-4726-a675-c99beb9faeda",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3216afe-14c4-44b1-a272-062c83632837",
        "cursor": {
          "ref": "d5192237-e98a-4729-a932-dfec3a0322bf",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "897c8ff3-6a19-4436-9857-143979412a6a"
        },
        "item": {
          "id": "d3216afe-14c4-44b1-a272-062c83632837",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "76313373-9206-492a-bc6b-dfd44317db39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c2c51a-5502-4185-8cb9-70c42d3da325",
        "cursor": {
          "ref": "59eafceb-7026-495b-89ec-2bc44b1aba2c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5c20d9f7-0ca4-4fe7-9ecd-a02adb400203"
        },
        "item": {
          "id": "60c2c51a-5502-4185-8cb9-70c42d3da325",
          "name": "identifiers"
        },
        "response": {
          "id": "b3fed137-f0a2-4dd1-be05-d53d488be139",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef98f505-b347-420c-bff4-3570b917c769",
        "cursor": {
          "ref": "76b8ea68-a109-433b-8da3-1a9ba7d80730",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5ffc818d-19cd-479c-81b5-ce7717234614"
        },
        "item": {
          "id": "ef98f505-b347-420c-bff4-3570b917c769",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f999e035-2334-4423-bbfb-6ebbf6324df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2e1684-e94b-42ee-aafc-3f314e725c95",
        "cursor": {
          "ref": "cc3b8502-9776-4966-a400-97c8173d549d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9fd50ebc-349b-4b69-aed9-94f5c43f9f8d"
        },
        "item": {
          "id": "0d2e1684-e94b-42ee-aafc-3f314e725c95",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "61802b92-348b-4210-acda-379d8c57eeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950d8268-c973-4cba-9fda-b3c0e6540ad1",
        "cursor": {
          "ref": "e9589bee-8357-477e-b022-24899d42d524",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1172b86e-aa25-4a3d-930d-a3f7fbed1852"
        },
        "item": {
          "id": "950d8268-c973-4cba-9fda-b3c0e6540ad1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dcdf4449-35cc-4d08-b9c3-5475dfee223d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b498d09-8a8e-4fb6-80c2-c8d68edcd811",
        "cursor": {
          "ref": "aebb9481-3151-4b65-8ffa-ac455880f728",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "13188734-ffc2-4cdf-b98d-b07035028f18"
        },
        "item": {
          "id": "5b498d09-8a8e-4fb6-80c2-c8d68edcd811",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "78e7ff13-a53d-4698-8817-421fd1605fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b5e924-674e-4cb1-8914-5d83d056a9b8",
        "cursor": {
          "ref": "5cc416dd-d4f6-4cc1-bb6a-9cdb1dbcdefa",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d0d3198d-6509-4b89-8d96-df0a3ee3bca8"
        },
        "item": {
          "id": "65b5e924-674e-4cb1-8914-5d83d056a9b8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cd7bcc0c-2eaf-40e6-9e3f-b026d65a768a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b423ca-2f38-4069-baaa-ca82eb210517",
        "cursor": {
          "ref": "65860894-9663-486c-8d3a-d59e3cdb6d5f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1ca2a3ea-7377-48eb-bf7d-510d7c5096b8"
        },
        "item": {
          "id": "c3b423ca-2f38-4069-baaa-ca82eb210517",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "30df8ea8-4c3b-47b4-8716-2b4bea2713af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb1556c-86f1-403b-8aa4-3d5358d51b40",
        "cursor": {
          "ref": "85c16faf-458d-42b8-82ce-77bccc82fd41",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "925aca65-bad5-4a21-a0ec-89a71429f40a"
        },
        "item": {
          "id": "bdb1556c-86f1-403b-8aa4-3d5358d51b40",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f80221ae-76ae-4581-84b0-c0fbbeb549de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1a5db8-e294-4857-a652-840045aa006c",
        "cursor": {
          "ref": "58a13556-c553-4f94-b2c4-b32214dde243",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "52530f97-7780-4068-b42e-e338698a9f98"
        },
        "item": {
          "id": "4e1a5db8-e294-4857-a652-840045aa006c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "930663a6-2150-4bb9-ad32-32d98eaa21b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778d8616-d6c1-4882-bf4c-d36426b35ab0",
        "cursor": {
          "ref": "5e7e7e3f-2ed2-40d4-81b3-52b51e40bd34",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ae3aa5ff-fe62-4a5b-8287-1049110e32b8"
        },
        "item": {
          "id": "778d8616-d6c1-4882-bf4c-d36426b35ab0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "df24ce29-0367-4d28-a3a7-7384a4a40334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b18aae-3c63-4328-9b5d-e221e0531b4b",
        "cursor": {
          "ref": "c8ec093b-1d05-4cd9-b908-24080760bfb7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "88f3a9ef-206c-4bb8-a410-8b4c746c2c8a"
        },
        "item": {
          "id": "31b18aae-3c63-4328-9b5d-e221e0531b4b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f1645009-6e52-43b2-b113-a3fe16a87c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaf2c61-6c0e-494d-b494-c590f09e9cf5",
        "cursor": {
          "ref": "716b7cbe-3710-4ad6-b091-b0c3c406da83",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "026ba6c9-e310-4560-bfb7-b5a66fea5551"
        },
        "item": {
          "id": "aaaf2c61-6c0e-494d-b494-c590f09e9cf5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0aeb7483-80cc-4f13-a01e-c96e1152fe91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9913c80e-f311-4085-994e-53ceb4c4edf6",
        "cursor": {
          "ref": "67f559d4-ba93-454b-97c4-9f8d75aed81c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d43f7b9c-7201-4fe9-a388-140f34442918"
        },
        "item": {
          "id": "9913c80e-f311-4085-994e-53ceb4c4edf6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1860c557-a0e9-423c-8a09-32d91b0d029e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90adb573-29b4-4b2d-bc9d-5011e73a7a01",
        "cursor": {
          "ref": "2a147ceb-0cf1-4a5f-85e2-1775f3daa668",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "febd3176-0320-4739-8621-65809b86497d"
        },
        "item": {
          "id": "90adb573-29b4-4b2d-bc9d-5011e73a7a01",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b75165c8-0d3a-43e1-9d1d-88b1e541fd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce69bb5-0140-4ac3-827c-e5a5517c32e3",
        "cursor": {
          "ref": "4055c83d-3507-4851-8e39-42d9b9049bcb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "24a5d7ad-60dd-4589-805b-0f9751d70655"
        },
        "item": {
          "id": "cce69bb5-0140-4ac3-827c-e5a5517c32e3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "26469fa4-40a3-4c7f-8b4b-2c95618715d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73c4e50-47e9-47ae-bf39-95874fe6dcc4",
        "cursor": {
          "ref": "04344cf1-c81a-4e8a-84fb-c0110f586fe4",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6c96bdfb-8601-4efc-8f3e-8156693b8513"
        },
        "item": {
          "id": "d73c4e50-47e9-47ae-bf39-95874fe6dcc4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9c9003e6-2389-4cd5-b3da-158e4c7ebb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f5850b-0ac8-40a0-afe2-52089de854a4",
        "cursor": {
          "ref": "17f8a124-1261-434a-ae9d-45c57c81d240",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9c76dbf2-a48b-4dae-a494-2dc446352bce"
        },
        "item": {
          "id": "45f5850b-0ac8-40a0-afe2-52089de854a4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "db2b2ffd-6de5-4445-b0c2-c65c82a4470b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe23db2-49e9-4201-aa6f-29f2f211309f",
        "cursor": {
          "ref": "2619ebbb-1431-4c36-9fe9-33390ead200c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6786202d-fd13-4646-bdee-89e412ba4d32"
        },
        "item": {
          "id": "4fe23db2-49e9-4201-aa6f-29f2f211309f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c58a7140-2563-4bfe-ae75-3e9071580b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d95d763-8897-4e2a-be47-e2b7a16c82c2",
        "cursor": {
          "ref": "f8ee9de8-a282-4d64-92ca-78caf4fbf071",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "78c6b20f-50ee-4f4e-9290-75e69e7c7ec9"
        },
        "item": {
          "id": "7d95d763-8897-4e2a-be47-e2b7a16c82c2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bf24a669-2bad-43ee-9faf-df1534a65a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d28964f-913a-465a-a986-ee18900156ee",
        "cursor": {
          "ref": "4b99a7a1-2803-4ab4-b733-22bcbdd8e5b0",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c615ec4a-4a03-439e-80ad-baa95fe9dd24"
        },
        "item": {
          "id": "0d28964f-913a-465a-a986-ee18900156ee",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bdccf017-6f8a-4469-b443-ac49898fd3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8972720-954b-4c1b-80dc-bbe4df7af00f",
        "cursor": {
          "ref": "d6fcafad-4f79-497d-913f-4677f60446a3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a1321fa2-cb49-4281-96c4-161110e0c0d4"
        },
        "item": {
          "id": "d8972720-954b-4c1b-80dc-bbe4df7af00f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eac103ff-b38a-4758-bcd8-f666a8def575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6eb171-4cba-47bd-9f90-48fbd1ffd1c4",
        "cursor": {
          "ref": "9008dc02-ea55-41c3-8982-ef247086c1f7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7007f313-ff78-4be5-b026-483bda1d12d1"
        },
        "item": {
          "id": "7b6eb171-4cba-47bd-9f90-48fbd1ffd1c4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6bbe3dce-9280-40ca-85e1-7fd4d21467e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bda59fa-3162-4d1e-b99a-6c7f1c8b6b1a",
        "cursor": {
          "ref": "fb892396-b1c7-4e9f-a2b9-0ae2a7557607",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "93f29f99-7008-4ede-9d4b-51d9c6919f34"
        },
        "item": {
          "id": "7bda59fa-3162-4d1e-b99a-6c7f1c8b6b1a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b4fc8058-a9c7-4cb9-b1b2-1e8e10633127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5934c34e-5d38-46cc-b44e-3e0a688756cd",
        "cursor": {
          "ref": "4feca49a-7fe0-44af-916d-a074e087f82f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a3ec3032-5f67-4f38-846f-95792566da43"
        },
        "item": {
          "id": "5934c34e-5d38-46cc-b44e-3e0a688756cd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dc0e6324-65be-41d1-8ba6-f30ec6ebea0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a33b0b9-cdd4-45c2-a161-a978ea2a9367",
        "cursor": {
          "ref": "c721700f-d8dc-4b9c-a7c5-85923fe03de2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0441ef9d-1a19-480a-9818-6ea0848658e9"
        },
        "item": {
          "id": "5a33b0b9-cdd4-45c2-a161-a978ea2a9367",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c6ee8514-964f-4e30-be6b-58582bb41ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c587cb5c-3fab-4994-ab41-388bcf6e5eae",
        "cursor": {
          "ref": "81cf3953-3238-4f97-b84d-3a6714aabb2f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b555d50a-b11f-49a7-951b-9858c950a3a5"
        },
        "item": {
          "id": "c587cb5c-3fab-4994-ab41-388bcf6e5eae",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bd107093-c69d-4767-8877-937102becc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee62031b-43a2-4c51-8f0e-f0e0cb403048",
        "cursor": {
          "ref": "82cddd9c-e4d1-4c3a-b04b-30227258c92b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e5142c9d-7136-4c5f-b521-8868aa4b9444"
        },
        "item": {
          "id": "ee62031b-43a2-4c51-8f0e-f0e0cb403048",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "80221757-2566-494c-ab7f-59c9dbb2ad16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28ea6e6-fb3f-4eaf-afa2-9412615703e6",
        "cursor": {
          "ref": "d42b2906-4cb0-4737-a238-ac1085f23119",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "14b6355b-af00-4754-8480-9d74d2cca75a"
        },
        "item": {
          "id": "a28ea6e6-fb3f-4eaf-afa2-9412615703e6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "abca7b74-5c2e-4d99-a65b-6d3b0f1d8c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9df436-2928-4748-ae40-7d811113ba9c",
        "cursor": {
          "ref": "36e94258-ed2c-48ab-8672-7ba4d9e4cdf0",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "167bb51c-ecaa-494d-85fa-4f3e7c2b87b1"
        },
        "item": {
          "id": "7a9df436-2928-4748-ae40-7d811113ba9c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "95659e42-4e71-496c-aacc-6940dc8a58f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595a942c-d341-4dad-8b37-311a77247d2f",
        "cursor": {
          "ref": "43204c79-2c0c-47f5-b75a-86d1aba16d2a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "605231e8-f17e-44bd-9217-a41a2b468835"
        },
        "item": {
          "id": "595a942c-d341-4dad-8b37-311a77247d2f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3dd8a0a0-e9bb-4916-abb9-dca2b68087e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fda40f-52d7-4752-bcc9-db0abe0509d2",
        "cursor": {
          "ref": "2acb11a4-c49d-4e8f-99e2-341f59b567c5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d56ff62b-ad81-498d-a191-781911eba5f1"
        },
        "item": {
          "id": "18fda40f-52d7-4752-bcc9-db0abe0509d2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8e9e43b0-7e64-4dbb-ba13-33b05fcf93fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d858025-6b50-41da-8f4c-8c2d105c6e6f",
        "cursor": {
          "ref": "8b436ce8-929b-48eb-92ee-741db3b285e9",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9c6fab2b-28b7-4ab3-b767-1eee378ce892"
        },
        "item": {
          "id": "5d858025-6b50-41da-8f4c-8c2d105c6e6f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f03e62ee-14e6-4739-835e-d5c90cc5defa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b099861e-9adc-4d48-b9c8-53711379d549",
        "cursor": {
          "ref": "2951b07c-e039-4150-92f2-3c7b2243ade1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ba47f4eb-fa78-4124-98c4-04707c930784"
        },
        "item": {
          "id": "b099861e-9adc-4d48-b9c8-53711379d549",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "25970490-966d-410d-8557-d930279f10a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00897394-5def-4164-9ad4-8ff376c7a73a",
        "cursor": {
          "ref": "98f4cbc6-9bf4-4fa3-ad17-c9d4ae7d7002",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d23ee465-bd2c-4ce8-ab75-23a5c872e6eb"
        },
        "item": {
          "id": "00897394-5def-4164-9ad4-8ff376c7a73a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "25b6d5d8-30d8-4043-aa73-e1f34854b662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb764e5-028e-4eb8-8c84-1e430d2996b1",
        "cursor": {
          "ref": "234b30c8-2d11-4b41-8dcc-6b442bc585f6",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1b942b0a-88c8-4771-b7ad-0885256f29e9"
        },
        "item": {
          "id": "2eb764e5-028e-4eb8-8c84-1e430d2996b1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "63f9db2d-28e3-4217-bf96-db0df759e2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a45e38-61cf-453c-aae0-7712ab8928bb",
        "cursor": {
          "ref": "ddb8cea0-31f6-46a1-88e1-9164c7dd0f20",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9ce03e0a-bffd-45f1-b8d2-3b57a4806ff6"
        },
        "item": {
          "id": "05a45e38-61cf-453c-aae0-7712ab8928bb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a6dabd9b-38ac-4db0-bd88-bb0482fae2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713cd65b-07b7-42b2-b4c0-40a84c4edb14",
        "cursor": {
          "ref": "d7d42db9-ed68-48be-9edd-218ac11fc5e1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bf0163b5-434f-4178-9f38-6cb30aca8198"
        },
        "item": {
          "id": "713cd65b-07b7-42b2-b4c0-40a84c4edb14",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f44152bd-5a14-43d9-9f7a-e63cad4c6af5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11a4f4a-5115-48ac-8e31-245fefd0c65c",
        "cursor": {
          "ref": "3c7684e0-f17e-4723-b361-fdca678e112c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3d117512-8084-4590-9d33-3501484f6597"
        },
        "item": {
          "id": "f11a4f4a-5115-48ac-8e31-245fefd0c65c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "86fda0da-f851-4bd4-9f69-823283d49254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583efcf1-b3f4-4cce-b3c4-c9c553d45af6",
        "cursor": {
          "ref": "886805aa-25ba-4be1-82ec-2ebea1c27388",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0e58830a-4574-4ca9-a4c3-814d0fe47318"
        },
        "item": {
          "id": "583efcf1-b3f4-4cce-b3c4-c9c553d45af6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cc9f9d5b-b39f-49b2-899c-3212c0735242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d553ca5-0406-4543-840f-43f84bc970ac",
        "cursor": {
          "ref": "c311a653-0eb4-4fe6-9ca9-9e5547a5d856",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c2dc2475-1c12-44e1-a6a4-a1fca6053372"
        },
        "item": {
          "id": "8d553ca5-0406-4543-840f-43f84bc970ac",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1fcdc9ef-5f85-4751-8ee9-0d20b9a26e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0d4265-bf92-434b-a8ce-48aeb8cee2dd",
        "cursor": {
          "ref": "169583a7-ac77-4944-b765-4eaf79890752",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6f497e2a-e619-479d-a652-4dc74f21615c"
        },
        "item": {
          "id": "7d0d4265-bf92-434b-a8ce-48aeb8cee2dd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3287ec8a-c7cc-41c2-9b45-2b4cedae0c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec92ca2-97cf-4a5e-ae7b-4b56885e1dd2",
        "cursor": {
          "ref": "a5dfac3c-4e66-43bc-845d-35b10a14f735",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "afebdba0-1712-4c01-9d9e-720fbc96afa9"
        },
        "item": {
          "id": "3ec92ca2-97cf-4a5e-ae7b-4b56885e1dd2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a07b24de-fc90-4d14-b1da-196749d28723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a148f6a-068f-466f-8c42-415b5c40b700",
        "cursor": {
          "ref": "c780e1da-b233-4481-bf71-c67aae5c4229",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6e7ecab1-c20e-40ec-99ee-890393e7f16d"
        },
        "item": {
          "id": "0a148f6a-068f-466f-8c42-415b5c40b700",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2d693d00-a7b1-46d2-ade1-a19df3d68fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db3a3c5-a5da-4ec5-903b-0250ae677494",
        "cursor": {
          "ref": "8c8a266a-fe2b-4022-8339-95daff6e1b7c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1b5867d9-0d6d-434c-a138-3e37894ed3cb"
        },
        "item": {
          "id": "2db3a3c5-a5da-4ec5-903b-0250ae677494",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f885fd1c-7f2d-41dd-8bb4-28996f5757c3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f28b4b4-9eb0-4588-b119-383cd41423f2",
        "cursor": {
          "ref": "e592588b-7e3e-4270-9ae2-c4df6b19a4ea",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b3195c00-5333-4a0f-a600-335e71b80e80"
        },
        "item": {
          "id": "3f28b4b4-9eb0-4588-b119-383cd41423f2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "28bb3cba-a0d6-4834-ac14-95ba5a932bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3724ead-e02b-4817-a423-84c622c68b7f",
        "cursor": {
          "ref": "93c98ac6-b88c-4ce7-aaa8-f557e42e318b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "54be3d5d-423c-4a30-9966-1e7ef29a9d97"
        },
        "item": {
          "id": "e3724ead-e02b-4817-a423-84c622c68b7f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e2e71f4a-451e-45ac-a42c-ca8ffad61962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8acf1d-b8d3-409f-9061-a47f53d910f4",
        "cursor": {
          "ref": "9948fad0-abfb-4ddc-8850-24bfed297315",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ee6df6b6-b436-42cd-9930-1b3c6b8ab0dd"
        },
        "item": {
          "id": "bb8acf1d-b8d3-409f-9061-a47f53d910f4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "413c5419-fad1-418d-84fb-63fb4139b04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc9e92f-3ddb-4802-a9bb-f273a7f837b8",
        "cursor": {
          "ref": "4704f9f2-b8ef-4aac-a605-8a02e0328bbf",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c9e3d5e6-c75d-47c4-bdd9-86b4f171b3d1"
        },
        "item": {
          "id": "cbc9e92f-3ddb-4802-a9bb-f273a7f837b8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cb70727c-3c1b-450e-8dbd-71d1a4952650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0820a49-b94c-48f5-962f-f365f5641a17",
        "cursor": {
          "ref": "0d15a0a8-4ce9-4921-8d27-f34e15f60259",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6eef21e1-d532-4bcf-818a-47c26fed9db6"
        },
        "item": {
          "id": "e0820a49-b94c-48f5-962f-f365f5641a17",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c86c663d-9ff8-46ae-8f09-3f13bfdc17db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5758e49-4be2-4375-a3de-0d1e5d7fe616",
        "cursor": {
          "ref": "5ffd1d26-6293-46ad-8428-5f432844f962",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "65d8fed5-ca07-46e5-8b41-bac37bb4d6e4"
        },
        "item": {
          "id": "b5758e49-4be2-4375-a3de-0d1e5d7fe616",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f62847e4-d6d2-4306-a93c-b2efc696d370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7b5dcd-6f78-4f6a-900b-b70d3709340d",
        "cursor": {
          "ref": "2efbe51b-956c-420d-8f52-6fd4e9de19b3",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6a377861-bbed-44f1-af22-fc1728ac9fa1"
        },
        "item": {
          "id": "8e7b5dcd-6f78-4f6a-900b-b70d3709340d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4b533861-586c-4df1-a7c5-4e20cd901a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd9a708-a66e-4094-898d-f1af12e7e559",
        "cursor": {
          "ref": "7de23100-6489-48d6-9fe3-b919c5f3f972",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "87e3dea7-9133-4ef9-bef4-3d6f524318ab"
        },
        "item": {
          "id": "3bd9a708-a66e-4094-898d-f1af12e7e559",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "90d5062d-b648-4a8e-b167-ccc8fa5ca2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693b81bc-7f64-4a33-a171-95fa5f29f4a7",
        "cursor": {
          "ref": "6af4165c-7f94-4481-a4b9-91d2ff715fef",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9dd20c07-7910-4644-8826-ccbe2c2188cd"
        },
        "item": {
          "id": "693b81bc-7f64-4a33-a171-95fa5f29f4a7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "15c76860-bb4f-4f0e-b031-89193ecb7d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73e8c4a-200a-4293-8afa-863db6c77f75",
        "cursor": {
          "ref": "f19d6407-fe06-43ea-ba13-d21ce86a170f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8d40659f-ac15-406a-b92a-3cc0bca1452c"
        },
        "item": {
          "id": "c73e8c4a-200a-4293-8afa-863db6c77f75",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2bd1525b-22b1-4668-ac70-ba5bec0e6927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf6cd80-cd5e-4b31-a04e-f771cbaab9ff",
        "cursor": {
          "ref": "5c16c440-7934-4a7f-acdd-f93e44f98239",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3f200579-56f2-4586-966b-bdbc6524c6b3"
        },
        "item": {
          "id": "7bf6cd80-cd5e-4b31-a04e-f771cbaab9ff",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "09856553-e8c2-461b-8da6-c6e9a1c9a0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5b0a3d-a3e9-471d-8bb5-d8cd28965c40",
        "cursor": {
          "ref": "17c0b25c-8ed8-4093-858d-f134592b7a72",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b69638c2-78f8-4287-8e52-cd63ac4f875f"
        },
        "item": {
          "id": "bb5b0a3d-a3e9-471d-8bb5-d8cd28965c40",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "075113da-f7a1-4055-8323-a25eab5e2b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a8ec9-c88a-408f-9d7e-bcf50c12ec2d",
        "cursor": {
          "ref": "d666df4b-1251-48bf-8403-8943fc73a697",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "92769d31-02cc-434b-8c18-e6c2a22ea2a9"
        },
        "item": {
          "id": "038a8ec9-c88a-408f-9d7e-bcf50c12ec2d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "612145ce-8564-46ea-b7dd-0d83b3b39e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031d9040-fe79-43e8-b061-b29e25f5f307",
        "cursor": {
          "ref": "0eda13b3-f28b-4d80-9c09-7d0e34e905ef",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ba5267a8-4277-4c32-bd2b-75824d06d5d8"
        },
        "item": {
          "id": "031d9040-fe79-43e8-b061-b29e25f5f307",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "73da824e-ff45-4ba7-bcaa-66243cb4589c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fecf67-39ed-4899-a863-7f90b733e157",
        "cursor": {
          "ref": "55201b5c-fabd-42dd-9cf1-492b3409c04d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "85ca729b-dbf7-4422-b326-45cafebe1310"
        },
        "item": {
          "id": "90fecf67-39ed-4899-a863-7f90b733e157",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "605595bc-3d3c-4045-b81a-7ccd18628455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e940a6f-3cc5-42d6-b53f-f1db47cdbd54",
        "cursor": {
          "ref": "24283919-0bfe-4cdb-8df8-dc862c57e9a2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "469e96da-286e-41ba-b35d-c8a40fbe989d"
        },
        "item": {
          "id": "0e940a6f-3cc5-42d6-b53f-f1db47cdbd54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2827837e-a632-4ab5-98f5-f52d874245c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9850ecd9-51d9-439f-bd63-735fa1c7a37e",
        "cursor": {
          "ref": "632d1429-ba5f-4d65-92f1-e0c932eff199",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cde0aea8-2348-4036-a98b-f26e376787fb"
        },
        "item": {
          "id": "9850ecd9-51d9-439f-bd63-735fa1c7a37e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6f11a9b6-a9be-4c16-ad7b-77c3db5782ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f174f7c-0127-4e50-a1d2-9adf13a8e884",
        "cursor": {
          "ref": "4fb2dc55-e54d-464f-ac6d-b2ef7ecc9f3f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e8dd28f9-c8f3-433e-bffa-bdb48bcf372b"
        },
        "item": {
          "id": "6f174f7c-0127-4e50-a1d2-9adf13a8e884",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2bc2f82b-3b0b-4b22-9351-1ed466786bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e44203-eef0-4922-b2cf-0a5cc666e1c7",
        "cursor": {
          "ref": "6ace51ea-c11f-4b17-ad97-1b5708ebca5f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "088505a4-2570-4364-b92a-ebaa0a1238f8"
        },
        "item": {
          "id": "f5e44203-eef0-4922-b2cf-0a5cc666e1c7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d2e07a37-edd2-461d-8ddc-654aa9e4be65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd80d6e6-46a5-4f0f-9daa-bff86f47cce5",
        "cursor": {
          "ref": "790ccb30-396b-46ad-9a0e-c1abbad0e50b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d57968ab-a849-4bfd-b170-2afdf20cae46"
        },
        "item": {
          "id": "cd80d6e6-46a5-4f0f-9daa-bff86f47cce5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6f6b4c19-546d-405f-8d58-fe43ce92c4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7a58c9-b1c3-423c-b5b2-32c2d7a37440",
        "cursor": {
          "ref": "bf51144c-f9a8-48ac-bcf8-eea6efcffee9",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "27400da9-5335-43a6-98d6-7fda6d01cf2a"
        },
        "item": {
          "id": "ba7a58c9-b1c3-423c-b5b2-32c2d7a37440",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "db7945f7-66e8-4ccc-8a70-26d8af9ff723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e013c5ab-d41a-408b-bc3e-4cfc9cce9106",
        "cursor": {
          "ref": "b491f441-d211-4e7b-bb42-03388a24b2f3",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fb967058-ff19-4084-ab30-b6dda7259236"
        },
        "item": {
          "id": "e013c5ab-d41a-408b-bc3e-4cfc9cce9106",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "adb1e7a7-a5dd-4440-8ec7-8d589267f6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcf156e-52a4-4d5e-a59b-270fd00a4d1a",
        "cursor": {
          "ref": "029267c2-bb95-4cab-a97c-dff73f01da5e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8abb0804-7285-41cd-a925-081c64db289d"
        },
        "item": {
          "id": "1fcf156e-52a4-4d5e-a59b-270fd00a4d1a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0a2daabf-6c3c-4970-a06a-71a0695cc953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3c6d64-3689-402e-8b88-9c83abab0545",
        "cursor": {
          "ref": "bab2924e-1d35-4d35-8a1d-84edeb0c4482",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "344c2f5f-985d-43d8-9020-83c811965a38"
        },
        "item": {
          "id": "ea3c6d64-3689-402e-8b88-9c83abab0545",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1b00a1ce-54d6-47e6-9758-49cd18eff051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74154e79-0b19-4ce7-8d33-0005d5ebb231",
        "cursor": {
          "ref": "cd2bde5b-5c39-44d8-8e88-ca7f5a60a156",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "07e0c762-8765-40c8-bf54-6a213d3341e4"
        },
        "item": {
          "id": "74154e79-0b19-4ce7-8d33-0005d5ebb231",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4cf6973d-a6e3-4e90-9880-ee43b16d2960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7e11a-5d5a-4af6-9404-b1e28c106680",
        "cursor": {
          "ref": "673c5bc7-e540-48b9-9ee5-4bfb0c25b908",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9418a306-913f-430d-8a6c-88b370c679e9"
        },
        "item": {
          "id": "12b7e11a-5d5a-4af6-9404-b1e28c106680",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "39589bd2-8933-4723-acfa-a72b095bebd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b64883-05a9-4279-baad-6358a96ef071",
        "cursor": {
          "ref": "1d1ca8ae-299d-4293-894b-776282c3d48e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cef95e67-e8c1-46a3-a6da-06e7c585cc45"
        },
        "item": {
          "id": "42b64883-05a9-4279-baad-6358a96ef071",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "173d9835-7ad4-433e-b58d-7c1be6ce1b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789b0e2e-c533-4bea-baac-5a8e1a12d8d1",
        "cursor": {
          "ref": "fc08ca8f-9093-42d5-b67f-c44283200970",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f61b72ef-2c2a-4063-9c85-acb7d07dcf50"
        },
        "item": {
          "id": "789b0e2e-c533-4bea-baac-5a8e1a12d8d1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dc43f7d2-aaa8-4c2e-af81-d3b0f426c354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef8cae4-4b8e-419d-a0f1-f96b05ff77b6",
        "cursor": {
          "ref": "df664f23-dc24-492d-864a-0ee5eed36fda",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "abd0381f-be4d-46a1-93d7-833c383a4339"
        },
        "item": {
          "id": "bef8cae4-4b8e-419d-a0f1-f96b05ff77b6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0cee3ad0-26d1-47c0-a499-886afa24d45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63f72ab-d017-4475-8139-003d7c6a7e57",
        "cursor": {
          "ref": "87be0c32-a6ba-4874-b4df-46d601519985",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9b0bdccd-1104-4015-8c91-41977969ffe8"
        },
        "item": {
          "id": "b63f72ab-d017-4475-8139-003d7c6a7e57",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b5f0f103-cc59-48e1-a364-57f7ebc5c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97635129-2e90-4b5a-8d74-382dfb687072",
        "cursor": {
          "ref": "15ac97a6-bedb-4945-97ed-81ab9dc3c910",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5b20693c-0121-4f10-ab7d-0a4b2cd95aea"
        },
        "item": {
          "id": "97635129-2e90-4b5a-8d74-382dfb687072",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0a0670e8-7f80-4534-99f4-36527d29494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646011c1-5bdc-4178-8aa2-d86932f8e0e8",
        "cursor": {
          "ref": "0e8b4d48-9716-4aad-b5ba-35a8da6cccf2",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2532c7ce-40ff-443f-81c0-ffd77f37bf90"
        },
        "item": {
          "id": "646011c1-5bdc-4178-8aa2-d86932f8e0e8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9361cc7d-4d32-47d9-908a-b96ef1194d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fd88cd-3fa4-4645-9227-cf25cdc2e4e6",
        "cursor": {
          "ref": "4f327fbf-7a90-4b29-93d1-30d8cc3d9a87",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "21321a1a-929d-43a2-9cdb-79b7b549bf04"
        },
        "item": {
          "id": "d6fd88cd-3fa4-4645-9227-cf25cdc2e4e6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "872ba740-8b93-4ccc-bd75-8291d6e46399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0be7f8-31d9-4ff8-9988-6e0c3155c81f",
        "cursor": {
          "ref": "64a71031-b9b2-4987-a01b-e88a8a6db30a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "131ef36e-01b0-4749-899a-1341db2db9ff"
        },
        "item": {
          "id": "3c0be7f8-31d9-4ff8-9988-6e0c3155c81f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "456abb1e-eba2-4d87-b9af-b10996dae99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f147fc3-6754-432a-85e5-29a63328dcb7",
        "cursor": {
          "ref": "124c2896-0e08-4ad8-91de-c2ef5df50540",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c16f174e-6965-4665-a85b-bf998e48643a"
        },
        "item": {
          "id": "6f147fc3-6754-432a-85e5-29a63328dcb7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "df780f29-0d1a-4b90-9c31-4fdb53c6c2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675c0611-eb61-4f45-9dfc-5ac24dcbed15",
        "cursor": {
          "ref": "ca86666d-4fb3-4250-8f57-095455a4d014",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "96fe8062-3151-4dd3-bc31-84062b72343f"
        },
        "item": {
          "id": "675c0611-eb61-4f45-9dfc-5ac24dcbed15",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b1337eb3-6319-48fc-8643-bee3c4dac65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a6bbeb-2152-4c34-b772-caad554341d5",
        "cursor": {
          "ref": "1419866c-4956-40f1-8918-fbb54030e6c1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c815ff64-ea7b-4771-8f3d-b20dae7f455f"
        },
        "item": {
          "id": "c2a6bbeb-2152-4c34-b772-caad554341d5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "38ad91c1-bd20-4a0b-bd7f-8df783ef4c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524c96dd-9ac9-4258-b862-9b4ade0dcff5",
        "cursor": {
          "ref": "8cb8054f-631e-4eda-a98f-105463d08878",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "58b5a809-cd21-4ee8-92c3-8cab5974324d"
        },
        "item": {
          "id": "524c96dd-9ac9-4258-b862-9b4ade0dcff5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b49087ed-76d4-4341-9c00-379b3518ecf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d47414-13de-4e88-ae3b-8adb39c6b4b6",
        "cursor": {
          "ref": "edb69f17-9f38-4e12-90ec-2daee2d703e8",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ab3a4cdc-09fb-44c5-8a15-269ac7b05f2e"
        },
        "item": {
          "id": "f4d47414-13de-4e88-ae3b-8adb39c6b4b6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "38742dfb-4c08-41d8-a49d-b8152ec1d5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e1ca43-e1c1-4bc8-ba8f-51802a8e4627",
        "cursor": {
          "ref": "71883cd8-667e-459b-828f-6bc049814ebc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1e132c4e-c502-42a7-9aef-6012facd4a72"
        },
        "item": {
          "id": "b3e1ca43-e1c1-4bc8-ba8f-51802a8e4627",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e914f757-b673-4378-8398-63376050fb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d0c6c4-127d-4c50-b0b6-7e426a6e9dfc",
        "cursor": {
          "ref": "f8b268d3-1192-463c-a373-4c75a0a30405",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4f527097-64f7-4f08-9cf6-cb2cb42fa63f"
        },
        "item": {
          "id": "64d0c6c4-127d-4c50-b0b6-7e426a6e9dfc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "98f4b47c-152b-4c96-a3f4-57e37a5ea78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a98457f-6f6e-412c-8faa-b6f2fa51ec4b",
        "cursor": {
          "ref": "62f59260-b379-4705-8e6f-06f3ad492671",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0c4e0693-86f7-43c7-a1cd-7f764b350953"
        },
        "item": {
          "id": "8a98457f-6f6e-412c-8faa-b6f2fa51ec4b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "973c1d7d-e7f8-47d9-b8fe-861033665d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7962f048-bc52-4359-b64d-4836152fbbcb",
        "cursor": {
          "ref": "260a5261-3f87-4b67-9576-0b1acf716685",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a54eee86-e433-4c25-a861-90730f94fe14"
        },
        "item": {
          "id": "7962f048-bc52-4359-b64d-4836152fbbcb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2bd3633a-1324-409e-83a0-eacd7eb91ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a850df-c028-471f-90bc-2bc8a7648a04",
        "cursor": {
          "ref": "4c251a5a-0a70-453d-ab06-c141a9c0505f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c08c175d-e49f-4c20-b20b-abe59e78cc27"
        },
        "item": {
          "id": "f3a850df-c028-471f-90bc-2bc8a7648a04",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f33d32c6-e15b-4630-a2b5-b85ffa05a2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ffd11b-0684-4639-a1af-b7a209f660b3",
        "cursor": {
          "ref": "467a6344-ce84-4243-919d-61061283e9b7",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "13a7d380-c9ec-43ab-9b38-46d2723e409c"
        },
        "item": {
          "id": "a9ffd11b-0684-4639-a1af-b7a209f660b3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c06eb67c-960b-432a-bdcc-496961c17191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d75f89-6628-4c7b-91da-20e700109971",
        "cursor": {
          "ref": "76374b85-4201-4f40-98ea-c6b957ce5b13",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5cdf692b-230c-47e3-81f1-95210ee3947b"
        },
        "item": {
          "id": "d9d75f89-6628-4c7b-91da-20e700109971",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4ff679de-a855-4ec6-ad87-4370f9dbf7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdc1835-bbf8-472c-91bc-02c60ab087ea",
        "cursor": {
          "ref": "d4c1824b-ff89-45f8-97c8-727335689711",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1f6f2c55-2a38-41e1-ac52-2dfa1523abc8"
        },
        "item": {
          "id": "fcdc1835-bbf8-472c-91bc-02c60ab087ea",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9b009381-3bcd-44c1-a9bf-c6bab01aa3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4e41eb-e75c-4c32-ba31-5d0251f5f591",
        "cursor": {
          "ref": "32104a66-a7e7-4d79-9686-43821d9f83ca",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "762e1b77-cfdb-4e55-b15c-b5f08567eb63"
        },
        "item": {
          "id": "8b4e41eb-e75c-4c32-ba31-5d0251f5f591",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eafe5d43-e37c-40ad-8ab9-8b639d7d6b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e87fe4-30e9-4ad9-b7da-43d30d7334a4",
        "cursor": {
          "ref": "077c619f-d425-43ea-8203-79425126724b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "878a451f-b0fe-41e8-bc8f-1bb92c314874"
        },
        "item": {
          "id": "38e87fe4-30e9-4ad9-b7da-43d30d7334a4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a7bc8975-48c8-4688-9aff-1819d6addea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7ee8cd-eea8-4e80-bb47-e723e32df880",
        "cursor": {
          "ref": "1adecba5-5244-4121-aba5-8e4b9f4643bf",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a8d76f9d-fb6e-4fb1-aa0e-fcfb20115849"
        },
        "item": {
          "id": "8c7ee8cd-eea8-4e80-bb47-e723e32df880",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "398fc49c-ae42-4aae-bcec-3f9d53241558",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d54343-dba2-45c5-8370-4ea8365630af",
        "cursor": {
          "ref": "e2cf50cc-ab80-46f5-a5bc-5651f9f39e0f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8310fd11-9e41-41b0-9be9-92d010d43d7a"
        },
        "item": {
          "id": "20d54343-dba2-45c5-8370-4ea8365630af",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "301a19cf-d5d9-4f13-8493-85ffaa4d7598",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d462638-baaf-4e2e-a3c7-99dac25b5e81",
        "cursor": {
          "ref": "83c2dfe8-ed5b-4e62-91ea-426f383a05b5",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6b8c4365-cc4b-4e3f-870a-7f6ebb8f8d13"
        },
        "item": {
          "id": "7d462638-baaf-4e2e-a3c7-99dac25b5e81",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8741fe1d-2139-45f8-86ec-3f7183191c6d",
          "status": "Created",
          "code": 201,
          "responseTime": 125,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba486f2b-5708-43af-b737-d9bd7bc97a20",
        "cursor": {
          "ref": "7bfbda7e-d2d5-433d-beca-aeb7e41024fd",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a5a86697-2eda-46f7-90d7-a6c89bd65321"
        },
        "item": {
          "id": "ba486f2b-5708-43af-b737-d9bd7bc97a20",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "274e5b3d-23b4-4c69-86cc-a33f9e2aadc8",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "097439b9-fa5c-4c09-a1e1-e954e472df4f",
        "cursor": {
          "ref": "a26ab904-2331-4d83-8cc4-498f36ac286c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "596c65fe-d65a-483e-8d09-b0b86e6e7482"
        },
        "item": {
          "id": "097439b9-fa5c-4c09-a1e1-e954e472df4f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8c68c843-bf24-490f-8848-ca8a655a5109",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "521b8b9d-e7c8-49bd-add7-e75a0cc4ecf6",
        "cursor": {
          "ref": "a3725d6d-d65a-4549-8819-9eea61108fd8",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e5bc082a-3ff6-46f2-b807-a6e19e013e0a"
        },
        "item": {
          "id": "521b8b9d-e7c8-49bd-add7-e75a0cc4ecf6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d2e78467-59d0-4b38-b697-374ffdda6c51",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc067a8c-e96d-468b-8eb0-2e876c7d66e4",
        "cursor": {
          "ref": "7c9d926e-0962-471a-929b-d219330398d3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a351e8e4-9bdb-4283-9b36-3cf452a2d3d5"
        },
        "item": {
          "id": "bc067a8c-e96d-468b-8eb0-2e876c7d66e4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "078da606-5221-4b0f-be90-dd8fd44e127a",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a02489a-d201-4e8e-b6d6-ac83c791e8d8",
        "cursor": {
          "ref": "275c25b4-c9be-4512-bef3-a9973e0d468d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b7e5e9a6-e1f0-41be-8ea3-1447f2ede4f2"
        },
        "item": {
          "id": "2a02489a-d201-4e8e-b6d6-ac83c791e8d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "312319cc-e2e6-46c2-ba2e-331b10be66e5",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9229ceab-cb4e-4b77-b9f5-a16cb05082e0",
        "cursor": {
          "ref": "ad456b0d-def8-424e-b0d0-f0d9224782c6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0f98666c-4b36-4cf1-b962-4b1b40d035d2"
        },
        "item": {
          "id": "9229ceab-cb4e-4b77-b9f5-a16cb05082e0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f945de54-1360-4fff-b09a-c4dc389176fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca5bc41-64d6-4721-9490-9cfc1e12fa17",
        "cursor": {
          "ref": "308a408d-a42e-4911-9bb1-1848deb78e9a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59f98ea9-5735-4269-a386-620d0d387f92"
        },
        "item": {
          "id": "8ca5bc41-64d6-4721-9490-9cfc1e12fa17",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "266614e7-d3ba-4024-bc76-db75c14cfe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abb4dfe-b81e-4aa3-b832-355edc35ecd2",
        "cursor": {
          "ref": "5fe21ffe-2fc9-4132-ad0e-a27d027f9b69",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ecd88d31-e074-48ec-8c63-928c9551c695"
        },
        "item": {
          "id": "3abb4dfe-b81e-4aa3-b832-355edc35ecd2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "79391668-f805-4750-9a9e-a50d496c32a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99a65c8-4eb8-4f74-acc8-2f63ee19a10e",
        "cursor": {
          "ref": "02abb37b-a5e5-4e3b-84be-fc7b46fdd04e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a72bd5e9-55a4-44ca-9a7b-8761f92a4e2e"
        },
        "item": {
          "id": "f99a65c8-4eb8-4f74-acc8-2f63ee19a10e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "46507f5f-6f58-4dd4-bb42-31cc5ab1d8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2834e6ce-9b84-4404-b846-d64c7995b6e2",
        "cursor": {
          "ref": "0829630a-a484-4f77-8abe-d45f0a422d76",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "54a895cd-33cd-4854-b00f-2169bb50df75"
        },
        "item": {
          "id": "2834e6ce-9b84-4404-b846-d64c7995b6e2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5f3720c6-0386-4395-bf66-d0382f4e3421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb39e3f4-82f7-40db-bc69-4837c44af753",
        "cursor": {
          "ref": "1bb9785a-9ec3-4fdb-9be0-ae9d38048cff",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "41c77247-a3ee-49c6-8e7a-36f2a59f136b"
        },
        "item": {
          "id": "bb39e3f4-82f7-40db-bc69-4837c44af753",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "08b7d8c3-c33b-4a2a-a9e2-a8472863f9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583e4e89-ad34-4c3c-96fe-2759662058b6",
        "cursor": {
          "ref": "1cea01d6-66f2-4729-abe3-46d35c695b04",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7ba37896-84bf-4f9c-9f9e-c447fc774d9a"
        },
        "item": {
          "id": "583e4e89-ad34-4c3c-96fe-2759662058b6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4220caf5-230b-415f-8c46-065ecff03325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b7adb4-7321-4c46-accd-0f77025d8ad0",
        "cursor": {
          "ref": "7005b07b-1168-4f8e-9a3d-a129cf7f22bc",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d865ed10-db38-4724-a52a-6f94d5e2bc35"
        },
        "item": {
          "id": "f4b7adb4-7321-4c46-accd-0f77025d8ad0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d1af06a8-f97a-4f27-8cb0-a576d8b2ca59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75134f24-1313-4cbf-bc25-bfda47e95670",
        "cursor": {
          "ref": "03c7b3d5-c160-4e44-ab94-30e4ab4c8b6d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b3f7266e-c5a0-40c9-b83f-fa7d5ba6739d"
        },
        "item": {
          "id": "75134f24-1313-4cbf-bc25-bfda47e95670",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b59a2914-b7bb-41d2-89ff-719caf04bbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933d4618-430b-413f-8e3b-38bdc23603b5",
        "cursor": {
          "ref": "2e3472d7-aa44-4f20-b2a0-460c8647c83e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e1665046-8b67-48a3-8dbe-bcf687588188"
        },
        "item": {
          "id": "933d4618-430b-413f-8e3b-38bdc23603b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6fedf562-721a-402d-acca-664a50b3511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8752e227-d79c-42d5-8fb3-85b10817e2d5",
        "cursor": {
          "ref": "21c82c21-8b06-48b8-a00c-609800538c83",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "134c7621-084f-43df-a22e-f80e9652a472"
        },
        "item": {
          "id": "8752e227-d79c-42d5-8fb3-85b10817e2d5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fdfeb331-dafb-402d-9a53-88abfe6b505a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83482952-48af-4965-bc69-0980830982d3",
        "cursor": {
          "ref": "61564dea-608d-4e3b-913b-1a0100d7fba7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "191cf895-ac07-42f7-84ff-19094b69f890"
        },
        "item": {
          "id": "83482952-48af-4965-bc69-0980830982d3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7acf2654-b6fa-4e76-9330-dc5f759ea9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c460f175-4a4a-4c3a-83ff-4889a8b6022d",
        "cursor": {
          "ref": "f718e4e4-413e-4f8c-af2d-566963bc9f8d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "59867e46-359c-466d-89f0-07de59227300"
        },
        "item": {
          "id": "c460f175-4a4a-4c3a-83ff-4889a8b6022d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "669cdfc0-4dd2-4396-9fd0-f745059b1ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ca97fc-440d-45c4-9ba0-edeeaae9dd37",
        "cursor": {
          "ref": "4cc16932-c6b4-4523-ac8d-884d865e45ab",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "71cd52b1-017e-464b-96c2-eeed936a35e4"
        },
        "item": {
          "id": "b1ca97fc-440d-45c4-9ba0-edeeaae9dd37",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6535d613-eecd-4586-bc37-bf110cef8ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ee90e7-f7e3-49bf-a7e1-5c4f24109ba2",
        "cursor": {
          "ref": "974ad01d-5c51-4613-9472-290b7e049c6c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b45e38a8-637c-4624-bf3e-a05f132d31bf"
        },
        "item": {
          "id": "54ee90e7-f7e3-49bf-a7e1-5c4f24109ba2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "52c10215-83ab-4f1d-8664-6314ccd8522d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b9ae93-ee03-4fbc-b9ad-423d598b76a3",
        "cursor": {
          "ref": "8fc43d50-7feb-4793-b039-0e96d7aa66d8",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "32230660-8b4b-43d1-a4d2-41c78957fb48"
        },
        "item": {
          "id": "52b9ae93-ee03-4fbc-b9ad-423d598b76a3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "06515444-bc2b-4b71-aea6-942d4fb983e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69896d8-4315-4439-aadc-a7fcfc3fef08",
        "cursor": {
          "ref": "50b69407-1d1c-48fc-a974-3a8e2eb16fbe",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "29c2d306-28c6-4c97-9594-355a361d2567"
        },
        "item": {
          "id": "f69896d8-4315-4439-aadc-a7fcfc3fef08",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2c03f88e-c7d5-420d-a6fb-9fbcde12e40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb482c6-8650-4234-b71f-98f538e20617",
        "cursor": {
          "ref": "927a5824-39c1-463a-aa0c-10c8b42ba51f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f8aa9942-c7d6-41c1-919e-2371fc79dcdb"
        },
        "item": {
          "id": "6eb482c6-8650-4234-b71f-98f538e20617",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "46ae5f94-860a-4c74-b77a-5fd163a66b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98f4d27-39a3-44d5-a8c4-db582de03cf7",
        "cursor": {
          "ref": "9684138a-266e-4641-8764-5be41f03ff62",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9508710d-42cf-472a-bb3f-418f2ce4331c"
        },
        "item": {
          "id": "f98f4d27-39a3-44d5-a8c4-db582de03cf7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "891a28ed-64ca-41de-b9f6-8da08a6034a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01e251d-c7b9-48a0-a86a-266b16be5e41",
        "cursor": {
          "ref": "4e3c6a49-ab77-471a-9fb1-4147a5efbcee",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e2f78956-3f7f-47ad-a284-47b624b6d9aa"
        },
        "item": {
          "id": "a01e251d-c7b9-48a0-a86a-266b16be5e41",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dde601af-5929-46d1-bd7c-b2e663a6308b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f48622d-11da-4a08-9b7a-d00bf9bffdb7",
        "cursor": {
          "ref": "9627994a-7d41-444c-9d4f-8bf371c44fc3",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "12604a8a-d0bb-44fc-9773-b793c28c7646"
        },
        "item": {
          "id": "3f48622d-11da-4a08-9b7a-d00bf9bffdb7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "85a7b8a4-2de3-444c-9ce7-045fb412924d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8857c9-12a2-4616-9dfc-423f12bfbd79",
        "cursor": {
          "ref": "590eb56b-b297-4380-8060-8cb94ff7ee30",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "22217472-0786-4858-a378-f939ad371c25"
        },
        "item": {
          "id": "ae8857c9-12a2-4616-9dfc-423f12bfbd79",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "74af15dc-4f10-4c77-87e3-f5ef3dc5d0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34c60c1-cbdd-469d-804a-d77e789796ce",
        "cursor": {
          "ref": "ff0f5218-229d-453b-89b9-4547acf798c2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "81429637-8052-4403-91e7-e505bc4523bb"
        },
        "item": {
          "id": "e34c60c1-cbdd-469d-804a-d77e789796ce",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d41cef79-4ca1-4abe-98c7-ffa8c0f43af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3830a78-47ef-4e41-acaf-63cb25fe7035",
        "cursor": {
          "ref": "dadd0c1f-3620-48ab-a2da-7d2f71f2f9e0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "34a93028-fa5b-46ca-81d2-2bb8d23fdf44"
        },
        "item": {
          "id": "f3830a78-47ef-4e41-acaf-63cb25fe7035",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2c7122da-3e76-4e31-8381-800db94203a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b20c20-09e6-4899-a181-772cf3ec9307",
        "cursor": {
          "ref": "2109097b-8481-48ae-bcc0-0e39613f6989",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9b96c0aa-0a3b-40c4-bb88-3db3dcdd5669"
        },
        "item": {
          "id": "82b20c20-09e6-4899-a181-772cf3ec9307",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bd985b85-f127-4b51-8a91-5ce6ff08733b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d784215-a26a-4dfd-98cb-1af7de553382",
        "cursor": {
          "ref": "9c4511b9-b21d-4964-a3e4-c9d59d5e22f9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5694dd9c-1688-4366-b777-c7fe583d2cf9"
        },
        "item": {
          "id": "3d784215-a26a-4dfd-98cb-1af7de553382",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "155268ae-c57f-4477-8efb-aa11dbc8b668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54355e7f-c289-497d-96e5-687006406357",
        "cursor": {
          "ref": "a72802db-2163-48d6-9941-8fc40ad1d410",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "75e2ee72-2fdc-4894-84f3-f96144ae4abf"
        },
        "item": {
          "id": "54355e7f-c289-497d-96e5-687006406357",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a6a09a66-860e-4813-b29e-95a3de3bd255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6965a94-df12-4be5-900a-52355d5b4af9",
        "cursor": {
          "ref": "53600046-1605-46e9-9c67-53a8bcc301e1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a10a310c-3d79-4ebe-866c-3a9e387d5060"
        },
        "item": {
          "id": "c6965a94-df12-4be5-900a-52355d5b4af9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "24a9996d-e87a-4bcc-bfe9-9017996cf7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f080901b-e011-4bd4-bd48-fd530504a2a7",
        "cursor": {
          "ref": "d4b3c8e0-cd69-4e9d-9c4b-5538c034f2e1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d57c7dd8-97df-42e5-98ce-9e90f4a04fe9"
        },
        "item": {
          "id": "f080901b-e011-4bd4-bd48-fd530504a2a7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c2045ae0-67dd-427a-9519-fe7b5e209136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f3b086-b49b-43e8-a8e3-f8407f9d66b9",
        "cursor": {
          "ref": "983e5073-4550-491b-8970-3151ab857636",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d517f1be-2e39-4bef-a4d0-a1396e54b032"
        },
        "item": {
          "id": "59f3b086-b49b-43e8-a8e3-f8407f9d66b9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c32e15fd-c370-46a4-80ef-13e3c0728f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45b0218-bad4-453a-a272-a043d6830751",
        "cursor": {
          "ref": "16307c10-ee19-4645-919a-22e3d9828fd3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f2eb654f-f1c6-40c0-9fdf-5b7383cc19af"
        },
        "item": {
          "id": "a45b0218-bad4-453a-a272-a043d6830751",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d76ebbb7-6173-48a1-8ddf-c70120e58111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b40515c-2f02-4526-8db9-8440eabdbb8c",
        "cursor": {
          "ref": "db6fcc5e-be80-4c2f-b944-3dbc1fc5ceea",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5bf2024a-8cd0-4406-baee-5e80ece2f5ac"
        },
        "item": {
          "id": "4b40515c-2f02-4526-8db9-8440eabdbb8c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "237d6989-fe4d-45d3-aef8-740d7a5c6f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ace8d0-df3f-4eee-9b1f-035cbf4d7395",
        "cursor": {
          "ref": "aac3616c-b777-4cf0-8d0f-eb21db2a6b93",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "64dab1de-cebe-4a15-9420-ef6ac2a4c236"
        },
        "item": {
          "id": "82ace8d0-df3f-4eee-9b1f-035cbf4d7395",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a5e945ca-d824-43f8-aec5-5560b6728464",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c40fff2-3142-443a-b2a8-1082bfb26cc4",
        "cursor": {
          "ref": "4ebfdb9a-27a7-4a23-ae15-9014036aeb3c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "59e8baae-7884-4680-af6e-4c4664a50c08"
        },
        "item": {
          "id": "1c40fff2-3142-443a-b2a8-1082bfb26cc4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "65992011-1af0-4457-a760-98da4017d998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481461ff-98c7-47f9-bccd-b4fefc6b6cb1",
        "cursor": {
          "ref": "bd9590a9-f983-417a-a678-ef1a1f93cf77",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "17d1434f-411b-4bb2-8fb6-c1ee423dc033"
        },
        "item": {
          "id": "481461ff-98c7-47f9-bccd-b4fefc6b6cb1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c3fc0b23-276a-40c7-ab07-406574e81035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7de0b2-d671-41a6-bb4f-aa78473b739d",
        "cursor": {
          "ref": "0f92d98b-899d-4e7d-811a-43fa9785071e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "faf3c41a-37a9-470e-8756-b2adf05cd217"
        },
        "item": {
          "id": "bd7de0b2-d671-41a6-bb4f-aa78473b739d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e0e18c0e-636f-4069-8773-5b435c68f1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c114d93a-8586-469a-95b5-e98e84ba7cb2",
        "cursor": {
          "ref": "fa840ce2-2314-42bb-88d7-e4da6c82a33b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5559236c-fb76-4cb2-a751-3f983c02abc4"
        },
        "item": {
          "id": "c114d93a-8586-469a-95b5-e98e84ba7cb2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7c5fbfea-cdd6-4637-a122-2b27922ed132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e394af9-d27d-4152-8c8a-fe515b6adebd",
        "cursor": {
          "ref": "0c258e74-e7a3-4170-807f-743d23f619a6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1a181a6c-b2a1-47e8-bc3a-2e21ca71aefa"
        },
        "item": {
          "id": "3e394af9-d27d-4152-8c8a-fe515b6adebd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cbe80e88-5ee9-4277-913a-19427987b0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf205aee-b4bc-418e-b040-c3fa13d52f9a",
        "cursor": {
          "ref": "e1bcea1a-6b2e-4ac3-81ff-58212e15ca8c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "12b06438-0856-4c9c-a282-4e16e1ae788a"
        },
        "item": {
          "id": "bf205aee-b4bc-418e-b040-c3fa13d52f9a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6e91dafb-6f40-482b-858a-2e28afc56c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd354a87-9fa5-4ff7-8466-d0f6b85fc864",
        "cursor": {
          "ref": "b25368b1-1e5f-45e9-9e34-cfec7acfb9cc",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f5add24f-8cef-4920-8ead-af65b95e3fc3"
        },
        "item": {
          "id": "bd354a87-9fa5-4ff7-8466-d0f6b85fc864",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "92e097c4-8565-428a-910e-e0dd794efab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaac578-f2f5-4ba3-ace7-fca7dabb23c6",
        "cursor": {
          "ref": "67943802-7625-4d81-b146-fe801fb1e3ef",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "93ee1874-302f-4472-b876-c4d578fba81f"
        },
        "item": {
          "id": "3aaac578-f2f5-4ba3-ace7-fca7dabb23c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4adfd22f-3d0c-4c1d-9839-eb417909eb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e9c8a4-b5b3-41b6-a79c-6e567e5d6476",
        "cursor": {
          "ref": "0658ee42-d903-4053-9a20-c5d5ce0aabe0",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c50be82b-f7b0-47fb-bfcc-9b7fcc47f19c"
        },
        "item": {
          "id": "25e9c8a4-b5b3-41b6-a79c-6e567e5d6476",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9a220f47-89b5-4339-9ed5-3bc804f705e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc35c6a-3217-41da-926f-04b27ff2fb1c",
        "cursor": {
          "ref": "b0466ece-80f6-4032-994b-3f0b16c3a010",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "57c2911d-1ab6-46f8-a55a-a053d6d158fe"
        },
        "item": {
          "id": "efc35c6a-3217-41da-926f-04b27ff2fb1c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f9666bfd-e13d-4385-9f18-64059accfa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d31d11-afd5-4596-91c9-605b2657d5aa",
        "cursor": {
          "ref": "8f5e35ac-a629-480d-8a89-3aa5008a3807",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8df34483-b045-4b01-8ae0-b9283ebd925b"
        },
        "item": {
          "id": "b2d31d11-afd5-4596-91c9-605b2657d5aa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b8b1f0a0-20c5-4d45-9a33-2ecf1fdc1c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f174caa0-5e9b-4035-91ad-962885115647",
        "cursor": {
          "ref": "1524cba3-d8ae-40c0-b1d7-c53dd977c62e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "23d760bf-0c78-481c-90b6-b9292d90b20f"
        },
        "item": {
          "id": "f174caa0-5e9b-4035-91ad-962885115647",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e9c140c0-ed25-42f8-915d-bdf5cc210119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699ae79b-0c6f-4059-ad38-2c9f9f97323f",
        "cursor": {
          "ref": "7a1dc747-f590-49b4-8e0f-936bb0d73b73",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a10db25e-4797-4995-a7cf-17f8517cd960"
        },
        "item": {
          "id": "699ae79b-0c6f-4059-ad38-2c9f9f97323f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4257b522-fba9-411a-baa9-687394fdc12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8d54ef-2e78-4618-ae5a-0dde3c1f0d1a",
        "cursor": {
          "ref": "425a6559-d655-4f42-a08f-d61744511e16",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "94255bb1-f2a5-4877-b53f-a1ca070091b4"
        },
        "item": {
          "id": "7d8d54ef-2e78-4618-ae5a-0dde3c1f0d1a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c514d490-fa4e-4993-8ee6-4e47c1568c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f65550f-e2e3-4f8b-9055-f211ed0f0254",
        "cursor": {
          "ref": "827194ad-0828-42c2-ae08-493ba2596ff7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "451792e2-e01b-4909-a5fd-109616ac7911"
        },
        "item": {
          "id": "9f65550f-e2e3-4f8b-9055-f211ed0f0254",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "502ce5ff-a7a7-4a7e-9b42-5efa3983c0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8335f33-71ed-4f9c-8d7d-0c06ce71ac3b",
        "cursor": {
          "ref": "a98cddfc-481c-4bb8-890f-654d7a05a55f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4e8f1217-f42b-4754-a854-2346ea6ff50d"
        },
        "item": {
          "id": "a8335f33-71ed-4f9c-8d7d-0c06ce71ac3b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "168292fb-0c9b-48c3-a80a-7a4b3153bb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95de93bf-120a-4bcd-8ece-f57d621dd494",
        "cursor": {
          "ref": "5ecc9407-c464-401c-9624-2ab5952f1c07",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9f45bcc2-3120-4a69-8775-0f2026bd98ec"
        },
        "item": {
          "id": "95de93bf-120a-4bcd-8ece-f57d621dd494",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "beb15ad2-2659-43a4-b546-448e0563d95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fb7cfc-85fd-4072-a919-dab3041af782",
        "cursor": {
          "ref": "e9708e46-067d-49a8-8446-2283e3611859",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "70694fc0-eff6-49d9-bb63-8a5a2e4cd1a8"
        },
        "item": {
          "id": "a6fb7cfc-85fd-4072-a919-dab3041af782",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d69276f1-7264-4e08-a5c4-a68b720c9785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5058b1-5607-49ae-bcfa-634e3a35b62d",
        "cursor": {
          "ref": "59b9620a-b0e2-4ba9-aabd-7bae0083845f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "93a0c6cc-ae24-47a1-bb5b-2f933fa8d155"
        },
        "item": {
          "id": "6c5058b1-5607-49ae-bcfa-634e3a35b62d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "abecfb31-43ce-4709-a2c5-b394c6c2a0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d31e830-0631-49e0-ae0f-9925c3bdf3cb",
        "cursor": {
          "ref": "fb24f529-4c01-4f20-b0a3-734a7af4e792",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f23f7627-a6b1-46f1-bfc0-353ca20852c1"
        },
        "item": {
          "id": "0d31e830-0631-49e0-ae0f-9925c3bdf3cb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c5461fe1-3ab7-4bb5-89d3-4036a7a71c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5624a0b-a129-4777-8295-564adced90e6",
        "cursor": {
          "ref": "5912205f-8d23-4bff-a5f4-f80050bfd4fb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "24e97f05-dca0-4538-99e8-8bc3578ed93d"
        },
        "item": {
          "id": "d5624a0b-a129-4777-8295-564adced90e6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "35b4901f-860c-4688-a735-568104d0056b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da0db31-c1f9-472e-9463-a7b607eed25a",
        "cursor": {
          "ref": "1b2b0fe6-cc19-4ae7-baa2-ac1f88d42bf7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b7ed9cfb-5be3-47cd-8529-d1d5023f04f2"
        },
        "item": {
          "id": "9da0db31-c1f9-472e-9463-a7b607eed25a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e1202d12-7a37-4a8a-b8e7-4f459932e756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266e65e0-3c46-44d9-96b0-987b30c86440",
        "cursor": {
          "ref": "616e1e03-e248-44a5-93f1-4cbd3fb7330e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b6116eda-2882-4f7b-b2ff-f259a75b02f3"
        },
        "item": {
          "id": "266e65e0-3c46-44d9-96b0-987b30c86440",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "55acfb77-d7f4-428d-91b2-cf6d5e69db9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a4bb06-b630-465d-a579-03bd05b1c2b9",
        "cursor": {
          "ref": "88cabbb2-f8b0-4a42-9bf5-97fa53e4abbf",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "09df38fd-e0cc-4496-8163-99fd31124de6"
        },
        "item": {
          "id": "14a4bb06-b630-465d-a579-03bd05b1c2b9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "88f5d843-207b-43f4-be9e-6dd3d972121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9247f984-e36a-484c-91f2-0a8643e79420",
        "cursor": {
          "ref": "3448dc0f-c770-46e7-9b85-bda571f5ce10",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7cbf78e2-ec41-4f19-b9c4-7b109b480aa8"
        },
        "item": {
          "id": "9247f984-e36a-484c-91f2-0a8643e79420",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8002940b-9f7a-4bae-888a-fe71c1c97ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5331062-7988-4560-8cc5-d1247cf7cc95",
        "cursor": {
          "ref": "14ac91f5-dc00-4848-83cf-145205a4eac4",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d700a55d-f3a4-4b50-97a7-e36c2bb7d9b3"
        },
        "item": {
          "id": "b5331062-7988-4560-8cc5-d1247cf7cc95",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4a4384e0-586c-4532-aca5-f06ce20b1b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bce4487-14b6-4c1d-9426-07d98bf63100",
        "cursor": {
          "ref": "fc63cf49-10ef-4896-9e0f-774227c859ee",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8d910db1-3bbc-441e-b56d-8e92379148fa"
        },
        "item": {
          "id": "7bce4487-14b6-4c1d-9426-07d98bf63100",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d566762a-be14-45d0-8d5f-1ed3eb048285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b3dce1-ed78-4783-af3f-3c7347a4af9a",
        "cursor": {
          "ref": "8bcc6a54-8ef9-4c8c-8889-5297ed3888af",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "03ab9dd2-1132-40af-a169-01753fbae9b2"
        },
        "item": {
          "id": "d6b3dce1-ed78-4783-af3f-3c7347a4af9a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d7e02cc8-a12e-4d64-b461-eadb7f8a7e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2020c686-774b-4e81-aa33-4785fd722694",
        "cursor": {
          "ref": "5c2e9468-9c3e-4f18-a61e-3d676b2ba573",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "308fa207-7690-489c-b0c4-4b1eedaac6df"
        },
        "item": {
          "id": "2020c686-774b-4e81-aa33-4785fd722694",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0c24080e-b38e-4d1d-8ee9-3cedebd2ac30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17b4fc3-ab94-45b1-92ed-1d79915bb4c8",
        "cursor": {
          "ref": "f7d7d9bb-bff6-4ec9-b660-533ff1a6e0c4",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "980b6872-92d7-4278-afba-e90e0b67bd8a"
        },
        "item": {
          "id": "b17b4fc3-ab94-45b1-92ed-1d79915bb4c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2c7d2d5-6ac9-437c-9e5a-c42c584236ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7115e5-51c2-4eb5-be79-418f8d18ec69",
        "cursor": {
          "ref": "5f2e9b61-27df-42a9-a4aa-4a0d01db6665",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8c8f05a7-ea3a-453e-839e-1b7778206a1e"
        },
        "item": {
          "id": "cb7115e5-51c2-4eb5-be79-418f8d18ec69",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "39988601-0fce-42f0-afc5-b5a8449501f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49f2c9d-33ee-48f0-b0da-786f031b4eb4",
        "cursor": {
          "ref": "3679468a-610a-4cd9-a164-c36744451991",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5a89b01a-7837-4ad7-b226-e713cef15405"
        },
        "item": {
          "id": "e49f2c9d-33ee-48f0-b0da-786f031b4eb4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3b6fda69-7dac-4439-addf-2ca082493710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dcd790-b687-4ab6-b393-ad298f939a0f",
        "cursor": {
          "ref": "8c1276af-19b0-492b-b671-306768d86090",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f95df6cf-5e36-4ace-bb44-be1a596c8ccd"
        },
        "item": {
          "id": "a5dcd790-b687-4ab6-b393-ad298f939a0f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1cfdcc20-b3d1-4356-9c26-fcd3f719f163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd92f20-1d58-427c-af9c-16ed465fa1dc",
        "cursor": {
          "ref": "95d2cedc-ae9f-4154-96b0-5dc3d5f866e9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "acf80e9b-ae6e-49aa-ad1c-5e4d7e8a1512"
        },
        "item": {
          "id": "8fd92f20-1d58-427c-af9c-16ed465fa1dc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "077f6810-cbbe-4aac-ac77-af0cebb670a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bf670a-fed6-458b-8ee6-fc6e816d7e7a",
        "cursor": {
          "ref": "6bc31fef-50e4-4544-a087-01d4f1bbf123",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d6a7ff4f-1d7a-479d-b066-c82746f2c88e"
        },
        "item": {
          "id": "64bf670a-fed6-458b-8ee6-fc6e816d7e7a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ee75d801-3c29-4a9d-9dbd-f808dc868282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4681d0d4-099f-4e6f-b447-3aa4671b2e9d",
        "cursor": {
          "ref": "0b88a987-69ee-48da-a802-92152100b94c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f07523d9-e6d9-437e-b652-e8e73652c6a4"
        },
        "item": {
          "id": "4681d0d4-099f-4e6f-b447-3aa4671b2e9d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "18d085b1-a538-4c14-b164-3fe45a9125ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2ca0cb-de6f-4de1-b05e-9cba0c148fea",
        "cursor": {
          "ref": "6b4602dd-2d67-47bd-8a4f-62d682a18cdf",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fb59cfc3-d57d-4444-9be2-fc03718a2cbd"
        },
        "item": {
          "id": "2e2ca0cb-de6f-4de1-b05e-9cba0c148fea",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "96af0921-791b-46b9-94bd-51b6a016b756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b318d9-a08d-46b6-97a6-fcd95614a585",
        "cursor": {
          "ref": "c90b335b-7f8d-4908-af04-0c1b3f684a90",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2be3d76b-b5d9-468e-bd2e-8814329a51c3"
        },
        "item": {
          "id": "f3b318d9-a08d-46b6-97a6-fcd95614a585",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "92ae39c0-3df8-4557-a122-14447922e625",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eee2dfa-b19f-4828-a07e-43dc7540044e",
        "cursor": {
          "ref": "77d2ad64-ca55-453d-9df4-04974c7960a2",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "aaaca0c5-7d88-467c-8908-22135fed4a6e"
        },
        "item": {
          "id": "3eee2dfa-b19f-4828-a07e-43dc7540044e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1cb8ab07-a980-4002-9aa8-837d821f4bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1bd694-ba3d-4781-a8ef-8e7eaaae05ff",
        "cursor": {
          "ref": "f6760d95-e5c7-4401-863c-510ff82ba881",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2a377c12-52da-4e8d-b152-1503e2aac205"
        },
        "item": {
          "id": "4e1bd694-ba3d-4781-a8ef-8e7eaaae05ff",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f255dfbc-ce94-4662-81bc-27dab4d954f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad6cc4f-3322-43da-86f5-142131814d3a",
        "cursor": {
          "ref": "307e801f-f656-4491-b2d7-b6391850a803",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ba93f47a-2886-403f-8daa-0667481c5a75"
        },
        "item": {
          "id": "6ad6cc4f-3322-43da-86f5-142131814d3a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b662da17-b3e6-43c7-a995-7e97f4c7ae6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e5cea4-6f6f-4548-8506-7d3983aaf06d",
        "cursor": {
          "ref": "ecb2bdd8-04db-42ed-837a-61809acfc96b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1b4c1462-5dbe-45fc-ae2a-45a8de4463e3"
        },
        "item": {
          "id": "c8e5cea4-6f6f-4548-8506-7d3983aaf06d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9a1c2e34-2e6e-4443-96db-30d5f485e24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a733b614-8361-41f3-93bf-97f67b005331",
        "cursor": {
          "ref": "8b4153cc-fb3b-47ff-a81f-784184771f22",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5047004c-667d-4505-8b7c-6191ca8fd56e"
        },
        "item": {
          "id": "a733b614-8361-41f3-93bf-97f67b005331",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3b98cdee-e9b5-4611-88f2-1e169ca156ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4d19bd-e4ab-4e7e-ad53-8f4dfcd36db9",
        "cursor": {
          "ref": "d0a282f4-e5b1-4666-b791-ba95f71b267a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7af8d3e6-574f-404d-8574-8edc8b610aa9"
        },
        "item": {
          "id": "ff4d19bd-e4ab-4e7e-ad53-8f4dfcd36db9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "924e1c6d-8180-4329-849a-6d67d8c3f8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301d90fb-b4db-4d4c-bed8-6b29a57b7324",
        "cursor": {
          "ref": "01354eff-dc45-4fae-afe0-9ad7cc33b9f8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9f1370e4-b9e1-4dbd-b427-0bb6070bc4b4"
        },
        "item": {
          "id": "301d90fb-b4db-4d4c-bed8-6b29a57b7324",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b3e87080-af42-4e11-a904-1af8dd205987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c852948-929c-470d-8c98-1cc9989e4c05",
        "cursor": {
          "ref": "a96a8bae-edad-478c-b098-d0f42009902d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "da17bc58-0942-437e-a6ed-8ebcbe3a3c47"
        },
        "item": {
          "id": "9c852948-929c-470d-8c98-1cc9989e4c05",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1f9307ce-07d6-425e-a0cf-2d7d02ea4879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b602a8-3f29-46ce-b3d3-466fdeba8cf0",
        "cursor": {
          "ref": "44937e8e-0ff6-4d4c-a248-e366780cc26e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "58e406bc-7a7c-48b6-91a1-90e23c7a0c44"
        },
        "item": {
          "id": "53b602a8-3f29-46ce-b3d3-466fdeba8cf0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1a3f20dd-cd3c-4b11-a187-02dc793bf961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da86456a-04d9-4e48-a6ca-e23d87c88f06",
        "cursor": {
          "ref": "b5c89b78-8adb-4b30-a5bc-45c98a6f341a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f8f498a4-5f3f-4917-8480-896e08acd9e1"
        },
        "item": {
          "id": "da86456a-04d9-4e48-a6ca-e23d87c88f06",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f23d3539-ec76-4d89-a501-9d04e385e61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e472956b-4565-43d1-a0bf-f96bbe4e2bfb",
        "cursor": {
          "ref": "265bdc61-6d6c-4a17-b7b9-6cfa7c002d8d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6e16f62b-c3d8-4f1a-9fcd-4cb084ccde1e"
        },
        "item": {
          "id": "e472956b-4565-43d1-a0bf-f96bbe4e2bfb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "91fe68fe-7e04-4806-b178-280149815c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a3d459-bb0a-443c-992c-b92d81166d13",
        "cursor": {
          "ref": "a1d080ef-5a6f-4913-88dd-be81edc7d57c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "74021ff8-2659-42e3-8b79-839b75d16021"
        },
        "item": {
          "id": "c8a3d459-bb0a-443c-992c-b92d81166d13",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3d86ac9c-4310-4ddf-a74f-5ff994cf4213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde2f017-1160-4116-bb51-0fe39a16c0f7",
        "cursor": {
          "ref": "6910074b-deca-47e0-af74-ed52698a241d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "198a4b65-9904-45f6-bf0f-755ea2d7ae4d"
        },
        "item": {
          "id": "cde2f017-1160-4116-bb51-0fe39a16c0f7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b4f92488-eb66-464e-aa88-d5fabadc3cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fea8a31-e2d3-4389-adfd-33ff15ff9143",
        "cursor": {
          "ref": "81cff193-6610-4b58-bd7c-33b4826a5a7a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f31266dd-41e9-4c59-b4ab-9396265bd560"
        },
        "item": {
          "id": "4fea8a31-e2d3-4389-adfd-33ff15ff9143",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "181658fe-0d80-4f36-9336-f0ce37bb6112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e7e026-f3db-4f7a-89fa-224877bcd939",
        "cursor": {
          "ref": "6201eade-bf16-44d3-b699-c0fcc3942c9a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "402d1d61-eab6-427e-9c38-afdac9946555"
        },
        "item": {
          "id": "b5e7e026-f3db-4f7a-89fa-224877bcd939",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "831da27d-eb74-461d-bd95-44b056a298ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef59cf5-93b8-482d-a876-134324194f27",
        "cursor": {
          "ref": "a527cb00-35d6-46f0-9086-a7ad81e20ec3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3734a4fd-6926-459e-bf98-7582348d70ce"
        },
        "item": {
          "id": "fef59cf5-93b8-482d-a876-134324194f27",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3a4079b6-0e34-4834-8668-a42c19c256c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94d73f4-c6ee-4d15-8dd3-eb1fd719a69f",
        "cursor": {
          "ref": "396c9b4d-4c47-4d86-8190-c3af96df8d87",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "364ff899-cfa8-43e6-a030-2ceb6a249211"
        },
        "item": {
          "id": "b94d73f4-c6ee-4d15-8dd3-eb1fd719a69f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "151bce29-3c8e-4e3f-b055-98d83702cafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977e9f05-59b3-4adb-9165-2c030c11f62c",
        "cursor": {
          "ref": "c0084cf2-2821-43e8-831c-35d2f1338ea9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cbfdba26-0676-400d-8dbf-1da4581afb56"
        },
        "item": {
          "id": "977e9f05-59b3-4adb-9165-2c030c11f62c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d25e9419-536a-49a4-b613-9a22fe0171b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b019a6-d2e1-44f5-9d62-1a31dc5e0f0f",
        "cursor": {
          "ref": "409d1491-cda8-4112-b787-93dab6c0c64d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2fd49e7b-982e-44ac-b827-7e0d708d80e4"
        },
        "item": {
          "id": "83b019a6-d2e1-44f5-9d62-1a31dc5e0f0f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0060d481-e6b8-4dac-be4f-dba29098b88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf31c61-db87-49f7-9597-f7789e4519b9",
        "cursor": {
          "ref": "80fbb688-9744-455c-a9a3-043b34446c22",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3460bf2a-983b-4d88-9ce4-c525d783ee3a"
        },
        "item": {
          "id": "8bf31c61-db87-49f7-9597-f7789e4519b9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2d682f98-4c37-4986-9da2-3c5e30f4d3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cebc862-2f1e-4ec1-8326-5fe28fc30e28",
        "cursor": {
          "ref": "904dc608-c691-45d0-a291-f79f67a41e6d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f9d96212-a10a-440e-8a27-54caed8d6287"
        },
        "item": {
          "id": "5cebc862-2f1e-4ec1-8326-5fe28fc30e28",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "47e18fc2-9f85-44db-a416-42251568b7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafeb1ba-70af-41c7-87f3-bd7a197e2214",
        "cursor": {
          "ref": "24f8b422-c2a4-45e5-9b05-8065aa0c9aa8",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a8bac4b7-4c3d-46fc-9168-62c1f6323a85"
        },
        "item": {
          "id": "cafeb1ba-70af-41c7-87f3-bd7a197e2214",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7c234771-441e-4091-875e-e1c176cb206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d161ef-23cc-46a7-9876-1075c047c8e5",
        "cursor": {
          "ref": "a35b6c85-6950-4bec-9d19-6759d0e69636",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1706ddcb-157b-43b2-9bae-471f0590ce4b"
        },
        "item": {
          "id": "24d161ef-23cc-46a7-9876-1075c047c8e5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7442e056-7dc9-45b6-a9e8-c8780ecb5cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53da4340-63ca-449c-a1e5-1b372a7a3275",
        "cursor": {
          "ref": "c6f728d9-04ba-4f1a-b455-a5b44655eecd",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e1246dde-a6e5-475d-97ca-c606123deab2"
        },
        "item": {
          "id": "53da4340-63ca-449c-a1e5-1b372a7a3275",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "015f0d70-d317-4d04-a38c-242ced8e81a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd047cf7-1ae5-4fc4-84c9-1bf707d4714f",
        "cursor": {
          "ref": "e9174a0f-6ae5-412c-8ef9-4de917fd2d96",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "92688cfd-cd47-43fd-935d-4cc6e364c3e1"
        },
        "item": {
          "id": "cd047cf7-1ae5-4fc4-84c9-1bf707d4714f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2638c383-1e73-49f3-bcdf-5d5c2e72f10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2db9ec-97e3-423b-ab13-e4f92d92a545",
        "cursor": {
          "ref": "3837659b-c15f-42aa-ad89-83e2e1631140",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9f8f90fa-baab-47ac-9691-03ad135aff5b"
        },
        "item": {
          "id": "dd2db9ec-97e3-423b-ab13-e4f92d92a545",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "72cb337f-e6e1-4173-82e8-9eedc35ade03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503e27c0-ba7f-4b02-903a-bcc6d9a7dd55",
        "cursor": {
          "ref": "fca38bb0-a83a-4d47-89fe-6c3be75dbbf6",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e543d99b-be81-4a3d-b79e-cafcdf86db27"
        },
        "item": {
          "id": "503e27c0-ba7f-4b02-903a-bcc6d9a7dd55",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e15df1e1-3f35-4bc3-825e-72c7dfb9727b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbece991-bd33-4a84-b1b3-1f3951658efd",
        "cursor": {
          "ref": "0557d4f7-aec4-4042-bafe-b105a3004525",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8ccb61b3-1ac1-4707-9ada-9f87b6946f32"
        },
        "item": {
          "id": "fbece991-bd33-4a84-b1b3-1f3951658efd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cfa72fe1-883f-4c81-9679-25243d58a51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a87a09c-e9e5-46c4-a585-fc67c12cd30d",
        "cursor": {
          "ref": "2da5e594-4ec7-4ea0-9893-140794ecd8d4",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "603179ed-b62a-4775-bf87-5dc825e0d0c1"
        },
        "item": {
          "id": "5a87a09c-e9e5-46c4-a585-fc67c12cd30d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6ed2d947-bc26-471f-a84a-3600a21d32ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba0848c-0242-40cb-ba3c-d1f23adf376d",
        "cursor": {
          "ref": "e2bc5076-58af-4451-91d7-6e6df2611a3c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ba397113-b6df-490f-9cbc-393e4d19ca40"
        },
        "item": {
          "id": "5ba0848c-0242-40cb-ba3c-d1f23adf376d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9795cacd-ecbd-4dc1-b481-da32b2591962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd86ae37-cace-47aa-b3a9-3e86c0861728",
        "cursor": {
          "ref": "9377f654-9363-42a4-9340-7ff914d7ad31",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a3f1f55d-f4c0-4c3f-a18a-f851c2ee46c9"
        },
        "item": {
          "id": "cd86ae37-cace-47aa-b3a9-3e86c0861728",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "892e0d30-9c99-45e7-b486-94113c763a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4292a000-1ccf-4c43-b44e-b66b45034d2a",
        "cursor": {
          "ref": "50af83e5-5935-4152-8078-56f2e479f1a3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c11396b0-5df2-4ebc-a776-e4f07330f9a4"
        },
        "item": {
          "id": "4292a000-1ccf-4c43-b44e-b66b45034d2a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2130a6dd-5a19-43e1-96b6-9e046ab50aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99083e1-e25e-4112-bb09-b19e0af1bfca",
        "cursor": {
          "ref": "2ff94887-a4cd-4692-b9f7-2159bdcc78af",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b402bfdc-2e94-457d-9db4-c7be1cfae2d2"
        },
        "item": {
          "id": "d99083e1-e25e-4112-bb09-b19e0af1bfca",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "95ea62ca-b638-46bb-a28c-89494460119f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed69dba-516c-497e-aaac-88d097be119a",
        "cursor": {
          "ref": "b8714dd1-0326-47f8-9281-225e27a75791",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "770ce99d-01cc-447d-84e6-6865c3ebd4ed"
        },
        "item": {
          "id": "9ed69dba-516c-497e-aaac-88d097be119a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5e93729c-4a6b-4d6c-bcdf-b2b7a3f39168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb34ed6-9744-4585-bdd1-02f6ce2bb4a1",
        "cursor": {
          "ref": "29532ba4-9e7d-48e3-921e-5c20fb8fb954",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ecdce637-0809-42c4-a932-aefeea8e05f7"
        },
        "item": {
          "id": "0fb34ed6-9744-4585-bdd1-02f6ce2bb4a1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "41c79e1d-b503-4332-889d-347a33c0e412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1924f949-e872-43e8-90af-29dfdf4265c4",
        "cursor": {
          "ref": "c39e9dc8-e446-48cf-805b-e3decafb7303",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2d79ca32-524d-4bae-a8a7-61900aa26ce0"
        },
        "item": {
          "id": "1924f949-e872-43e8-90af-29dfdf4265c4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2459a4ce-a9a9-48ec-9d89-6be9ff48193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e453c93-67c1-4ba9-8ecc-f5ca8b83d7bf",
        "cursor": {
          "ref": "e7b5299a-267e-4168-a8d9-94ecc9221787",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "72c3667b-74f6-4ab3-82d5-321b7448941a"
        },
        "item": {
          "id": "4e453c93-67c1-4ba9-8ecc-f5ca8b83d7bf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b39c4be5-8eb4-4418-9140-5493f6d0eb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5c4b8b-31d5-4af5-b419-567642dcaea0",
        "cursor": {
          "ref": "fcbbd519-e086-4f97-88d0-4dab9241830d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "892f3ee2-d58c-4577-8378-45bf644093ea"
        },
        "item": {
          "id": "ae5c4b8b-31d5-4af5-b419-567642dcaea0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "444dc74a-6f3a-49d4-91c7-2bd23ad867ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96853b0e-1a67-4bf9-a5d1-35c2b8bed2b2",
        "cursor": {
          "ref": "afd866db-684c-4f7f-a637-946bfae7df0c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "860ad3b8-7a12-40e8-a1ab-d9face5db1be"
        },
        "item": {
          "id": "96853b0e-1a67-4bf9-a5d1-35c2b8bed2b2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0e4cb3fc-da85-4e59-ab89-a142d8f425e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5089955f-e2f5-40ba-b959-541120a7a020",
        "cursor": {
          "ref": "951bfecf-bdf8-4964-9797-3ce9dcc22f6d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c2820228-e99f-4c72-b4d7-cce677c4a484"
        },
        "item": {
          "id": "5089955f-e2f5-40ba-b959-541120a7a020",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a1dbd9d8-2a41-4483-8248-fae6ede1b3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31fd56d-8a6e-44fb-91d5-4b1e85c7c57c",
        "cursor": {
          "ref": "e2430414-4f3b-428a-8a1a-0ebc364bc6c1",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1f71d2c7-f062-477e-99ed-27b0fa83e2fe"
        },
        "item": {
          "id": "e31fd56d-8a6e-44fb-91d5-4b1e85c7c57c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fa05c288-4ad4-42ec-b5ea-fabc492a9afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b84171-5376-4729-92e0-e5e0a9e69fb6",
        "cursor": {
          "ref": "66cfbc46-6b42-498e-968f-220061d5caf3",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9ef971e4-1c28-4400-af5f-cc2e8869f8ca"
        },
        "item": {
          "id": "e3b84171-5376-4729-92e0-e5e0a9e69fb6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b51f3c09-4a7d-464d-bab0-5f702e241242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ad9244-de7c-47e2-a8fd-0d805feebb51",
        "cursor": {
          "ref": "8e1ac17c-6702-4c93-8ddd-6e915c4bd2ba",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5b889a20-8e83-468f-8227-c1e9327decbf"
        },
        "item": {
          "id": "47ad9244-de7c-47e2-a8fd-0d805feebb51",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7f174df8-27cc-4b4c-84a6-c176c55ee69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a284c9fd-13f6-42f2-a38e-829c675e2498",
        "cursor": {
          "ref": "e5c0ea1d-d191-459b-9fd7-292eb88b6427",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f38b34b7-2240-4baa-be76-7203485016b7"
        },
        "item": {
          "id": "a284c9fd-13f6-42f2-a38e-829c675e2498",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "18356963-43cf-447a-85fa-ff91953a44ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8144421e-949a-4e33-8fbe-233af8a4e742",
        "cursor": {
          "ref": "83a38e1f-1ebc-4b91-be66-87aaa0ea032f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8e461960-ff6c-46d4-ab78-90ba86bfdebf"
        },
        "item": {
          "id": "8144421e-949a-4e33-8fbe-233af8a4e742",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "789ef2e9-851a-4144-9867-aa598e3252a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4707d0e-08ab-41ce-9f27-00b8104529cb",
        "cursor": {
          "ref": "bd835285-fc5c-42fa-8128-627e18b214ca",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5b09ce41-3e6c-4d00-b4cf-0b8effba14df"
        },
        "item": {
          "id": "a4707d0e-08ab-41ce-9f27-00b8104529cb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7328385c-057e-4952-b996-cf98060f564a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fab7676-d5b4-4281-ae03-f211bdfcbe6c",
        "cursor": {
          "ref": "a28e32a7-6bbc-4901-bc5e-11ef588c4466",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "99a65347-0a31-495c-a4a1-68b4e0de386b"
        },
        "item": {
          "id": "9fab7676-d5b4-4281-ae03-f211bdfcbe6c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a530b46b-f905-41ba-940e-f8442dbb7815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df14c28-bf4f-4a9d-9a1c-5af7dba371ef",
        "cursor": {
          "ref": "b9e08a81-72ff-4f7d-81f9-b38895e9f3f5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "acb78b06-f9e5-4a56-ab54-31f2b98d3543"
        },
        "item": {
          "id": "6df14c28-bf4f-4a9d-9a1c-5af7dba371ef",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d55b25dd-ce51-4b33-ab72-82ccf107317b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c2f63d-ad44-4c92-bbc4-46efed2b8816",
        "cursor": {
          "ref": "d426468b-fb37-42be-8447-76880f9d452f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e162a364-468c-4254-99d9-4b9ae7c90ff6"
        },
        "item": {
          "id": "d9c2f63d-ad44-4c92-bbc4-46efed2b8816",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ac6ee062-41fa-4af6-a448-8a9b64d2ef0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64c2c34-47f0-45b1-a109-044aad1dc54c",
        "cursor": {
          "ref": "8bba5ed2-c1bc-4a80-8a5f-5bddada90d21",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3e132561-b2ca-45ff-ad73-2249ad0603f1"
        },
        "item": {
          "id": "b64c2c34-47f0-45b1-a109-044aad1dc54c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "05cc25b8-0fc9-48f8-a5cc-8df6db099f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66a0ef9-78cc-4c9e-b3ad-eb8870cc7e80",
        "cursor": {
          "ref": "ac8e160a-5dba-45e0-ac89-d893a20d6818",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e655b166-5f16-467a-848a-235124a8878b"
        },
        "item": {
          "id": "d66a0ef9-78cc-4c9e-b3ad-eb8870cc7e80",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "545bc693-1c16-46fa-a977-13507818ced9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e6aac2-b4e8-40f0-af43-78a066f1ff97",
        "cursor": {
          "ref": "2b0ec2ae-2fe7-4fda-a9bd-0f708acf9914",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d323037a-feaf-4640-ba2f-052ca2cbb243"
        },
        "item": {
          "id": "26e6aac2-b4e8-40f0-af43-78a066f1ff97",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6633e3ee-d8c0-4954-9b0b-14cbc106ab3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d998e9ee-466f-4b33-ae3f-b741e16ae4c7",
        "cursor": {
          "ref": "8f86f490-1a0b-43a1-a299-59a77fde90be",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "70496119-64fe-4664-9317-5e4ca34c3246"
        },
        "item": {
          "id": "d998e9ee-466f-4b33-ae3f-b741e16ae4c7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e4c4be28-fe53-4e31-8fc8-71a36b972b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f538f0-8a6d-4e45-8019-80c581813b03",
        "cursor": {
          "ref": "25a64850-1cce-4d1f-be70-ef9edb1fd6a8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4966abd7-2ed1-46cc-87d4-5cf4e7e514d9"
        },
        "item": {
          "id": "73f538f0-8a6d-4e45-8019-80c581813b03",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d9edcfcf-1479-49f2-9489-1d333af98360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9d665a-9d62-41bb-b913-98415edcc20b",
        "cursor": {
          "ref": "99feb43a-aa96-4b9e-91d3-5ffaeb3413d6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "896449a6-1801-4c54-8e87-6be3ce468129"
        },
        "item": {
          "id": "4d9d665a-9d62-41bb-b913-98415edcc20b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1454c307-001a-4809-b81e-ff0153100ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba7c737-d9ee-4d9f-b9d6-8cf5030404d4",
        "cursor": {
          "ref": "8ee6db71-9bfc-4288-9b65-597579c9af9a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0e112cf0-1589-4774-9d3e-fc1f9c8c504d"
        },
        "item": {
          "id": "bba7c737-d9ee-4d9f-b9d6-8cf5030404d4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "57c24ade-ec25-482d-b2e5-f1c5455603ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05600b88-201f-4884-b60a-fa549d0d9ce6",
        "cursor": {
          "ref": "257e8879-5f5d-49d7-a3fc-70fddcbe5933",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ae26350d-9acd-49b8-be6c-b3056628bb51"
        },
        "item": {
          "id": "05600b88-201f-4884-b60a-fa549d0d9ce6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1053a5d4-7e21-4ea6-a5b2-126fb80fae46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afabd9e-bb15-4bd0-b7df-1daf4c40aa6f",
        "cursor": {
          "ref": "fded9993-4c53-4146-9013-7ae711ed0eb7",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0f534b9c-aff1-48eb-b0bd-0348d7e88beb"
        },
        "item": {
          "id": "3afabd9e-bb15-4bd0-b7df-1daf4c40aa6f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0c655e38-bc55-4028-9b03-f61a365026a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95efd971-a2fb-4d68-b54c-af5f5805217c",
        "cursor": {
          "ref": "844ccca5-aa80-440d-920f-bd729c12515e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6e806aaa-bc4d-47c4-b502-1d744a0b0e59"
        },
        "item": {
          "id": "95efd971-a2fb-4d68-b54c-af5f5805217c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e249c613-452d-4456-858d-ba7650c9b0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1096e4-ff0e-42d7-83c1-72afb2a2f888",
        "cursor": {
          "ref": "4afac7d7-bf87-4182-a45c-15fc867b58fb",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9568720a-cd0d-4275-88e4-f0e902fa87d5"
        },
        "item": {
          "id": "8d1096e4-ff0e-42d7-83c1-72afb2a2f888",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "77e98e08-8cd4-46b3-89f5-2e86b0de9c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d14bf5-388e-4d82-b065-f3283e252171",
        "cursor": {
          "ref": "6468b5d4-a5c9-40c0-806c-b56d64871b3f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d44f2f96-a6fd-4188-ae1c-c0aa8e31b4f2"
        },
        "item": {
          "id": "a9d14bf5-388e-4d82-b065-f3283e252171",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5cb12015-a20b-4119-a706-5d0fe0b1ae7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a48a87-dd81-4ca9-869c-c86931177dbe",
        "cursor": {
          "ref": "0047001c-8e47-4a67-9f33-dc8a8044628e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "db5f04f5-a614-4ac4-8cd8-41b2ed81ebbc"
        },
        "item": {
          "id": "16a48a87-dd81-4ca9-869c-c86931177dbe",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9feac3fa-9a56-45ad-aa3d-cbc8ad2a72cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eace09b5-c0d3-4d1f-bbba-a79b43d3d3ad",
        "cursor": {
          "ref": "2fd9f513-a4c1-495b-8452-beadf1ead325",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6ab64d20-14ab-4ffd-9f2d-5658e6f4925d"
        },
        "item": {
          "id": "eace09b5-c0d3-4d1f-bbba-a79b43d3d3ad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "48276dd4-0fe8-43dd-bfca-bd605865afbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fbad59-d623-4844-9898-aa08fc322f65",
        "cursor": {
          "ref": "b0611dc2-7b2f-4bfa-ae15-ede04a4c05f8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "344d867f-603f-452d-945f-a5e613d191a7"
        },
        "item": {
          "id": "47fbad59-d623-4844-9898-aa08fc322f65",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bd2fd0a8-cf48-439b-a8fe-1256120ddb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa22e0c-1533-40fe-975d-af864fc5d8f5",
        "cursor": {
          "ref": "6f38e12f-d883-4293-9ebc-3259728bb611",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a42f2ef3-407f-468a-8604-5eb1f8844d8c"
        },
        "item": {
          "id": "3fa22e0c-1533-40fe-975d-af864fc5d8f5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "627e6d43-04c7-4d79-8e8a-55eb738a7e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d017303c-ca4b-45d9-a5fa-db994254d33b",
        "cursor": {
          "ref": "20bfdebb-f3e9-4108-b360-aa977fa8d5c0",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0936ddf3-eaa4-43a2-b7aa-7982c7263c15"
        },
        "item": {
          "id": "d017303c-ca4b-45d9-a5fa-db994254d33b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "aa14db9c-6d0d-4b57-8a71-bdca4281687c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8d6e26-f478-4451-8b6e-d7491dcd446c",
        "cursor": {
          "ref": "f8581377-1af3-4483-99a9-70ddb9a9eb07",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "13275f4c-1672-489f-887a-667136ebd782"
        },
        "item": {
          "id": "7b8d6e26-f478-4451-8b6e-d7491dcd446c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "80736cd3-a923-4a5c-b94c-128f5c70e13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e708470-664d-4165-9eed-fe9bc7745925",
        "cursor": {
          "ref": "9a893a2d-57da-4933-9136-cd341bbf5c9f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5fdaa0af-6add-45ae-990b-c0325d3785b5"
        },
        "item": {
          "id": "0e708470-664d-4165-9eed-fe9bc7745925",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "249ef35b-223f-47c9-90af-55200a251a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0139214d-c223-4572-b00e-3e7cc8cca5fb",
        "cursor": {
          "ref": "6d7bb601-4366-4f32-813a-07d79696240f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "35ee8685-0f98-4dc4-97e8-5f9aa8c8c2ee"
        },
        "item": {
          "id": "0139214d-c223-4572-b00e-3e7cc8cca5fb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "590b82e7-3a62-402a-a994-c571dc49d5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58f7320-2480-41e4-9e10-506dfe7e7e5b",
        "cursor": {
          "ref": "bf4fc26f-7bdc-4cbf-b43d-de48e7ebe3da",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c682a426-bea1-4ddd-a5d8-6f1a889e4fba"
        },
        "item": {
          "id": "b58f7320-2480-41e4-9e10-506dfe7e7e5b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f1a72c76-529c-4c2f-809b-4fcac52d39d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69edf4cf-65c0-4388-bc26-f1df6311a9e3",
        "cursor": {
          "ref": "38adb86c-93ef-4c83-b39b-80eb12892aa2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3319bba6-712f-4bd2-aa62-648c1bcc4eb3"
        },
        "item": {
          "id": "69edf4cf-65c0-4388-bc26-f1df6311a9e3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0767e275-6a3c-407f-9d7e-f73759a9fc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a2ea64-d870-41b5-8bc7-c96a1218a95d",
        "cursor": {
          "ref": "6716afa3-11e9-4ade-9776-217966b2dc08",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5590ef29-ed30-4f68-9ceb-570992a89588"
        },
        "item": {
          "id": "62a2ea64-d870-41b5-8bc7-c96a1218a95d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0333e650-afb0-4ec9-a20b-a9c1bd34d482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f9379f-c197-48fb-b3c6-73070bfe1bd6",
        "cursor": {
          "ref": "6f45bdb2-5d8c-4ad6-8a5b-e04380465031",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b3e453e0-a4f6-4a27-b4cf-bd95c74ce38b"
        },
        "item": {
          "id": "b9f9379f-c197-48fb-b3c6-73070bfe1bd6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "64dc1509-363d-48ed-b133-a1f3d1c10951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe6278b-c3df-4eb7-8f45-0f84bb52b955",
        "cursor": {
          "ref": "9902f86c-3326-4e82-9b7b-49dfacc2dfe7",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7ecd7319-5d7f-4794-9b8c-1e6411c616ee"
        },
        "item": {
          "id": "3fe6278b-c3df-4eb7-8f45-0f84bb52b955",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b94584dd-6238-47ba-afc3-a00f716473c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fdede3-34f5-45c9-9cfc-bfe457b3ad7e",
        "cursor": {
          "ref": "fd1b09cf-2a4c-40e9-899e-2d1b83ff13f0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "93d38e72-3ba6-4f10-a4a2-b25e7e0f77fe"
        },
        "item": {
          "id": "b0fdede3-34f5-45c9-9cfc-bfe457b3ad7e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8d4707f5-8f9b-4d7d-89c0-eff27d764eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c18451e-ad4f-4be6-9bbf-64ea704207bd",
        "cursor": {
          "ref": "014c0c93-113f-4c87-8deb-fb320625ca53",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "70438d83-7774-4f38-8544-e41cc37d0fee"
        },
        "item": {
          "id": "7c18451e-ad4f-4be6-9bbf-64ea704207bd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7122935c-4f03-4a60-81aa-7d199986cd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c8365d-708c-41fd-aa24-5f1c77a9577d",
        "cursor": {
          "ref": "678b410d-feb7-4467-8468-11e7b2224945",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6c4b4a4c-ff85-496b-a862-0560b870ccb7"
        },
        "item": {
          "id": "81c8365d-708c-41fd-aa24-5f1c77a9577d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c40704b6-9c8d-47c0-8426-06a2cce9f4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7522cd-402e-4e35-8126-79ed26f05fe0",
        "cursor": {
          "ref": "8665d2ad-16eb-4a4a-b87d-9a1d82b242c1",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "771cf73d-c8c5-476b-b5f1-b7bc2d850f40"
        },
        "item": {
          "id": "2c7522cd-402e-4e35-8126-79ed26f05fe0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "85d08f19-0435-4b19-b226-0be375c75b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b915bc-7b96-472b-b900-ab7d3a539efc",
        "cursor": {
          "ref": "cd662bdc-7c30-4d5e-859a-664ccf10ea2c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "00802340-d657-4609-b080-cb2f5e954073"
        },
        "item": {
          "id": "95b915bc-7b96-472b-b900-ab7d3a539efc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9decc7f6-614a-4f4f-ab4e-2b7aa5cb03be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6147225e-7df6-48eb-84d3-3e8c2e93019d",
        "cursor": {
          "ref": "25ef5c23-e625-4970-a58d-35abd55f81fd",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9b1816cf-e70a-4184-b20b-377d7a5290ca"
        },
        "item": {
          "id": "6147225e-7df6-48eb-84d3-3e8c2e93019d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6582b038-c557-436c-bd5e-a15bcff2de7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2485dbef-d836-4c30-8c6b-3ec8545a9d5e",
        "cursor": {
          "ref": "27398b54-c15b-4a3f-b7a7-9d1ae9e7cbf4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "54521e86-7ee4-4e18-a5bd-8f080cc7b343"
        },
        "item": {
          "id": "2485dbef-d836-4c30-8c6b-3ec8545a9d5e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "17d9fdee-d06c-4e22-9dd6-a7a48b189a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52074e35-64fa-48cc-82af-e6fa07483520",
        "cursor": {
          "ref": "1a1e893d-1029-4ebb-a3da-52a914b5be43",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "65ce08bc-3adc-449b-850f-2f5d7e690379"
        },
        "item": {
          "id": "52074e35-64fa-48cc-82af-e6fa07483520",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c5034918-26b0-43a7-87f0-16bd7b51aff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd8f160-8815-487c-88f5-083d795bc471",
        "cursor": {
          "ref": "2bbfaa70-f943-46ca-ad34-84ccf0aee2ef",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "91be72ab-0f3c-441f-a4d6-6449339ed308"
        },
        "item": {
          "id": "ccd8f160-8815-487c-88f5-083d795bc471",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6ff422b8-7f4e-47ce-915d-acb5b94b98a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867fc322-2f5e-4871-8741-421748269676",
        "cursor": {
          "ref": "34cd7bae-c023-4ed9-a08f-748122a3ce26",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e12391e3-e6db-41dc-9625-9afbdee8c7d1"
        },
        "item": {
          "id": "867fc322-2f5e-4871-8741-421748269676",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "360c13a9-a0d1-45ad-ba03-2cabf12bd79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0454c9b-3fdf-40fd-96c4-22c8ab875522",
        "cursor": {
          "ref": "9f756c78-1866-4090-8992-f36b2db6716f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8d5fc857-30a6-46d4-8cd5-455d1c86278f"
        },
        "item": {
          "id": "a0454c9b-3fdf-40fd-96c4-22c8ab875522",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8443f21a-4ea2-4c05-8073-cb51ccc80415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422df630-514e-4b1e-96ec-f8edb548f441",
        "cursor": {
          "ref": "1d95485d-0f95-40c2-a210-9e914c88dfcd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c2d0003d-0e4e-4576-8cbd-ae78694b7943"
        },
        "item": {
          "id": "422df630-514e-4b1e-96ec-f8edb548f441",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d83c2ace-52f1-4985-a1d5-215bdbd0620e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2897bb3-9665-4cbf-9098-3a0ca4cab107",
        "cursor": {
          "ref": "5858eba8-4e69-41ad-ba5e-ba5a77519721",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "05d62d53-09d6-46d5-a5e4-61fa17261a17"
        },
        "item": {
          "id": "e2897bb3-9665-4cbf-9098-3a0ca4cab107",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7f27470d-2a35-4646-992c-647067ea6510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b682cc27-1091-4970-9d52-fbd821d8a815",
        "cursor": {
          "ref": "d261e26a-5ef6-4ddb-bc14-aaebd521981b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c948fab0-40f0-4c1a-99d4-b71ad8efb493"
        },
        "item": {
          "id": "b682cc27-1091-4970-9d52-fbd821d8a815",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "54ac9d1c-3e10-4277-9dc5-e9338903105b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a55abb-bca2-415e-be22-99435a288d12",
        "cursor": {
          "ref": "da104383-c1ee-4af1-a226-8059d25b313c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2cebe97a-c99f-4ee5-9fef-5db7d00a9df6"
        },
        "item": {
          "id": "d6a55abb-bca2-415e-be22-99435a288d12",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d3b56604-a9ca-46c2-83bd-7e1f1c869f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d46430-5b06-4c1e-8d23-5794fd88da6a",
        "cursor": {
          "ref": "7a35e6ba-d496-47ab-a36f-69efcddec19a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6a3598d7-347e-4c37-b55c-916fc6e81252"
        },
        "item": {
          "id": "70d46430-5b06-4c1e-8d23-5794fd88da6a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4264189e-d49b-49e9-b068-9721d3fcfad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06db317-fca6-4aeb-aa5c-865bbdc4724a",
        "cursor": {
          "ref": "175d8a3f-5c41-4d3c-a782-8d1a97a787cf",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4b50aa8b-f4fa-44cd-858b-c728f1484e25"
        },
        "item": {
          "id": "a06db317-fca6-4aeb-aa5c-865bbdc4724a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dcc90fc7-4a83-49ff-8f0d-978d518f6301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cad84f-901d-4472-b0fb-b5e25a01c070",
        "cursor": {
          "ref": "3fc57487-adf2-4de5-839e-4d5e75ed1675",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c7476a84-2745-4815-9043-a30423ce59e1"
        },
        "item": {
          "id": "85cad84f-901d-4472-b0fb-b5e25a01c070",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7b974d34-80a5-4242-9208-65c994e8ef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eb0a4e-7db9-407b-9518-41fd8cdd2c75",
        "cursor": {
          "ref": "91dfc392-2be4-456d-9d66-78a234e34ebd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b1b67f47-12d9-4a93-8db7-8a8f1c58c3f7"
        },
        "item": {
          "id": "42eb0a4e-7db9-407b-9518-41fd8cdd2c75",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "41ad4447-eea0-43e6-8c23-fbe691a2644f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03e1fb5-bcb8-4bca-87ea-6d8798a12f01",
        "cursor": {
          "ref": "327a6cdd-b6fd-4a3b-a884-abec90a090b1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "00733777-fb24-4c4f-b0a9-3fb1abf59bdf"
        },
        "item": {
          "id": "f03e1fb5-bcb8-4bca-87ea-6d8798a12f01",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1f2e1678-9d0d-459b-82f5-cc81efd4960f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1364e818-909c-4388-bbed-2f404cc4e779",
        "cursor": {
          "ref": "ef6fb9a1-04a2-4d80-981f-051439c855bd",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3d58f531-24a6-4d26-b18c-78e6d12f4367"
        },
        "item": {
          "id": "1364e818-909c-4388-bbed-2f404cc4e779",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6f393bc1-97da-4695-8298-ba135bf0def4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fdcfc1-edf0-4b3e-b9bc-28c61ee805f4",
        "cursor": {
          "ref": "ce3b8811-912a-49e5-953f-4d61ace6c0ae",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b89e837b-2bf9-4845-9e88-023dea6f9c33"
        },
        "item": {
          "id": "f0fdcfc1-edf0-4b3e-b9bc-28c61ee805f4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e2ca24a9-a64f-4cd1-9cc8-f42bf727b822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76052971-3320-4fbf-8c91-61f5721d0ed5",
        "cursor": {
          "ref": "b472d452-7727-4bc6-815e-c5ab803576c5",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "97dc06bf-0979-40db-b894-7e273d1e3987"
        },
        "item": {
          "id": "76052971-3320-4fbf-8c91-61f5721d0ed5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a0885e91-092b-4a78-b567-0808edc28765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3b2748-78e6-4154-a46a-bfd7eb77858b",
        "cursor": {
          "ref": "a922c048-def2-4da9-9db6-4b428851e0d8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a488c967-f699-4129-9e0a-ce750fe77dbf"
        },
        "item": {
          "id": "3e3b2748-78e6-4154-a46a-bfd7eb77858b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6492a74f-5cae-42c5-8dda-8f93d68ac9d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668931b1-44aa-476b-b884-b5e524215643",
        "cursor": {
          "ref": "158a0d58-ee53-423e-884b-57bf003c6cca",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e561354d-dfc3-4078-9148-636f395b319a"
        },
        "item": {
          "id": "668931b1-44aa-476b-b884-b5e524215643",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "175b7305-3099-4a64-acc5-8d9bc0311acb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d25d19-a2b6-49aa-8d26-6f09a70faaa2",
        "cursor": {
          "ref": "e4ceb377-25ef-4130-9053-444c5d583bfb",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "659ecb92-c7b4-4268-9c6b-6cf70489aafc"
        },
        "item": {
          "id": "03d25d19-a2b6-49aa-8d26-6f09a70faaa2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a0585cca-3d96-4e41-8acb-692e77198e05",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cb24bd-29bf-4363-a924-c4a102b6e430",
        "cursor": {
          "ref": "e5b853a8-adc1-4b96-ab6c-58093a562292",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "00e914d8-1710-4876-9edb-a766ccbe0104"
        },
        "item": {
          "id": "54cb24bd-29bf-4363-a924-c4a102b6e430",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "857b5b5b-99d0-4c82-96a9-5235009ffb16",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "848b40ad-4f57-4000-a46a-2e3805c1ceac",
        "cursor": {
          "ref": "f978d868-a4c2-4279-85bf-808f13821dc9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d1326be1-3b5d-4fa2-94f8-9b6be13ed881"
        },
        "item": {
          "id": "848b40ad-4f57-4000-a46a-2e3805c1ceac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f29a596-f90c-4fa3-a726-18895720a7c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848b40ad-4f57-4000-a46a-2e3805c1ceac",
        "cursor": {
          "ref": "f978d868-a4c2-4279-85bf-808f13821dc9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d1326be1-3b5d-4fa2-94f8-9b6be13ed881"
        },
        "item": {
          "id": "848b40ad-4f57-4000-a46a-2e3805c1ceac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f29a596-f90c-4fa3-a726-18895720a7c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99504503-8f05-4ed0-8ee7-63b919c36b63",
        "cursor": {
          "ref": "7f4c4e79-daec-47a7-8554-1f2e580e6b1d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7b8cee00-1952-487f-89b0-77f57f3c9ef1"
        },
        "item": {
          "id": "99504503-8f05-4ed0-8ee7-63b919c36b63",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ca8b3009-2c2b-4837-a399-959be44d6f8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573cf62c-add6-4510-96c7-878cf872a676",
        "cursor": {
          "ref": "c01ad72a-8dfe-48da-bf73-14dfcf6b5ea7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e393b5a1-5003-4901-8a76-a76a410ec497"
        },
        "item": {
          "id": "573cf62c-add6-4510-96c7-878cf872a676",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f33e2961-572f-434f-a0fb-5768a2d52b25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}