{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "70a5dbc5-9498-4679-96d4-73ebe310750d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "01824e0f-4ee4-49a9-ba67-ee5f9a15de61",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fec4f3ef-b813-45a2-a695-298656a8e2f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6893b113-7081-41b6-99cb-2cf41b4a1f97"
                }
              }
            ]
          },
          {
            "id": "627574f5-3f61-42b5-a6d2-ff16325d635d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7f58b37-84e3-4695-8674-b14f6dae8db3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "766e9b70-0ab5-47cc-9c59-db68f5f1e4aa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0b2a020d-8847-4737-af54-9941e3e5017a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ab5aa6a7-d221-41a1-9b4c-29d4ff9748b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "822ef499-da2d-4627-8738-d7518e2c0648",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "686984c7-361d-4e1c-b02b-113191b90dfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "640a3dd5-ecaa-4d9a-8179-e0c56bf69e63"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "648bc4f3-e968-442c-8744-d8e2c3529432",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "317d481b-7b3c-4050-8f23-53a9405f64d1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f003193-10a9-45d3-bc84-6dc8b91a87de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60f817cf-75dc-4694-9790-a004b2c6efaa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ab4f0e4-970e-47e2-a222-a31056ced93f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5c611252-fd8f-4c71-84d1-d380a916d90a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0dbd8e1-bf43-41fe-864c-2655babab60b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cab3a2c-6dbe-42d2-aff1-b1e66ab02fcc"
            }
          }
        ]
      },
      {
        "id": "37e9c03a-8001-4dbf-bd13-2b4b01c45704",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "decce4a6-ee95-4cdb-8ed9-92df786b3376",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e1f76d9-0fb2-47bc-a402-b505a60dbc38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f21c864a-58e3-4e6f-ab62-ca4956b85b42",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7deb67f5-befe-4ac1-8516-d8b46e4338f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0fa5e6e-303a-440e-9353-084d81a132a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e90877-c060-4111-a13e-b9d1414c1d54",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e9fb3d-acdf-4e5a-b94e-59b3a0774467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "284e30bc-78b4-4035-8a19-fffb4201410d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c7b4f8-3aea-46d1-aa3f-c7bb497b29c2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b123ee4-4e41-4d75-ac37-65d895841727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beb7595d-141c-49f8-8734-3a3debafc4cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "06f66e3f-7b2e-4287-a160-3d5ffb8bdf22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d395f17c-b964-434a-b5ad-682b2e12d4a2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca96ae1-36e2-4069-838e-6663166eb47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41ac8814-896b-40e1-8b3f-03c3fcef16db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5185c386-dd90-434a-a586-f1427c5ce895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059fd30c-cac5-4356-8790-2a978d71a39d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a48dc4cc-b52d-41cf-828a-b1501ad5783f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "80bcf929-7ce9-48e5-ba4e-586742b3d66d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6abb344-f28b-4fe9-904c-3f756e32a4b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "799005da-fe64-409c-9682-fe721ccd3525"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "620d2f00-bf3a-4b40-871c-342645722006",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9c3de6d5-1b5a-4557-8fc6-70bec916c8bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a2f69eb-af8e-4f68-9484-cf03e9697f18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4c929bc-260a-4ec0-af3f-36d74bfc46df"
            }
          }
        ]
      },
      {
        "id": "108419cf-33b8-432e-a6ea-4b1bb53aebe6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "81b29ae8-0c02-4122-bb6b-a59daae167c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c7956fa-1760-4fa3-a8c1-4ea202657563",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d09718f3-2d76-492e-b402-3898947d1a92",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5561f5e0-8959-43d2-b493-1de6249941d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56233f93-39ca-4c6b-8bf0-4b1961735007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b621d943-b05c-4c45-97ef-7f0a2d0e3d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a828c99-fb44-4e77-b908-b4ce1d10bd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e206ca-e24c-4982-8f88-b4659d9d3fe4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b279cde2-e12f-4dda-a051-4c0f77873b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff4a415-102c-47f8-abde-20f22f49f7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01400d8f-1b90-4855-a7c1-269d08ad7cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9466e68b-8cd0-4c5c-ab87-0e7c138b0a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504ea657-1efd-4a18-922a-e53c11316804",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90167e9-3687-4712-9f74-fc9510dbd3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b9cd86-2772-4ccd-90e9-d5c25fa9861f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8f0322-76db-4ba1-8417-9feb729395cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51bde7ac-c59f-41d8-8145-a7062820512d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c152f5ea-6bab-4854-bd46-57817ee70d4c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79764b2-8b21-48a6-9a6d-4e99397310c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8d45cc-c9ee-4e96-9672-0107439329f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc327a2-0e7d-43b4-a38f-e1b98de8dc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dedff9b-a8ae-4de3-9665-9efcfc9be5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213e11c3-9501-4b7c-8a31-a1a081fab8a2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156b4214-4263-470e-956e-a5c5cbf70798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36517a5b-2af6-4406-8e8c-232f0537b1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdda5007-22ce-4100-b177-7b9f239448ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "459db2d3-1524-424a-8139-021aa0685382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e850c3-963b-461f-a6e4-212cf45b0203",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4220e884-51fa-41fc-8af0-7f5b66a6179c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e3297b-79bd-4de4-8ec5-410bb97f0715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce23cb40-6e10-4192-900e-cd74b86812bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c9f3b77-8732-442c-88f4-38d230df3b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9817257c-4f33-47cb-b765-e789d858eac5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f03de38-10e3-41f7-8b32-c724db5bc52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f0ab1d-0a33-4769-8142-e137695cec14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968b1edf-95ad-466e-bc1e-6a170c9f4eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff3e5cbd-44d8-420a-9840-216010e789d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d913a9d-c9de-4311-bea9-5e83eb3efe30",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccea045-17a9-4aa1-b86a-71a91752068e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e16abe-0a01-4e22-9e78-c09ed27e5434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cbda6d-188d-4877-9e46-0a6c1b218b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec9727da-bcf9-4f8c-948f-0448c1c5fee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1354d702-5fff-4939-9af5-17906b9c12d5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbbc7d0-6b79-4a89-a5d1-cc77046836b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7524de58-037b-4e4c-810d-e6c376acf688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862f441b-3da5-4b8a-b709-15fc65889756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4db52834-cf1a-4a6c-9cc7-96cd838ef778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac948b8-7494-42fe-8a35-332016efaba2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79615722-108e-4a2b-b996-7901cda718d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6973346a-1cf6-42b8-9c49-379f7a4ce3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaccbdd-02ea-4c9b-bf01-d77e757e82c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dfe086c-78af-4421-9429-329a55a53e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77838bf5-90f6-4b54-a0d2-2b8df0f17101",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1784983-e8a5-4d8b-82af-d58a24dca0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d666e184-5d2a-4277-86ee-fbd7211b5150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012b1eff-711a-4789-962c-91d30fbf8e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc316069-3de4-4c70-9648-692ddf324a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7cf8ff-81c2-4c0d-ae16-798bb0c4b1cc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae892fd-8172-49cc-b234-51d08ba03371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5008d21-9f67-494b-8024-dcf8426b4284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb8a0e3-43ee-4732-bd0a-0f2ccd0d2616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f00d473-7028-4b16-8c03-3d1375ba0f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d121e8c3-5676-4473-89d7-69a96ec314dc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e452b01-b0be-404c-8be7-74e550c6a11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87d03e6-2b5d-4738-9387-810ae8db845c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c28724-f572-4343-9a46-04f0d3b4baf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9416001-a38d-40d0-8138-d354f96d8a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eb9a6d-0288-4990-9c16-f63b82312657",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b81659d-88d7-48d5-b3a5-7ceeec3100ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59b29db-9c9b-48ee-b3f2-eda20899bc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456555a2-3bdc-4dbe-9745-2885c7220344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bbb4149-3c80-4e22-9a65-e0a7c18653b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490fae79-e932-466d-8460-0d8c572e77fd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f5f0d3-962d-4166-b913-7438369558cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c205dc-5e74-4830-b10a-9e29a3d29394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae06724d-a42e-453a-afde-56482e92e2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fa13843-6076-44c1-9023-e250ee054de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41136464-5dbd-410f-b42f-7879b640ed80",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e647cb7c-1e2c-4f20-b585-87acf0fd08a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9aa7308-d1d3-429a-9c86-713b61eaaa39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51073ad-705c-4d5a-8c92-2dd1ca006ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d73dcdd6-5315-47d3-a3ba-8cea45f50dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ccdf3a-1099-4d00-9b62-f9c13786d92e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874c0dfc-f8df-447c-ac4f-1be158710aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d7377f-e25d-4963-8900-919a5db86d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ea839a-4023-452b-8f7e-446e5378f682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "901a4a0d-69e9-4cb9-90e5-54802db1aa51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d0562d-5f4e-4694-ad9b-ca3d41b82842",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658896e5-d6f0-42c0-8064-ede3ac14a116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936a7903-a523-4de6-876c-858ef25230a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c3bcce-c091-4908-8a09-d904d8e86199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a10a545-52a1-4ef7-b2a8-ffb616c4467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4b1aee-74b7-4479-a7fb-a6ee4ec05638",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a27571b-e8a0-403d-ac6d-15776ae25ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46be176c-bdb2-48e0-9a5e-cc096ab7e965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2a5249-f2b7-4396-8a00-109fedc67546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7af36c-2e6f-4398-8f76-49b4f69e518f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150ee7ab-41c0-44da-85ad-cfea7ed28926",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907c4949-f6cc-4d3c-8e11-d9716028bd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2aaa07f-623d-4305-a3b4-9eabd16e658f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd502d3a-cebf-4a99-a980-6bc49586ff78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "857c5d44-82bd-458d-8e59-ff8b97a7e369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89328786-ec09-4adc-88c6-2b4a0f1e0ea3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cf1a61-2163-41b7-918e-6971f8a77f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b9f7cf-5dce-4702-a37e-4de228146101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407dee4b-ada3-4765-9fc3-5c2aac93d1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d51dd9-9a45-4707-b564-b11fc9481bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a176d744-edd1-479d-9cc3-152370b57164",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cd6d60-146e-4ebc-a364-85e98b3ac3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4807e1c1-76f0-405c-a2de-d96285825700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c878ed45-d11b-499a-aca7-0432eafb3cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "048a8d91-9801-4276-9966-88638dd39c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8158d15-f83d-470d-afd3-61d1ab837ca6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26ddec7-c626-436c-8e16-dfd0c8479475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4401eed2-d971-4c29-a730-1a0efb370bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2044908b-ccce-4f74-8264-2f0a1538a29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c441e9a5-c71d-456f-8c0a-e200b8bda5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba4918f-d68f-4e28-b496-be26eb15f1e3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961ee8ee-1a13-4b03-b36b-9457d6db2188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dae497-a839-44fb-9f21-c0c0e58c44a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816a88e6-4e9b-466a-834c-13dcdeaf3733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced7c65f-f008-458e-a66e-98c5c80f8d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18da9182-a438-4aa6-a3e6-cc787b188c31",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef19b14d-95b8-44ab-ac62-ac7e3f86c29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5d27b3-5143-4c6c-9e7c-7df132370266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b46102-606d-4f2e-83a5-695811174ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc2b5fd-929a-4744-ad0d-c2064a19e87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e702a78-d72e-4bf8-bf59-e736afb00171",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a6556b-c46e-4c36-982e-931a12ce19ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab88f84-b93d-4aeb-965d-d56181f89c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d655e4c-8c08-4a63-a649-aed2fa19400a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa42962-0951-443a-8e95-c6e6554914ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087ec9fa-2296-4597-a8d2-4c3c9bc83c23",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50b1442-cb54-439e-95a8-91e0497593a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b8064b-f20f-4e18-b271-ee2ee565057f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac4ee62-1120-4d03-94a8-20156b51af04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "538530ef-ebf7-4aca-b4e8-f6fee7442e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d1e866-7428-465d-b7df-fbf64f4e21cd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d1810c-5e30-4a87-afab-92b4b0cf1161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253297c7-8369-400a-b72b-5ce828a201dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f99d0b-cac0-4095-b74a-e700953f54c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5a2fc3-86f0-426a-b1e0-596d7ac2351c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fdb975-cb31-44c5-a32b-e99b207a2c2a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95357f1b-f908-4bcd-af4b-40178dae61b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0635333-5f14-4206-b160-f73dfb9f1fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0df6622-910d-476a-b81c-05cd3568c66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de1e41b6-086e-4762-83b5-0145c1e88fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754ce776-a1d8-48f1-bd8b-d606e2df3fdf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa4fdcf-ee3f-4319-a6ff-1631f8a1e011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40257a24-36e4-40dc-8515-738f7c35de7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7db2dc3-b0be-4b24-875b-3b016738151a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3199a2-7adf-48b6-8b35-b7148b726c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aec2fd-c914-401b-bd4c-c2266c97a896",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1833d0d3-6774-4ea2-9e43-86dd54b08fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01b3cdc-9e35-4b9e-a0ac-d8a27c1369df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7b65da-27da-45e7-8515-08bea3405972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28836307-7d4a-4966-a10d-9f5767580ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dbdc27-058d-4510-b429-f703217b477f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b9d4a3-bcf1-43d3-af1e-2c5db8862366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b3f4d5-37a7-4137-821a-8f73a5ff21c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8474774-4534-4c5b-9301-8321850537cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "298f2e6f-8e62-4134-9a0d-72318d6ef032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd49a6ac-9f9e-44c4-9dde-e23f7ef44563",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e79c18f-3e51-4b2e-bce3-689860c597f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089678c3-163e-4980-b335-28c136d36cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11accc05-18e2-4b4f-863f-679005f29eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a04f54a0-af7c-4bce-8344-f6b73fdf06b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9842e1d0-38b0-4d8a-99e9-e52e7ff4098a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8563cb-2ec2-4c41-9d96-2e5d3d089e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc99c947-c6c5-4e85-af83-61f96ccf0feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dd355c-fc9d-412d-a30d-22333736ad81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bfb3ff-09ad-4309-89ea-bdeacf8cb525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc839d80-06c4-40f0-9194-b4de439820ec",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73728186-7870-467e-a82e-440dbb6a0bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858dd6d3-318b-4037-870d-100cfa6073f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1682a25a-cc20-4557-a565-9590e40b09c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "82a7dcc5-8cc7-47e5-9d1c-d09620217f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bc4d01-8f58-4067-b8f2-c5750a39b3ec",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fad9a9-3fdb-4dac-a5d0-57f8e5a903df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a460c8ab-6d0c-4ea4-a905-9fbb1dce7afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f029f1a-5054-4a17-ad62-1e3e7405ef6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd8ef4d-cfcd-4c90-8e54-29c14ac82364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d96c343-476f-4c17-8eeb-8bc69a102dd7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63042545-1265-450f-97f3-eca6f1707e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae018d5-3904-4f57-85c1-f7f37d47aa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b4c176-1ca9-4d3f-8b15-ce419463f8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e70b06e-005f-433c-aafd-74f2c0d172c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c904de34-33de-4d67-b24e-f18ebe620331",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652bbc26-8eb8-43de-b8f2-9b852d96d3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83f2dcd-8da5-4ef4-b6c3-f4fc9e3e48ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a252e7cc-492a-4bac-b203-746b7199187d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35aafd01-55f6-45e2-9d1d-fc5210a39cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04853a08-18ee-4d56-ad7c-f703da4702df",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cab68c-54f2-481e-b035-ee4a1d8fd74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33186780-dc60-487f-82be-61316583c7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08522f7-60be-4316-a137-985fae0c0030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe8451c-2453-42dd-8ee6-16c4b519e539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ad3935-2a46-4f21-b31c-13bd6dfb3064",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b071ad7-2798-45b8-829d-257683c1c75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73803852-2a8b-469d-9e10-16014f99055e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fa2db6-cdb8-4ea0-9126-8b2cd0d2c453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "690f5dc1-6f7f-4f10-b7c5-f18226dace65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd2ef36-ac73-45fb-8201-b4097fc2845e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb2f7f4-df6f-4a71-af30-22d405e773d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d448619-6d4d-421e-8393-3376f0cdf409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab89ef63-8a92-4a50-b575-f7ce4f54fcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a54a00aa-2da5-4ff8-afa9-f7ff7d7463d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af5fc98-8ddb-45b5-994b-13453a98a3af",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8508692d-a98f-4593-bf21-5ee769ff6131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b96513-0ae0-4a85-b2da-6bea425f3345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bffa77e-4ebf-4451-bfb9-59767e9a4166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2573a4ef-b9fe-42cf-a351-ba63643fe5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f010bfde-0ee4-4028-ab00-22c2c8d39845",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39912506-5ee4-46dd-a361-2b5e5d18ee74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d392f4d7-4eb9-40bd-a95b-59b1ee5366cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b5aec6-cd2e-4643-a998-27b950a485a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f88aacb4-47b8-45db-99e8-b5b44bbb3318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c32d5a6-614e-400c-9cc4-141054279bd1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e5a4d2-1048-4fae-8193-84cf82583ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5cbf76-5bb1-432f-93e8-b6dbb99e17b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba6e85b-4a3c-44e8-b5a0-cc4d307cd36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "91d83d05-cf8a-4ced-a6d9-ca27827276d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d474718d-eda1-472c-87f6-8f15645c490c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3582409d-e04a-46e0-8d84-a6765ef90b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049c9d9a-c9e0-4aa7-b70d-bc9ca577259e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cd26e5-9409-4dbb-8fac-2e750d619b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f161115d-b443-4763-81d0-cd9fbacbbf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7616bc2c-3c22-4244-96a7-9c420f7d69ec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3603e363-abbc-4948-8251-99cfeb88f887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6598dcb2-da26-4037-8b80-d0e2e057c30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c54e328-ad4c-4727-a796-6df183c7213b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c42fcf2e-a5dc-4f78-b246-c7f49e6d7fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98531c1b-f51e-4652-8536-4ae567f52790",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2dd444-b5c6-46e5-b7be-bd9176075096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c61bec-9154-4783-9f2c-79b7c1a332e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df772b9-3d95-4b26-a128-9580bab8bed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbb29ab-2fcd-496d-9bcc-42d53deaf256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fb0e4b-e043-47e4-a0c7-405bdd75037d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ff5d9d-1bb6-4861-9a8d-638c64ec0330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448d4ede-c767-491d-bd1d-f478c1ea048c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75ab1e2-9ead-44b9-b0cd-4b18c67ecd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24dbf815-a7f1-4e6c-a270-f8c63661ab74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a27e4c-25a8-4cae-954f-0135089855e5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b957c8-2f5f-4cf5-bee7-7f0e84c17b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34b665b-b758-4099-8f10-9265c0215340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57861e60-8f5d-4fac-a8de-692f8162d4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48b1b269-594e-4276-bd94-1c566c4f1083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4462b7-c1a2-4e27-86fa-38996f89fda2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc4c05b-bc4f-4405-8b5d-6d778d2d14ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cca9adb-4f8c-492a-9c44-28421fe88f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5589f49d-0933-4a47-89af-a7fa4aa5cde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "449f94ef-0270-4bfe-93d6-cfb0e315aeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2a9f51-efee-4fb2-a969-73d8118ce632",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdeab51-083b-4894-ab47-02be23f2f5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e780085c-2837-49c0-b1de-0e7dbb9780a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3628cab-5863-4ae2-902d-9df31fabe347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4951b334-929f-4828-a497-5bcdd70f7bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a4e1d1-06c3-40a1-8498-570cf881c068",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe45fe2-b6c2-4f4d-a30c-22750ce48824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f849ed4-ead6-407a-96fc-59160c59db53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5160f7d7-769e-4ba7-832f-caa89dbda1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aad5b1b-255f-4dc3-b49b-7c6ead043524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d337f628-b462-4eaf-84e0-162659051969",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce1617f-421b-4158-8df6-8cbd02703e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e04f1b-ccc6-4922-8a0e-981004cdfa8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96df1a28-e95b-4f55-bc7e-9bd576c5e9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1fb696-2180-4733-a6cc-90b79240b28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da15592-646c-4632-886d-43a5ffe69c5b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f7e508-ca33-479a-bd88-f24ef9a6ae5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9590dec0-e789-48ec-9a2f-8a0011d3ac1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685d27ee-812d-45a4-8dd7-193937244534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24b97e49-af18-4f95-9dda-0dcbdb21032c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ea3f97-98cc-4083-a091-f2b318c2a959",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da610233-1d67-4003-a996-03663f833115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee5ceec-b3c8-427a-838a-faa98b30370a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f09242a-9af1-44bb-a8bb-e339f293ad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef3121b-a668-4477-97d1-048346f5ab0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073374a5-7ed7-4d15-b20d-e3d26ce9fa60",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ace2974-0c36-442b-a585-71fbd27c812c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749bf605-6970-45be-9139-d9f601ae4daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83fccce-bd4b-4278-aa7d-4d941cf0f4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "291159ab-ed7e-4e6b-87df-94dc2f064db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8058d009-fd84-4111-9578-ad1474f5052c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622c360e-62bb-4ae2-a697-f5cfd4f10fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb28e45-af96-4e82-9efa-e0c8a1f6cfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed9e154-44da-4de5-ab51-4402f82230e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfca7d6-4deb-4226-9aad-3d686cbac30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfc9a45-ff79-4c00-b5e1-ddab0ae6fa5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64c7812-3088-4ec2-b31d-a1eb9087b987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d62918-e358-415a-9ee9-1fa0bced5e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6d0885-2d5d-4190-80b2-7d0fbbb5866f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7324b3bf-799a-45a5-8e15-bd46fe5d9863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632809bf-e20a-47a8-9677-e906a6e55561",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d613e019-5047-4a19-a58d-03053b5868fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2af7b0-6f65-45a5-bb40-8815f8fd5e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c98f432-be35-4d0e-a9b1-97f0f075b679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6077e75-01d4-4b3b-8525-da27249dec89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3389fd-1ede-4930-be49-3e93d052280e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca03113b-77e9-4c41-87f1-06ce1d2da440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4fb085-df00-43e3-8ae2-00d05188b54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750ce943-e792-4d5e-b3b1-c12b8ae71be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af0817fe-2927-43b0-888c-9faf6b4c78a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece76493-dbf5-419e-9386-1692a5a0a51c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8571570-0889-418b-9ee9-9633184d4222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1daa2540-65eb-414a-92d9-8cf68c0e95a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05816f82-e322-4811-b0c1-f6245c4f0e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "efa8eedb-ad05-4397-b4ba-35e05db7815d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6222e777-12aa-47bd-b9a3-5ed382f58cde",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48600ee-889d-41bc-bcb1-c052604a460c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d73d5dc-ff2c-4823-aad7-f9078023ce24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53529245-1001-4458-b684-bfd7b856a047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c935a04-8f23-4e8e-aad2-67549e9d06ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4d1f88-2322-4add-9ee8-c86d1c0e7499",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3db53b-8591-4718-9bfb-8d218d29f816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b68514c-e312-4c45-a68c-6d32888f5576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bb55d3-7e35-4592-a39e-65927d3ad229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef679784-13b3-495c-bce1-bc9a5bd7cac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68151734-0cd1-47c4-b81a-a169c0e96924",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52af5b39-b3b7-4f42-99bc-6f8379943de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7755cfbc-6300-48fa-b7af-3ee855ac8a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cbb214-14b8-4d58-9105-830e2167b204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1762f911-1376-4aa9-91ee-d906a48ff966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a4575a-7b03-4ead-9f58-082d036907cb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d53f88-0b9f-42d2-bfad-bb7e3f13e00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12003d9a-db5a-46c0-b465-67d8dd41217b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebcd908-f578-4ffa-ab5b-d049931d3f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db8dd923-1956-4180-ac4b-68f623f85830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3858fdda-39f5-4187-86a0-2387d04171a6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4be3e87-73d7-4e1a-a9dc-aa1caf2bfc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601d1141-0aaa-43b9-b84c-4fb9fe0ca285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ef58bb-917e-4b1e-8ea2-569108780ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59db606-1098-4b62-888c-bb4efaf2166c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d37a79-5691-4983-a2ab-518444f2acd7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb15af89-9f5e-4150-9593-ddb54cf517a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2a0fbf-6a8c-4849-9a74-948b9b876bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34301996-1da9-434e-8d98-719d7b9e50a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "520b01d9-2e24-4d35-b488-79846baa628f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb34bc42-828d-493f-8c3a-834927188276",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb1efea-01ff-4712-bf2e-00f9caae9e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7728c0-a21d-4148-9c03-03cfe3b44d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70b54f2-b7c9-4e7e-97eb-f73985153bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e33ecb1-7f05-44c6-bff7-39090de30942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855f7893-86c2-48f3-b1eb-5a611ccdda10",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aa9e1c-1a1d-463f-825d-476243468bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaca66cc-d124-4dec-bdf5-0495c32dbd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc56abc-6d1b-4cf0-a328-8196a24b9629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "891d2459-4050-4cdb-bfd8-501fdfecc3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121b967e-e432-44b2-b07a-10393701a12e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53813262-347d-4e99-90d7-c8bcb9bc0e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a3c3b7-62f7-4dd5-8e8e-b0d7c7aa9abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffda0199-033c-41df-8b47-ad42688dc776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bda9fa40-b4be-49d2-91f4-dacfaae08b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6b49d-7cba-481e-a8c4-c1ea192b1e30",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbef7e1-bf14-40fe-9748-08c2b4729593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bae34f4-9eab-4e94-961c-6445b25d79e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e2737c-84bd-4602-97c9-c1abacd83e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea6ff12-cdaf-4f0a-882e-2ce9f145751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328ce0cf-f58f-492d-9984-731821273041",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27373f8d-4b84-40ab-9f59-f49f4da28985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f9f62b-799e-4e68-a6e0-418fcfa33961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917ec206-be53-4024-b70f-276b838958d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95c09467-450a-40bb-83ef-43a3d17e6b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0521bea4-171d-4bba-ac65-d8e4763bcff4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f0bf59-162e-4569-b985-9d53349d3d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d63e977-110f-4ff9-8e16-0877aeefdb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5ddef7-0e2f-45e8-acc9-92361b3352b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed216ae0-4181-4be2-ae14-169f14f47210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb9d8f9-5ce8-4ea6-baec-fcb96f46389e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe56a9a-bc33-484d-90f7-c66cbbc788e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c742f597-eced-4b32-a4e8-a55c46b3d5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3558ed86-9a6f-455a-b2b0-12ac957e195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b28c26f4-9ca2-4278-a046-22011786aede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143841db-cb29-476a-ad3d-83c7b7746b50",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e811c7bb-f1ba-4dd4-9868-b3d62df0ea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305b7f27-4e89-4354-9837-3a5d5a5d9e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aead89-7afd-497b-9d39-2488d4a077e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbb99c4-5dab-4b1c-a538-586ad0f3ac4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed44d40-9729-42dc-b3f2-e671430242d1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1328333c-8e95-433a-b8a8-a166aeb60a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec55f20-0436-4336-825e-85b83d20b806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9601d2ea-8588-43b8-aa64-3b62fe87e75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abed36ca-fbc7-48d5-b963-c7790d3ebaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec1ef19-d688-4d00-a859-f966633f9fa9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53981f69-6c4e-4120-9a97-f65ed971fa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95062de2-e252-4534-90b0-85d38da1cb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb0abc1-3abb-4729-9814-cfb06f10aaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e6452c-d596-479b-bd74-14403ca46f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a2ec9b-7148-4594-8161-1650c94c42d1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf93492-dcb7-4793-9b07-253f305ce053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e595aa40-4968-42eb-a58f-6713065a4693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec98f691-d101-4c2f-a9bf-f35942f45560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7c4b67-1a28-408d-92fc-7dee22b092af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5895892e-e2f4-4f79-97ab-058df0587894",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1284a85a-e6fb-4f86-8684-4ee4082fd8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df56230a-51cd-43c5-a26b-407fdd833869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8864e5ef-df8d-4d6e-844c-8800fa8afe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7ce67f-db53-44e6-9649-a696b65131ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d13f71-e884-4fc4-83ee-7d68a80f4ba8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47d6179-a46e-428e-8780-3dfa6b6069a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e664af9b-c7a2-4d6a-9ca6-fd6183705b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757a5406-6470-494b-b3e7-ebbf34654a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f46238e-d593-4547-b7ce-5a42ea852da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94377769-a8db-47c3-ac2a-e9fb4d1fa4c7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921e0107-d37a-4b2c-877e-192b048cc538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7719487-724d-489b-b317-07f57198797a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a045c83-8875-4c83-860c-66af5f34e26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "345006e9-029d-49ee-8f6a-b379a07e91ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f07d8d-e293-4971-a0f0-9d4e26b16cd4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26be3c9-ed1c-42f0-9af6-a44a2a16165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf3aa2e-6f83-4a68-b616-3b4e673cdb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2758ec-6312-4fc6-bb44-efd6809b0d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "825d4df3-5843-4868-ba9a-b0eb572b94cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929a6630-d34e-4447-82b9-c337d37b5312",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb237e67-0a59-4c22-aa92-a5ce21cadd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36579f9-b9e2-458e-8843-e7d2fef33bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8865d67-cdf3-43bf-afce-318100f9a376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed33b87-08d9-4d71-b83f-952db3a9ccba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2484faf9-6deb-49e5-b79a-10268fdc55c4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56626401-2cda-44df-8f3c-ecdfe3003d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62512585-47eb-48ac-98ba-7bf9b6adc0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d775c0f-7235-44f9-8071-57c8be1f28ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d859e44-423f-47ad-9cc2-24b3683d17bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1eeabf-60b6-4161-9d7b-0f252d33f451",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b50182-9d93-4ecb-988b-de9f2c5958d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc21898-f677-4c4a-a83c-4c8fc5c907a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c90906-4fb6-4bd8-aaed-b83cec7ca149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1771020e-9d49-44cb-b1c3-5b79fa31b809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8008c1b9-5b97-436e-bc5e-5afb21a8d3d2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c77a3f-488a-45f9-9629-19d7370b9777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9188dd46-bad8-4375-ae8c-5d78d5a05cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404300bf-f03d-4d2c-93c6-59368a7c6541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ee630d-dddb-45dd-a41c-8f5a0407e07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9cc27b-3769-4857-9227-d4e4a2c45438",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6104db-d0b1-45c2-a149-1669f1d1f280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b2ca08-b405-431e-bd85-d02153eb6c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bedb3ed-329b-4c16-8dce-2ecd6beef7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "09828ce0-d391-4c16-bb6b-608ef03a35e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bb0aa1-8caa-406e-91ab-d8df4377355f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcfde0f-e70a-44ef-8cd5-614f176e6430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5913f5-1b52-4be2-89c2-f8c8876600f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a036e7f4-4d14-4902-88a2-8ce24e1b48f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b325799-db70-4898-a4ac-5c25d7083c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae40d74-f8f4-4c6d-8c5a-0e1d870b813d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4fef80-3ef1-417c-be2d-c4924da25e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd99099-434f-4bcc-9161-e52ab5530faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d56c19b-4aef-4f29-8b59-c7b40e979ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d787c2a-bbb5-468a-9e39-e660a9d435ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cad586-e4c5-4bf1-9496-f25b132758c7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d614563c-9597-471c-809a-48dffd612a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca653c7-790f-4884-a68e-433cbbb6c85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8884c4-176a-4acc-9464-f87dc83b9204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "897b55e5-b20d-4618-b9ac-583ec9ec75b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e780b98-0c0f-4b18-b3e7-8efdcc89db50",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09671bc9-672e-4ba9-8888-4b0902a35596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172e9959-d89a-4ed5-b62b-8a11d65c4f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40c2e7f-0762-48c0-9aa3-183f6e91b54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b040f2f-9fe2-49f3-94a8-088c517e27b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f4b0aa-173c-4772-ab64-2afc48cad3b4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3280b2-7a0a-497e-8a01-4ed2164a5df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "990901ad-60a3-4b3d-a297-3a67a959fd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacaffce-d069-44a5-827d-8422e2a680a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "77a41a70-c2c0-460d-ba9d-dc805ad3b944"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fd615bb-5e1b-4563-834f-d4a42f3c16cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0cacae62-0040-4c57-aad2-5f0bbf75612d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4991e5f0-60f9-45c1-a545-7caa07f570e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0505f324-4048-4755-9e2d-2370f28e5874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad28adea-90cf-4a29-813c-53d0d91f2989",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38d948da-6c4b-4090-b79c-dcf36d70ddc9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b7c6114-4c59-43c8-8f5d-dd7fb01877bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "256b36f6-de43-4e04-a5dc-c90b25f81fb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8940c83d-8c2a-4662-b901-e2c2ff8613e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b3e11eb-2b16-416c-a3d5-d18bd5345eb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b980a586-c495-46a0-8d0f-44a92e4d114b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2175a1af-b887-450e-945d-1d67a68d8df4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "49b7bad6-96ea-4ec9-b6ac-b6796b8646ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "900feceb-66d9-4a2d-85b9-3fdf57cde541"
                }
              }
            ]
          },
          {
            "id": "4a2a8811-22cf-489b-9649-eaf19c0e05e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4aec773a-6847-44a1-8240-8c804e5e70f9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ebcf6aa-0fe6-4903-9cdc-993828edf3fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52e778fd-c85a-42d1-a408-11e1a5fab0d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d4c312a-b9c0-4278-add7-1b107b1c84dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c93c5f31-a569-451f-8669-b5e3a4d8eda6"
                    }
                  }
                ]
              },
              {
                "id": "66cd4f36-97e5-4d90-9b85-2dd97228fe7a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "393130cf-7dbf-4847-b9a2-98bacffde9c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e22745bd-ec73-4e18-9708-63543daa938c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26578bc3-3ea6-4a1e-b0eb-0ebe1e1b376d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d3cbf1a-21af-4512-ba51-3c69fe1ca0bc"
                    }
                  }
                ]
              },
              {
                "id": "c5257e86-0a0d-4e96-b0ac-1249fe65c400",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d552268a-64ea-443b-8375-b18dcf820f4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5e16a2d-39dc-40dd-b586-d711465c5ead"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4206d2b9-7c38-4689-b948-ce669b455321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a22ffbb-9a63-43d4-817d-cd5949b5f76c"
                    }
                  }
                ]
              },
              {
                "id": "aefee918-eb69-4272-a443-126b7a37588c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "388ae980-f3fe-4028-87fc-7b642a8dab21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c94226f8-f6e3-4d14-888e-7d60c995dd67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17e510f6-3921-4438-bf77-743ba934f6a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c3c67504-c141-4d19-89c9-4585908d958a"
                    }
                  }
                ]
              },
              {
                "id": "fef96d9a-646a-4fda-ab0a-d093ec119d84",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1563f0e9-0660-45f5-b2dd-1d7b229b382a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4f8e406-f132-48af-9450-c8b810807199"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6dec4d3-684f-4488-b6f5-3179de55866c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b5b9d1a6-d713-477c-9f50-5fbd5ea60585"
                    }
                  }
                ]
              },
              {
                "id": "afbbcebf-5fb9-402e-a4da-7375d4a78119",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98b493da-7bde-485f-99b5-fc7d4b9bc552",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "feefda03-df4e-4af5-8b8d-46c061f5b06b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab14ed8f-0635-48cb-ad72-77a860449887",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8191364b-13ec-4246-85ad-b1ec1d0348c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5033769a-c4a1-4c2d-85f9-923aa250bf2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35ffe722-4124-49a7-9418-f89b06fbb624"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8b91c27-3cdc-49f3-80cd-371d310e4022",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60a071d0-4c3c-4d1f-8f69-46f187f8dd6f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "753f7d85-5b46-4ce8-91ba-b2ad32eb2afb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f91c8d4-1654-431a-b18b-5caa8cd492df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f87861ca-06fb-4055-bcc4-19adfe08d35d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58744341-8783-4343-9fd1-86711eb3a00e"
            }
          }
        ]
      },
      {
        "id": "6595e087-604c-43fd-9bc2-ae074f21b08a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1365be19-0038-466c-8857-75fc9a216973",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2a46fc4-a553-4dfb-a46b-9b018f317b0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b84e12b7-301e-44ba-a1c3-67ca0b1b6253",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b2cc7e-d579-400a-b913-c39128025456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73224206-afc0-4b94-8d58-2c6e76cd2dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7e3221-fec7-4bc0-8f3d-8a3fccb34e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "afc6b42c-db04-4e2f-88b2-6a4adef579f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25469f2-bed0-489d-9a83-23709770ab7c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3376b65e-fee3-490a-92b0-e1d9751109bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d957279d-6de4-4ff6-8664-d68acaf91016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30151a99-17da-484c-a915-a2e9e476db4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abbe1a01-5afb-491d-8178-5321521364f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e5c5c3-42d9-4d51-b169-4cfdb65bbd11",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c15aa9a-7cc0-46b5-824a-70c9b910402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855bf5b7-5aac-4bf1-a398-f98b5e1c0261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70fca04-ea98-4e39-9326-e9bb6a197dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1ed092-e040-4fd5-9285-7729f80f4f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a999c17-7d58-489c-831f-427b5c6de3f4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411c1dc0-5191-499b-b0e9-95c6ea40692b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e99f0f7-35b0-42a9-8da6-e08dcb03557a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5041ebe9-105c-4e39-9241-8697bd78dc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d7c9d9-d62c-4af6-995c-4994a3f98637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbe81ed-8abc-4013-8759-e21fef74b720",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03deff2-c513-4a6f-a3dd-340993352b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6803400a-f08c-4e60-8d1e-4907e569d114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c50ccdf-845c-42fb-91fe-f83aabb8ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "696db573-82f7-489d-8e33-bc5dabd3002f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f5c081-d757-4d16-bf53-f5f527207c9f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46871908-d6cb-4297-8276-2059f3b953a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af75783-c754-4311-b4b7-cc281c2786d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf5b61e-76e7-4f57-a8eb-125295dcdfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aadfcdc-11e6-4963-8406-c48869bc7e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9a235f-7805-4cc6-8246-cb0063e60290",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d9f85-4ff0-4637-a9c3-a6360fe1f68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676e1144-b8f1-4bce-bb11-aab827e098e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936995bf-74ab-48bb-a8dd-189fe9954d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7759b236-49a5-4eec-8b62-0f096774006a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda4bc6e-dae5-48ae-8e5b-a1dd7d3233d8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5a2ccb-7ff7-41a2-b8a1-6d7141ba6ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025c1162-b10c-4549-8aac-6b35e77f7fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7282cc-dd33-44cf-900d-8559d840d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5d235b-b32a-4e36-9c09-e6ae366d256c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5bb7b2-61c8-41e6-8df0-cb81f079e403",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5108af-7072-47db-8038-1b58f7f71c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87783d8c-ec83-4acf-b8dc-7351a97771cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef34ecf0-99e2-4438-9f59-53481822e3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de75e483-80b2-4d6c-8a17-551687eb14cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1422626f-1d47-4ad6-8dab-b1c8c77bce27",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27dc058-9d79-4bae-bba4-213f18cc3336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac77442-90b9-4825-94ae-842f9593f8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb2598d-813d-49e9-99fd-05c2e790f046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d41ee86f-7d97-4cd5-87d6-23927f95bc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9c5ae8-ea46-4ca1-89d2-e50949fe592d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32875a8c-268a-4ce0-a6b9-4adaa2375208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b29ff6-18f9-45a6-8136-f8876222eb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8fbd42-b349-48df-8855-78c7336def0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1e82d776-e6b1-4246-822c-46a0c4afe2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0f433c-1d48-4b24-855f-49389ce086c8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb07d395-2251-4e61-9de6-8f99ad5e5eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5406a8-642b-4243-9f85-8a88a954972a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40807dde-e3d4-4d0a-842a-fed2f4490057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "570ce9f5-e83f-4a5b-97c4-be4ce2447409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05a8f5f-32bd-4fe5-abd1-fe8b93ba50fa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d859a294-2986-4318-b13d-2f59a30332dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95095a90-9b67-4349-a523-a71a207c30d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546c50e8-c990-463c-94bb-a5a8f8f2abb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7a1ab9-d89e-4082-99eb-8bc26b85b2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b562a5d5-782c-44ea-b62f-6b4d9b0ca2cc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ed0672-f2b0-46c0-a221-22268cdcaba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b56a33-ee4d-4d4e-941d-b55b68558018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60bfc2b-141f-4501-8cea-dd769e5faa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbc6069-e563-46bb-8be1-b28246f88ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c61915c-3f78-42d8-b7fa-51fee10ce835",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6952711e-29c9-487e-9840-0c330bae18ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b3b69e-3466-4633-a645-246e1e160587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba16ea68-a965-46e7-9ad1-ae358df7a561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "df214fde-ae70-4b6e-8a4b-b98d0a979c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530ed8d8-3e25-48e9-bdaa-8c9abc91d3da",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4946cf36-567c-400f-977c-59bcc68978a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1fd01d-1180-4118-89f4-b1c14c8f4b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93cb8bc-a2cc-4197-a8de-af5c0f3f6fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9659d1-ea39-4479-8ca6-478f3a3b5cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4283cec3-1fc2-49c2-ac50-55188c801182",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de24fd07-f5cd-4cb1-bc80-6abbf1e923b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5562c4-f049-422e-b4d1-ec155bf05995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d40561-a0a8-4fa9-a38a-2fd88b6a6ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "288d2a09-47c3-41ba-b6f6-53afbd9b1d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078d2179-a155-44fc-a843-53ba4e915df2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491a2a43-34dd-4030-9e4d-c16a1d11d65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a879b19-e797-4dd1-a3d9-ac77fe140c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7585435c-a770-4e7a-9fee-70247c5c263a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbf8c3f-85a9-489d-98e3-a245da0f8e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325ef690-c2a8-49c0-a4cd-5c510a7a51cd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18db95d-63d5-40d7-bf8d-f6004350e661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f05ccd-6b0c-4436-9c3a-920ca329fa99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7e5add-e282-499b-90f3-a5398b19774d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aced70a0-9568-4e59-a1c7-0e81fa122a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88375c8-4e41-4f8e-9bff-4a25a7ee6af6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faa2ddd-8a52-4fbc-9db5-913ebbeb0f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842f6059-d810-48eb-85d3-27e7b775c3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6874c1ed-2be4-48df-9b96-52ab2ca9efe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "440bb2a8-ca24-41c4-837f-ca40eb9dc11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a9693b-1421-4a58-9dbe-003c75482ae7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bed7fd9-e20a-473d-aaf7-01af121e578a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3450db03-2fc2-4d8c-a6f6-424786754be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2506b3-1f00-4921-9b28-88e9172487da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "653dd120-f191-4b9a-a2f2-ef8b70e14871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7aab8ae-5bbb-4a48-80bf-8d250376e47d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ce7ea4-b507-439c-ba8d-4a94c3258264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf8763e-0fac-42ab-b8ab-a538921db6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570685fe-8ad6-447d-bead-43a2c370df9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab55f96a-e40d-4006-b28c-42fca81a325c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2a4fb7-a791-4492-9400-79fea61b4be6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38839050-eb83-4951-a7b3-5e7bcb8ab9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82fabf5-8900-481f-96f7-bd1c104431a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18459292-25ea-4e2e-a8e8-1febfb5c35ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff25b6be-6ba1-4101-b5d2-2367ec94089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9beb6296-d19c-44ab-8506-c67708de64ea",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d314e0-b961-4f4f-9752-6a5c88736f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ff301c-df2b-40c6-8c6b-1f95b29b7dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597e3811-a5b3-4f13-b47f-af8fc5145dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2256ded-fc24-467a-a561-92de0f2f46aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cfb426-0bb0-442a-954f-0405467330df",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e46fd6-defb-45da-b8e5-9dd43431c169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074bb3fc-d8cf-4ef2-91f0-3bfc1ca356c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7985f0f-0420-47f1-8b0c-1af7b0deb537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "865bfbb5-1170-44db-a22e-6b0e72d7fc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69c481d-edaf-4907-98a2-834bd89db57a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4796b2-e012-47fe-bd18-609d7106baa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b930b020-81c7-4658-9607-64ef013456ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86efd5a1-6baf-4469-9be4-e09d5f96b8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35eca488-a9bd-4e28-b443-a6f4b6fee823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f377d45b-67e9-4268-bec9-78dd166a04bb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a403f1f4-8d81-4b2b-88a0-91345ab51187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627e72e7-eeb4-45e0-b487-04ee9d77f586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddeb3cc9-52d7-45b2-96cc-14e28e602b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc816336-3e45-4084-b633-3f79d4af312c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83008f0f-5e0f-4f33-bb26-093b03376b29",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673f9355-892e-42fc-bf90-096355db6160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60751365-791f-43f8-adab-9ca728b2e181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5515fdf6-1eb4-431f-8ffc-6fa56062e457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "754b40dc-963e-43cb-aaaa-bbf897a26a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f015e502-b1ae-418d-b457-b688556c225b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f8f66f-e3ff-47e6-b92e-d7af56d4830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746314b3-0ebe-4c36-bcbb-1a07fc20cc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3146a3-6729-49ce-98d6-d32e93fb8d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc67024c-1135-42b3-b60e-8fd4cb6dadd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3d466e-66c1-449f-a671-37d8c38e2728",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5821276-c1bd-4a5b-8803-d3d17933cde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a73035-2cf2-43b5-ab39-5900b36609f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27cf405-91df-47ed-a97e-2a3016b19b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5725e69-94f6-48eb-9a70-e19608d6a172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b916332-954a-4c32-909b-abdf895f1cb9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9bef20-8a0f-4fbe-85dd-9f6f5c8e85b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50b8919-a745-4023-be3b-58b6c5040c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc09a0d-ea0b-4868-859c-e74e90c57ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "099d5255-a490-4093-b616-acf139e2a4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78404cba-d31a-46f2-b3ab-83731df08efd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee2b2f2-62c6-49c5-b789-8e9a9c4376e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e362cd-bbbd-4245-8ab4-1fbec23fb8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcbbd18-a20d-460a-bf97-f2ae95c9949a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b43013-c5f7-438b-acc7-acd24fd94d51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "845b365d-7ab9-4606-8023-f76f2e6e6039",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6a1e168-98b3-40c4-8894-4b2dd080ec09",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5ecf83-7e75-4cd6-ad2d-8643d2970957",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "120e21b3-9bee-4644-ad33-a03336ec9c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc96453-fe4a-44b9-b670-4ff8827636b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a22457e6-b2be-4c01-a233-e6998ed4bf24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71ec8e78-08b0-4c6f-b3e0-1cd4b748037d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19d40bc4-1837-4f16-bb77-8d12345d4870"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38309b7c-7252-4bcd-bf22-e4af03e2c886",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eb76eb2-fd6d-4f69-9b03-c74edd6d6bfd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be29bc26-638e-48eb-a0ac-217548ea1e4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de1696d7-2a63-4388-9ae7-f32487b8a6fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b24a425-a7de-45ea-b504-c4b5c11db558",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b041cdb-4fa0-49c5-a7d3-faa2fe108b7e"
            }
          }
        ]
      },
      {
        "id": "37c3c2ca-0f5d-41f0-9530-35a20224422f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6383d698-6cab-4125-ba0b-a123b29a5373",
            "name": "Negative Testing",
            "item": [
              {
                "id": "913b22a8-89af-4ebc-8c63-7044d19ee82e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "808802d3-c8b4-4ddb-944d-55ad833de5fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d341f11-dbd4-45b2-ac7f-6e407757cd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b891b986-3a07-499f-896b-57ba3793cd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c68429-d46e-4dab-b245-b911ee8eef83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5156c5-78d6-4cca-bcfb-6315073b3122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bae127-6be5-47ee-b6ed-1f34b44e77b9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf48a88-9696-436d-b632-cdc3175e159f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce77bac5-bd91-40f5-980d-7aa82ac0ceb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c1d219-c84d-47e3-8179-b3a313b65c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d065da35-6cd2-48e9-beb0-50da18c2f9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae98e1c-1b25-4ec5-9d55-b55bf9eda50f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac7465b-83b0-42fb-9a1e-43d53030f101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760036fc-c20a-49af-9f92-e6ffc93942eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3986ff3-d9c4-4097-a6f2-e1de3b822c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33dc30dc-cf9b-4fec-adf0-d835d36e9cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3b3d3c-faab-4f49-89af-b7697b776fd1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a613309-d6ca-4bea-ab9d-9525ced5ecbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c751ef-d237-49b8-8191-b0fad98b0cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea413a6-966a-4651-a9b0-1925e062dcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "095cd155-796f-4b0a-bfab-a4bc1306ecaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66418cda-aa3f-4ecb-b4cc-8b7822421b4a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd8da4-e3e9-4925-85be-f2769a8666bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7e1fbd-2401-444a-88ef-eec51b1801b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddff9d05-bda7-447f-acf4-4fccf2bf6130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aae96a1-2095-42b1-914e-6b51b28ccc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e295c7-bba7-4c23-a9f4-5582d64efee3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1192fce8-9e12-4264-829a-54ee12c66f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb81043-2c37-472a-b82c-d156ca903acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d314f0c3-05a5-4e61-88b0-56b3043e6762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf7d76e-e87d-4a48-b22b-ed6bdae0cb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26f17ef-5e2d-4faf-a5bd-eb168aed9b37",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d6a7bd-b621-4914-aa28-4e3bb0af439c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9026ed0b-336d-443e-9d28-e290548bf60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998fd442-246f-4c4a-b8ab-8d0652713af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e748caf1-6726-4dc2-ac13-13888d63e1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22a56d2-7312-4d5a-9f40-0b1b1ff1fb68",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c84755-3c46-4143-8f7b-5f2c282acb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11a5dcb-16ae-4ae5-9b7e-34437136a9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b07912-2780-4504-9d8e-e18e35a6a9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b70fbf-24b5-477e-9eec-49412e82c2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a881cc5-a77d-4258-bb5f-30ecc67b9809",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc1e6bf-a867-47ba-8d3b-31fcf6556018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bb0989-9a2a-4b6d-b20e-4fed86754bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db73891c-8f81-4931-9951-e3c080aad6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26acc197-f980-4f32-b99d-a601b16bee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d9a352-4039-4260-8960-81b52f5ee9fb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4481c492-c347-41e9-9ecc-dade9ba4d670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79247a4-1979-43b9-81a7-6a27a45339da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55499b4d-d023-458b-855f-d7c774498e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df04d14a-36dd-44e3-a6d5-37e05942f5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f46ea0-cada-4b43-b9c8-f9baabce97be",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afb791c-3626-4998-a406-6cb38dfeb506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c8d15d-2551-493c-85fc-0e542f70b613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db67997c-da5f-47df-b8a5-65881b6c86d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3b071543-9439-42ad-a798-0682e455a3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722cec03-9b0f-4da8-856c-ce3e34429200",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cee2093-46c7-42d2-b7e9-df736a16ca2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0380d77e-6fd1-44ba-a921-3f788c17414d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1ab187-d774-432b-b4a5-25098beaf836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "728d4bfb-7ae7-4033-93d0-e597aae59cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa00feb-6480-40c9-b142-b9f1d70728bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2327a3e-aa75-4b86-ac85-e25768921305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9eab83d-950e-47ca-8692-90b816ac36ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1ac4f2-c390-4b9d-9399-8dcb953a7434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "baed431f-18c8-4677-8b25-ab601015cc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98e6af1-1ee1-4719-902d-4ce3a906f1a4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2972dbb7-88c6-43c7-b9fe-999bdd2f6413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b402695-d6d8-444a-902b-f50b688e9b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2094a221-4b01-4cb3-8402-2d3884458d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd039683-9fad-47a6-a431-0affe5118ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87510935-be66-4728-b370-c3f298626da7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd14c9a0-faf2-4f5c-b73f-69c89e076ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080f306a-a997-4013-bf9c-a91611116b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de722472-ed30-4b25-b2aa-aa499bfe6056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f9c9e1-ef4b-43e7-9f33-16344629b27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdb7c3e-5dbc-4dd2-916d-47f0faaef171",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62917e0d-6c8c-4657-b67f-8e7b3cf4608e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59faa6f9-c3a9-42c7-938f-fdd0e5eb06e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0903d9-b9b5-438b-b2bf-1d8d202ce9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98610b4-1909-417a-a142-dc43622a5177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dcfbf3-e103-42e1-9a72-aafae33bd08e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd668ca-53dd-46b4-bd3c-b91cfd74c370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f842c36e-2563-4820-ac40-d445b44c7a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59d74e8-6913-474f-bb3c-203891f1ba96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d80973-607a-46d5-b590-e4dd563f248a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e02545-426d-4bbe-9534-d2a4ea110da5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432f339e-ac40-48d9-8912-272cb249c5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a136c61-e134-4eed-b4b9-3f5320523e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795ceb53-ced6-41b9-aef5-55289429679c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bfd652-3467-436f-890a-b5af3bbdbe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4ff845-ce4a-4bd1-98a5-95dd6fa4f4fe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3125a0ff-7f3d-4c4b-8a6f-7a133ba7d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201aff8b-1280-4e7b-aea8-ff58163e14a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a3f66a-9cb9-4d63-9bff-9bb8f35a35bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a972d9e1-2418-47e2-a902-c0067692d0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbef9c03-201e-41f8-850a-701dc3e45519",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7a3f5c-bc3b-4080-82c9-1fb572a1535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85279c50-eafa-4869-87fe-acce71bb4ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e61059-32a7-4e0a-b668-5e374147f949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5cfb3c-826b-4d35-9313-e23bdf733879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3feaeb-1f63-4b7e-9b29-9d8af42c8c0b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace05e8e-1f10-49f1-9f08-c19fd8fa1fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d724e6ed-9efa-4555-803c-e027d57a2cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4baef53-1854-47f8-9f33-c87127d2d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c64219-63ae-4de8-8aeb-74ccf8f15fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c466481-c765-425d-b8bc-fd69a834c43c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087d0339-7b03-4ce1-a94c-275ea945e54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f2049c-13eb-455c-8134-3ebb679852bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2f4a2c-fd13-4526-ba4c-e5abd5ecba8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37278192-3f14-4caa-9823-4c327e5ecf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cad0412-744f-4190-a42b-f38ef362970f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797cdd9b-a581-4a7d-9a37-d3fed85e6f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0c5f60-f15a-4b78-a598-d992bb3ec075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e8a4eb-af22-4610-b4cf-ac4bee038405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "561d7fe5-4fde-4ebb-b3e9-36618f09415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5388d73-267b-4cd4-8506-425cef490905",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbc2456-04b8-46e6-bf24-ad09eb7f1621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475318fc-a4a1-4a12-8bda-9ec83c747bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92e1e6d-fe9d-4bd8-8d70-813e4ed8f129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54cce07a-e5d5-4bfa-9be4-611b3b6d8ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07da361c-1203-4bd9-b938-29833a57debb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c23bf5-28d7-43ee-b397-52499cf4284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4f05df-63f1-4737-a883-275721b628ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eacf4be-1275-41f0-a3de-70e6a8e9d148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "944dec00-4655-40fe-95cd-600cb505716f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5954bf8e-f82a-4615-badb-f612723bd773",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d69af6-87fd-4a57-8488-2c8fc22c68e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c091f0-36d0-43cc-9cfe-7a00bea18c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1c0766-cdbd-4e61-9b38-89d5a9e6d48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d0c823-90df-484c-8786-8a2a97ef7ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f4954b-b8b7-4623-8157-d31c7ffa7e17",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3248ff15-5fbb-482a-8cd6-82f265ada9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af2dc82-6908-4a28-9919-ff225652d9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac4a45f-89f8-4801-8671-c92d600492b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d26726-ebc0-4784-bdbc-4f1c156751ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41cd90e-6e10-4790-98af-15b436aaf4e8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f1bc05-769c-4dbd-bb05-56567c27da5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f2c15f-4218-47ed-807f-182110785541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02543280-eedc-4d6c-a221-87d1249f8366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad388b8-cc75-4c47-a34f-0fa3e7629733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb7817e-1613-49f6-a414-fcb820822539",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80ae2ea-86dd-476d-b760-470e4f4304ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5040de6c-3d37-4264-bd7c-56a85943d67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412b3aa5-7e14-4320-9c73-e91343ac7249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b644e527-1200-4289-aa7b-587894c81635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ad5ec2-0100-4dbc-b1a2-e6f7e4129b61",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014fb267-323e-462e-84aa-8a74499fb0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637dcafa-658c-42e5-be11-7f67bafc0549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22838eb8-69c5-48e7-b34c-e49443d20724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c86c14-1305-4eae-b92e-b36f76b17ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501b8664-2611-47ae-9af7-a529ff9cb802",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8507f525-6ce8-4146-a8ac-6f7bdd689855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b80944-fe2e-46eb-b481-8ce9fa2df37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a9bfc5-0360-4e9f-a185-e18ba2261a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e84246-3edd-4c87-aabd-0c1eeacd8c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44a76d7-a013-437a-a648-a5360551f308",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfd85f1-59b3-4b52-8868-082eb76a795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c70ae2-2a78-4b09-b576-a28f1d5b691c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88880a4e-7166-48b3-8f5d-fdf20361ca07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8d76b5-3108-43bd-abf8-4bfec48865ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff07ac2-5b92-48b0-b2a7-7975d3fda0be",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f4bfae-a11a-43df-aa7b-dc385cff5bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb689fb-3508-4b94-aef9-f1147ab92339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23166265-2f46-4e42-8745-6f5d2255924c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "987b8458-20fc-4177-863e-e61f10fc8b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b929f0-8280-49bf-8b2f-e66361d7e0be",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131e34bd-c76a-4514-9ee8-ff5f1c4f5595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e214b6b-4924-475b-8501-ab836ef57cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58d350d-fdc6-48a4-aed8-d1806a059d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "227e69f2-45a6-46d1-9ad5-7e6f3addc35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34f4da9-b643-4480-96ec-2546b0871959",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0579b102-be5c-4b3f-b1dc-c2d1a5d12877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3ac942-fe39-4a0a-b11c-c93c7cc27dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290b0152-16b9-4c64-bae6-18c069b0f6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bac8727-b783-4476-a45c-c00389e335f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed9c9d2-5a90-403c-b2dc-d6a9be72eb57",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a22e213-b164-4e5d-80f3-7cd82b4a99c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565ce6e8-aa76-4c14-96c5-2e3c3508e515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c95490-b965-48dd-90f0-017ac763d77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "056c0c7d-ff77-467a-bf13-fab0d662b875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59ab162-1b7f-494b-8e5c-bb8d1661e988",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627deef9-0179-4680-8f31-e6b83522b88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd31b35a-716f-4df7-9946-5e091a9dd151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f158b2fc-3e3f-4dfa-a858-3023e037cffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf2fc5d-11c8-4f01-938e-001941b1b160"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b0ed39a-4ecd-4bf8-a812-b730d38784c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ed19bfc-56be-4a06-9718-3ce04cac820f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbc8844-ed95-4638-9f3a-0a4089f355b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "985ece90-655e-4251-98c9-d256d009fd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360f81dd-144c-4262-b7ab-9c24eb22724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b8246ac-9454-4396-8263-bab30587a46a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcdf8605-509b-4753-a24e-078de2c63600",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36b21c7e-8a1c-4571-ac25-cfd35427c562"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a0cd706-5e8d-404d-9bf8-14fddcc7ce4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02b79474-b549-4349-9442-82caa61d6697"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ea1de14-419a-4cd1-9fb0-1843fd964179",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42a6faeb-18ad-4e48-ae2a-78774fec0857"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24c2d997-5de2-4258-b6a6-01d10e561cb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20ad4c4c-7f13-4a07-b01e-416e84aa043f"
            }
          }
        ]
      },
      {
        "id": "72b30108-3227-4cc0-bb57-04b0fd88de6f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a6115f3f-58bd-43e9-b244-6808e97bb655",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2de633c4-d6fc-4c84-8da5-51fd294b4997",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46f3d0b4-4e31-4f5f-ad60-626727383ae6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be29ecb8-8cbc-4390-b90e-f2e3910cd555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32985c9b-ba48-4fb6-a8c4-3fda9b13790b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b88e47-afb2-44f9-bf4d-f451e9818305",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdb5d39-2738-4825-aac7-52d2ed866d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177f7379-3305-4022-8db2-c256e92f26f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89d5d15-72c5-4d30-a638-89cd27e03af0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12887b45-2be3-43b8-90b2-0986e9f23487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93879c1f-1c5f-4c53-9efa-0fdb230fc463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34731439-45d3-4ccf-821e-ada7c8069025",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd7cce8-ba4a-43fc-9c7f-7c632b6a5dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658684a3-2967-48d9-9958-980555a920c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80fd32c-0477-457e-b7db-05a08466dc48",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf57bf92-2208-4efb-92f3-a20bdedee804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdcc1482-16fa-4699-8c6a-41478f3ce1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1a9a08-c240-4d1b-987d-bda7a28aa185",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0125365d-f55a-4a06-ba7d-e338ecc0baaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846b907d-65c8-4d2c-8c59-b2169a46f1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4305cbd4-7fe1-4157-b7a5-529d8984f384",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b6e74f-8af7-4d60-be00-cb22d3b96091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441af798-5a7f-4054-bc68-dc97a74398a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df37b13e-8a95-492d-bb0f-7400a429821c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48564a97-ab11-4b1f-8b18-35d2d81f3379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78a7fa8-9bf3-4cea-8cc7-70511aff9d4a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a204e3a-d4e1-4676-929e-d850bcc7718c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3defc7f7-fa56-4c7d-bbd5-003fc5222bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70a881a-f857-4847-bc65-33fd59a28170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf88fb6-d646-41fc-a86f-c8a00151c1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f17eb7a-ee7e-443b-994e-19c2c9e6c129",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7232753-5b20-4ef6-9dab-1171e4475d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e355f85-d767-4739-b44a-caf97860ecfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd8802c-c14e-4be4-a892-e6111b66d1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ed5d96-bdd6-4a9c-8725-311bf658a914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcc2785-468a-4f1b-bbaf-81afa9967881",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba755fd6-4a55-4340-b1e2-825b96fbabf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da81cd55-3bef-4eee-bd67-1ca67adbd56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6e3b67-cea8-45d3-b7c7-1ed0241a0d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e9e91e-b98f-4920-bf92-42f75401571e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3b5173-48e3-4ed5-9c38-bcfda1c2027b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf9b032-cb40-45e0-a91f-87526074b56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba207a4-0c75-4adf-b798-a7429fe4bb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3bd71d-c21e-4348-96bd-6165031f60b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2f8174-ec51-45a6-a769-58bcd3175e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa4f6c7-7929-4725-b1a7-4b4acdcf7b1c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee919cce-bb3d-48a2-b88a-327fe7285ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0e8bd1-fddf-4e8a-87d8-db9076ee664c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a465670a-64ab-44df-83ef-ed475e5c8b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdde630b-51ec-4741-995b-98d2a2937bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b653d66f-1d80-4caa-8542-790914c8cc91",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee0d0fc-6397-455c-9018-94e2c22a6cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493f26f6-e917-4681-bbda-a086395b05f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8534d5b5-83d1-4f8d-a260-d1070d9a0ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdbaedc-151e-4630-96b2-bcc2d480acb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbfaeaa-cb21-4afc-bbce-9e6414d8ac6d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157b6486-8e2b-48de-8569-5d51afb6f6bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "374fc4f0-b539-4ac4-9e84-c2886ccf0b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5301a20-757f-42df-ac87-40ff53cb8533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44508f4a-017d-4efe-a9eb-43b97371c977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6976e619-f4a7-4b21-85e2-cbc925173573",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7ad8bd-eb3d-45af-a432-cd80da5e255f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1bf786a-6e7e-4eac-8716-1c4eba54e273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1060e9d2-0906-409c-a15f-9aeea5ed4f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d692337c-8585-4d3d-b9a1-ff312c27ae75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c07a497-4f30-42bd-8b8d-a1322c1554fb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e0c21c-b900-4a9e-a7f2-2b0b7ba31ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31da0043-134b-4236-9d70-33e391095aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d707c2a8-a8ad-47b8-9fec-e49c6fe621b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d858614-0513-4717-8e16-bef3793f341f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69226ca-25be-44f1-b4d7-fb97e3720cb1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d395cd93-542a-4040-a123-cb297cb67be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a6d39d-ecd3-449a-8c0d-f727b0b691b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2a5dce-f350-4af7-9c59-aa95bc0df792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651fa023-db86-46ee-9a44-8e0082c4f5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da035cbc-a4f5-48e7-895f-f496f61795a9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc9a190-11db-4113-ad8f-ac26ddfa7299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c64c321-9607-4c2f-94d2-1c47ddfaef80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268251a0-99d6-42a1-80f1-9945214793e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b085d9-697b-4cd4-b93a-f3313c5cffac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c263dc3-1e8e-4069-a578-d40ca5b38324",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8396b736-3729-43b4-84c4-27fdffcf5daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2e2fa3-c8cf-41bf-a77c-16135e46d6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c9cac8-8558-4e30-8075-dd1c07f29390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337952c9-cc3c-457a-9852-db8050e9e2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c253fd5a-01d4-4264-9e68-545d3078a24e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce2deb8-cda4-4602-b995-0e2b8dc80ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54003d2-122a-4e75-840a-62eb7f54ba91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc067e8c-8be4-4e0f-9780-832f3195ae5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b33c55-b0eb-49db-a126-8198b5078683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3a1924-1bdf-48b6-a470-f60b9faf33f8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f05b74c-c72e-4cf6-9cf0-3e7d2a0678dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aea2355-9b6a-40bc-ae5f-27314f997ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee86484-2def-49b6-8415-8687f4a583cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861f5401-5e77-42dc-a0b4-a694f669ecc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745d1db4-6267-485e-9ac9-39c7e0a19ed0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fc3c08-d55c-4dd6-96bd-32b6327e7cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b15f44-99a8-4b78-b2fc-2de74402747c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814518e7-2295-41d6-b62e-1044821a106c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747aba4b-fb5f-4610-9c96-ebc29f78bc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36bfa69-e0b1-46dd-8f71-79729f7cf024",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9f2871-307d-45b0-9665-1fe523abb8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69f6920-b2ce-4b86-8ba0-65c3cd4c5e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fcd37a-ac12-4654-8a42-7e657f227e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1370f885-d93f-47ec-acf8-0f004c976cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c132791-86a2-4a6a-8769-6ab39001f9c5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c015d2f-6883-4e8e-a34b-eb5a8d6f2002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ac9ab9-7ab8-4dca-99b5-b69c8eff4731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1f3681-a724-4f76-9851-6a4a6210a388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7047859-3209-4eaa-9026-70b43cfe21f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c6ce6b-71b3-44e7-89d1-911d1a2b2aa2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14c650b-02cc-4975-81d3-746e3a65abf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd26f5b1-0d39-40dc-8f45-b428dc67e608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff15634d-3970-4524-9c8c-056a4c60b85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d714e9-645a-4e91-8df7-8ee4f9bf5a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d488346c-116a-4038-ba11-7c5dc82b4f5a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49172231-76fd-4ba5-a3a0-c92869b2ecfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea21e47-f606-4a32-bdca-256308de33e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b416eb9-5c0c-4736-ab9b-8e3129996cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ef9052-aeb7-44df-b3d3-afebc9cdac56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5d52db-5426-42c0-ad7c-187a85f3288e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb690b0-553b-433a-91a1-76b9e7226512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e71a02f9-3e90-4341-bbc1-e030ff3e12a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779fe9ff-01b3-4d70-bb76-58a8f21be924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3a88b9-d5fa-4f5c-a5d8-c2700e254ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad731478-c215-4bb0-a2ac-2867b0cac38f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22891299-7540-4283-95e9-ff99bd42020d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb330ef5-36f4-42fe-9596-06b3d4433352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e66e80-5190-4746-8378-c178b0764d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27d9905-27b3-484a-9a89-13e20aed46ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2155617-e494-4eba-8413-0dac031e6c48",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e015936-5b59-4959-bfb6-e38352ffbc15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299dd55f-9ea5-4b26-816b-2ce225e1e189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69408075-d74e-435e-92d9-5eef2ce84a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0344cb8f-c585-47fd-ad07-6fb59a6b4045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b47bf74-e675-4329-a1fd-b1aed0c395a0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7680164e-6dcd-4d7d-822c-579cefdfecad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e18a54-e616-471d-b0cd-c06f44305187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08ea649-bcdd-477c-a849-a8f1bd8eff51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a5dec8-cc6b-4ca5-872e-5857a4ff240f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443cd90b-dfed-4c8c-828e-3d2c91bae9e2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ae1579-9c32-43ab-81c9-250f4b464521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e48c89-cb53-464d-9dbc-42c1a9e8f3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17849c7-8a9b-4c20-8f60-0b9802c31438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d54f909-b7eb-46ee-923e-9142593d869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68614166-4d88-4e30-bd54-4c8b41a5e06d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b093a7b-c6d6-4a4b-af76-6c2505d00cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4505b00-3d69-4f25-b89a-19831ccaa4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e5eaad-b8ea-410a-a5d3-294125c8696f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3824462d-bc5d-4fd3-b948-a9ceb51a9a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c850bf78-e50e-4a84-a418-6361778ae028",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4926967-c8f3-432b-9637-27b1dd0670d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7626314-293b-44d5-8ed7-787274df0aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3681eff1-80aa-4d8e-8241-f1e62b76554a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02af0853-b4be-42b3-8f0b-a2175a546bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7071bd-ff87-4359-adf2-f07af7e14353",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb736ca8-111f-44c4-91d7-3fc45b72cf4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6acc22a9-e557-4787-8037-2053ac812c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cffa76-3274-4fd0-98d5-49a288c728d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1c9bdb-0abd-4cae-9963-9ec58c93f17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17806c1e-d00d-400f-9c6a-4b90451a9c56",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e32662-6621-4970-a173-31243c3946e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0216cb-34ad-47c6-985d-3af31e478a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510efa01-f9ed-4eda-b442-aa882fdd6512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e0d0f5-dd5e-498a-affc-15ec45cd223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c7e289-e319-44ce-91a6-409a07ccb940",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77e0f1f-c9cb-4c0c-9658-c0a55bcfa8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3826f7-4903-4772-be63-ddd8d2710019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411372d8-bd0c-4c59-87bc-7df3fd7d32c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ae6688-7934-47d9-9a15-a3fc0549b386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf2832a-adfd-48f7-9ecc-a99607b6d580",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c51367-e250-4904-b64d-8e5ba619d4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078ede81-4ebe-4f1a-a481-d38c3e07349b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f3e29a-88d9-4086-a8d8-ac2a442ea099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9652c1a-face-4270-b1d7-4ed49d7c6707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a1cf32-2d89-4a54-b75a-aea30528654f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bff8cd-faaf-41eb-99b5-046dfbaa5a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a095739-e381-4666-a160-9d1a8348c31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab9cb1e-aed0-4d64-bb47-aa072b5351e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6188496a-3f3e-4674-9098-59e4d1893b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f2f4d7-e0d9-4557-bbb7-df9a3796c838",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0f6292-ae33-45f6-8413-bd9d364ff860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba33bc7-a979-428d-adc3-893b2031bd08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b279edf4-270b-49fc-b6e7-4850dcfd4033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29eed07b-b8b9-4c93-9978-f00aa27476c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04738502-8554-4dbb-8794-7b0c7cf564ad",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6978aab8-a359-4041-a6ac-db5a338ee601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fcece4-dbfa-4203-bf59-58c0d1456741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d077c1-72b5-45ef-91ad-9f7874364f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1b61c5-9462-4a2f-9130-3b99a15a9f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed410d6f-29b7-49b1-a1fd-e0d274fdc53f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b920cb-ef49-41f5-96b0-0344f1ed9d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17bcf6e-c0fc-43af-b88b-549ce1bed26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fb85d7-05f2-4b1e-8ad3-72cb2b8bf3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d328c644-a02a-4c16-a0e4-bf79d17a142c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0b5716-dffb-4f18-92cb-fef8916981b4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eac42a-948e-4602-b52c-003c44a9cfac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1e7c44-8656-40e8-abdd-ac4d3907751a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eceb062-d91f-4386-8f28-afe86265eaf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83512559-8831-4efb-ac49-6fde4a6fe514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b260a1b-a1e9-4f01-91f2-845a616468bf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32324bde-959e-44b7-b899-deea3776c18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfe93d8-cd55-4eb1-a9b9-da29fb367337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907ab2b8-253c-4abd-b23c-9f97b38fb593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b548688-d0ff-4d9c-9604-2596a7bce26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d901db-461f-44bb-9b01-4b5c895c3d0a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16778532-86ae-432b-b270-6e6b35607f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be9a118-6299-4ffa-8e08-99eddc64f340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c9c293-bfe7-4433-9bf8-11d50fddeaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac065bd0-db99-4605-914f-68d001db4501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acb6c19-6090-4b21-8e8e-d5d8374120db",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43ebde6-a099-40ac-aa1f-4ce168db83df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b279bd-a2e2-4064-bcf3-2c334c39b274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9081921c-6406-4296-81f5-c875d2d00e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668157ea-bf99-4f84-af27-5150c8da0db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f81d5ca-f6b2-4384-812e-35ab7bfc0a34",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded02b9d-6b2a-4775-a702-991fc1d3d4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3f1091-f372-45c9-b666-523a4d2b5afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2da967-8f9e-4c80-be44-927b3f605f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe41aa1d-a599-46e6-9fe2-0ea7d46f084d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f70e3e-7b33-4c79-946b-19b082639b52",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dc0a17-8517-492a-a3e9-6b66a4cc14a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3ffc1b-2016-44de-8609-e28b0b844272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2813e25-9517-41fc-8473-f7c0f700f3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef30fa13-b5c9-4727-af9f-26e03d4407c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0bb6d4-f235-4f7d-ba30-f32a59079b0f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36e5b9d-0c8f-4ad9-947f-eb3c4f4692b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e758e9d-c348-4ef8-a624-09e145bf3e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973a8e8d-99c6-455c-8803-5c287cc5eb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff79f2b6-9b5f-499c-9b72-3da8e490bc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9a456d-3258-425f-95bc-41bad2eed287",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f5efe2-12bf-4f77-b4fd-000aff1028e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2681b18-de35-4542-8fd7-cc8c1861a850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e99eb6-2747-48c2-a5ab-66cbc726eb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b751ec60-9a72-4b65-9f8f-c73dcc422a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55d4777-f697-4d6e-a705-dac08968824d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ce1d0d-8056-4cbd-ae26-dbb27fb01e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704a71a0-ada4-4ab6-9be4-0065240d3846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b99544a-d124-4225-aadc-400e646b98e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1406b0fe-81d9-4000-83c2-ac3c6c206782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ab2c0a-6933-484d-a8f4-40881057e25e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9264e96a-077a-48ca-b8d8-126949537ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2185ee66-9825-4e0c-b85f-c757fa0038e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e14bb-6d17-442f-985b-afb19e880d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e471ba9-1931-432c-bc0c-a3fce61e8fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7c383d-177a-4539-be85-cff56394c848",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3cbcbf-7603-49b2-9ec5-306343d7c46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6625823-1ea3-431d-b443-419b8336824e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e09b9dc-2dd1-4f73-b941-aee4787d6a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8413020-a218-473a-8e11-35280a3412e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86410d2-b3f7-40bd-a2d3-efb48a619814",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7904a1f-243b-4a5a-a24a-4568d743c902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfaaa4e3-ca94-4e70-beb6-975067684db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c5a4a0-aac2-4090-ac49-3c36e0231512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdecf99-aa93-4363-808e-e2d471322f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73788689-bb33-4e57-9bc2-2348e160c378",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f5913a-4f57-4e3f-9b00-3493db8a7e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3414d7a8-9334-43f2-88cc-f058c8620929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66328e0-9246-4ea7-82d1-51aadc1fdc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a264278c-790a-4b75-a6dd-92aa3414fe1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588ba55e-3781-47d8-aff8-a258429b1a8a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0057ccb4-abec-4458-9249-15cf86f7ff0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c77a6b-3af0-4c9a-969f-158ff9970cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a88c09e-432d-49f7-be52-315671734527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1562ec1-1cef-44bc-98c9-88f2c501f11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ce6b39-79a5-4d1b-951e-c3478ec51100",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f09de64-3877-4a3a-b46e-eda393611cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f143f647-5475-4cb2-a582-417bcef87d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6939acbf-0e3a-4f6d-8b9d-c6ce002b04aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3f3980-5785-48eb-ace2-02aaa458e747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e046e4e6-1594-444b-bd1d-48243237d90b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb9df7a-c27d-452d-a8c9-5c71d3f39c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba83e66-09d1-449d-9e21-b09edb5b6e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dd58e4-8d27-4568-8d40-1fa961e2a205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb6ee3b-7366-4461-ad84-daccde02ad13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f557868-fd47-46e2-925d-db7875ebbce3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8866199-0d2c-44aa-91f5-3ab88aad7efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abec42e1-7330-46ff-80f5-c8fbf3f7a351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f2ca2c-615f-440f-91b3-0ef51952a82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1205acd0-dadc-4d1c-9676-2ef8037e19fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb833fa-e2b5-47c3-841c-4f3118312a45",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4a2fbb-f50d-4714-b6bf-280b4d5515d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966b75dd-3499-4678-8424-ac5c2dcd3087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620545df-c363-463c-ab40-794dfdab1868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d0860f-4d20-4db9-bfae-eb8ec1c4c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c3679c-5926-4fa0-bf4e-158278685083",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928be099-37c4-440d-aee8-32f1e9c2d807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6339d36-1bec-4cf7-852a-b995c64c6a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570d16fc-069b-48e2-8f20-535a52845b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdcf1d86-701c-4d9b-bad5-1042d338548b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26171794-c603-4a44-9f34-420153735fd0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441d2c73-8205-4d4a-8397-ff2dfaf068ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000c6880-33b1-46d4-9932-216c07da9a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b53b4a-623e-4a0c-8639-6847143b14ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15e21e0-787e-4c2a-917d-c0ef9fb8b5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4b2df2-0767-4fa3-84f9-40b0b76e54fb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5808bc2e-d02f-47b5-8f08-da4cd3aab6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9802a88d-3b34-459b-9706-0fa017a44b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b92818a-88b4-4302-bb7b-3720b5574382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045fbf04-a513-4eef-a7ce-778200c9e601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc432acb-bebf-4e1f-ae53-b2b1f2f64bde",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9cc740-a530-4ab4-83ba-d85779bf4b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f95679-8052-44bc-890b-28b6141b80c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0ec62e-9fab-4313-9611-4d38d62f0ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de90391-6661-4aa3-aa7a-2f8555f54b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9655014-cb4a-4502-ad3c-c76b69b4f1a4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24f38ea-d138-4c44-af90-675c34689f0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea9d537-8fd0-4ff0-907f-920c7faaa8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c93755a-b668-44be-a74e-e0e089268e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1348fd-3eaa-4012-aade-73e8e224f04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cedb99-1307-4fbd-be1c-d68395d860f6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca770d05-6908-41d9-a60e-058ee468b8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac2c0e00-f011-40a0-9488-3f8bd6a135d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b4586c-2b33-4fac-884b-67dbdb61cb02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bffb40-fe51-42ad-9bc1-f4421af1bed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a09e8ae-8eae-4c16-a71e-55c96e3c5611",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3a7165-911c-4230-ae86-fec5b9952d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2466954b-54de-46f0-a913-14c5b491a788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4787000-b2ec-4928-9084-197538313ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf9606f-5912-4c72-8f3a-b54e1989540c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c5e8dc-66b9-430f-bc16-2c2f4ef765fd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65c4f58-e24c-415e-80b0-72003a255433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80da08d4-12f1-4fdc-8c1f-d0b2284c5a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f8d395-d187-4509-aa6f-427b3557bf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cede2d-76a3-473c-ae3d-83f49d1a05a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ecbca0-0cd7-4b28-a2e2-611cc816b6fd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53b2607-725c-4cc5-9eec-e695b25bbb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af2ecd7b-4aff-468c-aa91-1e1623029620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0066fde-8c6e-46a8-8678-2c9d78c26e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c8b1a9-f10e-41af-b54b-cdb9d4e531a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2174a00b-4982-439d-9578-b3df7d4f6a15",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c12f97e-7811-4163-ba79-cbfbd22ade85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d0ff569-73f2-4c7c-8ffd-8a56372cd1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e40a72-84b3-4ac4-95c1-38cbcb58f631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6be5c13-9a20-4a18-9a22-b20c0ecc310b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f22585-6972-49a2-8bea-04b551973268",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e39b4f-48df-434b-a17b-26f79e749b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e89b56f-ec99-427e-a77b-b1a31e893359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46eefe35-9a6e-48f6-8fb7-53b548de5599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5941704a-36ac-4211-bb37-ebe87351dc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236489db-c9b9-4842-8754-a120f9d1a606",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cad7ab3-fd98-4f21-bfa3-17b9391ce21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e182a6c3-1957-4301-a57b-f21b523e1bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87959aa4-6662-4e69-911b-deb6a9494e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96dbaca-96db-4bfc-8ecf-cd721a2e6655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736a3498-1068-4b59-afbc-42c838e9d008",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13ab2d6-c9d5-41b8-abe1-1a2af36c0ab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4954a27f-a349-4cbd-ac75-a13a570b3f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696d22ac-748d-469e-bf93-b6b0017adb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b345d14-5c9a-4ee5-9a4b-fd1686854b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a1b0d3-88c0-4680-af84-6b07b42a0c08",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b346f6b9-500c-487f-8f33-eac76a08fa45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8740c8f-804c-45af-9d7f-99a144d2670f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b1ed92-7ccf-4c75-8f63-3f2bcc147c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92adfabc-d62f-4213-8819-c0fb40eaeafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0896ecd-3ca2-4e67-875e-c2895bcd0e98",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3db597a-2a13-43e6-b1fa-0adfc594b4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f64181-94aa-469e-a1b3-2f3ba602d099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52efc3a-6c70-452a-b116-0b1387e1eceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f1e58a-dce6-480c-b114-c86fa0c05486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75694c4d-d9fc-4862-b60f-ce6e193b14e4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063459f4-019e-48c5-86e9-1e0a5e815578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "423176e2-e281-43c2-b42c-ed819346de68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6124b70-fe1b-4bd1-a4c5-41f03581ed49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b1e3ea-e7de-48c6-b26c-a2cff5fcc165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaa052c-e389-434b-af88-45aaa29240dd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f0d9b8-2cb3-4928-9ee9-37a87de45e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ca8638-1724-4634-8c0e-05436ddbd9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9cca5d-9233-4154-93af-157d5e33c9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289697a1-869a-4d73-bc20-3407c45f0087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449c947a-7100-4d38-b5f5-fd2ed0f20cc9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9dd909-ff56-4b17-b215-a9099bd2a5ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e141c76-fdd1-48d9-b21a-8c3ed36392e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bbf16b-2e34-4997-81c4-1df6c8293df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70b5854-31be-4529-87d5-0e9f4ad55d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd3f1fa-2693-4210-a3fa-79f22d9b57a8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421ab3a3-3e19-4328-a003-b72e8fd557c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1074d44-083a-4f68-bfbc-0015e4077c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f0aa2b-d937-4097-b3e4-f6f54d34e3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5479fd6-7ddb-4347-8f10-c8bdaf9f6768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4566be1b-1682-4baf-8dc4-6d3f002d5ff1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148d2ac5-aba8-46bb-b81b-79e49959e501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1b823b-5678-4f09-b9e7-dc8edaec597f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c81b206-3914-4c85-9c66-0efb1ba25c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80169d25-83f5-4ed8-b90d-a3fdd34dcf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8775113-5f12-4531-b8a4-a1d8b191fbc1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53ac98d-e7a7-4bae-8b4d-e8a98f55da6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca9f9eb-ba9e-4f91-986d-4eb843d0f214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fee7c9c-a89b-404d-b336-cdc0373cf9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9274ec-bead-4e52-bb6b-08bdd78dd553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23754bf-63fb-46da-8319-726b3945ddb5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedc1ce9-269c-4e79-992d-3b0d5b5ba1fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbdec5e0-cc1e-4aa2-9b2c-7adb20d9e3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5d4d48-3d29-4c76-8f3e-13b736401142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547e568f-9ea5-4021-a407-e36be7ee4b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70070c51-f415-4ea7-8347-b565c3da3bc3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83156b4e-d184-4e96-b6cb-ce26b584f651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4c8e94-0f18-4466-85ce-555ee409257e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1a0e08-c76e-4a25-a445-214eba201c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119bd4c5-73ec-416f-836e-bf23f693bd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23525beb-c863-4798-816b-af1a36e6fc41",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b895fadf-f94f-43bb-a96a-535069daad54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f323b690-a2f7-4987-9880-30b1b290cd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9dd9a0-250e-4dac-a2f6-970b788f2c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195dd27c-39a0-4772-9696-c51f8d01d83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c5fc2c-499e-4987-8329-943cb0c2df56",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ba8e31-38f9-421a-8b9f-8ad4169b291e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba3f1ad2-e92d-45a9-a60e-09e0b65f2c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e912247d-63a9-40c4-8024-0e349e52d334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f316f46b-6223-49ae-9a7b-9db9ae11545b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebde3e3c-db2b-4f3b-a8a8-341fc8e4175d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a206c6b-799b-41eb-b70a-c3e4997af2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7821b8a-5f7d-49e6-902c-7666c7f39c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fe71ab-8aab-4abd-94d6-35721eb8a0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb765a4-c5cb-4098-99d1-c15bb5158f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68db3fa3-a804-4028-bb93-6008a4d1b1de",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c3cfb9-ff24-48a2-a229-4d7dcb676931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "035f7730-6d58-4749-9010-57f6f40bd297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20204811-1a58-4db9-9f28-e04f45c88cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca7b2b3-e249-47fa-8a7c-f35c7c5a9f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99759b31-a2e3-4c5e-b225-d83625441d67",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54953b1e-42b2-4f58-b151-54e793998e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d9062e-2881-4faa-a5db-727e82d30da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42aefe4-3bda-4db1-94cc-563a78e79552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635164b1-47b8-412d-837e-917424223009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634a685a-f4b5-44a0-af3a-5b2b1c8670c4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115cc1e8-46e2-4237-9232-59f3dcddb129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d5c171-98a0-499f-bc45-3acca24dabe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7a4b85-5678-4c00-81e8-db616573ac7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814147bf-6c3f-44d1-bcd4-98100ce6ea93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3e76c4-a0db-45c4-b1ce-6e679477977e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04fab4f-fd41-4488-a0c3-3d7f98f0d27b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9187f34d-b6a3-4316-a85f-0408d5ac8542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bac8c9a-d685-4d9d-a1a4-a119fe1963e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4e0279-744f-4e2c-bf14-c300ab8cae51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19bfa21-5c90-4282-966c-81b5519775bc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2242b5-f50c-4378-ab14-0dd25a46ea02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b671388f-361e-403d-9adc-3ccc9f69d944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf99f5a-9daa-46db-8e4b-f37753fb9f22",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da4eab8-053f-45f0-a660-b639b2f7f4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12925f18-8b1e-4ee3-b478-990cf9ccda65",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7e8617-e21a-4a53-bd9f-6cac8381837f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d75ba38-f5ed-4268-877c-dfc8a45c6a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2e3292-94fb-4d5d-af24-4949ee05455f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562cfb6d-77a7-455c-925f-26f99e1196b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f64380-1b08-4a71-bf12-30662c775a17",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89462351-eda6-42f6-8573-4cd0cd94cbc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af3079af-b050-4f36-b774-8ddfcf748302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5253ccf3-12cf-4542-bf14-cf7d46d448aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b84604d-b350-4d30-9be9-b547545add8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ec7c40-a8e5-4a81-b287-76add5187b65",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca8e1cd-c04e-476a-8d3a-62ec6b10c5b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93aa1cd6-0039-4e97-91b9-2e965f073002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c67a30-859b-4297-b391-f8e5b226537e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a04f0f-5aa4-4761-9d58-62a00377b684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13095dd-b863-4629-8917-3fd99701d65c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1304edb5-bc7d-4e7a-ad12-0e08a3e5daba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a1d38ce-306c-4535-bf09-a2298ce5cd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a222ede7-54fc-4291-8a0e-91ff03dee9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23b0e23-fb25-42ef-b871-73e14fb22ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea164298-5166-453b-8506-cc0d277aba1a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f392e166-d1b9-49b2-93b9-768540db8968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd564a00-a741-44c4-9f23-11fa9e87b64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d62430-c44c-4f7a-8540-9580179a45e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b19b61e-952f-4ac9-b6a0-ee6dde40333d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b01d347-9c8c-4b29-80a8-d78fe2fcbb06",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cd3932-9742-4210-9b5d-0abf5cc2f99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292dc354-f759-48e6-afb6-84ba15657b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfb9ff0-cf59-4e4c-b4f7-cd4fc3892bcf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c1648f-b45a-4ee6-9f77-85528f18d86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96c6dca-16e4-4762-8728-54ef7686a139",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd635fe-bef0-4379-a4fc-a1e8a9d4bd4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4241583d-319c-453a-a278-239215139198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed04006-bb42-4710-ae00-d203b1702d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ad1e85-0837-4b2f-9166-2d132de2b4fb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cf3951e-4ae1-4b26-8c1d-f0d44f9c9b27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94f963a1-2a35-4fbf-be04-aface5ffbc22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ba9dfc7-1040-42c2-942d-70302d5134ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e855d678-4741-4956-90eb-fd960ce86c84"
                    }
                  }
                ]
              },
              {
                "id": "d06071c2-2664-45c9-b872-55d012b41e0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8411744f-7033-4e29-a4c4-718cc1d9efea",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9c993b-6e05-4316-8d46-5891f0356be3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c2a78291-e431-4540-8993-4d655546ee31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3387f49e-a973-4dbf-952c-a2d541dbdff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2895c7e2-d4b8-4709-beef-12a932d97fbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fef2e9b-7cf9-411c-bc81-76f759491e2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb9db5d6-3f7b-4934-92ce-89be435fb66d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5841c01-3f9d-469e-8c62-2b9d7f966f7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ac363e3-6bab-47cd-a897-db3e9a0a842d"
                    }
                  }
                ]
              },
              {
                "id": "503940e3-0618-47b0-b88e-4f92084a3610",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "80e5b4d8-2bbc-4c48-a437-a45489ba82dc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a97745d-1066-4419-bc37-d1b2ff94d0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b87068bd-c97d-444e-b42d-5b54a0f97fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6726dd-6769-4437-909a-67d7cd381dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b04ea23-ac0b-4ff6-9a5f-9697c436ce0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "099656df-e998-4045-8a38-57c5c658da82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0449bd21-bb41-4e46-8721-86ef778330d9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88838da7-f1b7-4b8b-9174-901e2c15309f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "434f3a2b-876d-4e93-be62-277522d87377"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c28b39b-0dc3-492d-b5d8-7c995ae16ccc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7874ec4e-8d79-47d3-9fc9-7d8dd8162619"
                    }
                  }
                ]
              },
              {
                "id": "bb45fca1-3641-48da-8a5f-10a357a639b1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12725649-04fe-45df-8d5f-23b5dd95df6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "62908e3a-92ab-42a8-ad74-e0aae24d9c9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e592a5a-d235-4088-ac25-84e13f71f6c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9d3a695-b5cb-47e2-8f13-6fcf6e84d814"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f50dc158-5b0a-4c4b-8d45-8778235d6002",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b3d8f74-014e-4830-b0d3-b1aee0465eec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eda3917-dee9-4881-bd40-3d357d32c0ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e014d9c-4548-41e5-8207-27d91735bbe1"
            }
          }
        ]
      },
      {
        "id": "3851dd97-7a61-4547-90d5-e71078374ad9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e2b34474-ab56-4a58-8464-8ea852de0f1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0226c2cb-c033-4d22-8e09-f676741895e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cacc0e71-afa3-4f5d-82f1-9be3fb724750",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55e2406-6836-487c-bded-cbdb23aa05b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d6fe338-c876-420d-ba07-3e03aa523377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb29a11-776b-48a8-bce7-75962065661b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24bc7d92-b833-4317-bfb6-4b05a675cf5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca802f50-af59-4c73-8b80-62b5feb3f396",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c831a6c0-bb40-44c7-bd98-57b63ea77bb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8884a4f-d936-4fd8-9579-418623919026",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d3ce803-de61-46a3-b569-eef6389a5f6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0a9dd2a-1a3e-4d19-908e-6418c690035e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "82b0ee2c-8e09-4ab9-b965-6c806aa94244"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59223f90-6bfb-49a7-b043-d85083f80a98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e98497b0-5a14-4daf-8de7-d2631c504ed8"
            }
          }
        ]
      },
      {
        "id": "e5d01e5d-bd87-442d-a401-aea2408a4600",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5f546b4e-d3f6-4e81-832e-06be06bd0c90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4a7877c-2ae4-486e-ae30-19c9edb7633f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0748d393-7f4b-425f-8ccf-4196d09db64c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd5849a-2230-4c64-a390-8057ebf5ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9065dba6-eeaf-4c72-81c9-70f59261fc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b838c8-c997-4b4b-b1d2-918e99039068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7cbf002-6407-4dc7-b4dc-66864cd5f5e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcf026ce-378c-4525-b0b7-a087f6e5d37d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23b9bd04-c84f-4171-a03d-0473ffed3cf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "429793e2-11cb-4720-b810-8c6faafe52c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60b21506-d872-4018-a7a4-b1277a178226"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6caee520-2448-4b8e-80ed-bfc3d5e81f28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "85398722-ae84-4636-a0a0-a8801549fb3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c31e5de-c3a6-4cd2-823b-50739023e221",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56c41002-df0f-41a0-9875-6cf4d3ba69a8"
            }
          }
        ]
      },
      {
        "id": "d57c7f65-d245-43d4-80fe-aec0d92408cb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1dec0133-e177-480b-9024-ac9d7e2f4fe2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3fa9815e-be32-4658-bb6e-8d393c8697c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecd130c7-a4fc-4903-a983-062fbcdb3a76",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79986708-fa5e-4871-9ffd-761962ba5511",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abd26507-e3ba-4b03-946f-6f21522d2a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0110ecb-1df8-4479-b2bb-1b26e7ee0e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e4dd3f6-7724-452a-b9d5-bbf8f79f3f60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13958eb3-8da7-44cd-8501-5f65b0aa9e91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bea175e-3130-4f31-9cff-6e241290710c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8368d2f-666c-490d-9575-94928a5e1e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a8c8b78-ff7f-42f2-a9d5-0b15220ae3b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d286506-7d2a-4288-96ae-867b169dfde5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4135b46e-fafa-4074-8a66-49fe1d23d040"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c10c45e6-0e16-4bb8-979f-aa9dabfd02d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22bb70b7-319c-48e6-b315-554d83bd18f9"
            }
          }
        ]
      },
      {
        "id": "d559b793-17e0-48ce-939f-67193dc8c1d2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae5703fd-ab5e-4100-87cf-266e8d0c4fe0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0d2a42a-81fc-4fdf-ac83-5196ceb96747",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8491ca87-329d-4711-b7ad-a1a65bcf3f44",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "077bc7b6-a42c-4e5d-b2af-3c9431a5d807",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09fc8433-27f5-423c-ba18-62bdc118beff",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 591.3098591549298,
      "responseMin": 6,
      "responseMax": 6378,
      "responseSd": 739.7921689792884,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688863926126,
      "completed": 1688864106611
    },
    "executions": [
      {
        "id": "01824e0f-4ee4-49a9-ba67-ee5f9a15de61",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7acf5638-90b8-49b7-961c-c65ebf7543fb",
          "httpRequestId": "02e7a121-445e-4649-89d0-7bfeef4fbb37"
        },
        "item": {
          "id": "01824e0f-4ee4-49a9-ba67-ee5f9a15de61",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "86dd8de8-6905-46f4-9d6a-8e96536604e1",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "627574f5-3f61-42b5-a6d2-ff16325d635d",
        "cursor": {
          "ref": "58585259-6070-4c68-bef3-5a646b1501e5",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9dcf0f77-fb38-4cf7-b6c2-cef10e0eb95d"
        },
        "item": {
          "id": "627574f5-3f61-42b5-a6d2-ff16325d635d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "db21cf34-edba-4f50-a785-488b5d672de1",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "822ef499-da2d-4627-8738-d7518e2c0648",
        "cursor": {
          "ref": "2351fb2f-61b6-4a4b-baca-466679aab9f2",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5c0e8950-4b15-4caa-a6a9-5c5643634a88"
        },
        "item": {
          "id": "822ef499-da2d-4627-8738-d7518e2c0648",
          "name": "did_json"
        },
        "response": {
          "id": "180f613e-2b98-4736-b05f-0865bdfb4e66",
          "status": "OK",
          "code": 200,
          "responseTime": 849,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21c864a-58e3-4e6f-ab62-ca4956b85b42",
        "cursor": {
          "ref": "54b446b0-3e38-496f-9237-1112678074a9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fe7f218-412d-4844-8fd5-7b44aed28e6b"
        },
        "item": {
          "id": "f21c864a-58e3-4e6f-ab62-ca4956b85b42",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee1aec29-9e1f-4e49-ba6e-573e79670d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21c864a-58e3-4e6f-ab62-ca4956b85b42",
        "cursor": {
          "ref": "54b446b0-3e38-496f-9237-1112678074a9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fe7f218-412d-4844-8fd5-7b44aed28e6b"
        },
        "item": {
          "id": "f21c864a-58e3-4e6f-ab62-ca4956b85b42",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee1aec29-9e1f-4e49-ba6e-573e79670d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e90877-c060-4111-a13e-b9d1414c1d54",
        "cursor": {
          "ref": "7227749a-1574-4c79-8a82-089bbc162274",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e2bdc440-1496-4e12-a567-bb1b1600fa67"
        },
        "item": {
          "id": "94e90877-c060-4111-a13e-b9d1414c1d54",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1f8f51f8-1509-42a0-84c0-ca177bbf31fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 624,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c7b4f8-3aea-46d1-aa3f-c7bb497b29c2",
        "cursor": {
          "ref": "5b2e5813-2975-45e4-bf6a-d6e5c200ca01",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "39243cf2-6546-400f-9eeb-f1960dcf94e8"
        },
        "item": {
          "id": "14c7b4f8-3aea-46d1-aa3f-c7bb497b29c2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "80d72acf-3766-4f4f-8ef9-8dc5b4a4f587",
          "status": "Not Found",
          "code": 404,
          "responseTime": 564,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d395f17c-b964-434a-b5ad-682b2e12d4a2",
        "cursor": {
          "ref": "886925be-557f-4bc2-8adb-97433e22b0be",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7b9d4c86-4a63-4ab1-9804-04c93eeb253e"
        },
        "item": {
          "id": "d395f17c-b964-434a-b5ad-682b2e12d4a2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "43a918a9-22ca-47c7-81aa-53b118c0143d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bcf929-7ce9-48e5-ba4e-586742b3d66d",
        "cursor": {
          "ref": "6afc3cf3-5b7a-4ffb-8440-1b1773205c5b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5bd6021a-b53d-4e64-9397-a5370ee32e19"
        },
        "item": {
          "id": "80bcf929-7ce9-48e5-ba4e-586742b3d66d",
          "name": "identifiers"
        },
        "response": {
          "id": "6209293e-4fdc-4aac-983b-c3b5a0140396",
          "status": "OK",
          "code": 200,
          "responseTime": 1371,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09718f3-2d76-492e-b402-3898947d1a92",
        "cursor": {
          "ref": "caf0fc74-8f0a-4aac-b406-295a702efd43",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c26ebe36-7052-4b15-b7df-e783784a53aa"
        },
        "item": {
          "id": "d09718f3-2d76-492e-b402-3898947d1a92",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "395c25d4-8601-48c4-9ca9-2a309c037c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e206ca-e24c-4982-8f88-b4659d9d3fe4",
        "cursor": {
          "ref": "ab74c760-2dda-41c0-a590-8345e0adf0ef",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "80001cd1-682e-4dfb-96ad-bac56071e796"
        },
        "item": {
          "id": "b7e206ca-e24c-4982-8f88-b4659d9d3fe4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "99a915ad-66a2-405c-a986-01812bdd96af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504ea657-1efd-4a18-922a-e53c11316804",
        "cursor": {
          "ref": "15f26929-98da-4c86-aa29-0ddf00403572",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a11bfe6b-45a2-4c02-9146-1f71f367cd46"
        },
        "item": {
          "id": "504ea657-1efd-4a18-922a-e53c11316804",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "115a4e28-6882-434b-a154-dccb6fd01826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c152f5ea-6bab-4854-bd46-57817ee70d4c",
        "cursor": {
          "ref": "077b1acc-66e9-41ac-8b22-394f5f045f22",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "65795533-7333-4034-9dba-260c7ca67698"
        },
        "item": {
          "id": "c152f5ea-6bab-4854-bd46-57817ee70d4c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6fa94603-adf5-4463-a0dc-78fb457d4ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213e11c3-9501-4b7c-8a31-a1a081fab8a2",
        "cursor": {
          "ref": "5ff5921d-4635-4585-ba85-3e06cde793ca",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "72e117ba-a498-4a35-a55d-f8815a378abb"
        },
        "item": {
          "id": "213e11c3-9501-4b7c-8a31-a1a081fab8a2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6f65c480-d569-4470-91c1-fcb43cda4f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e850c3-963b-461f-a6e4-212cf45b0203",
        "cursor": {
          "ref": "c9f5eada-f7c7-4126-a085-bb884791d30b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6e09a0be-0a8c-4a0f-9bc8-23a933ba090b"
        },
        "item": {
          "id": "c1e850c3-963b-461f-a6e4-212cf45b0203",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1a2b39e8-ecd2-4a6c-811f-d6b872023af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9817257c-4f33-47cb-b765-e789d858eac5",
        "cursor": {
          "ref": "c21dda0c-dfb6-4a45-b2de-889864a4ce55",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "daa69c31-c766-4246-88ec-ffd6fe067a42"
        },
        "item": {
          "id": "9817257c-4f33-47cb-b765-e789d858eac5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6697ed1e-87c8-4321-89af-a74792525b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d913a9d-c9de-4311-bea9-5e83eb3efe30",
        "cursor": {
          "ref": "180ca059-b32c-4be5-ad46-d19b302b1659",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc17e00a-16a9-4a81-86ef-8cd879805734"
        },
        "item": {
          "id": "9d913a9d-c9de-4311-bea9-5e83eb3efe30",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2df3f4b2-6631-4d43-b57a-f8ca253504b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1354d702-5fff-4939-9af5-17906b9c12d5",
        "cursor": {
          "ref": "9f8afc9c-be89-4b9b-aba1-11a64cb15c5c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1a19b662-8553-40ac-9b66-d4b61f2266ed"
        },
        "item": {
          "id": "1354d702-5fff-4939-9af5-17906b9c12d5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a2800c08-6596-4899-96af-a0be4484a707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac948b8-7494-42fe-8a35-332016efaba2",
        "cursor": {
          "ref": "d7fc7e0b-21e4-417b-92e6-301ab00eb9d2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3a8fe369-6053-4b13-8113-07739cf15bae"
        },
        "item": {
          "id": "0ac948b8-7494-42fe-8a35-332016efaba2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "274d80cb-f357-4210-842e-a96d27c5f413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77838bf5-90f6-4b54-a0d2-2b8df0f17101",
        "cursor": {
          "ref": "40750677-321f-4e32-94ef-57d0f86432cb",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a83469db-a433-46c1-ae87-b37ef13eab2c"
        },
        "item": {
          "id": "77838bf5-90f6-4b54-a0d2-2b8df0f17101",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "223195d0-e632-472e-ae30-45f809f0c0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7cf8ff-81c2-4c0d-ae16-798bb0c4b1cc",
        "cursor": {
          "ref": "d79dc5ba-2afd-482d-840b-7205d01ea496",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "32115eab-b1bc-415f-ab8a-0f157059bf44"
        },
        "item": {
          "id": "4f7cf8ff-81c2-4c0d-ae16-798bb0c4b1cc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "28601873-5a24-45ea-99b1-1b6d4930376a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d121e8c3-5676-4473-89d7-69a96ec314dc",
        "cursor": {
          "ref": "025ff83c-1598-4bce-b2b0-ed5efe369ee4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c21c5db1-6b6d-4a91-bf37-c69dc62ce6b1"
        },
        "item": {
          "id": "d121e8c3-5676-4473-89d7-69a96ec314dc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4d50cd46-b883-41d4-94fa-76bfe36a3986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eb9a6d-0288-4990-9c16-f63b82312657",
        "cursor": {
          "ref": "00156ad4-aef7-450a-a6dc-02b7860c4599",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2e1a990a-06aa-4226-83ac-2e4d11e32b91"
        },
        "item": {
          "id": "81eb9a6d-0288-4990-9c16-f63b82312657",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6aa40035-7038-4215-86ca-24972c3e1a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490fae79-e932-466d-8460-0d8c572e77fd",
        "cursor": {
          "ref": "52ce035e-4394-4ebd-9e28-fe96438e91d3",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f5fdf0c1-91f8-417c-9c70-ab1719d32349"
        },
        "item": {
          "id": "490fae79-e932-466d-8460-0d8c572e77fd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bd38fc64-3277-4327-9632-0f2d3958d105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41136464-5dbd-410f-b42f-7879b640ed80",
        "cursor": {
          "ref": "dc61c3d4-1286-41ba-a4c3-c7248713611c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c4102046-c2bb-49d9-9782-94abc25b3af7"
        },
        "item": {
          "id": "41136464-5dbd-410f-b42f-7879b640ed80",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "684fed45-bcf8-4e96-8fb0-77e5ccc70ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ccdf3a-1099-4d00-9b62-f9c13786d92e",
        "cursor": {
          "ref": "ae5fabd2-1f11-4a02-9304-4f49d2a5953d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0cc58677-be60-4522-94b8-a85ab59df7d8"
        },
        "item": {
          "id": "b7ccdf3a-1099-4d00-9b62-f9c13786d92e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d0df9214-feae-49f4-aa5d-4b99f585fa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d0562d-5f4e-4694-ad9b-ca3d41b82842",
        "cursor": {
          "ref": "5ba01146-75a2-4c85-974e-f3912ff0d329",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5b307fb7-3eb2-4e70-8250-0f6560de3626"
        },
        "item": {
          "id": "b3d0562d-5f4e-4694-ad9b-ca3d41b82842",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0819dbc2-0e4c-4b0f-96f3-5200338ba55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4b1aee-74b7-4479-a7fb-a6ee4ec05638",
        "cursor": {
          "ref": "300b56e3-9d39-4dce-9596-795cbc81bb17",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4e3f5f50-4a78-499e-8920-1a2ec560c6a0"
        },
        "item": {
          "id": "5c4b1aee-74b7-4479-a7fb-a6ee4ec05638",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c79702f5-b14c-474a-be78-9bd4f153b53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150ee7ab-41c0-44da-85ad-cfea7ed28926",
        "cursor": {
          "ref": "aa26a89d-cce9-454b-a222-304e027dbcda",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "afb9c7d3-df4e-4f41-935b-eb7f7c7bc433"
        },
        "item": {
          "id": "150ee7ab-41c0-44da-85ad-cfea7ed28926",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d716bfc2-2f8e-474c-9502-293e33bb97d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89328786-ec09-4adc-88c6-2b4a0f1e0ea3",
        "cursor": {
          "ref": "25d4d64a-b2b5-426a-8ef2-64f44e45029c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b4a0264d-3282-4d8a-9f24-e6033ce38241"
        },
        "item": {
          "id": "89328786-ec09-4adc-88c6-2b4a0f1e0ea3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "70eb309d-37a0-4053-b68c-6d5f1ce42d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a176d744-edd1-479d-9cc3-152370b57164",
        "cursor": {
          "ref": "f0a97b8f-3da1-447b-bb0f-eeea3f551a54",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5c634145-a809-4ae2-b8b9-7d86ba5c2bf5"
        },
        "item": {
          "id": "a176d744-edd1-479d-9cc3-152370b57164",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1520eddd-97be-49e4-ab81-a0e78ccc29ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8158d15-f83d-470d-afd3-61d1ab837ca6",
        "cursor": {
          "ref": "00843820-65e7-4007-91ba-3ad31e178b06",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fca3d602-57e1-4e24-9095-4b8757c2bb04"
        },
        "item": {
          "id": "e8158d15-f83d-470d-afd3-61d1ab837ca6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "44fc63ee-ad96-48b6-a4d4-768a8932054f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba4918f-d68f-4e28-b496-be26eb15f1e3",
        "cursor": {
          "ref": "2eef39df-d021-4e34-9cb3-a8ac27523a4e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "76e61525-4c7d-4ef5-98fa-8b01a715cd4c"
        },
        "item": {
          "id": "8ba4918f-d68f-4e28-b496-be26eb15f1e3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "93689e05-ddc0-4344-a52a-d59003ee8adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18da9182-a438-4aa6-a3e6-cc787b188c31",
        "cursor": {
          "ref": "560fa261-0cbc-438c-990e-99452b7d2fab",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "31d3c32e-32cc-4a1c-b282-21d4bcacd1ab"
        },
        "item": {
          "id": "18da9182-a438-4aa6-a3e6-cc787b188c31",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e19a598c-05b3-4d8c-b89c-2ca57e5256ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e702a78-d72e-4bf8-bf59-e736afb00171",
        "cursor": {
          "ref": "fb616a95-9d2c-4df2-9b7f-1483b280ef48",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7ecd48d1-6cf3-41df-a393-28d8d57d786d"
        },
        "item": {
          "id": "1e702a78-d72e-4bf8-bf59-e736afb00171",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "25f8788a-0850-45d6-9252-a70f3f5d3f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087ec9fa-2296-4597-a8d2-4c3c9bc83c23",
        "cursor": {
          "ref": "aae23247-498d-497e-89e5-758dda31ebcc",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "15523c6c-6b47-4b1d-ae0a-814fea2a9621"
        },
        "item": {
          "id": "087ec9fa-2296-4597-a8d2-4c3c9bc83c23",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d9bbe0f1-5945-44c5-a69e-3dfa87c7fcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d1e866-7428-465d-b7df-fbf64f4e21cd",
        "cursor": {
          "ref": "d9ab94e0-9660-4bcb-b838-22a5b2693b8e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ffd91d21-01e0-4819-b121-ef1f15c4175d"
        },
        "item": {
          "id": "b9d1e866-7428-465d-b7df-fbf64f4e21cd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cdb8f008-279b-4a0e-b2d3-a0e2b98bb075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fdb975-cb31-44c5-a32b-e99b207a2c2a",
        "cursor": {
          "ref": "a2b912d5-8bd6-48ae-81f3-cdf88513e540",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "aca34334-bb07-44dc-960f-1a3dd2ba9944"
        },
        "item": {
          "id": "52fdb975-cb31-44c5-a32b-e99b207a2c2a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a4c661b5-3ed9-4a1f-85a0-577f434cf4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754ce776-a1d8-48f1-bd8b-d606e2df3fdf",
        "cursor": {
          "ref": "7a2d8806-8d02-4878-b145-7886ca854e7d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ed747e65-f3cd-4203-9f50-8b8a12eba214"
        },
        "item": {
          "id": "754ce776-a1d8-48f1-bd8b-d606e2df3fdf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dd44a11d-78b9-4946-ba8d-b27a438ec67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aec2fd-c914-401b-bd4c-c2266c97a896",
        "cursor": {
          "ref": "fb18003a-b05d-4c9b-b8d6-23ad1dd4665b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5a93dd61-e9cb-44f3-86fb-2b0f99538eaa"
        },
        "item": {
          "id": "44aec2fd-c914-401b-bd4c-c2266c97a896",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1ace30b9-894e-4c89-9df9-502edd36b1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dbdc27-058d-4510-b429-f703217b477f",
        "cursor": {
          "ref": "e16e80cf-a66e-495f-8cab-914e31124962",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "817fcfd1-c947-4474-bf79-58559431bc26"
        },
        "item": {
          "id": "26dbdc27-058d-4510-b429-f703217b477f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1b86dcb3-71ff-4420-af89-529f52239e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd49a6ac-9f9e-44c4-9dde-e23f7ef44563",
        "cursor": {
          "ref": "a8df4a32-16fd-4eed-97fd-5f2124d28a4c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "de03d264-16e3-4268-83d7-6badf3898613"
        },
        "item": {
          "id": "cd49a6ac-9f9e-44c4-9dde-e23f7ef44563",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bb725f8e-164c-4a73-afb0-7793aa1edf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9842e1d0-38b0-4d8a-99e9-e52e7ff4098a",
        "cursor": {
          "ref": "35ad2770-5927-44fe-a1c6-6ad042009fa8",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "277391a6-0958-4811-86df-ce1dca70bf4a"
        },
        "item": {
          "id": "9842e1d0-38b0-4d8a-99e9-e52e7ff4098a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1a86f895-7c74-482f-8b58-472af0c118a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc839d80-06c4-40f0-9194-b4de439820ec",
        "cursor": {
          "ref": "d3ed5f4e-7d10-4da9-b145-e50fca8e0fcf",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "467ac5ad-262b-4b7c-b53b-e9bc3749ea86"
        },
        "item": {
          "id": "fc839d80-06c4-40f0-9194-b4de439820ec",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2e2c6027-f2f0-4c09-b2c7-3b09703ce0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bc4d01-8f58-4067-b8f2-c5750a39b3ec",
        "cursor": {
          "ref": "ff7ec26e-4fd9-42d1-8e3b-634db24e7041",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2f2c11a7-014a-49e1-8bcd-42cb473ff86a"
        },
        "item": {
          "id": "b2bc4d01-8f58-4067-b8f2-c5750a39b3ec",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2611925a-9d48-434e-9c19-d27a9960dbe6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 725,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d96c343-476f-4c17-8eeb-8bc69a102dd7",
        "cursor": {
          "ref": "e8e3c056-7741-4312-a194-cf97fa9bf65a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0ae62c7e-a491-4c3c-8a47-20b86a4f0efd"
        },
        "item": {
          "id": "1d96c343-476f-4c17-8eeb-8bc69a102dd7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0e3c1eaa-0971-4dfe-8e01-861d06e0fc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c904de34-33de-4d67-b24e-f18ebe620331",
        "cursor": {
          "ref": "ad77ef6e-7973-4283-aced-afaf67c15420",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "72998f7e-18a0-4ec7-90c9-7d9d72a67489"
        },
        "item": {
          "id": "c904de34-33de-4d67-b24e-f18ebe620331",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "53270364-1469-493a-843f-295f896340f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04853a08-18ee-4d56-ad7c-f703da4702df",
        "cursor": {
          "ref": "118c1fa0-d5cc-41ec-82be-2b31545f6922",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b36f58e8-9bda-464a-99c6-d04b718c9378"
        },
        "item": {
          "id": "04853a08-18ee-4d56-ad7c-f703da4702df",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a66425b8-5c1a-4c32-9924-4a646b1de4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ad3935-2a46-4f21-b31c-13bd6dfb3064",
        "cursor": {
          "ref": "43688399-351c-4037-b41f-303d95011822",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6912cc86-a1b8-49da-9b7f-f644592ed987"
        },
        "item": {
          "id": "35ad3935-2a46-4f21-b31c-13bd6dfb3064",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "41ec81b1-72bb-4ec2-b78c-52fe2fee8aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd2ef36-ac73-45fb-8201-b4097fc2845e",
        "cursor": {
          "ref": "20a59568-e6a0-4555-99a9-be7261c3d1e8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9caba8f7-8ba4-46a7-9da0-6ac4d34d8091"
        },
        "item": {
          "id": "bbd2ef36-ac73-45fb-8201-b4097fc2845e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "00be4440-b891-4a2c-90cb-858530a5afed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af5fc98-8ddb-45b5-994b-13453a98a3af",
        "cursor": {
          "ref": "3cac62b8-2ea3-463d-93fc-b3724011deda",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b54aca03-77d9-46a6-a299-683bf436ebe4"
        },
        "item": {
          "id": "4af5fc98-8ddb-45b5-994b-13453a98a3af",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "035e30ab-b316-42cb-b1b7-0b6daacc6574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f010bfde-0ee4-4028-ab00-22c2c8d39845",
        "cursor": {
          "ref": "1c9f1048-43d1-4f31-86db-e65cff0f6fd3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "15edb99f-9a50-4ea8-bfd8-5bd57bb69693"
        },
        "item": {
          "id": "f010bfde-0ee4-4028-ab00-22c2c8d39845",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e6800949-83ed-4ac1-90ae-e205516f7a7f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 698,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c32d5a6-614e-400c-9cc4-141054279bd1",
        "cursor": {
          "ref": "299e6493-e3ba-45f6-9f13-a9dd9f01a49c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "258f7573-394b-40be-8cfc-e19912362dd7"
        },
        "item": {
          "id": "5c32d5a6-614e-400c-9cc4-141054279bd1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6b7a4aee-efe3-4cae-b3d3-b434ba53aec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d474718d-eda1-472c-87f6-8f15645c490c",
        "cursor": {
          "ref": "c2b6c9f1-1d32-416d-8220-3c8efada51a9",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "935069e9-3349-4538-9e1e-a0c8e75ff15c"
        },
        "item": {
          "id": "d474718d-eda1-472c-87f6-8f15645c490c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22ac21bf-e7a3-4f99-b4db-7fbe56d2fb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7616bc2c-3c22-4244-96a7-9c420f7d69ec",
        "cursor": {
          "ref": "d03c7d5d-9135-490b-8259-acf78c808ed6",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0d7c0357-e5b5-494c-a5ef-8ccc3bb160a2"
        },
        "item": {
          "id": "7616bc2c-3c22-4244-96a7-9c420f7d69ec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "480f1e01-b5f9-4db2-8603-8d52183f42a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98531c1b-f51e-4652-8536-4ae567f52790",
        "cursor": {
          "ref": "576c6cb1-a58a-4fe2-bd1b-58d185e09269",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "447ea627-2cee-439c-a407-c74bce965cba"
        },
        "item": {
          "id": "98531c1b-f51e-4652-8536-4ae567f52790",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5163c4f4-7016-4cbd-9516-49d3cbad599d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fb0e4b-e043-47e4-a0c7-405bdd75037d",
        "cursor": {
          "ref": "a499a453-e689-4535-a576-234d731085db",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8594a68f-8ca8-4f22-bc55-5601363897d6"
        },
        "item": {
          "id": "b7fb0e4b-e043-47e4-a0c7-405bdd75037d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6b8025fa-5f76-40d8-8512-26232e6405bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a27e4c-25a8-4cae-954f-0135089855e5",
        "cursor": {
          "ref": "1e3bda81-ca1c-4d63-a463-da4d5a33fc66",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "32f275c3-146f-47db-8a1e-5394375703dc"
        },
        "item": {
          "id": "a4a27e4c-25a8-4cae-954f-0135089855e5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c1fee1e5-359f-4e8a-92f7-683210462805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4462b7-c1a2-4e27-86fa-38996f89fda2",
        "cursor": {
          "ref": "e713a1f8-917e-4a9d-a562-329cc4302be4",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e59544e3-d976-49f1-91ea-a36b49a97853"
        },
        "item": {
          "id": "1c4462b7-c1a2-4e27-86fa-38996f89fda2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5bdaed0f-864e-4937-8227-e8ce6b9c5034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2a9f51-efee-4fb2-a969-73d8118ce632",
        "cursor": {
          "ref": "d129070c-f339-4d95-911e-98c364a9df51",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "53bd5775-b625-4cf3-bf14-8c086c48e8ee"
        },
        "item": {
          "id": "6b2a9f51-efee-4fb2-a969-73d8118ce632",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ecb59620-82c9-459b-93d2-9d52878b7443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a4e1d1-06c3-40a1-8498-570cf881c068",
        "cursor": {
          "ref": "dedeb603-b41f-4333-b542-081ddd11d1b5",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "92aff24c-1769-45ac-a13e-3dd9d8ac17fb"
        },
        "item": {
          "id": "a8a4e1d1-06c3-40a1-8498-570cf881c068",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5df469ed-e324-402e-8296-6d86d56e7e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d337f628-b462-4eaf-84e0-162659051969",
        "cursor": {
          "ref": "02ba11ca-571f-46f4-9a6e-4251d07ad1be",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0cb05435-4eaa-449b-b7cd-975ba737797a"
        },
        "item": {
          "id": "d337f628-b462-4eaf-84e0-162659051969",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9d5ccade-a042-46ca-a8ff-f6181f20013e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da15592-646c-4632-886d-43a5ffe69c5b",
        "cursor": {
          "ref": "5498d5bd-6d41-4d93-a531-261f64cbc667",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fa78a3b8-0c4a-4b39-b89a-aa271496aed8"
        },
        "item": {
          "id": "1da15592-646c-4632-886d-43a5ffe69c5b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ac2b4f72-65b9-47bc-a476-677764816427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ea3f97-98cc-4083-a091-f2b318c2a959",
        "cursor": {
          "ref": "8ece7c57-cc1a-426a-88d9-99b628f07aaf",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3fff2238-fee0-48f1-a629-f0311b9e8ee1"
        },
        "item": {
          "id": "43ea3f97-98cc-4083-a091-f2b318c2a959",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "61b1799e-f20d-471c-b3bc-1260f75b1242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073374a5-7ed7-4d15-b20d-e3d26ce9fa60",
        "cursor": {
          "ref": "7aa258ba-e6d7-45c1-8544-24d864fc2217",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dbfe940f-29ad-48d2-8d26-0231712e4d1a"
        },
        "item": {
          "id": "073374a5-7ed7-4d15-b20d-e3d26ce9fa60",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b053da79-3cbf-49b2-9fb5-21143fd92ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8058d009-fd84-4111-9578-ad1474f5052c",
        "cursor": {
          "ref": "ebe15a1e-5dd3-4097-b517-3aca86338f8e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0a6a0073-bf67-4b44-8fdb-05284a91bc6f"
        },
        "item": {
          "id": "8058d009-fd84-4111-9578-ad1474f5052c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d82db92c-be10-4f8a-ae2c-8b114916f13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfc9a45-ff79-4c00-b5e1-ddab0ae6fa5f",
        "cursor": {
          "ref": "b7418e38-c78a-4396-8be2-2433301c6339",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9b1ddf44-18f4-4fef-8b33-e0a01b525dbb"
        },
        "item": {
          "id": "edfc9a45-ff79-4c00-b5e1-ddab0ae6fa5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0668cf76-e7a8-4f67-8dec-726f0c5154ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632809bf-e20a-47a8-9677-e906a6e55561",
        "cursor": {
          "ref": "14018116-f516-45dd-ba8c-9d26417a772d",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c0edfed9-fd63-453d-9aaf-9e4aec500a1b"
        },
        "item": {
          "id": "632809bf-e20a-47a8-9677-e906a6e55561",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3fc6ba17-0118-4034-8181-6975624c5714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3389fd-1ede-4930-be49-3e93d052280e",
        "cursor": {
          "ref": "143bfe20-9d57-42f6-85dc-94b936ce4230",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "53a44bd2-2370-46f7-933e-3b80b485ca3e"
        },
        "item": {
          "id": "5b3389fd-1ede-4930-be49-3e93d052280e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "41f21889-bd18-430d-98d0-af13a4cabaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece76493-dbf5-419e-9386-1692a5a0a51c",
        "cursor": {
          "ref": "a7899761-ab7e-46e3-89a5-badbe90b1c7c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a2e599d2-d936-4225-aa24-08a12124a7f3"
        },
        "item": {
          "id": "ece76493-dbf5-419e-9386-1692a5a0a51c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "755cc22f-aa1d-4884-8e9b-b8b70cd2ef1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6222e777-12aa-47bd-b9a3-5ed382f58cde",
        "cursor": {
          "ref": "4d785d1f-9954-4af7-8648-26a275937643",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bcf6a3cb-7735-4fa4-91f6-2c7b5c967f99"
        },
        "item": {
          "id": "6222e777-12aa-47bd-b9a3-5ed382f58cde",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "81c3b338-bd32-48b3-af53-ccb92d3909f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4d1f88-2322-4add-9ee8-c86d1c0e7499",
        "cursor": {
          "ref": "808cf531-9e29-491d-9e9e-e9aa62424817",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b2550cb6-bc43-458b-ad4e-53f6bfa4c5f5"
        },
        "item": {
          "id": "4f4d1f88-2322-4add-9ee8-c86d1c0e7499",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c2b38e8c-16f1-41aa-847f-4981447c3297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68151734-0cd1-47c4-b81a-a169c0e96924",
        "cursor": {
          "ref": "29826b53-6222-41c0-b857-5745be7f9a17",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "96e6fa69-5527-496e-8850-186b90e6b3ba"
        },
        "item": {
          "id": "68151734-0cd1-47c4-b81a-a169c0e96924",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "398be854-1b01-405a-91bd-a560ddeac2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a4575a-7b03-4ead-9f58-082d036907cb",
        "cursor": {
          "ref": "e6f0a3bd-d912-41af-9b59-b3a2c3874b32",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a80388ff-d217-4e39-8c95-b70e0ba1ee8d"
        },
        "item": {
          "id": "01a4575a-7b03-4ead-9f58-082d036907cb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "991071b4-79e3-4e7f-a751-d9634d2bb6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3858fdda-39f5-4187-86a0-2387d04171a6",
        "cursor": {
          "ref": "073f44b9-f48c-4dac-9020-af5b2520823a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "15d2dc1e-c545-4f86-aacd-caead011e006"
        },
        "item": {
          "id": "3858fdda-39f5-4187-86a0-2387d04171a6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d5423cc8-f1af-451e-b4ae-5fd16e4d2571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d37a79-5691-4983-a2ab-518444f2acd7",
        "cursor": {
          "ref": "0d7ad3bd-dba2-4cfa-9efe-e1c761acff27",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ed05ee6d-f051-437a-a1ff-e0e81cffac06"
        },
        "item": {
          "id": "84d37a79-5691-4983-a2ab-518444f2acd7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "11a07e25-8ed7-4311-8f7d-581e7e5e8037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb34bc42-828d-493f-8c3a-834927188276",
        "cursor": {
          "ref": "d380def3-4ffd-4c4c-8cdf-c7d8220f6d50",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "39a0d49b-4904-4712-adce-2cf40a14a35f"
        },
        "item": {
          "id": "eb34bc42-828d-493f-8c3a-834927188276",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "75d05a15-a5c6-4176-8c28-00e3e0c8b394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855f7893-86c2-48f3-b1eb-5a611ccdda10",
        "cursor": {
          "ref": "c5d11b89-b825-4866-9b0b-db6e02c76356",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "13074e2e-3dc8-4df2-bfa3-47bf2963da95"
        },
        "item": {
          "id": "855f7893-86c2-48f3-b1eb-5a611ccdda10",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "80232b8d-a7a8-4e4a-8c69-0642e1a36640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121b967e-e432-44b2-b07a-10393701a12e",
        "cursor": {
          "ref": "c000d9ef-f153-4eeb-ab0d-987b49644e42",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "206ca5e8-4228-4d5d-bdd6-4d72b00092f8"
        },
        "item": {
          "id": "121b967e-e432-44b2-b07a-10393701a12e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7f2d271f-0273-4ad9-9d89-ee76374a4c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6b49d-7cba-481e-a8c4-c1ea192b1e30",
        "cursor": {
          "ref": "03f969f3-45b7-41cb-a2e2-f931e5b62c01",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9ed2a01e-66bf-4d5f-bf60-3ce663875dff"
        },
        "item": {
          "id": "40f6b49d-7cba-481e-a8c4-c1ea192b1e30",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "640e43d6-5bb5-4d8a-a595-c81994ecbd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328ce0cf-f58f-492d-9984-731821273041",
        "cursor": {
          "ref": "d534e814-2bf6-4d19-b3df-6288f232faed",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "723d0f21-7cb4-4e00-84bf-e0187e94e6b8"
        },
        "item": {
          "id": "328ce0cf-f58f-492d-9984-731821273041",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "32cf2c42-e90e-475c-9bdb-e5177460ee08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0521bea4-171d-4bba-ac65-d8e4763bcff4",
        "cursor": {
          "ref": "90bee328-b5fe-4f00-9d33-af25afc2a3db",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "22bb93d0-e70f-4e82-9a85-0bc61164780b"
        },
        "item": {
          "id": "0521bea4-171d-4bba-ac65-d8e4763bcff4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "abf247d0-ba7e-409a-a8a7-5dedef5f5408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb9d8f9-5ce8-4ea6-baec-fcb96f46389e",
        "cursor": {
          "ref": "a5b503c6-34b3-4df0-ac26-32c8c1e54485",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a02b6715-72cf-4ded-9889-c4fb613a675a"
        },
        "item": {
          "id": "dbb9d8f9-5ce8-4ea6-baec-fcb96f46389e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ae618c58-ba5b-4d9b-88c4-84fa669a05be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143841db-cb29-476a-ad3d-83c7b7746b50",
        "cursor": {
          "ref": "8074cefe-a1d7-4358-87b2-be9504693fd5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1e62927d-ccea-46ca-931f-1e1cc74d7bd1"
        },
        "item": {
          "id": "143841db-cb29-476a-ad3d-83c7b7746b50",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "680abd88-c5db-4a68-abee-cf2578f313dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed44d40-9729-42dc-b3f2-e671430242d1",
        "cursor": {
          "ref": "463a17f1-9afd-45eb-833a-59b2da8e90e9",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e2c5e334-c191-46d5-85c9-917aaa133611"
        },
        "item": {
          "id": "2ed44d40-9729-42dc-b3f2-e671430242d1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a19adac5-0e43-4efe-99a4-12a4010b8713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec1ef19-d688-4d00-a859-f966633f9fa9",
        "cursor": {
          "ref": "dbf45f4b-4599-450e-b6f8-2accc581a67a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "46e5d095-e916-4da7-84a9-dd9182d5fee6"
        },
        "item": {
          "id": "7ec1ef19-d688-4d00-a859-f966633f9fa9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2068737e-97da-4a6f-bc7a-da320c55eb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a2ec9b-7148-4594-8161-1650c94c42d1",
        "cursor": {
          "ref": "47900e37-49bc-4c32-879a-659dc0d75f6b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "00d23b66-414d-4f5c-a796-1fc97b3a98d5"
        },
        "item": {
          "id": "45a2ec9b-7148-4594-8161-1650c94c42d1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1a789a32-e635-41a9-ba73-3486aeb0cb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5895892e-e2f4-4f79-97ab-058df0587894",
        "cursor": {
          "ref": "5c5ce870-af8d-4844-b7bb-84f04f65efed",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "788508fe-e51a-4b56-9e9c-6ad83c5c97b2"
        },
        "item": {
          "id": "5895892e-e2f4-4f79-97ab-058df0587894",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3e2f73e5-9b5c-4b5d-8373-452d1b9a1722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d13f71-e884-4fc4-83ee-7d68a80f4ba8",
        "cursor": {
          "ref": "6acdf928-03f9-4bfa-80b2-a57c7b752e10",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ed577d79-d324-4ca0-9745-3fda1f480ae9"
        },
        "item": {
          "id": "d3d13f71-e884-4fc4-83ee-7d68a80f4ba8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fd70fc37-39b9-4b19-9ecb-73e87147cb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94377769-a8db-47c3-ac2a-e9fb4d1fa4c7",
        "cursor": {
          "ref": "74adcf84-e123-4c8d-8561-e401fd1dc7b1",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2f6a85ac-ebfa-4b39-bdd7-049b0600e967"
        },
        "item": {
          "id": "94377769-a8db-47c3-ac2a-e9fb4d1fa4c7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ff584e01-4548-4473-9e6a-4b8e7094e6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f07d8d-e293-4971-a0f0-9d4e26b16cd4",
        "cursor": {
          "ref": "d6ff24b3-4af0-4d73-96d7-18a4a7ecb5aa",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6010b932-9d05-414a-8e36-33f24133ad35"
        },
        "item": {
          "id": "92f07d8d-e293-4971-a0f0-9d4e26b16cd4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0ea138dc-55c7-4170-b48f-84ea68555705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929a6630-d34e-4447-82b9-c337d37b5312",
        "cursor": {
          "ref": "d26fe819-78c3-4c3e-a145-592e72f61a60",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "25935ada-abd3-4d94-b30b-f01d80418251"
        },
        "item": {
          "id": "929a6630-d34e-4447-82b9-c337d37b5312",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6b2d41af-ee9e-4569-b50c-7ea0fb4f21bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2484faf9-6deb-49e5-b79a-10268fdc55c4",
        "cursor": {
          "ref": "87bae7f9-e22a-4bc5-9e45-0d6444d62a13",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b2b8e487-6e8c-49a4-ba64-98cc4c94e24d"
        },
        "item": {
          "id": "2484faf9-6deb-49e5-b79a-10268fdc55c4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "271e44c7-a94f-455b-886f-cb6156acd9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1eeabf-60b6-4161-9d7b-0f252d33f451",
        "cursor": {
          "ref": "fa5cacc2-e710-465e-943d-b5ee6aea930d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dda93e8d-1c7d-4267-9f2f-62a7c1b6797e"
        },
        "item": {
          "id": "1c1eeabf-60b6-4161-9d7b-0f252d33f451",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f27011c8-682b-44a0-8bcf-5ac95389a98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8008c1b9-5b97-436e-bc5e-5afb21a8d3d2",
        "cursor": {
          "ref": "2da5e4ff-7191-4282-8f9e-44b9033631f7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ae72649b-ed65-4c8f-b996-8074d4ce22c5"
        },
        "item": {
          "id": "8008c1b9-5b97-436e-bc5e-5afb21a8d3d2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0cc3bd61-27ec-48e5-8c2c-88db27504cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9cc27b-3769-4857-9227-d4e4a2c45438",
        "cursor": {
          "ref": "7ec816d0-3322-4001-959e-b9f7a7550ab0",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "52d6489d-127c-4049-969a-aa8e623d6adf"
        },
        "item": {
          "id": "ba9cc27b-3769-4857-9227-d4e4a2c45438",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "05eaa366-3773-445f-9e1a-e7e550b0f6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bb0aa1-8caa-406e-91ab-d8df4377355f",
        "cursor": {
          "ref": "3ca1db4d-641f-4058-ab37-6e97fc4a576a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a290bd0e-69f6-448f-bb4f-aee4c212d4e9"
        },
        "item": {
          "id": "22bb0aa1-8caa-406e-91ab-d8df4377355f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "819a5171-b861-4ccf-9995-17e64fee601f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae40d74-f8f4-4c6d-8c5a-0e1d870b813d",
        "cursor": {
          "ref": "c0c6c47e-506b-4239-abc0-cc5764670b01",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8f6be015-32c0-4fae-a536-012e8e28703b"
        },
        "item": {
          "id": "5ae40d74-f8f4-4c6d-8c5a-0e1d870b813d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ff6822d3-10df-487a-87f5-f93845a0c3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cad586-e4c5-4bf1-9496-f25b132758c7",
        "cursor": {
          "ref": "a22848e6-c420-4369-964f-a3285b824d28",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2d68bd99-fe51-4ce8-b475-924bfb3a7b87"
        },
        "item": {
          "id": "f5cad586-e4c5-4bf1-9496-f25b132758c7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "14551595-61c3-412b-b7dd-48d5978f5e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e780b98-0c0f-4b18-b3e7-8efdcc89db50",
        "cursor": {
          "ref": "7023e668-0285-4727-9808-683840a0c124",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e6b8a66b-b830-408b-8d25-d7b71e03bddc"
        },
        "item": {
          "id": "5e780b98-0c0f-4b18-b3e7-8efdcc89db50",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cfd44f0d-a731-4846-8a7c-558dd0d4cf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f4b0aa-173c-4772-ab64-2afc48cad3b4",
        "cursor": {
          "ref": "084b7371-e415-49bf-9fca-c475c2524b39",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9d5bc85f-f3dd-4602-8a46-2383c8ddfe61"
        },
        "item": {
          "id": "a4f4b0aa-173c-4772-ab64-2afc48cad3b4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d5075216-02f3-49eb-b645-413730686264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cacae62-0040-4c57-aad2-5f0bbf75612d",
        "cursor": {
          "ref": "893eba0b-d292-4ebc-bcac-fc39e08e112c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "912cf3be-6eae-4efb-92c8-c91e90e1ce93"
        },
        "item": {
          "id": "0cacae62-0040-4c57-aad2-5f0bbf75612d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "896d16fc-54f9-41d5-ab6b-9412882cdbdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aec773a-6847-44a1-8240-8c804e5e70f9",
        "cursor": {
          "ref": "670db029-366b-467a-a422-37a9d390bae5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5fe49638-e60d-4f20-94ff-8fc1c25b9d33"
        },
        "item": {
          "id": "4aec773a-6847-44a1-8240-8c804e5e70f9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c797660d-e7ba-4854-9703-e276b2daf229",
          "status": "Created",
          "code": 201,
          "responseTime": 6346,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cd4f36-97e5-4d90-9b85-2dd97228fe7a",
        "cursor": {
          "ref": "bf1a90ef-ce52-4d0c-a410-bf850711ebdb",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a58b5f20-275a-489a-b0e5-915aff3a5a88"
        },
        "item": {
          "id": "66cd4f36-97e5-4d90-9b85-2dd97228fe7a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eda502b6-f391-47d8-86e2-ba0360d37b65",
          "status": "Created",
          "code": 201,
          "responseTime": 6378,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5257e86-0a0d-4e96-b0ac-1249fe65c400",
        "cursor": {
          "ref": "5e74a483-fd16-4587-970f-c9c82734c96c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a9f127c1-24f2-48ae-b702-3e89c12978fa"
        },
        "item": {
          "id": "c5257e86-0a0d-4e96-b0ac-1249fe65c400",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ca45add0-4b11-47e4-9834-b6c8ee238486",
          "status": "Created",
          "code": 201,
          "responseTime": 5312,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefee918-eb69-4272-a443-126b7a37588c",
        "cursor": {
          "ref": "8302e5fe-5ffe-4788-bf95-2030ba566337",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b910ce3d-3afc-432e-96e7-8e9715ef4c4e"
        },
        "item": {
          "id": "aefee918-eb69-4272-a443-126b7a37588c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7d788a18-c261-400c-b3d3-2dfbae066dd8",
          "status": "Created",
          "code": 201,
          "responseTime": 5721,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef96d9a-646a-4fda-ab0a-d093ec119d84",
        "cursor": {
          "ref": "815fa011-2e57-459a-b0e4-57644be3ca8a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4b4245bc-6fa1-4ac2-8a59-620142509c97"
        },
        "item": {
          "id": "fef96d9a-646a-4fda-ab0a-d093ec119d84",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "47b33877-29ca-484a-b1fb-daa8d4a83219",
          "status": "Created",
          "code": 201,
          "responseTime": 5979,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbbcebf-5fb9-402e-a4da-7375d4a78119",
        "cursor": {
          "ref": "6bb7b04b-ecc4-4d38-b4a9-8e5980bea069",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c7926c6f-7c70-4d37-8cd3-d2234b3fd584"
        },
        "item": {
          "id": "afbbcebf-5fb9-402e-a4da-7375d4a78119",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4b1608d9-8888-4887-9c85-cb90a68f240c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b84e12b7-301e-44ba-a1c3-67ca0b1b6253",
        "cursor": {
          "ref": "37fcce45-40de-4f5c-89f9-6e9ffb6edeab",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0bf77c57-68b3-4cf9-ab09-ce9b7cca8346"
        },
        "item": {
          "id": "b84e12b7-301e-44ba-a1c3-67ca0b1b6253",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e06a5904-2879-4daa-a355-61934df997d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25469f2-bed0-489d-9a83-23709770ab7c",
        "cursor": {
          "ref": "70d6c5f3-5931-4296-906c-7ff79bd660f0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aac7f2de-cc98-4e21-9ac3-9deb8a0d5fa7"
        },
        "item": {
          "id": "d25469f2-bed0-489d-9a83-23709770ab7c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "47331c65-a229-4a5b-a22f-9a4c910b130a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e5c5c3-42d9-4d51-b169-4cfdb65bbd11",
        "cursor": {
          "ref": "ba422883-6ffd-4276-9809-baed6b4f9e45",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2e619ead-237f-4d31-8f11-59438f3bc28e"
        },
        "item": {
          "id": "93e5c5c3-42d9-4d51-b169-4cfdb65bbd11",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "69861ab8-7f36-4d4f-aadb-4e46dbbb9cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a999c17-7d58-489c-831f-427b5c6de3f4",
        "cursor": {
          "ref": "3149a89b-2f57-45cb-99cc-4aaa60d1e485",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "06b077eb-d89b-4360-84d1-f8138a88c3de"
        },
        "item": {
          "id": "9a999c17-7d58-489c-831f-427b5c6de3f4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dda3f412-bda8-4272-98a8-80f6f41a6f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbe81ed-8abc-4013-8759-e21fef74b720",
        "cursor": {
          "ref": "88adaf03-bd1e-4212-9f07-01b924eda346",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5046fb14-ec3d-419c-8b1c-c23e35985b3f"
        },
        "item": {
          "id": "bcbe81ed-8abc-4013-8759-e21fef74b720",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bcd9b7f5-b5ef-4eb5-b23b-d2056cafd0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f5c081-d757-4d16-bf53-f5f527207c9f",
        "cursor": {
          "ref": "1dbfaa23-b635-43ab-8914-732edff00b77",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "55ee3f43-6a77-4b16-8976-1908bc931f07"
        },
        "item": {
          "id": "d7f5c081-d757-4d16-bf53-f5f527207c9f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4b98ab36-bd10-4ebc-a99f-b80cc2e54d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9a235f-7805-4cc6-8246-cb0063e60290",
        "cursor": {
          "ref": "d999d63e-e839-471e-8c4d-1ad9818304ea",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7fc4907f-3d3c-4461-818a-b03e8c607eba"
        },
        "item": {
          "id": "3f9a235f-7805-4cc6-8246-cb0063e60290",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dd5a383b-c900-4633-a7cd-d172bafa071a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda4bc6e-dae5-48ae-8e5b-a1dd7d3233d8",
        "cursor": {
          "ref": "00524012-8e09-462a-afa8-ce92b9e5f69a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aa72e456-9a5a-42bd-b0b7-7745f55e0233"
        },
        "item": {
          "id": "fda4bc6e-dae5-48ae-8e5b-a1dd7d3233d8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3979fda5-5e2f-4277-9f30-e3441250fe00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5bb7b2-61c8-41e6-8df0-cb81f079e403",
        "cursor": {
          "ref": "f390d565-898c-4555-8f11-befc6106a54d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "53492289-396a-40fa-96e2-6ad7669eeac2"
        },
        "item": {
          "id": "da5bb7b2-61c8-41e6-8df0-cb81f079e403",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "22755abe-8812-459d-a7bc-2903d54eb8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1422626f-1d47-4ad6-8dab-b1c8c77bce27",
        "cursor": {
          "ref": "4dddec52-4fa1-4d3c-b4d8-4aa12b1d16bf",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0fe7fddb-5fd0-49c6-91ac-508b985633f5"
        },
        "item": {
          "id": "1422626f-1d47-4ad6-8dab-b1c8c77bce27",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e81658e7-c66b-455b-94ce-c8df244ae46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9c5ae8-ea46-4ca1-89d2-e50949fe592d",
        "cursor": {
          "ref": "f7369714-aba4-4ad5-96f5-f0c312d0edd1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8d0446dc-8151-4b69-9cff-80df62ae8c6a"
        },
        "item": {
          "id": "7b9c5ae8-ea46-4ca1-89d2-e50949fe592d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a62c80e3-57c3-4e3a-824c-6a9258e6ee04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0f433c-1d48-4b24-855f-49389ce086c8",
        "cursor": {
          "ref": "65a1b1fc-cd09-4c20-9322-f0d50ba23261",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "76ed4900-7c81-466d-ae48-9720a15aab56"
        },
        "item": {
          "id": "6f0f433c-1d48-4b24-855f-49389ce086c8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ec4deabf-d7bc-4a8b-9bb5-25b33bf9b000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a8f5f-32bd-4fe5-abd1-fe8b93ba50fa",
        "cursor": {
          "ref": "72dc7269-1e93-443d-8a9f-00433ea8f5bd",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e9496b9f-a000-4996-9347-ce4404919470"
        },
        "item": {
          "id": "b05a8f5f-32bd-4fe5-abd1-fe8b93ba50fa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d1daf93e-cc7e-4d3a-bdd1-e406ecc9d8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b562a5d5-782c-44ea-b62f-6b4d9b0ca2cc",
        "cursor": {
          "ref": "0cf8da4f-5372-4d2c-b904-be6e54be44c6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "57c6497d-5844-4571-b873-5544c0eecf10"
        },
        "item": {
          "id": "b562a5d5-782c-44ea-b62f-6b4d9b0ca2cc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0f72f0e8-6952-42e4-9f20-0312c3c3013e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c61915c-3f78-42d8-b7fa-51fee10ce835",
        "cursor": {
          "ref": "cc250305-42ff-442a-9de4-8ddc474b0689",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9bb86824-4007-4e18-b07c-7ca4d0147155"
        },
        "item": {
          "id": "1c61915c-3f78-42d8-b7fa-51fee10ce835",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "64387898-0582-459f-984f-cb15157a1c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530ed8d8-3e25-48e9-bdaa-8c9abc91d3da",
        "cursor": {
          "ref": "5149e68f-117a-41eb-9c2b-a75be0284e9e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "085aa384-0d10-4ea0-9e06-49b7dbe5a4b2"
        },
        "item": {
          "id": "530ed8d8-3e25-48e9-bdaa-8c9abc91d3da",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "63145cb5-9cd2-4022-b8ad-13b7d0fda588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4283cec3-1fc2-49c2-ac50-55188c801182",
        "cursor": {
          "ref": "62c3285f-ab71-4592-9898-d8f3241e6f2b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f0a1fde0-7731-4be8-afa4-60afb0e19f44"
        },
        "item": {
          "id": "4283cec3-1fc2-49c2-ac50-55188c801182",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ee5ca909-0def-4eb4-ba7b-fe8753833ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078d2179-a155-44fc-a843-53ba4e915df2",
        "cursor": {
          "ref": "f3756df2-b957-4c84-b340-06a496db70f0",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7013db68-4916-4127-b6c4-950d0bbf662f"
        },
        "item": {
          "id": "078d2179-a155-44fc-a843-53ba4e915df2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "43d77419-4260-4636-a808-d9ac130e1843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325ef690-c2a8-49c0-a4cd-5c510a7a51cd",
        "cursor": {
          "ref": "4e6a76b6-a5bd-47d9-bdd7-16d376abf0e4",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "963eefb2-21ec-4b79-8ebd-d177568f2327"
        },
        "item": {
          "id": "325ef690-c2a8-49c0-a4cd-5c510a7a51cd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9257e920-dab6-4dd1-b6f3-919e77a0aa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88375c8-4e41-4f8e-9bff-4a25a7ee6af6",
        "cursor": {
          "ref": "d57764af-65d1-4aa9-9aa4-92cc96e56666",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0371c55d-1c0d-49d5-adce-beabe011b946"
        },
        "item": {
          "id": "d88375c8-4e41-4f8e-9bff-4a25a7ee6af6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "68267636-e6b2-4851-bc2b-c0b2134d558c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a9693b-1421-4a58-9dbe-003c75482ae7",
        "cursor": {
          "ref": "f2ee1297-e794-42ff-b96d-6fba5c056de8",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "db53356b-f334-4f77-973d-44b3d27e91ed"
        },
        "item": {
          "id": "30a9693b-1421-4a58-9dbe-003c75482ae7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "94ebbdee-57d8-4bb3-8957-2ab83dc202d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aab8ae-5bbb-4a48-80bf-8d250376e47d",
        "cursor": {
          "ref": "a2ed4f5f-14de-4f50-9dd1-efcf8ea2df51",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "19b76aa5-5cb8-40f7-ad12-9a827999c32d"
        },
        "item": {
          "id": "d7aab8ae-5bbb-4a48-80bf-8d250376e47d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "edc05175-1875-44ce-be17-4b22a3a85ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2a4fb7-a791-4492-9400-79fea61b4be6",
        "cursor": {
          "ref": "9f599a08-64c0-4bb4-8437-7bb6124f3803",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c239a66a-210b-458a-ada8-4328cbf47560"
        },
        "item": {
          "id": "0a2a4fb7-a791-4492-9400-79fea61b4be6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d51e87b6-28d3-470f-8173-6f2775097b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9beb6296-d19c-44ab-8506-c67708de64ea",
        "cursor": {
          "ref": "bb32f8d9-c339-459e-ae27-5eea398e0e42",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6dfecaad-c6d7-46ea-89c8-34fc58fdd681"
        },
        "item": {
          "id": "9beb6296-d19c-44ab-8506-c67708de64ea",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e0c095b9-8bce-423b-9a8f-cf7e93844193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cfb426-0bb0-442a-954f-0405467330df",
        "cursor": {
          "ref": "9ac93fe7-4ff3-403a-9090-07e755b6f93a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f74bdbe4-bb72-4233-8a2e-0198d6b5430a"
        },
        "item": {
          "id": "79cfb426-0bb0-442a-954f-0405467330df",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c614a381-d8e8-4e48-813d-5e990420c93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69c481d-edaf-4907-98a2-834bd89db57a",
        "cursor": {
          "ref": "086da0bc-7e9d-4cf0-98b3-1573c0ee172c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5ea2128f-d2d2-4345-aa1d-1ff3a3610832"
        },
        "item": {
          "id": "b69c481d-edaf-4907-98a2-834bd89db57a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "874fffb0-e891-4455-90be-281e0a889168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f377d45b-67e9-4268-bec9-78dd166a04bb",
        "cursor": {
          "ref": "0b40c358-457c-4ac0-abc5-667bab710e9e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "76f55a75-e3b1-4b21-abe3-20a11ea5c6da"
        },
        "item": {
          "id": "f377d45b-67e9-4268-bec9-78dd166a04bb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6f03ce46-f6ce-46f1-98d4-515a20d57b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83008f0f-5e0f-4f33-bb26-093b03376b29",
        "cursor": {
          "ref": "0d2c00d8-d2ce-424b-908c-7e3118c0742e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2b20851f-85a1-4cc7-a13a-484f6c71f261"
        },
        "item": {
          "id": "83008f0f-5e0f-4f33-bb26-093b03376b29",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "15df2b9f-d357-405f-9722-dfc361dfa3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f015e502-b1ae-418d-b457-b688556c225b",
        "cursor": {
          "ref": "eb9d8404-577f-4861-a5f4-e22364e1294d",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c427c355-f423-4753-81bd-eabab948688b"
        },
        "item": {
          "id": "f015e502-b1ae-418d-b457-b688556c225b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "350b4a78-7bde-4801-a542-f47b89c117fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3d466e-66c1-449f-a671-37d8c38e2728",
        "cursor": {
          "ref": "6b1f02e2-cee9-4f91-88e3-487805b73192",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9e80d1c9-d9ae-4d3f-8327-9a3a381c8cc3"
        },
        "item": {
          "id": "0a3d466e-66c1-449f-a671-37d8c38e2728",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "106fd20d-fff3-4487-8349-77533bfc9bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b916332-954a-4c32-909b-abdf895f1cb9",
        "cursor": {
          "ref": "edc0c4f6-7c20-4264-b371-83064fd78470",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "12526dc3-db39-4c29-92b4-807d084feb5b"
        },
        "item": {
          "id": "3b916332-954a-4c32-909b-abdf895f1cb9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "39a3cb0e-eb31-4f51-b9d4-645ed9961b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78404cba-d31a-46f2-b3ab-83731df08efd",
        "cursor": {
          "ref": "ba38a7b7-61a2-4269-8148-9033282e4dd0",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8f2c8df7-6c2e-4d64-b8c9-e66db5e3cae2"
        },
        "item": {
          "id": "78404cba-d31a-46f2-b3ab-83731df08efd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d09ce3da-8ecd-477c-9936-7f46bc2140ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a1e168-98b3-40c4-8894-4b2dd080ec09",
        "cursor": {
          "ref": "3c27410c-0cba-4198-951d-73d4b8ba9fc7",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "22a7c7ec-246b-4857-9d6b-6ce2cc3608de"
        },
        "item": {
          "id": "c6a1e168-98b3-40c4-8894-4b2dd080ec09",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b2c049aa-3e50-43ac-905e-4852784208c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808802d3-c8b4-4ddb-944d-55ad833de5fb",
        "cursor": {
          "ref": "9fed8724-b433-43f7-8255-4388788c34fa",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ae3a2cdb-df08-453b-a565-d964e3be6f8f"
        },
        "item": {
          "id": "808802d3-c8b4-4ddb-944d-55ad833de5fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e25c4ac7-1ceb-4e8f-b172-8439f90279a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bae127-6be5-47ee-b6ed-1f34b44e77b9",
        "cursor": {
          "ref": "a2909906-c78f-422e-ab40-5ece2f4d129c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ac69cf3e-492c-4e41-b2b6-837e2bcaa398"
        },
        "item": {
          "id": "a2bae127-6be5-47ee-b6ed-1f34b44e77b9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a4a97a25-f9a7-4741-8639-5930c3f9f7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae98e1c-1b25-4ec5-9d55-b55bf9eda50f",
        "cursor": {
          "ref": "c549b887-2847-40ff-b201-fce4e9f71b36",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "43b726c7-6d51-4c24-9d0c-293e4faf35de"
        },
        "item": {
          "id": "6ae98e1c-1b25-4ec5-9d55-b55bf9eda50f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "46eeeb7d-30e2-4f56-ad31-daeca749f816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3b3d3c-faab-4f49-89af-b7697b776fd1",
        "cursor": {
          "ref": "2e76ff61-0d5c-40ca-9921-47a1d0e4453a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5db3c960-8a68-46bf-b735-f04342f2d15b"
        },
        "item": {
          "id": "2e3b3d3c-faab-4f49-89af-b7697b776fd1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b647ae8b-7413-483b-b2c6-1ee5cf928610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66418cda-aa3f-4ecb-b4cc-8b7822421b4a",
        "cursor": {
          "ref": "978a571f-1fb1-4722-91cb-91d3d182cdb9",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f8f4dd1e-b015-40be-ad69-ef106635e972"
        },
        "item": {
          "id": "66418cda-aa3f-4ecb-b4cc-8b7822421b4a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "af9198f0-b526-4c17-92b3-face61e0252a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e295c7-bba7-4c23-a9f4-5582d64efee3",
        "cursor": {
          "ref": "8748b6ec-1ed6-4d4b-83f5-8a7fd7874661",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "487e6e38-e975-4976-9033-21192b729d36"
        },
        "item": {
          "id": "c7e295c7-bba7-4c23-a9f4-5582d64efee3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "65c5f4ac-e341-47e0-a30c-c639eeadcec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26f17ef-5e2d-4faf-a5bd-eb168aed9b37",
        "cursor": {
          "ref": "a352c450-b893-4581-a1fd-e56554a9146d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "87a1b5b7-422d-43bf-91eb-f89bacbd16b0"
        },
        "item": {
          "id": "f26f17ef-5e2d-4faf-a5bd-eb168aed9b37",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f48c5c84-87ef-45f1-a01e-6f43779893b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22a56d2-7312-4d5a-9f40-0b1b1ff1fb68",
        "cursor": {
          "ref": "f2ed4927-55d7-48d6-9b80-f244ecf0875b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f98fdf05-e592-4500-a07b-540900e7391f"
        },
        "item": {
          "id": "f22a56d2-7312-4d5a-9f40-0b1b1ff1fb68",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c9e58fe-91da-4b54-85f8-30fdcbac9a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a881cc5-a77d-4258-bb5f-30ecc67b9809",
        "cursor": {
          "ref": "5ed32eef-6603-442b-9bfc-fdcfd669a8cf",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5c63d683-d42d-4431-bb1e-4192df0c4e14"
        },
        "item": {
          "id": "5a881cc5-a77d-4258-bb5f-30ecc67b9809",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7f9233cb-4f47-4e13-8d2b-b3f068f057a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d9a352-4039-4260-8960-81b52f5ee9fb",
        "cursor": {
          "ref": "da11418b-6c2b-4a0f-b48a-4509085ad36a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "27db9401-3384-47d8-a347-806f16115a2b"
        },
        "item": {
          "id": "58d9a352-4039-4260-8960-81b52f5ee9fb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "14b1695e-36c8-4a63-8ec8-ed608e7c09f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f46ea0-cada-4b43-b9c8-f9baabce97be",
        "cursor": {
          "ref": "682781d6-16e5-4f45-9c88-af6e5110f107",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "95c6925e-10a4-482f-b130-a216c9f2df29"
        },
        "item": {
          "id": "a5f46ea0-cada-4b43-b9c8-f9baabce97be",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ec15449e-ac20-4ebc-886e-e9dc8d343cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722cec03-9b0f-4da8-856c-ce3e34429200",
        "cursor": {
          "ref": "469779ab-42f9-4bce-8fa7-505231d1dcb2",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b51c3306-8813-492e-b8c6-b89c0798f014"
        },
        "item": {
          "id": "722cec03-9b0f-4da8-856c-ce3e34429200",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "55a366e6-1393-4a2c-b8d0-712742ecf768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa00feb-6480-40c9-b142-b9f1d70728bb",
        "cursor": {
          "ref": "8fe843bb-d097-4ded-801e-d9a03b14729e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fb2739bf-6686-4ee3-b2bd-1a1d503eaeb5"
        },
        "item": {
          "id": "8fa00feb-6480-40c9-b142-b9f1d70728bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c6ad90d1-9d5b-4da4-8d96-be8fec3f6a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98e6af1-1ee1-4719-902d-4ce3a906f1a4",
        "cursor": {
          "ref": "cb872ff1-0df1-468d-939b-9e204c083ae0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0045f140-be4c-4538-ade2-69df312df398"
        },
        "item": {
          "id": "c98e6af1-1ee1-4719-902d-4ce3a906f1a4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8409af9e-66d3-4bfd-bdb4-ab1d5b129b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87510935-be66-4728-b370-c3f298626da7",
        "cursor": {
          "ref": "8a3da196-073a-4282-bd23-3b2ef823166b",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5af24a40-0715-4b94-90f8-ab20626b7d5a"
        },
        "item": {
          "id": "87510935-be66-4728-b370-c3f298626da7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "34aaf4c9-e1d2-44dd-a354-028775f8dde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdb7c3e-5dbc-4dd2-916d-47f0faaef171",
        "cursor": {
          "ref": "b3b9c7e3-afaa-4ae2-8b43-eac168e3f840",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3b529843-9158-4714-9b15-d9d2586ced0f"
        },
        "item": {
          "id": "9cdb7c3e-5dbc-4dd2-916d-47f0faaef171",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "06d726e7-5255-417d-a60e-53224ede3920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dcfbf3-e103-42e1-9a72-aafae33bd08e",
        "cursor": {
          "ref": "0cb4fc06-e616-4962-8fb5-b6a5f0d07a01",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6bd11e5c-ded0-42c1-82d3-7aea54e661b0"
        },
        "item": {
          "id": "89dcfbf3-e103-42e1-9a72-aafae33bd08e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "42841e2b-b54e-4d45-8051-a18d5de61145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e02545-426d-4bbe-9534-d2a4ea110da5",
        "cursor": {
          "ref": "20fdebfe-8a3d-45f0-9666-38d63b853b3a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1d879773-7a05-4dbd-b9ec-0fea20e75b4e"
        },
        "item": {
          "id": "89e02545-426d-4bbe-9534-d2a4ea110da5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f9397f8-a9a8-4363-b1fe-4ec9c3206853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4ff845-ce4a-4bd1-98a5-95dd6fa4f4fe",
        "cursor": {
          "ref": "2bbbaee5-e5f3-44fe-aff1-036524660395",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "730bd572-ef3a-4705-826b-8cec23a2972c"
        },
        "item": {
          "id": "0a4ff845-ce4a-4bd1-98a5-95dd6fa4f4fe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "79591508-6711-42fe-9cd6-3ce604bab7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbef9c03-201e-41f8-850a-701dc3e45519",
        "cursor": {
          "ref": "d7c3f860-9fea-4742-9668-5f0c302b0b90",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "435a49d2-3ef5-4f08-8f5a-713ae57128ba"
        },
        "item": {
          "id": "dbef9c03-201e-41f8-850a-701dc3e45519",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "623374a4-e968-41c1-9e22-b8cbb4f503d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3feaeb-1f63-4b7e-9b29-9d8af42c8c0b",
        "cursor": {
          "ref": "8972f33f-9ac9-4e58-9b28-4aa227b502f5",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d6fd8057-5df8-420a-b2ec-0167f41e3368"
        },
        "item": {
          "id": "ea3feaeb-1f63-4b7e-9b29-9d8af42c8c0b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b41e9cfe-8234-4854-b8ff-f75565cb97f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c466481-c765-425d-b8bc-fd69a834c43c",
        "cursor": {
          "ref": "56e410ed-f247-455e-83a7-22a864e31909",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "839ec1c0-02e1-4e9a-918e-6ef841034a2e"
        },
        "item": {
          "id": "4c466481-c765-425d-b8bc-fd69a834c43c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cbaf2ffb-a0eb-425e-9d72-a9a1be25db9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cad0412-744f-4190-a42b-f38ef362970f",
        "cursor": {
          "ref": "9142319b-3899-4587-b75b-467ef9fdd2a5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6582494a-ff85-478c-8e46-bc6d5e6cb8a2"
        },
        "item": {
          "id": "5cad0412-744f-4190-a42b-f38ef362970f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a9e3f38f-897d-41a2-8b3a-e0a398fe2a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5388d73-267b-4cd4-8506-425cef490905",
        "cursor": {
          "ref": "2ef5f711-a342-4db7-acb2-239a0a9a4e18",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "48aad962-74e8-453b-b55a-5165875ecef6"
        },
        "item": {
          "id": "f5388d73-267b-4cd4-8506-425cef490905",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f6c52b11-71e2-480d-a3eb-625079912010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07da361c-1203-4bd9-b938-29833a57debb",
        "cursor": {
          "ref": "47ce3b78-ae40-46cb-88f0-068e3d43c35d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a65c15c3-0ebd-4a66-b56f-4804ed624b81"
        },
        "item": {
          "id": "07da361c-1203-4bd9-b938-29833a57debb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "09cc1cd5-ec9b-4754-99a3-766a71309b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5954bf8e-f82a-4615-badb-f612723bd773",
        "cursor": {
          "ref": "c6accd35-8a1c-4af4-bb1f-ef63b3dd93e7",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "526fd898-9823-4a85-b145-c68eff24ac79"
        },
        "item": {
          "id": "5954bf8e-f82a-4615-badb-f612723bd773",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "92b65f04-fa48-41f5-8b27-675487c20dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f4954b-b8b7-4623-8157-d31c7ffa7e17",
        "cursor": {
          "ref": "c0d82f5c-f2c8-4fd3-87b6-c2cc5a8cdfda",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "34bd54eb-299c-4040-b1ce-a9ec47166484"
        },
        "item": {
          "id": "93f4954b-b8b7-4623-8157-d31c7ffa7e17",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "165bc1f5-2a29-4062-9269-96cd950f7eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41cd90e-6e10-4790-98af-15b436aaf4e8",
        "cursor": {
          "ref": "f7eb69df-fc5c-411e-a412-5d6997f8748d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "80fc9b33-32e2-4ae4-95de-f66066dbe3cc"
        },
        "item": {
          "id": "d41cd90e-6e10-4790-98af-15b436aaf4e8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "01f2a8ba-7a99-4962-90b8-1f88729f8da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb7817e-1613-49f6-a414-fcb820822539",
        "cursor": {
          "ref": "f4e1fd62-ff17-4f9b-8b09-adccd6c70931",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5c714aac-4d6b-49b5-b1ed-5cebb4e52df5"
        },
        "item": {
          "id": "ccb7817e-1613-49f6-a414-fcb820822539",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "92a0bf91-efe3-4892-8d52-4b56a85e42a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ad5ec2-0100-4dbc-b1a2-e6f7e4129b61",
        "cursor": {
          "ref": "4dcde4d0-28e2-4bdf-ae7e-71e951464b5a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "43b0d086-a270-4179-a0da-f2a599d09683"
        },
        "item": {
          "id": "78ad5ec2-0100-4dbc-b1a2-e6f7e4129b61",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ae312e66-d03e-46f8-97b2-f777d021c0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501b8664-2611-47ae-9af7-a529ff9cb802",
        "cursor": {
          "ref": "7196a29b-0e8d-4d8c-97c0-609132b71063",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5766a015-1200-4b98-9ee6-a160e84b13aa"
        },
        "item": {
          "id": "501b8664-2611-47ae-9af7-a529ff9cb802",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "26bb7304-b2bf-4ebf-8d35-a50ab128e291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44a76d7-a013-437a-a648-a5360551f308",
        "cursor": {
          "ref": "065e126c-bfea-479e-8b57-995726f52144",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0c9c26e8-e7d7-4cc7-b4e8-768a7c339df9"
        },
        "item": {
          "id": "d44a76d7-a013-437a-a648-a5360551f308",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "70bcc889-e835-4bc5-af65-ee10177d558f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff07ac2-5b92-48b0-b2a7-7975d3fda0be",
        "cursor": {
          "ref": "e91621ea-5cc2-4f57-b995-db08b2904d83",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d9b919c1-1f45-4cc5-841c-cf548c3da643"
        },
        "item": {
          "id": "5ff07ac2-5b92-48b0-b2a7-7975d3fda0be",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7a1dfeeb-95ed-4b82-901f-b5e40da175c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b929f0-8280-49bf-8b2f-e66361d7e0be",
        "cursor": {
          "ref": "00d633e1-b166-41cf-8684-f8cbd15fe21a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d26d7131-c023-48d7-b28d-e59ae822ad4e"
        },
        "item": {
          "id": "85b929f0-8280-49bf-8b2f-e66361d7e0be",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e3caf4b0-e500-4af4-a7ed-38a6398262a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34f4da9-b643-4480-96ec-2546b0871959",
        "cursor": {
          "ref": "9b5225af-45fa-4448-8669-a4624d14f742",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "87215b7c-a76f-4e53-80f9-53cf29473d2b"
        },
        "item": {
          "id": "f34f4da9-b643-4480-96ec-2546b0871959",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3f940494-0901-4445-86d1-441f24daa987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed9c9d2-5a90-403c-b2dc-d6a9be72eb57",
        "cursor": {
          "ref": "8379dc1b-4bb3-4847-8165-bce6627719a2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "79da7499-d0e7-4274-be0a-da64b47fdaec"
        },
        "item": {
          "id": "1ed9c9d2-5a90-403c-b2dc-d6a9be72eb57",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d1406a5a-7d38-408a-88b4-42c4bb6f2f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59ab162-1b7f-494b-8e5c-bb8d1661e988",
        "cursor": {
          "ref": "11243004-5c30-417e-9683-42c8bd73e00d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "72d69a16-ffdf-46fd-8b95-a025de3b3c30"
        },
        "item": {
          "id": "d59ab162-1b7f-494b-8e5c-bb8d1661e988",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "46fa2a67-9c12-422e-aa59-e048e9beb8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed19bfc-56be-4a06-9718-3ce04cac820f",
        "cursor": {
          "ref": "75d51919-2139-46ee-a312-bd852af453d4",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2782a617-18b6-493b-8869-06bf794846eb"
        },
        "item": {
          "id": "3ed19bfc-56be-4a06-9718-3ce04cac820f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d84aad0b-05b9-42d7-9b18-5f6c55ae8882",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f3d0b4-4e31-4f5f-ad60-626727383ae6",
        "cursor": {
          "ref": "537c90b6-798b-40aa-ba05-e02a92e5b982",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "94516b94-dee9-42bd-83ae-b3562817c5de"
        },
        "item": {
          "id": "46f3d0b4-4e31-4f5f-ad60-626727383ae6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "70eef33b-03ec-46e1-9385-2d15184c6214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b88e47-afb2-44f9-bf4d-f451e9818305",
        "cursor": {
          "ref": "46d2550b-0b36-4cce-823a-057a308b213f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5264f3e3-3877-4046-9940-73fcd5c60192"
        },
        "item": {
          "id": "a6b88e47-afb2-44f9-bf4d-f451e9818305",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "60631eee-8345-455b-86b2-561e6a397b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89d5d15-72c5-4d30-a638-89cd27e03af0",
        "cursor": {
          "ref": "e10b03af-230f-4b58-89e7-47c5722cd7bf",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fc47799f-1b49-4e81-8057-859a913ce459"
        },
        "item": {
          "id": "d89d5d15-72c5-4d30-a638-89cd27e03af0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cc5ce3a1-3083-458f-9f19-8e9c1db194bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34731439-45d3-4ccf-821e-ada7c8069025",
        "cursor": {
          "ref": "1dfd50ee-28d7-4231-9b78-4b0294b74773",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "455786e9-f515-4448-921e-ece2181f9eda"
        },
        "item": {
          "id": "34731439-45d3-4ccf-821e-ada7c8069025",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8d6c2df7-1526-44e5-9de6-67bc237d1851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80fd32c-0477-457e-b7db-05a08466dc48",
        "cursor": {
          "ref": "ea342982-6077-4b8b-9783-efe3147e8466",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d69245c6-1e0e-4ad8-8add-247ae9288ea4"
        },
        "item": {
          "id": "a80fd32c-0477-457e-b7db-05a08466dc48",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b008ec5a-c3de-447b-bf9a-af9706ce77a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1a9a08-c240-4d1b-987d-bda7a28aa185",
        "cursor": {
          "ref": "a97ffba0-0df2-4c6b-b1e6-0f24532cd553",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fb479de2-7b25-4c96-bfc0-59c8eb8de2f5"
        },
        "item": {
          "id": "0b1a9a08-c240-4d1b-987d-bda7a28aa185",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "91fcdbf9-c8a8-450a-bb86-425a0bbc9e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4305cbd4-7fe1-4157-b7a5-529d8984f384",
        "cursor": {
          "ref": "9c428562-8f31-49ed-afe1-bd9cc6d39a98",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d2d3ed61-4cf4-448e-a292-5d8cb23751c0"
        },
        "item": {
          "id": "4305cbd4-7fe1-4157-b7a5-529d8984f384",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fe6b00e3-6e00-4ca4-b170-af084d84b6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78a7fa8-9bf3-4cea-8cc7-70511aff9d4a",
        "cursor": {
          "ref": "9c89af36-03c7-4f92-9114-7a60072c30dd",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "be4a386e-a6ca-41be-87c2-a10e441a9165"
        },
        "item": {
          "id": "e78a7fa8-9bf3-4cea-8cc7-70511aff9d4a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5e52f578-756c-4d57-9384-c8f9624320e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f17eb7a-ee7e-443b-994e-19c2c9e6c129",
        "cursor": {
          "ref": "245e3e30-732e-46fb-8f9f-0d7404ab38ac",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "17e005a8-6abc-4ef4-b551-9772c49f87f2"
        },
        "item": {
          "id": "3f17eb7a-ee7e-443b-994e-19c2c9e6c129",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bc375c3b-6de4-45e4-b4ed-1401549ef4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcc2785-468a-4f1b-bbaf-81afa9967881",
        "cursor": {
          "ref": "36380429-22e7-4ab0-9c64-b92cc459c191",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4a243a24-b886-4a13-8d6f-4b207a218ab0"
        },
        "item": {
          "id": "3dcc2785-468a-4f1b-bbaf-81afa9967881",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5cc32cf9-ce94-422e-b7f6-3b1c2a839d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3b5173-48e3-4ed5-9c38-bcfda1c2027b",
        "cursor": {
          "ref": "5cd43149-3c4b-4356-9f1c-1de874c9280d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d36b0691-5489-4ba9-bfb4-33e41fabc322"
        },
        "item": {
          "id": "bc3b5173-48e3-4ed5-9c38-bcfda1c2027b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "639ee084-934f-47c6-95f6-f7e586de38ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa4f6c7-7929-4725-b1a7-4b4acdcf7b1c",
        "cursor": {
          "ref": "2483bef0-3172-495b-9b1a-cdd3422a5668",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "282abdd4-3e45-492c-afb5-dbce124ab296"
        },
        "item": {
          "id": "5aa4f6c7-7929-4725-b1a7-4b4acdcf7b1c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "99956aae-1c67-409f-824a-888222d4a208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b653d66f-1d80-4caa-8542-790914c8cc91",
        "cursor": {
          "ref": "26140ffc-3ea8-4f80-afee-5fc72c56cb28",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d0118eec-f5ac-4c2d-8b60-3e383d04ac14"
        },
        "item": {
          "id": "b653d66f-1d80-4caa-8542-790914c8cc91",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "863f4bbb-f148-4cce-88e6-421cf1168a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbfaeaa-cb21-4afc-bbce-9e6414d8ac6d",
        "cursor": {
          "ref": "fb6e5abd-5b8f-44fb-bb37-5dd8fbd9411a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9dbdf28c-4e50-4bbf-97f1-a60fd339907d"
        },
        "item": {
          "id": "1cbfaeaa-cb21-4afc-bbce-9e6414d8ac6d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "221e6ef4-9988-49d7-b804-c1e756deccd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6976e619-f4a7-4b21-85e2-cbc925173573",
        "cursor": {
          "ref": "6764e151-ab7f-416f-a0ab-39becf52c135",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dbd71c3e-c2a9-42c4-a573-a3bad7c19598"
        },
        "item": {
          "id": "6976e619-f4a7-4b21-85e2-cbc925173573",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "decc504c-b7a2-4fac-9116-c8a7ca0732f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c07a497-4f30-42bd-8b8d-a1322c1554fb",
        "cursor": {
          "ref": "968eee22-f49c-41a8-b77c-d3c8d907916f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7b7e3d32-c031-4c97-8663-e955dca73ecf"
        },
        "item": {
          "id": "2c07a497-4f30-42bd-8b8d-a1322c1554fb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c8668081-784b-4c21-8181-17bba6cf8f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69226ca-25be-44f1-b4d7-fb97e3720cb1",
        "cursor": {
          "ref": "388dd508-d5d0-489b-b2ac-68fd64bab6c5",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "83191ed1-703d-4307-9679-b7daab9497e7"
        },
        "item": {
          "id": "e69226ca-25be-44f1-b4d7-fb97e3720cb1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0fa16514-c564-4b73-b9e9-9dc0ddf5eb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da035cbc-a4f5-48e7-895f-f496f61795a9",
        "cursor": {
          "ref": "2d136005-8657-4bad-8117-156df7f90dde",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a7a0c66b-d59b-4c0c-9211-bad1564a6ac3"
        },
        "item": {
          "id": "da035cbc-a4f5-48e7-895f-f496f61795a9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e9d16a43-482d-486e-801a-1229f9ac89b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c263dc3-1e8e-4069-a578-d40ca5b38324",
        "cursor": {
          "ref": "b33ce0a0-efd0-4231-ba48-9cb4eb7cb3aa",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1f7e0810-40ee-4678-a0a8-4a22c9199f64"
        },
        "item": {
          "id": "5c263dc3-1e8e-4069-a578-d40ca5b38324",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a33c89a6-503b-448b-9f21-0c02a5341bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c253fd5a-01d4-4264-9e68-545d3078a24e",
        "cursor": {
          "ref": "4aa5230b-1838-4d48-bc77-4fcc9c27b453",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8fe9c818-0f48-44bc-9ef7-a35d5cff0ef4"
        },
        "item": {
          "id": "c253fd5a-01d4-4264-9e68-545d3078a24e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "04f6b8c0-1baa-4168-b4d2-76d69f81c510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3a1924-1bdf-48b6-a470-f60b9faf33f8",
        "cursor": {
          "ref": "3b7ae11d-3a54-455a-9b99-3c87c33db7ea",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f652b92b-8364-4d92-b139-34f27d9eec93"
        },
        "item": {
          "id": "db3a1924-1bdf-48b6-a470-f60b9faf33f8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d403e5ad-c98c-4162-80b5-e25580ef52cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745d1db4-6267-485e-9ac9-39c7e0a19ed0",
        "cursor": {
          "ref": "4d8c52d9-06c8-4274-9d3a-09e395010cf3",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b96e1b25-3737-48e5-b82f-a194313f683d"
        },
        "item": {
          "id": "745d1db4-6267-485e-9ac9-39c7e0a19ed0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a5f94bc7-68c8-4d61-a1e5-64c05e56951c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36bfa69-e0b1-46dd-8f71-79729f7cf024",
        "cursor": {
          "ref": "4d33d76d-e305-45c6-9538-b9d2670cbeca",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "837a172f-1e01-4f14-bd9e-653014938880"
        },
        "item": {
          "id": "b36bfa69-e0b1-46dd-8f71-79729f7cf024",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8b1e0010-68e6-49a9-b057-7d1792f42070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c132791-86a2-4a6a-8769-6ab39001f9c5",
        "cursor": {
          "ref": "67dce96d-bb59-4cdc-9fcd-cf30a7b79f31",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8208a0f4-94d5-4e2a-84e6-93559cc07800"
        },
        "item": {
          "id": "8c132791-86a2-4a6a-8769-6ab39001f9c5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "94a9cb80-3aed-44b6-99ae-4ef6b14d1852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c6ce6b-71b3-44e7-89d1-911d1a2b2aa2",
        "cursor": {
          "ref": "cca029c0-a024-43ff-8a7a-e6cec00c154d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e4cffec8-6b52-433d-ba53-a9919b4bc99d"
        },
        "item": {
          "id": "19c6ce6b-71b3-44e7-89d1-911d1a2b2aa2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0d50e48d-4c24-4eae-810c-6e2d7ec81c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d488346c-116a-4038-ba11-7c5dc82b4f5a",
        "cursor": {
          "ref": "40fd8b5d-2edf-4e75-9721-103cba7b8bc3",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "60a83911-7384-4560-b892-d3fa1f64fa02"
        },
        "item": {
          "id": "d488346c-116a-4038-ba11-7c5dc82b4f5a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4b16c1b9-0237-4289-a638-0bd41d82c7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5d52db-5426-42c0-ad7c-187a85f3288e",
        "cursor": {
          "ref": "d5991c7b-cfb2-4a6e-a494-9bfaa2a5a685",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f8dad0a5-de2d-494a-8b8e-c9327266e1a9"
        },
        "item": {
          "id": "cd5d52db-5426-42c0-ad7c-187a85f3288e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0d100d4b-f8cf-46ca-83e6-1c5b8b4e7ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad731478-c215-4bb0-a2ac-2867b0cac38f",
        "cursor": {
          "ref": "c409f63a-1d3d-43b1-a3cf-33fa26e3a074",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e5efbf8e-74af-44e9-b1d4-b189f6339587"
        },
        "item": {
          "id": "ad731478-c215-4bb0-a2ac-2867b0cac38f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fd0d37ed-8e68-481e-880a-f1f0df395493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2155617-e494-4eba-8413-0dac031e6c48",
        "cursor": {
          "ref": "8ca12935-18c0-4d4c-8dec-78bff3f2c136",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ed91472c-509d-473c-9aa6-30575315e049"
        },
        "item": {
          "id": "c2155617-e494-4eba-8413-0dac031e6c48",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8b9b3f7a-9f49-4ff3-aa2c-de6b3c38be84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b47bf74-e675-4329-a1fd-b1aed0c395a0",
        "cursor": {
          "ref": "004123fb-41ed-4bda-9dba-3c173018ad0a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f019e72e-be5a-40fe-8927-11031fd755db"
        },
        "item": {
          "id": "0b47bf74-e675-4329-a1fd-b1aed0c395a0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4f08ad36-dced-4c85-a742-d588a4c43caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443cd90b-dfed-4c8c-828e-3d2c91bae9e2",
        "cursor": {
          "ref": "709d5f5c-2378-4617-8ff9-7949cf06a4ae",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aa0f8487-fb10-4e45-990c-830d23f9e29a"
        },
        "item": {
          "id": "443cd90b-dfed-4c8c-828e-3d2c91bae9e2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ad40bcad-3e12-43cc-89fa-60edd91f7ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68614166-4d88-4e30-bd54-4c8b41a5e06d",
        "cursor": {
          "ref": "ca46d23f-87ae-4e4e-bc4d-7e3900a782aa",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "92f797bc-508c-41b0-a9fe-0f23cb5b43cf"
        },
        "item": {
          "id": "68614166-4d88-4e30-bd54-4c8b41a5e06d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "08d359aa-c7bc-4f09-9496-f8baf9a4645f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c850bf78-e50e-4a84-a418-6361778ae028",
        "cursor": {
          "ref": "a2f0e9e1-c5b2-4339-a7c1-efed414ef8e2",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ad483570-e29f-4e78-8c76-d5b9ffe8fbda"
        },
        "item": {
          "id": "c850bf78-e50e-4a84-a418-6361778ae028",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "65846c48-1cec-4121-b35e-069ee5546166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7071bd-ff87-4359-adf2-f07af7e14353",
        "cursor": {
          "ref": "40042b5f-b2b7-492b-9723-c5ac5a1dbc1d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "90f6ed6f-c2b0-4368-9531-4d50f33563a4"
        },
        "item": {
          "id": "0e7071bd-ff87-4359-adf2-f07af7e14353",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "81d943ed-b8dc-44a1-a57c-6484fc85b680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17806c1e-d00d-400f-9c6a-4b90451a9c56",
        "cursor": {
          "ref": "7d620e01-2423-4676-88b7-88a068afffec",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a59e78e9-e018-40ec-adba-efbc0062863e"
        },
        "item": {
          "id": "17806c1e-d00d-400f-9c6a-4b90451a9c56",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3f2c4050-f8e9-430d-a4ea-05a612804e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c7e289-e319-44ce-91a6-409a07ccb940",
        "cursor": {
          "ref": "4b7cb6cd-3ad6-4f28-a408-0d7dc3fc9894",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "088abdea-b66c-45b3-b0d1-3ff016c4c688"
        },
        "item": {
          "id": "74c7e289-e319-44ce-91a6-409a07ccb940",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1eb3d4ea-162a-4de4-8f27-0d2bd712b8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf2832a-adfd-48f7-9ecc-a99607b6d580",
        "cursor": {
          "ref": "ea1a3903-6128-4d4f-ae58-cb5df12088f9",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "66eaf6c7-aaec-4f78-bbfb-ad326d5d6148"
        },
        "item": {
          "id": "8cf2832a-adfd-48f7-9ecc-a99607b6d580",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "68e38550-4b2d-429f-919a-61812b43c547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a1cf32-2d89-4a54-b75a-aea30528654f",
        "cursor": {
          "ref": "b5b555cc-c484-404d-927f-91d23504bc30",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "63f64d92-8bf9-4ff7-8057-c9c9f5163a4b"
        },
        "item": {
          "id": "c2a1cf32-2d89-4a54-b75a-aea30528654f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7ad96a1d-8b20-487c-bfba-dedab3989c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f2f4d7-e0d9-4557-bbb7-df9a3796c838",
        "cursor": {
          "ref": "a6ece00c-1d06-4c0c-a671-f9f047f655b0",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "59307308-1300-40c8-8639-a875de9d21e9"
        },
        "item": {
          "id": "53f2f4d7-e0d9-4557-bbb7-df9a3796c838",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6e1fc7cf-9f47-4445-bf38-6f9438bfb729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04738502-8554-4dbb-8794-7b0c7cf564ad",
        "cursor": {
          "ref": "f3f586b4-60c0-41ab-ad71-9d20a79da569",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "30672e64-8867-456a-bf8f-eb6f9a551eb7"
        },
        "item": {
          "id": "04738502-8554-4dbb-8794-7b0c7cf564ad",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cd54e61c-a965-4eb7-bf79-6533eebf8c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed410d6f-29b7-49b1-a1fd-e0d274fdc53f",
        "cursor": {
          "ref": "ab033193-2124-4526-8e55-c53c1e75ab5d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "38ebd3f0-f9cd-44df-84c9-3a6867d591d8"
        },
        "item": {
          "id": "ed410d6f-29b7-49b1-a1fd-e0d274fdc53f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2170ecd1-caae-4def-9a74-13ad0db52892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0b5716-dffb-4f18-92cb-fef8916981b4",
        "cursor": {
          "ref": "9b842c9d-1862-460c-ade7-b3392357f324",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "76f5f7cd-ae3f-44b8-b792-0dd9677e501e"
        },
        "item": {
          "id": "ac0b5716-dffb-4f18-92cb-fef8916981b4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "03e556b9-4811-43ba-91c6-de3a4cc65834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b260a1b-a1e9-4f01-91f2-845a616468bf",
        "cursor": {
          "ref": "dd5fee98-7ddd-4132-9b9d-c8836ee9a9db",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b5d21300-de4d-4e26-ac9a-78802971786f"
        },
        "item": {
          "id": "1b260a1b-a1e9-4f01-91f2-845a616468bf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ab627cb0-e210-4415-ac83-e21be3eb43bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d901db-461f-44bb-9b01-4b5c895c3d0a",
        "cursor": {
          "ref": "2271d6cc-bcf5-481f-9747-4cff3979ec99",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6449d0e2-9f14-4207-879d-068e6e6f27f9"
        },
        "item": {
          "id": "02d901db-461f-44bb-9b01-4b5c895c3d0a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1cbcaf8e-e6d6-45b4-a5fb-b828584fdcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acb6c19-6090-4b21-8e8e-d5d8374120db",
        "cursor": {
          "ref": "fa916023-4102-4836-aa7f-0b8769612fac",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4e48a58c-6a81-42d6-9e6c-1e2c095794cf"
        },
        "item": {
          "id": "0acb6c19-6090-4b21-8e8e-d5d8374120db",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "536754e2-785d-49b4-aee5-fc611d1001dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f81d5ca-f6b2-4384-812e-35ab7bfc0a34",
        "cursor": {
          "ref": "a83460b5-52e2-4c6c-b1e3-ccaf8b77892b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "15e3909e-d0b2-4c99-93ca-c24d71f47c9a"
        },
        "item": {
          "id": "1f81d5ca-f6b2-4384-812e-35ab7bfc0a34",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "391e49d1-65fc-4147-bc83-6f77be611ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f70e3e-7b33-4c79-946b-19b082639b52",
        "cursor": {
          "ref": "8cab1938-af0e-4418-a3f6-2113fb2ad707",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "16d4dead-fa5c-4f15-b7c9-cfb5caa5f507"
        },
        "item": {
          "id": "f5f70e3e-7b33-4c79-946b-19b082639b52",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "945db73f-12d8-4bba-9913-499135e49b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0bb6d4-f235-4f7d-ba30-f32a59079b0f",
        "cursor": {
          "ref": "1fc3c201-221a-4cc5-8c40-c747ba7338e4",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "aa3664f8-806f-40b5-bdbe-44a3ac6cc340"
        },
        "item": {
          "id": "5c0bb6d4-f235-4f7d-ba30-f32a59079b0f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0529342f-ecba-4dc7-9403-597e38576f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9a456d-3258-425f-95bc-41bad2eed287",
        "cursor": {
          "ref": "68dde9dd-c094-42e5-9034-ec54509b5979",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "40ad995a-7ae6-4941-9a93-d1d702b2808d"
        },
        "item": {
          "id": "4e9a456d-3258-425f-95bc-41bad2eed287",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e93d2e66-fe59-4970-8c3d-0ec72ba822ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55d4777-f697-4d6e-a705-dac08968824d",
        "cursor": {
          "ref": "4e72bdad-e45d-4063-ad35-105ffe7ab5f4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "705db528-ce95-4fc8-a5ca-49cabdeb71c2"
        },
        "item": {
          "id": "d55d4777-f697-4d6e-a705-dac08968824d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "973f4786-d7f5-466d-8459-ca1f21e215f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ab2c0a-6933-484d-a8f4-40881057e25e",
        "cursor": {
          "ref": "d1f265cb-4274-4691-9c7f-18bc8a312576",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "786307f1-2715-4b07-83fb-e61175b87ed0"
        },
        "item": {
          "id": "84ab2c0a-6933-484d-a8f4-40881057e25e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "19c97877-a076-442d-b264-4ea96f5965df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7c383d-177a-4539-be85-cff56394c848",
        "cursor": {
          "ref": "4ff70e6b-f30c-4fc3-bcac-32485f0c19f4",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "45c07e14-b02b-4353-9497-cbd9c93a6cdb"
        },
        "item": {
          "id": "ad7c383d-177a-4539-be85-cff56394c848",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "534a208e-e5d4-4478-98e7-c2b426e353fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86410d2-b3f7-40bd-a2d3-efb48a619814",
        "cursor": {
          "ref": "3e92313c-033f-4e31-883e-e96931a84449",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d0dc1e91-40dc-4730-bd55-31af90141b16"
        },
        "item": {
          "id": "c86410d2-b3f7-40bd-a2d3-efb48a619814",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "50fb8a5e-89b8-4e4b-816f-59be1f10534d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73788689-bb33-4e57-9bc2-2348e160c378",
        "cursor": {
          "ref": "470ca19f-9e60-4bdf-b4c5-6f5fc577f647",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fde9e4b0-28b2-4349-b486-dd0ecddceac5"
        },
        "item": {
          "id": "73788689-bb33-4e57-9bc2-2348e160c378",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7f7df9cf-1a0d-4f79-9a4f-1f94a4410404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588ba55e-3781-47d8-aff8-a258429b1a8a",
        "cursor": {
          "ref": "49e1607a-ce6b-4250-b8ed-17d5b0e638c3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "35534564-7173-4a2f-8d7e-1727e4b8b0e4"
        },
        "item": {
          "id": "588ba55e-3781-47d8-aff8-a258429b1a8a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7d26b340-4295-4644-b107-d482acd86557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ce6b39-79a5-4d1b-951e-c3478ec51100",
        "cursor": {
          "ref": "2b5a352f-729f-434c-b4b0-035573ee1802",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e415913b-5440-4939-80f5-e96d6f0a43e9"
        },
        "item": {
          "id": "24ce6b39-79a5-4d1b-951e-c3478ec51100",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8d65b3b-5eae-4c44-afe6-f3a06acb3945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e046e4e6-1594-444b-bd1d-48243237d90b",
        "cursor": {
          "ref": "8e0310e4-68be-4d22-b2f0-95492079d48d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f33110c7-a07a-4470-9f58-622e467c324b"
        },
        "item": {
          "id": "e046e4e6-1594-444b-bd1d-48243237d90b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "eefceedb-2c8a-40af-ac7f-5fc646e682d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f557868-fd47-46e2-925d-db7875ebbce3",
        "cursor": {
          "ref": "8e7fd2fe-9f59-401c-80e1-b0ebb79e9da0",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "561b0b68-778d-424f-af25-170aa7305050"
        },
        "item": {
          "id": "8f557868-fd47-46e2-925d-db7875ebbce3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c08095a9-351c-428e-a052-1fda879de07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb833fa-e2b5-47c3-841c-4f3118312a45",
        "cursor": {
          "ref": "49ee29e5-c4bf-4ca4-91dd-6585d0a9c195",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0a9e134e-ecc6-409d-bfc8-88ef99d26886"
        },
        "item": {
          "id": "8fb833fa-e2b5-47c3-841c-4f3118312a45",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3e1cc090-92af-4dd3-a7fa-558941854e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c3679c-5926-4fa0-bf4e-158278685083",
        "cursor": {
          "ref": "4e089e32-9e16-4ab5-adc6-8efe3b52c73c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b17a7335-35cd-474e-801c-849bfc6f1e70"
        },
        "item": {
          "id": "48c3679c-5926-4fa0-bf4e-158278685083",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ff934c3e-73c7-4563-8caa-71176693fb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26171794-c603-4a44-9f34-420153735fd0",
        "cursor": {
          "ref": "d14d416a-b5c1-453d-926d-7cec066afaf8",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c617d1ee-3cf5-41b5-9054-34e34e97563a"
        },
        "item": {
          "id": "26171794-c603-4a44-9f34-420153735fd0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5a838200-80fe-4178-8357-2429db1cb946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4b2df2-0767-4fa3-84f9-40b0b76e54fb",
        "cursor": {
          "ref": "e6780ee8-4f93-4e83-bf7e-6d7b64fd4fcc",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "39cfde2e-f84c-441d-9247-8133001e6957"
        },
        "item": {
          "id": "0f4b2df2-0767-4fa3-84f9-40b0b76e54fb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5a5eb334-9d4a-4e2b-98df-7a171681fec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc432acb-bebf-4e1f-ae53-b2b1f2f64bde",
        "cursor": {
          "ref": "1155e568-3a4f-45c3-818e-3570e552950a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e42ed26b-e6e6-45dc-8df8-10c6c23c329f"
        },
        "item": {
          "id": "bc432acb-bebf-4e1f-ae53-b2b1f2f64bde",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "62bd2ff2-e87c-49e1-b32c-80307a242a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9655014-cb4a-4502-ad3c-c76b69b4f1a4",
        "cursor": {
          "ref": "cc77370e-9ba5-4fae-bb9c-ca9904a84df8",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2336a21f-8b54-4e4b-9539-f38931bf93b7"
        },
        "item": {
          "id": "a9655014-cb4a-4502-ad3c-c76b69b4f1a4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "19719dde-a5d5-4e83-b412-ff4ece279ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cedb99-1307-4fbd-be1c-d68395d860f6",
        "cursor": {
          "ref": "cdc1acfc-5dca-4d75-a0e4-d53f5b97a4dd",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "15739ebf-ece9-4293-98e4-d12ffd373af8"
        },
        "item": {
          "id": "d3cedb99-1307-4fbd-be1c-d68395d860f6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5ea2ae43-0be0-4d12-8b6a-ca1a770b9fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a09e8ae-8eae-4c16-a71e-55c96e3c5611",
        "cursor": {
          "ref": "dd1c24c8-2c6c-45e6-95f2-2c8462b38836",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5415a0c3-8506-43a9-88fb-4840ce6cb9fb"
        },
        "item": {
          "id": "7a09e8ae-8eae-4c16-a71e-55c96e3c5611",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "63ddb7a5-268e-4571-a509-cb62b0714bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c5e8dc-66b9-430f-bc16-2c2f4ef765fd",
        "cursor": {
          "ref": "13004a05-556e-459c-a1c5-8f46b397ad29",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8564e28b-6ef3-436e-ac33-fc187fda8633"
        },
        "item": {
          "id": "a4c5e8dc-66b9-430f-bc16-2c2f4ef765fd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "12cb937d-ca29-41dd-aa81-fa223363cbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ecbca0-0cd7-4b28-a2e2-611cc816b6fd",
        "cursor": {
          "ref": "b916d18d-0eb9-4811-a29f-d5522a4c1177",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "206fc449-ec48-4a04-9b3f-987536086137"
        },
        "item": {
          "id": "49ecbca0-0cd7-4b28-a2e2-611cc816b6fd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4b92bd82-b5c9-4a6e-8359-edcdf2f04ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2174a00b-4982-439d-9578-b3df7d4f6a15",
        "cursor": {
          "ref": "e65be102-4c72-48a9-a8ec-3ef3d5c399ef",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6434b4ee-1d8d-445e-9688-9622faeca456"
        },
        "item": {
          "id": "2174a00b-4982-439d-9578-b3df7d4f6a15",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "827c0ab9-3545-4daa-82a3-115b8d46f34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f22585-6972-49a2-8bea-04b551973268",
        "cursor": {
          "ref": "5b408c71-b3de-49f3-ac3f-bf92c8ae2f09",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a4de58b5-1c6a-4b0f-aab2-fc704845d3a0"
        },
        "item": {
          "id": "e6f22585-6972-49a2-8bea-04b551973268",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "30a325ac-2dc8-44b5-a900-eba7d56c6acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236489db-c9b9-4842-8754-a120f9d1a606",
        "cursor": {
          "ref": "8288a0d5-df60-4b08-a968-cbc37822ec92",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e27c08fa-cc1a-407f-8881-9b1a9118931e"
        },
        "item": {
          "id": "236489db-c9b9-4842-8754-a120f9d1a606",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4dc2c33d-8991-4c84-83b6-22e328f55fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736a3498-1068-4b59-afbc-42c838e9d008",
        "cursor": {
          "ref": "735eef91-4369-44c6-a959-27d495624a3a",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4219cba2-ad69-4ec2-8c46-8936e164a5f2"
        },
        "item": {
          "id": "736a3498-1068-4b59-afbc-42c838e9d008",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7b7ae0dd-2257-4ed3-b14b-766cc559a547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a1b0d3-88c0-4680-af84-6b07b42a0c08",
        "cursor": {
          "ref": "e2d6d5f9-6365-43b7-aa43-bdf031d6228f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b3a5618f-1984-4854-98d2-db4b130d55d3"
        },
        "item": {
          "id": "18a1b0d3-88c0-4680-af84-6b07b42a0c08",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "95617d8d-9389-4caa-bb6e-447b94045043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0896ecd-3ca2-4e67-875e-c2895bcd0e98",
        "cursor": {
          "ref": "8838412a-ce75-4514-9075-8db8b701c948",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4f30f15e-7d56-4a8f-a630-6dce6d16edb2"
        },
        "item": {
          "id": "c0896ecd-3ca2-4e67-875e-c2895bcd0e98",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d1b329a4-e924-4d1d-98d5-a6b754d21148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75694c4d-d9fc-4862-b60f-ce6e193b14e4",
        "cursor": {
          "ref": "4a4d2569-08a4-4041-aa85-e47c2100413b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4d5496db-f21e-44d0-86a8-a277722707e3"
        },
        "item": {
          "id": "75694c4d-d9fc-4862-b60f-ce6e193b14e4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f9f4bfb8-8981-47f5-89a9-6286344c4b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaa052c-e389-434b-af88-45aaa29240dd",
        "cursor": {
          "ref": "ab60022c-2583-4cb5-a218-dc8d5988fd8a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a9378925-7c48-48ee-92bb-de0f2915cf5a"
        },
        "item": {
          "id": "dbaa052c-e389-434b-af88-45aaa29240dd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8f96c510-74dc-439d-8a16-b2f5ffdc3e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449c947a-7100-4d38-b5f5-fd2ed0f20cc9",
        "cursor": {
          "ref": "1a68f04b-2da7-43d0-adce-859d472bc143",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "37864eab-c3a7-42e9-826d-2051efdb6134"
        },
        "item": {
          "id": "449c947a-7100-4d38-b5f5-fd2ed0f20cc9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "610d9ffb-3dbc-424f-b39d-7828839c16ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd3f1fa-2693-4210-a3fa-79f22d9b57a8",
        "cursor": {
          "ref": "38429768-878c-4b69-a598-d4dd4c5666d0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "35a80a57-76f3-40d2-820a-7c5587f43076"
        },
        "item": {
          "id": "acd3f1fa-2693-4210-a3fa-79f22d9b57a8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f3b115bf-d0d6-4b10-8776-63a851060304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4566be1b-1682-4baf-8dc4-6d3f002d5ff1",
        "cursor": {
          "ref": "d4d11215-39a7-4481-bc9c-b11ff98011ac",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1371d36c-2406-4771-bbaf-1c83bb1f2c59"
        },
        "item": {
          "id": "4566be1b-1682-4baf-8dc4-6d3f002d5ff1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d172e615-26e4-4849-894f-58ca35757ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8775113-5f12-4531-b8a4-a1d8b191fbc1",
        "cursor": {
          "ref": "62125bd5-d8c0-483c-9930-a9ede1b928d9",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1de6cda0-d225-4a52-a871-044993250f2b"
        },
        "item": {
          "id": "b8775113-5f12-4531-b8a4-a1d8b191fbc1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7e8bf908-ab39-4ee4-b263-dd14711b0e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23754bf-63fb-46da-8319-726b3945ddb5",
        "cursor": {
          "ref": "59bce225-3c18-4250-9282-c2f6f91d3b04",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "77336bab-3ff6-4486-a43e-0da344f038d0"
        },
        "item": {
          "id": "d23754bf-63fb-46da-8319-726b3945ddb5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "925d6ba2-10d4-4589-8d88-ccddfa75dec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70070c51-f415-4ea7-8347-b565c3da3bc3",
        "cursor": {
          "ref": "92229f45-7874-424e-9ed4-fb30e2585a5b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1998fe5e-aff8-47b5-aaff-24db21ccf076"
        },
        "item": {
          "id": "70070c51-f415-4ea7-8347-b565c3da3bc3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f82a5374-c504-4e29-a0f4-dc1d03fcbabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23525beb-c863-4798-816b-af1a36e6fc41",
        "cursor": {
          "ref": "4d445474-9ef2-4cb7-b04e-f39d86dea29c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9c00c938-6ace-4877-9128-1b62030fa783"
        },
        "item": {
          "id": "23525beb-c863-4798-816b-af1a36e6fc41",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ae867671-d9a9-4bf4-837a-ef5722c3ea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c5fc2c-499e-4987-8329-943cb0c2df56",
        "cursor": {
          "ref": "b1af9d85-7bab-425d-ac84-397fb65f4810",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2c90d6c6-cd05-4372-9b69-ff81d6f0c780"
        },
        "item": {
          "id": "c9c5fc2c-499e-4987-8329-943cb0c2df56",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5e573fd4-75ef-43eb-8097-ce74b3854ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebde3e3c-db2b-4f3b-a8a8-341fc8e4175d",
        "cursor": {
          "ref": "606a9b1c-f076-4f79-bc1e-ed7ec12b6cdc",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "26ea70ea-59ba-424b-96db-b04268324d60"
        },
        "item": {
          "id": "ebde3e3c-db2b-4f3b-a8a8-341fc8e4175d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "79ed91d4-2450-4d0d-9aa8-76ec16c84714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68db3fa3-a804-4028-bb93-6008a4d1b1de",
        "cursor": {
          "ref": "768188c3-7943-4acd-8eb4-7fa3325b0071",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7c478068-768e-4652-a381-93bb1cb4b84f"
        },
        "item": {
          "id": "68db3fa3-a804-4028-bb93-6008a4d1b1de",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5ebc43f2-aa68-469e-8f02-12ce09043afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99759b31-a2e3-4c5e-b225-d83625441d67",
        "cursor": {
          "ref": "565243ef-27ad-4d37-9e9c-4e2abe8b45f2",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "13055b29-58a0-40c6-8bde-e8d6420366ed"
        },
        "item": {
          "id": "99759b31-a2e3-4c5e-b225-d83625441d67",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a989fd80-0833-4698-aff1-477d43909998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634a685a-f4b5-44a0-af3a-5b2b1c8670c4",
        "cursor": {
          "ref": "99ec75d9-9bd0-4871-96a6-69d2c2bf8dec",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d4cc01eb-ca22-4c9c-af6e-21337413294c"
        },
        "item": {
          "id": "634a685a-f4b5-44a0-af3a-5b2b1c8670c4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b0a219bd-b600-43cd-a74e-ff1843a0954c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3e76c4-a0db-45c4-b1ce-6e679477977e",
        "cursor": {
          "ref": "4d6c7616-da72-4a5c-b799-aa44b37edfd4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f1528b8d-cd20-4e86-8106-57073d7a52b4"
        },
        "item": {
          "id": "ef3e76c4-a0db-45c4-b1ce-6e679477977e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f3b0e39e-77d7-40a3-bfae-c33f4069532f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19bfa21-5c90-4282-966c-81b5519775bc",
        "cursor": {
          "ref": "5dc86d15-fffa-4631-ae41-6e54cc0d8dc8",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3533ee87-be56-4c2a-94b9-daaf946be003"
        },
        "item": {
          "id": "c19bfa21-5c90-4282-966c-81b5519775bc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "21f23453-f279-4aad-aa01-bd77be3149de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12925f18-8b1e-4ee3-b478-990cf9ccda65",
        "cursor": {
          "ref": "9a342c48-3f1e-40c1-ae52-511026230587",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d307491d-013f-4d02-ab19-213bd4bb038d"
        },
        "item": {
          "id": "12925f18-8b1e-4ee3-b478-990cf9ccda65",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "df7c3d68-a399-4617-9f50-3bbfccb6372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f64380-1b08-4a71-bf12-30662c775a17",
        "cursor": {
          "ref": "e330b4f7-e7ab-46eb-bfa9-0deb14f42b13",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5499b4c3-415e-4761-8da7-c59b7d1d0514"
        },
        "item": {
          "id": "34f64380-1b08-4a71-bf12-30662c775a17",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ad12f12c-311e-4452-b8ff-e2a00d82fc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ec7c40-a8e5-4a81-b287-76add5187b65",
        "cursor": {
          "ref": "cd850e91-09d6-4268-b56a-4e656ddce394",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fc0cc383-6267-4d08-957f-743bc909617a"
        },
        "item": {
          "id": "f3ec7c40-a8e5-4a81-b287-76add5187b65",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9f310e92-a575-4f88-b3ab-c45be235a41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13095dd-b863-4629-8917-3fd99701d65c",
        "cursor": {
          "ref": "437da143-bf6b-4198-ab6d-2b3e10039736",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b756c755-3aba-4b5f-bed8-11d7f31e2d16"
        },
        "item": {
          "id": "a13095dd-b863-4629-8917-3fd99701d65c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "973f7983-275f-4cb4-aa0b-243f908c2892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea164298-5166-453b-8506-cc0d277aba1a",
        "cursor": {
          "ref": "260c520a-27a1-4aac-9fd5-958d1c2cbbf7",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2f243098-9faa-43d1-8ddb-fc240be2a28e"
        },
        "item": {
          "id": "ea164298-5166-453b-8506-cc0d277aba1a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0b81f0de-4682-4cf8-a91b-fe12a215419a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b01d347-9c8c-4b29-80a8-d78fe2fcbb06",
        "cursor": {
          "ref": "022a6f75-a3ac-4447-af06-1589ae71543f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "14cd6149-ad69-4014-93c5-9c50f867a3a3"
        },
        "item": {
          "id": "3b01d347-9c8c-4b29-80a8-d78fe2fcbb06",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "911d8ed0-45ac-4ddf-a82c-7997d7f8cccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96c6dca-16e4-4762-8728-54ef7686a139",
        "cursor": {
          "ref": "62aff995-cca7-4b51-b8a7-25fe82f864fe",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7bd36a92-cf85-44a9-806e-1669576c9889"
        },
        "item": {
          "id": "b96c6dca-16e4-4762-8728-54ef7686a139",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bee51558-4f42-4c90-ae84-c5d0688b496f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8411744f-7033-4e29-a4c4-718cc1d9efea",
        "cursor": {
          "ref": "6e570260-03cf-4dc5-8c90-c6722456408f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "04105291-2672-46a8-a55d-2772ee49610b"
        },
        "item": {
          "id": "8411744f-7033-4e29-a4c4-718cc1d9efea",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "73d597e5-b89a-4c4c-b56f-04decf5ca465",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e5b4d8-2bbc-4c48-a437-a45489ba82dc",
        "cursor": {
          "ref": "a9b69c43-e0ee-4e37-844d-a3055c87e9b9",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "69e8af5b-ca07-42be-837d-5412d5d7f318"
        },
        "item": {
          "id": "80e5b4d8-2bbc-4c48-a437-a45489ba82dc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a3f25ac9-77e6-464a-8d07-ae5e54c7dcbb",
          "status": "OK",
          "code": 200,
          "responseTime": 422,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0449bd21-bb41-4e46-8721-86ef778330d9",
        "cursor": {
          "ref": "a9818fa5-da96-4ac2-ac1c-7ba47358adb1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5f5be0c8-2fa8-4fca-9552-a3dbd574eb55"
        },
        "item": {
          "id": "0449bd21-bb41-4e46-8721-86ef778330d9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "273da6f3-c2c3-4bde-aa61-04022f5c977a",
          "status": "OK",
          "code": 200,
          "responseTime": 1580,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb45fca1-3641-48da-8a5f-10a357a639b1",
        "cursor": {
          "ref": "9749b95f-b527-4634-b7ab-ba81a2759867",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "584da202-b864-4da2-9b95-4cf03a204773"
        },
        "item": {
          "id": "bb45fca1-3641-48da-8a5f-10a357a639b1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0f28e58c-d2a9-4698-8d25-c10f911c920d",
          "status": "OK",
          "code": 200,
          "responseTime": 1555,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacc0e71-afa3-4f5d-82f1-9be3fb724750",
        "cursor": {
          "ref": "8f9776b2-a881-4bc5-be95-d78c8c9689da",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c583cf54-9505-4f38-8a1f-4442f0bb8c92"
        },
        "item": {
          "id": "cacc0e71-afa3-4f5d-82f1-9be3fb724750",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a87d2fa1-9b2e-420f-ae3e-297a57d5f009",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacc0e71-afa3-4f5d-82f1-9be3fb724750",
        "cursor": {
          "ref": "8f9776b2-a881-4bc5-be95-d78c8c9689da",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c583cf54-9505-4f38-8a1f-4442f0bb8c92"
        },
        "item": {
          "id": "cacc0e71-afa3-4f5d-82f1-9be3fb724750",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a87d2fa1-9b2e-420f-ae3e-297a57d5f009",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0748d393-7f4b-425f-8ccf-4196d09db64c",
        "cursor": {
          "ref": "4b028c13-4bed-4a50-825c-8a10c690d2fc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2a2d933f-434f-4d9e-a410-828800f0a91f"
        },
        "item": {
          "id": "0748d393-7f4b-425f-8ccf-4196d09db64c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "090884b8-e9cb-4534-acfe-a13248192f94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd130c7-a4fc-4903-a983-062fbcdb3a76",
        "cursor": {
          "ref": "c2495012-90d7-46e8-9bb2-e9f58c307e85",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "33ba0d29-6be2-44e7-aa69-99faeb835f82"
        },
        "item": {
          "id": "ecd130c7-a4fc-4903-a983-062fbcdb3a76",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "230bb12a-0306-4e78-936a-8616b027cfb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}