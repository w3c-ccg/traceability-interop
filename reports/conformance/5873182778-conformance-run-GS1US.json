{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d5079dca-1a47-46e3-8bc9-6ada2b306f17",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2d7fc198-f274-4a2e-b844-c41a97173b99",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2801a1f8-3cf0-4f3e-a3d7-39a4f5008321",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2753c09f-319c-4a80-bfb3-8c17ec1e9d37"
                }
              }
            ]
          },
          {
            "id": "de19c188-bc30-44d1-b01e-3e9b356ed844",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "142ca8fb-354c-4892-8f82-256415d005d1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fc433c6c-5210-4d96-bb41-87e8b90a9807"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "50c9442c-8812-42b4-af8d-8835a4c195a2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3ed2c211-4320-4631-ab29-58b6323d80ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ef7a413-74dd-4cea-9c6a-b191542006cf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07404e13-a9e4-4725-a21e-d24f82d6e0b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81df295f-0c4e-49d2-9911-336aaa251e6e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cb258e0-3cd0-4ab6-8dff-6ef62ac8790a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ff6c069-8b31-48b2-9806-07ad5779a7da"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a813d02b-6039-479e-b90a-fe167ac30dfe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d67e9e5-ebd6-4939-8930-18c733893423"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e74c8ca3-58f2-41be-8223-669888660e55",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ec41a620-f272-4233-b409-c9e554a4e661"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a44eb3d0-3b13-4e38-80d5-dac1595e99f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "891b5b97-7334-4b24-8a67-e56f1c258549"
            }
          }
        ]
      },
      {
        "id": "df3b8379-26dd-4b78-821d-65912c2c12fd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8d650171-61cc-4808-ae58-ea1303759de8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "572374d8-b8bf-4be3-aa5b-2d1250c8c926",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6f6a9e41-4bde-4df0-810e-6c19f4b85b7d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295f4350-069e-4622-935e-4e11f28366b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00e9fd41-f159-4c9f-a2c3-70babc6af500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861e544a-3a4d-4008-9a3e-a871784273d7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32e1355-1ee1-40de-933d-ccbe882ab5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7bba456-1084-48e1-9521-d76c364412a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311e389b-12ab-44d1-8793-5bad58d4cb3a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00949d70-2ff2-4c51-8192-e59d9f39c442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af775e8c-c2e7-4986-b333-8d5c504eaaf8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5107fc43-57c6-47ec-8557-3b11c3608c4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db884394-bfb0-4b4c-bd66-5d2bd1475e3a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2c3423-91b1-4ad3-8816-e6775f9792c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37e9559f-25d4-48a4-be79-5c8b343cd234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e5e630-f9b2-48f5-a0b3-6b5fb5d7c9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49dc4e86-2c78-4fe9-98bb-9d7cfef664b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e907e1b4-c67c-414f-a4d2-ef60f39422b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc9289fe-7c00-4421-a690-40586d513490",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "748975f7-b9b3-4ff1-a900-90a0a3555e5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bb486346-488f-4494-ba68-d2adf91339df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd141f29-f190-4463-a848-0d142df3d52a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "00e8e1a9-7801-4c3c-969c-58d59cde7d7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c2a870f-adb8-4617-9b09-eb2a65afa597",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d6b1002-933b-40a0-9ab3-8eb64dde9c28"
            }
          }
        ]
      },
      {
        "id": "d0a097d3-9e4d-479b-9f59-cf0cbb691701",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "985566d0-5cd0-4272-91a6-53dfe7c8fc9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b553349c-05d0-4e51-aca8-c39bc742b3fc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "aa6ff868-4b1d-437e-a5c5-c1a72186e91a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09776a3b-09eb-4a07-8487-894d0ac0eac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0ee244-d18b-4052-a1f6-2416c7b0d3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe36ab5-84ae-425d-a432-9b52b558b2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85625014-8881-4f61-b079-656596590ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f802044-f347-43f4-9ad6-3d4f60743970",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf65b437-33b4-4332-85d2-7eaabc5f6561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3346541c-2b1e-4f15-a763-5e310df1cfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79ebfb0-2230-4326-874d-4b1556ea5ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d908b44b-f210-460e-986e-4ccb06281e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b679ef8b-b374-4c28-8532-df857fa4feab",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d84c18-c552-412b-ba1f-f557a5635d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee27ed6e-555a-40a0-b8b9-9fd0f0e590f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7b378e-d915-49a5-a14b-702871c67697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d02bd33c-0802-4b6b-97c2-42c730399d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc774c18-b081-4a9f-9a4a-3da4f69278e8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d1eac1-12cd-42bd-975a-646a3b46450f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d539121-2050-4835-ab90-0d2814419d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2445209e-e4d8-4f2a-bc4e-743a8ac0ea88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86127fe8-be8d-4a8f-b9b8-b0bb0ae86a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f78c8b4-a34c-4eb2-ae2a-a054694b48f4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7895a6c-343d-4342-a350-9281d244defc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddd99dd-457b-4307-aed3-579b60fcdf75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d3fa17-c847-43cb-a890-b95e25ab2227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "592c8ead-3556-4100-8e10-72de0a4f1de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a69803-ec79-441a-973e-fe1960acc20c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51582dc6-329c-40b8-a71b-17602027b372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd07ea6-c1ba-4304-893a-38d34cf121da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6b6a4e-8de4-464b-a959-a01ca4b61c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d1bdd57-c4fe-4ce8-8e6b-a8bb1aad4a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e1e650-cb78-4b32-914f-f45f077affef",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c28f988-da8a-403e-97da-31da4c213f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e06fce-bb3e-4211-8189-270d90e54a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e562f9f-5a8a-4ef3-816a-400a54043af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6262de04-9ba5-43b6-b1c2-c6f76d6adea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cf68d3-ab05-4e0c-a935-d1ad88c06ddb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6b2bbd-ce42-442f-9a7f-284bc6f85367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc200d7-4361-48f4-baa1-b46ea62e95b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57561594-679e-4f88-9eae-4d196aec7c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e973640a-68d4-4132-80b2-2bdc72da4c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f47044b-ab8b-4b39-9b4b-ad6526c57843",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f9e5b6-ec30-4a9a-a4b5-a6c8b8475aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d9327a-4ebf-43b4-aa60-7471c9519e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b46aca-642a-443c-82ee-296f7fae6e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb144821-2b97-4aa2-9892-620a08a84f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47d6497-9e26-4ac2-93db-6a975be28c46",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef9554c-acf9-4aed-bab9-aca260bfe122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb47642-20c8-4f08-a533-3fa1a93bab08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7197c1cd-0020-42f9-b650-b3d227a3e003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efe50566-0b90-4679-af81-d1b1b612f517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920cfcb5-b4b2-46c7-b331-231285ef2ec9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5bc8d9-f67b-46af-8028-93a670cf01c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53f0f13-f55e-4f59-b369-9ccb75ede638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2ddfc8-9fb8-4487-96b8-70b66617eea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d247c4e-cc29-41ab-9a4b-886ebf699525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a82d485-3754-4b64-b380-a25a9fb50164",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2869883f-22f4-484e-a9f7-af933362f234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60bfd41-3a66-42a9-b3e1-b08c2ce1fbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e42eb4-3e06-4236-858a-d5a3f8824056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "300489f8-0598-496e-9776-9f293e075d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746ea26e-a589-4bc5-96c3-f7171b2ff0f9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cc7b47-1eba-490c-8760-5662d567b09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f67b20-21aa-4c91-aba3-caf5741f32f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2180ac-e7c4-4957-b991-28da66bc3fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "883e5d21-27d2-4351-9c07-0f59e7de34b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3384106-470d-4044-aae5-071eee590a51",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309c21de-53d7-4ede-9009-76052c2c0db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1982b076-8679-43a1-acdc-dbbcc6471775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7125bfec-6b33-480a-8cfc-c5977bb6cb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78038ed2-75a5-4fad-b1ff-329d0137d9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ef718a-c74f-4f31-8e17-163e15339473",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c9202e-385b-4162-bec3-accbe1c01d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba4410a-f26d-4dd4-ba71-e6b7f7f736e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1585409-4ac8-46d4-94d4-44bef2c10e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00661bd2-553d-46ef-b199-f29504b0e3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0862a7-a8b5-4d65-8415-5f972f8201fb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7e3205-a014-4ad8-bff1-5468201d95e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e38153-96aa-43d4-bdc1-e285285ac365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f91949d-51a5-48da-a9d7-5dfc9953f7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48a4f6e8-2163-4a04-b6e7-ce9aa1021b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb62936a-3de2-4486-8743-b96f807ec971",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4262e9-cb10-4027-b0e2-447cb4982876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac014e6-ad87-4b05-be20-e1b69fbf0575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37adcdaf-f54b-4709-963f-76b7b62ada9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59c25849-b38c-429a-b8d4-b32a12c1710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f49e71-5c29-4a86-b67b-01ec1ac89b36",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d80a430-fc53-427d-8820-a32bffd3bc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdc64b7-6558-48e8-8cb7-604c0726471c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce97a48-a43e-4ee6-94ce-3fa414d1bfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc50537-4a12-4084-9a86-32c45ab1147a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3dfc5a-d895-47fe-8420-3da9c9e78a9b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea3a029-c7e8-4c46-84a4-e0ab934a98b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971b7caf-42db-4dc9-9015-895d0da007c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6682e126-b974-436f-8f18-4eed8641a04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "846ed73a-f086-41b4-86b7-7b3034dffab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7724073d-fcc2-4e65-9442-d2abf583ccee",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4f1e71-bfff-4484-b1c8-0ef4d2ebf604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01f5686-be84-425b-9b0c-750977f77779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f650cea-aab9-45c4-9356-a73b4971b619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad8e423-9c62-49fd-9cef-3965203e0e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad851642-01a4-4c0f-b6e5-b94cda4af4f8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc80d72-7ab0-4ea4-a43c-51f44d38f7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56a65c9-5c97-44e7-bdf0-67af36ea7ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ba25e1-9fe1-4830-8743-653e3b98c5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89eb5682-f2c1-4350-8e01-f08618cf009f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874b0ca1-05d8-4c57-8786-473a33a16983",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372c44c3-830d-4773-a158-7eea8dfb5baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d140d1e-7054-407c-82cc-be3768e2ac05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c82484-007d-4977-bb2c-f9645c6d8c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d84929-8b46-45f2-a974-c033a3758539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6805c489-0165-4328-9f5e-131e35039d6f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008dab2e-274f-4cd0-bfd8-7fe3c4621f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8371c7c3-f8cf-4b43-a5c1-18694aa56a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0ec5c1-293b-4f8b-9056-0e3e5bbc45f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82751e95-df39-4c2a-a541-ba0498ec1e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb3eff2-5a87-4f8c-b61e-e409f3274c4a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0221369e-e84e-4660-9189-2aa3c4c1a081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84efd80c-f104-48ed-9163-9afb29abe0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b0f604-4f9b-4075-a6ed-b2b358ef3230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "653d07b6-65b0-4db7-979e-3439b12181f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18002a70-7d76-45c0-b0c0-480e076a62e8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895c9ef2-b2f2-4547-b11f-a18ae7b82098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d583bf2-5e25-4c18-997f-0480fb9c2926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d562a7e8-310d-4fa2-ae5a-7d1aea08ee5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27729807-9d24-4edc-a1d1-26d9dba31fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af32ba8a-fc3e-42b1-b2d8-06b751715b45",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46eb7f7a-0e1c-4b83-9884-8a9c6888b58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c682e6-5b21-4059-bdd6-ff3b2d734578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05fefa4-a683-4378-b25b-a2f84725f281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f413434f-7996-4ce2-a3af-a17573222e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bd7b70-374b-4fb8-b763-bdd2da6a3f0c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69efbec-f547-4b3c-acec-38873def5274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ef1b49-c1de-43e2-9d26-4fa79b0968d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4737164-2f62-40f3-bc57-4fd086293d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d2bf5d-5a00-42b0-8ddb-c9f45ca24c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df8317b-c3a2-479d-b638-da58c7f4be05",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba2adb1-d4c4-4b09-a74f-fb1bad4d23a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661ac973-6a88-4214-803c-f3cacb97a809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931ad28c-67b5-438e-a34b-9dff9f990231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e59cbf1-e0e9-4022-9486-b214e2b296a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ea9927-adc0-4662-8761-73d48c307cc1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc56faa4-119d-4dc2-8df9-dbd688480389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05307df2-bb9f-47a7-a3d9-92ad36826691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a15379-b4c7-48e4-8dbb-f3f7be609104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba594d9-591f-4d23-aa1f-a9237c659305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc6024c-a810-416a-8bef-5bd43934363c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab07fd69-ffeb-4120-9b2b-9c90d2b4cb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5262f81-53d8-42b8-9e17-257bdcab3f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54638cfc-87f2-4a50-a959-c201128b048c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca15a497-5598-409d-9ba5-e80cfde8a978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fc24e6-8e3f-4aff-bbaf-b4b2b24a7a6b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3d2f36-ec2e-4a26-bc67-0b2a37c02679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021c93bf-c2cf-444b-af21-219efeed0147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd62bab-82ee-4a15-820e-f30968943cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcdd1b6-b8a9-4e1a-b35f-29e508170600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfffe9fa-e8a9-478a-98a9-3747607e71b2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4994f4-34ac-4c47-ab6e-1facdd2707cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a1a4f3-8181-4072-a670-7d0da091763f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced12f3b-f343-4344-8100-97b01ec05e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9ecc7d-7daf-4bf5-97b5-60f58ce62a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea198436-ad69-46c4-8bda-32109ff332a8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4022c50d-7a45-415e-9ded-5b582c91db4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b261e41-9610-42a0-ac5f-ba64d6eb4820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ab1132-e149-461a-91f1-a958e9d98e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b4d5c2-2c5f-46fc-b616-202f201d87fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4aa128-76be-44f7-a513-63fad351ca8b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de206e7-dc0b-45f6-ab52-81c192105568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c25421a-63a1-4ee7-9f78-536d71782f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c266fb6-6014-41bb-a61a-ee52a25dd7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cabc5ab-456a-4a3c-a951-7fe7c4eb3de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d363b50-043d-4b51-a36e-fc5439852a4d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a831f2-97c6-4980-b931-44bc2b44e903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078624b1-9bc1-4648-ad88-d363abd7f960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3025bdcc-c515-44cb-9a69-ecbbbdd78b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ef12ae-2968-41b8-b83a-943bf00bd37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa2afe5-5c78-4f7e-a22b-cbc526d05708",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab3310f-c6f2-46ef-95de-1cb2f6528b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "548dd806-3aa1-403f-a00e-ed0f2c128596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5767b400-377a-471b-8c21-301d7b4a5ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7330e0f1-517f-4b75-a279-f69acdb1ac54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4067430-cbd1-4718-8536-b9718ab3e8a7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f5227c-12f6-467d-a30d-408a9abc07e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4377ff-2572-4414-996d-682e6123f86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778cbbd1-d671-4cc0-930e-c4dafd400253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "296cb100-69cb-4b5b-91bb-5906a85a3398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf7b8e0-462a-48e5-8efd-9fbf05845659",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c5b126-af6d-4447-aede-ee92ba498c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46229118-1835-47de-b70b-3ba980843f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04feee03-9bd6-4f98-b990-e457c65ff86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdaa817-6b1d-4ff1-82f9-ab9538014872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc63686c-3f21-40bb-b5bd-5c7df99e1be2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdb9111-98d1-42e6-8878-bc62aa1ccc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3855c98a-b561-4120-9922-50c66b7c0b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bba6df-ad91-41db-bd1e-89fc4242d1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "596719a3-c864-48bf-858f-29da6d2b3934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d80b44-5e05-4c27-8b0e-351b867438e0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df2df56-5b7b-4f73-925a-a3625335a287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b40737-c981-4b8d-9a47-88bb096bf874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1df2d5f-5f8e-48a4-8a23-378edf42b0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "533bd0c5-ef49-4b12-818d-8cd1dd6b7c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c34f8cb-cf4e-40a2-883c-d85841404411",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0df86b-b409-4a1b-ae61-af900c45944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bd1efc-0d49-4887-85e6-de450b8e5fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219a8956-890e-4e32-a6aa-ae86fad31890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed6d1ba-af4d-44ff-8f05-820dcdd86317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4aa591-9ec8-473b-a560-dce7cfd2cc73",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce066992-410f-4a1c-96d9-51183a743d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef15f9e-4cab-4ad3-9146-6f366f31fd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf1418c-0509-4323-9f30-b4166a756269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3d719c1b-82de-406e-97af-b7b1bd1e6d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d068115f-736a-4a3f-971d-62cbb14c2912",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d945b7-edc0-46d8-bfdb-0f7ce4ca9508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8961f920-3cc5-438d-862c-1fa165485042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cd059e-6a29-4498-ba49-6ec040058cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "786729ff-ec43-4e63-9202-ddc99ddd9587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7227184-5b68-441a-b73c-17f73ac190d1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2526f770-4c88-4f74-af79-6009ef3af958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbb9a00-6c97-43be-8910-7f8893b71879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb42b271-850e-43db-a27e-1e7007342cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "523e741d-526f-4e77-98c1-50ecee7e21e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360568c5-4ef1-4bbc-8350-a5f684f58ccf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3ecd78-f6ef-4c77-882b-24792ce68a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bee91f-203b-4b24-bd2b-2bb417b9b598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3483eefb-5621-4564-9588-59e950fc82fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c78202-5b44-4406-82e2-2f8389023d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610b79c7-d4cc-43d3-899b-12005dd57a2f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbf2221-6d5d-42cd-8003-1b4372dded06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed81044-32b9-496b-bc03-71ecbc6ba5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609016b3-e7e0-4bab-9a72-875e41c3d7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0f784b-7701-48c9-beab-f39f107a48af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f3a1cc-9bf1-4628-8e9c-b9275636f248",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9724076b-36de-4bab-bd7e-5661e606924a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221d9e4c-13c0-49dc-b23a-9a2d7a9dcb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc9a40c-ad9d-45df-aba2-d9fb60117a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "460077c8-cabd-405d-adcb-efb6c0be8578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7ef8c2-dafc-4fd9-8b8f-082a953c73f0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d7aa73-7d55-4427-afe7-f1dec0fe64ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c306e33-718d-4d90-8978-2fd250b2b50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fccc49-261f-41c9-bb3c-34c8a196ae45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb72d34-6780-49e9-b307-61ffc4189e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e7d1b7-d269-4c20-860c-c117c9616da4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2580a5f8-7bc9-473b-8b20-821056ee8479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c60b96-8140-4d9c-a5ee-640edeeaa639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd04cf4b-cb29-4446-84f5-770beb7728f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e48785-5a1e-402c-b7bb-4f565ac6e53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8677b0-dedc-4799-b51c-7f5c2ff02eae",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb9d941-4680-40af-86e7-a5db4afc4c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9cff40-b876-4b7e-be7b-cedea742053f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180a6517-efb4-4dbb-9305-4f0820817bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68265afb-517b-4d02-b278-4aca79c4955f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57b3679-cb66-4cc9-9287-845b0882fa16",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce16425-ccdc-44d5-b9cb-108995a025c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f7fca2-9115-401b-b731-e0e7f79c6ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af2fb92-c051-43b4-8ff8-ceb32bd6b0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b59340e-ae91-46b6-8d5d-efa3f4da9854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689d2a50-2006-4629-8d60-07bd36878202",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1ec089-f63d-42af-93f0-53413613baef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa4cbbb-9448-4d6d-8c69-e1b95b44e02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bf6993-0472-4b51-93c2-e914f301a13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a38dedb-ed60-4dc0-96e7-88b1117a79ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2158b96c-784f-42a0-9d39-ce1aee0197df",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e7be34-a9a1-412c-b533-41abb9455d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63fa369-7025-4317-8dc8-c629b13e1d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5474a236-4eb2-4c27-9945-60e375e0b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44b67ed-9c5f-4dc8-9791-7d5dd06f8439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0015e6-60c2-4783-9416-631af746ab3c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f20e9ed-8816-40c3-b5d4-ea6ef81ac952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0697e20-a9ec-426f-aeaa-e36c5c85af4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ee37ab-588b-4b71-8c59-9be5417599af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2361b4a5-55b2-4c42-87ff-e61fb6566f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9404fb6-20eb-462b-8d7c-3e8d1166281d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776273be-5c4a-4e4a-ba97-cb48aedcde74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c20969-92fe-4a93-b398-2ae8b8058ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9873a35f-1dae-411e-82af-4bee23d3da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9ba9c3-8f74-4b92-94d2-64368afbb2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd73a79-cca8-4a5e-ab58-14adc4710697",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fab465-1137-451f-82d7-ac16dbd4200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e17a993-d720-483f-b26c-3e864a4cf235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c98240a-454b-47ef-a71e-73582e495786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "07519528-dca9-4e86-995e-c9a13122173d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f2867f-aca9-4a5e-ae4b-6b60dc942a75",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c994d857-a811-42bc-89bb-e8818fccdd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228a7eed-79e5-4164-b4fc-f144a618adad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8efb819-e798-4f37-a8ee-e74b4bb1ea9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4a1698-86f6-4fd4-a0f5-460445dcf0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a645096a-68a1-43a6-a50e-9cfd45926d20",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ab4dad-8f2c-4942-8f3d-44e857fd515a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f67938-b30c-4000-af37-756275390e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfcccf8-68c0-4455-84ec-369d3b637ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef4e79f-5d41-4821-89d9-36f80266130b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfee528-1ea6-46af-9964-0e45cc8c91f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c811f757-2122-4f49-8c23-b7cc6b75c9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480e3736-5c48-447c-8179-55a03a2a4e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ba9ce8-94d1-47c5-a42a-547e13d89d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e0dd76-12c4-47f9-a430-0f2232e3bc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2931ec5-0386-49e7-bea5-5d1eb9f0c7ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458129ca-8c77-49f1-99ea-79a95700cd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbefe0e-bf8c-4ff4-b610-80496597775f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e1fb5a-f497-4c91-a4a7-03a4b0e481dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0feb9f3e-bfeb-47e4-ab9e-a7039156e494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199bbae8-26b9-41ee-9201-2156afd1707f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f4e888-ec59-4d4f-9922-0e432709399f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3909e69-5f4c-4461-bfbb-59f0c13a7800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a11d2f-e085-4e13-b86c-5063c53eb6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4500d734-ba63-4e83-8957-00c8b9d02e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba62376c-502f-46a3-92e3-6ca07e480aaf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a6b143-ae2e-4eb6-a0ce-34c99b6def98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94428bf-c15b-4f3c-b963-a980ddfa807c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9043467a-a555-4eb7-8415-067dc0b3a138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5529bafb-926f-47cf-ac5f-d198d3d4a9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ca40d9-169c-49c0-a341-794ba05233aa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516c625e-e9cc-4d3a-9118-d10e2e6ca30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3bf6cf-586d-480b-909f-e3e45d6d9844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa7a74d-f1aa-49a7-a881-7a8759b145fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd140c8c-0a4b-4488-9ae4-38f03cd7dc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35ee702-c2b6-4e25-a48b-e7387d53a0d7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebae0c15-0f28-4ef7-8715-adc9b0637bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c6d954-b39e-4c6d-b5a4-cacd8da326f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63c6f2e-eee1-4ef9-b2a3-21581741e343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1925bef6-e5f9-4651-9ae8-097f15a490ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cde3e12-a396-453d-ba84-d5f14e28ec63",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615fb308-9c31-4fb8-b344-ba3e4bb1d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf537e6-b764-4bda-8aee-2c13669dc469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d1d3fc-31eb-4db7-9dd2-110e27f35861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0463f7ba-4c0f-4e15-b711-152424887f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3182230b-f987-4970-899d-8ac21e154c12",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08535c2-e350-41bc-9a1e-5c1b1b225020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723bd690-5eca-4017-a250-d7187b290e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263f8f5b-5702-4cc9-a3e8-3d4df60979d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9108f3-01b4-45f0-889c-4ad57c3bbf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f616676-eef2-40ae-87b7-9ceaa3a490ff",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d295fd2e-2389-4bec-ac4e-3167c20cb3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcc23fa-df40-4d04-b489-0d40653621a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d89dec0-49b2-4e50-9056-666a1ef6984f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58d145c3-d740-46e8-aa0a-3d3a80ea1085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140536be-6575-4c80-b26e-44bb4cb282ce",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3407e951-a284-4314-ae96-e527175d85cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c58622f-a247-4e87-83c3-6594fd264309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ec6be7-4796-47c6-9805-e6c28530e74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ecde8a-65e1-45af-90e3-8cb7f8fb9fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb2f907-47d1-4d8b-89d7-389971d1eb4b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c69ec08-03d9-4c95-9745-68731e916bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372e9aad-fb3f-45b0-8c4c-3e661ed475d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8726f92-ea4f-4e9f-88eb-f11d0da76055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff67fa1-8a35-4d08-8664-eb69912ca442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad99d5f8-f5c7-4c2a-9585-ac0f66e47e8b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f0045c-8e6e-493c-b374-f250eacbcd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946cd9cc-0df5-4480-b05b-c75c96a8bdbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c396c47c-a689-48b2-8004-99f649b6b386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cacdb10-81da-47df-95c3-d0e9c9151de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146dd287-744e-4f69-b7dc-cfe452b57d79",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dc7643-a5c2-418c-82cf-d8e31e4832a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96cfd95-d8a6-438c-a19d-376aa17c27c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3edba16-9eb3-4588-96bc-ceaf2dd744b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b2225c-b93a-479d-8f39-29b13395e83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dae0e30-08d9-4bd8-aa40-001c453ad2d4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34243d8b-7771-4f1d-9e5a-26657f919c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544f8bdf-797a-43e7-aafa-5e8f4f6ec0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e1790a-d0fe-4697-a6bb-ada0d5c2635e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "430dcb7f-7770-4afb-bd52-3860683eafaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a7e50b-54ca-466b-afa6-c2e50960f376",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3f6c3a-4745-4670-bf06-4d55224a46d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafe592a-b390-4a82-8374-33511ab0a935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdf0941-dfe9-4dbf-9986-4cdbd8fa8171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd74ebc-d9ac-495a-abf3-aea64fd9b755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53ddd14-3b19-4433-be44-7262b4033117",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def65a25-ece2-479d-9997-493186c47f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7ff807-1c2e-4f0a-b5ec-5822e954b376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bc2dc6-f628-4f8e-8483-b9c3255a3e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a80e03d2-d819-49db-8028-b2cca4aff24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f156bd7-9e02-4ef9-ade4-08750e13cc9c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051bacf1-bb5a-4ac0-aadb-c85958073282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdb193c-feb1-4924-8a23-d745a0af4418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f11f46-e6a1-43f1-8a42-03ee750a14b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cd489d-46f1-461b-a7f6-5c1a70bdb635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5377a178-26fc-4e67-8483-67f354a3a530",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769e69dc-c4fe-4aa3-aa9e-2da0f84be770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b5a053-f271-4423-8fae-3b1bfe92cc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721fed73-4e31-4921-9fa4-302f828f89df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8e6f96-64b4-42da-adb5-5371d7fb8337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327e42f8-8470-4b8c-84a5-8bd15be9fbd0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465b6780-4e46-4eaa-b219-9e313281188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3be673-71be-49c9-85bd-e0c9fe565fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9b5000-04a1-4344-914f-315deefc7091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb0d03a-5f73-4d89-b586-ab3406b7acbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079ee98e-1483-4c4a-96e8-1bea4788a173",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92f58eb-6cd6-4f10-b9a2-ae0ef6b92668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0305a8-5973-46fb-a7d9-a4a40f9a3224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370f5ca7-9c9d-457f-81b0-d84c41ecc78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d6778b-d4be-43f6-858f-4211863e87d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2a0672-3697-4c7d-8a43-eeab83aa3de4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a32112e-8a2b-4e65-ac81-398b808feef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8ed505-4488-40da-be93-78cd303bbf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdedeebd-ffae-4e0f-856c-a6d9c007fd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "096d224b-9fd4-4aef-a881-38a7ff176a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81585396-89af-400b-b00a-16d6fcbf3881",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c784f91-7811-4b3e-a433-df41377a6d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7cb1c79-8339-4cb8-89ff-4dca3ae5c554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf1ab5f-2b0a-4b45-a5ce-b5be12fd5f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db98818b-76b3-4773-badc-5deda9119bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276cca0b-0eca-4179-b062-09f7585dcd39",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576932af-d34c-4b9e-93fc-d83cd2689a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6141baed-a57c-40a0-939e-6a64c12c12e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546088cb-d2d2-4572-9304-08d09eed1aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd41af4e-8bff-4c3a-b4f9-cba6832eac31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029a7307-74ce-4f32-926e-ae40795522ac",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87471f06-b427-4c43-b19a-22c5598ade7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2252908e-a309-4704-8bbb-1fc15460d323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f013d92-cd90-4067-a15c-aacfe7f7efc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b94f867d-b02d-4f67-864b-670bf7f88d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17ca767-fb96-492f-8ff9-cb115bc32fb7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdae04c-e797-4082-aa9d-217d70262c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0b3345-235f-4454-a15c-a9fd10dbb6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b473087f-3252-4abd-a406-3ebe0a072bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bd1012-eb6f-42e5-a61f-327f8839021c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6418edbc-b35f-4868-87ac-ce76f593270f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9ad8a2-2c1e-4e03-a182-8b0d88b2a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5681cf5b-68fe-4040-bd2b-7430f4cce77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a182f1f-ea8f-4230-87ab-71133b4ae3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b97d5879-ff24-4720-93bf-0599fe5b828b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a71775-5c46-4897-8388-af797ee778a9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b9e3c9-9e51-47e0-9d6c-364c35b956cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a654f6c3-c22a-4994-b3e4-0950de104e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6969a4a-fbe8-4cfb-8178-ecce6cb89426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dda990-7e82-438b-8672-7b530bb39549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003f1caf-392d-4847-9b68-a35d2ddc154f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e1ba61-e9f0-4e9e-a3e2-d742a8f450a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973291d7-949d-4eaf-b245-abc352e7a2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cb546d-8da4-4283-861d-59173fe064ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "238855b9-67a1-486f-8bf1-d8f906fd9b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82193e-46e1-4b89-a5db-f036bc61af23",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40926b76-dbf2-4c4a-82bd-59317b51b5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60363f3e-bcf3-4739-880b-4e9cb59d9f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aff170d-1ec9-4c69-8391-6e6313f563a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8280adc4-654e-4aa0-9a09-c1563db17a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5412c59-9d77-4a85-a788-a54a53f0c7e5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c4ec29-d6f1-45d2-b267-d88cc388f589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39f5411-8cae-442e-8564-527eff788297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0a5d19-3064-490e-bb65-3834fab276f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67fbfd7b-c3cb-44b9-92ed-133118eb9682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c1f098-8a81-4d22-9c7b-6799c59d1f13",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20815757-4e8a-4099-9544-f2607de5224c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcda7f0f-e510-453f-bde6-3226913abb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fcde82-efdd-4166-bbe4-fcd1f80346b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "74986e49-55a4-497c-82f5-c4cc2ecdfb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf59d11-569b-47d0-bb04-1905ee1e52f4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa2c3dc-223b-4988-b180-ebd96b69e951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cfe8cf-3cc0-41fc-a171-de6cfc7c24b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141d7ee1-4a4e-4c32-bee9-e7ab969c873a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d33ed1e-7e7e-4337-b06c-f12d998dcf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1923e3b-9572-49fc-b27f-1ad02a46d826",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9c54d5-a41e-4973-8dd1-9b16fe24fa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7d2f32-a646-4f94-b57e-3d94bbcd0fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60673c7c-3504-444a-9de4-728c2769f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf836afa-56c7-434c-8b03-0b2b0bf730d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c00173-8ca6-40da-b6d8-79795342bf33",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d98c52-6bba-44e1-92f0-fad2c9428302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "80abf1e6-f052-44c9-a7e5-8cc26651945a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d03412-d6e4-4036-a3b6-97cedec5bd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "513b71a9-7957-4679-ba63-203e0652560a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed48901d-eac6-4195-91f2-a281dda0fbd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8439a3c-2927-44fd-be02-f4daf141bc32",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66af642-89d3-4b34-85e0-38f1bcc660d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c77fcff-010a-40dc-a871-d8ccfad4afd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eabe3ae-74e0-41d7-b14f-da11035241ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68ef5b37-3490-46dc-a56b-f4f752b6ff12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "478d94f6-0b91-4582-8ce9-d0d96d65abbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95d98614-195c-49ad-b29e-c2c95a7112de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24065e3e-ae5e-4cc4-9d2b-91b3793fdb47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f0647c2-a3cb-4c23-aaf6-1bc0a27bddd7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43df6717-fea2-498a-b907-e26a5a3a7004",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edc85f23-2497-486e-b006-4dbdfa5844a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "88344cbb-3cfb-42bf-8c18-e92d3e5370f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45d55c86-b96a-43a4-be87-14b571f343cc"
                }
              }
            ]
          },
          {
            "id": "302875fc-ebd0-42d7-92a3-4b1de7a28a0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eeff31f0-199e-40e1-b6f8-d2592c2970f2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51e0cd4d-ed75-4370-b631-7295802c258a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42e5c52a-85f3-458d-bd3e-219c29488b71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ab92309-3b4b-49c3-932f-fcb7468df843",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "02d57625-4e39-49e0-8da6-10d72942172a"
                    }
                  }
                ]
              },
              {
                "id": "ab9dd581-7deb-47d1-9869-35f7a7191b28",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4525ae14-08a5-487a-9296-0b63f0dcf3e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89af566b-bbab-40d9-8b53-8df58b14cd6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "382102f4-658d-4431-ab31-bd137a807289",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ab22e5b-6f70-4106-aaea-a17823e47b56"
                    }
                  }
                ]
              },
              {
                "id": "0480445d-a585-480a-a8a1-dd627c26f745",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11909fec-32c3-45ce-a18c-4943e8d66c5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3f65092-459d-4fb5-9b25-4b5440880455"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33551c18-7b0d-423a-a6f1-06deba3d27e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4fc155b5-36e9-42cf-8aa3-19e326602db3"
                    }
                  }
                ]
              },
              {
                "id": "1a50a445-9a30-4e86-af10-99b7682de44f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d246fde-6f08-4cc1-8d68-1e44d0baa5b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48ffaf45-3f91-4a4e-a8c5-4122174e53be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a170d4d-9b67-4d4f-ac6e-8492a588cb4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0119de7e-9e0b-47ea-8bc0-a73c216ca12e"
                    }
                  }
                ]
              },
              {
                "id": "c9591803-cbbd-4764-9f04-01a4e17999dc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff1325b8-aadc-45b0-9c55-0346de026027",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6eb854fb-dbc5-41ae-a98b-f02a336623ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d3a18b9-bf92-491c-9779-f2589d20d4bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "225d520b-d393-4293-a416-9e9d9b3d3966"
                    }
                  }
                ]
              },
              {
                "id": "1d5f8e43-6884-4f4d-b512-e78e571e228a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f8b859b-5b1a-4f73-8066-3d4b0a711d40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6cc3495-7cc8-4a7a-921e-fb7ee783d049"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d8d5f54-f8d2-471d-a111-00c5b3ced9db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fbd25429-36b4-4313-b910-50987c16f58f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "209cd0ac-03ac-418f-81be-1036037614d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fcaa3a08-e267-49fb-bdd2-d9b9e07b2a8f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c64bd093-b575-41fb-bf38-7b093885aa7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "896aa190-e7e2-4995-a733-84ce2cba9d5a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d614c520-f7de-4b94-9723-6ea98f7db7c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "182dc937-c7cf-4d77-8879-b1b5932f3a44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9422529-4586-455a-b669-5acd5d8c6611",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e3f6668-f930-46fa-b6a5-36a87921bcd2"
            }
          }
        ]
      },
      {
        "id": "cb4ba907-1eef-42af-98fe-683af254fc31",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "18ead8ab-72ca-4646-b8a6-19fa9df5c2d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2855d15a-b3ef-492d-b89d-e13bf34f10d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "580fa48d-08d5-4509-827b-5337b920210d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d8b5af-0ed3-4bcf-ba5e-1acb7906ba64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f568a1-4862-4877-824f-b94bdb6fe64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8752bebd-dcb2-4d5b-a155-c622cb19c0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7675dc-2dda-4852-a619-80cb801fce1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7941186f-e79d-4317-a1fe-a38afc2f1f69",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80803adb-8f16-4995-ba1a-b4799558d9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482c4956-d9c3-4b7a-bb05-4fff934b3b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb8f022-0281-4b52-a133-d0392be24746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b134538f-2f42-4172-b47e-94fd6e65a004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69031a99-94c3-496f-84f8-186a0f6de6b6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c60b49-a63c-4583-94b0-42f49c109e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c84e44e-1431-4515-a343-c551f82c0389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7ccd1c-beef-47bf-8cd8-6fc2049805c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "679929ab-f17c-4f0c-90b7-ac98b5466fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee206cd1-7546-4667-b0e4-de865848011d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48b69f2-bf65-40e7-8cc2-b6587a58c930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f5fbd9-e8b5-484a-98cb-6b6895b3d503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e970cb-1651-4553-8bff-9ed3d12924ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36d4b69f-c329-4550-8222-0e7e874aa0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a50923-0e75-4ae6-b0f2-5aacf6853836",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba8b567-3896-4a4b-b6c0-18c3e2d8d8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df21735f-0fe2-48c0-a064-1deab98d7219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e73f58-de77-48e5-b6c7-7b338f037cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd60263-2651-44fd-89c1-6e1599a4d551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bede9ea-ab24-4e1c-a879-18d801147de4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ae79eb-2e02-4850-b665-876a16558359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e41f37-caf7-49ce-ab19-805346fad810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feffacab-1ddc-4223-8c0b-16837c44744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd280138-be7f-4f07-8bb8-3bd118251e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29984d81-4220-4dc4-99e4-c5820bd2d37f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82766aec-6cef-4c32-bc40-bef6ffe7289d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4abe367-0d8f-437d-8933-3df7c39f2e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50b9372-ac32-45eb-ae11-cc19bef99659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a866138b-da48-4ec4-bf0b-0b578ae2f8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c9fe0f-ea00-400e-ba0e-f83f43a4bbfc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e4bffb-26bc-4144-98f6-b371dabbc52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b922948-8fb9-4f7a-9e57-30cad9487433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0de66d9-a578-49cd-a049-f955c6f82ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b391cdb8-34b6-480d-8863-908c3d240b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c327cbc-69fc-4eab-95be-9c19d9e869bc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eeea23-7210-4052-b0e5-750105bdb260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade516b4-bc32-4790-923f-b6ec9e7cc6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b199253d-74b3-4cfe-9df2-843b6a4dd6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a49d9ba-cd80-49b9-ad95-50a3a2d17ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0187f06a-dc2c-4893-88e8-42ad4fee055a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dcba51-d063-401e-9475-4f1104ebab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60f122f-9afe-49ab-9b94-9877ac79c4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce139fa6-df04-4e54-ae9f-1ecdfb9d6eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f90a85c9-0a75-4a48-b506-f11cf73e6c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c80fb98-3ca2-4fd3-b58a-527504b02676",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757297fb-66fe-4ca0-af69-28a89a621016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781f1a82-983f-49fb-bc18-255a0da37212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a43cb8e-cdc7-4d89-ae2d-4fd6e3261928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8d544285-d426-4594-8a43-a2d84bb8c287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bf7a6f-7c89-4b9b-9d9f-6b117dc3360e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99d8934-f680-484c-a12d-7936adca72ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bb7ed2-5d23-4e5a-92ff-cb23fb290cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4011c366-291b-4b03-8703-178287a6720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25a799cc-81a6-438d-af1d-ec2fdc8ad445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786df0da-1506-4e3b-ba89-72bba7585925",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf10b578-6c65-4f6e-9dc5-94c68e604246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e1d90d-b756-4280-b684-1471fa9b3cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc7e801-ff54-42c6-b41b-4796c0b4f374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8ebd3a-5984-40b4-86a9-207caf416717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6600481-3d9a-46dd-b91b-5c0cde4df1db",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e46a508-ef18-4759-8eff-94aa321fc2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38190bae-eaa0-434a-ba5b-19e2c43008d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef890773-5420-4d98-99a5-43be29185630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c346b596-8c43-400f-a8ef-c1b889d9b320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8600e40b-41de-4f81-b0d0-f51c281effb7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b6d0bd-5174-4ef9-bd03-149053dd43a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc64db9c-bbd9-4b4e-8e71-4833140c9504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06126940-0a30-497e-8f6c-9c9e80c826dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "eba662eb-7441-4ad9-be28-6c18294af60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a2e625-17ce-42ca-a31f-8c9be0b9142b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9735ceba-68a8-426b-abc5-08077206dca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c33ef25-7464-429c-a2cb-79c9f1e235ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaabeb94-5a33-48c8-8bc6-14bcbcefbf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07cd0e9-83cf-454b-8014-32bb728dc83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39715111-7db1-4c45-b76d-b4be44edd698",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c3aa6b-568e-4a3e-807c-8c461c771e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2c1b2a-b4c9-4bdc-8fb3-4a150677d2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f83aba-8a92-4ca2-af4e-d905dc0b498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab5af15-cc82-4995-884d-e5d6e4e72b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee8a490-c3bb-4557-a655-70df02cf8730",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76461ba6-b48c-472e-890a-7568f74835d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d2f5a9-937e-471b-8ac2-c4a096ae43c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad911f2-a4c7-44bc-a7ff-97f00bdaafd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9009003d-4156-440b-b61b-96f753d38b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f88330c-129e-4c67-8b1d-72f2022807f2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113951ec-9ee7-44e0-9293-3218be082679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b605e814-e612-40c9-afd0-bf23d605f297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29805cea-5735-4cf2-90c3-655dca07f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f2205f-4ad8-4298-97af-f5f71ad008df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30aa9b0d-b424-4a60-a2b5-75f1542e03b5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053640af-c004-4e73-bb12-e633858193dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc632c71-0eb5-4541-beeb-33ac5dd8c7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f56edd-92ad-447c-af94-2941872753a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "858701e7-eec3-4af1-9c3d-22a07751856d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c1d51b-55ae-49e6-ac40-7022be5a1cc4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5d0a14-a1a2-4908-ad6a-5cbabb4b467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70aef43d-4fd8-48ce-9672-be0493c8d9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5df33bd-3003-4d12-ab18-a4f26b6a504a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "478e7658-38ff-4883-af8c-a6fdd27e40d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e2b50d-5dae-4f51-b94b-c13d53e8db40",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b51e47-5c1d-4da4-b842-0d0f546719ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f123c18-7faa-47a7-9809-a01226a3da9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b276a8ae-a76f-461f-9c89-7575eadcf4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7090ac69-00a8-44ff-adc9-9854550b5a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9791a1-f052-487a-96cf-f734ae5b30d4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220ebb79-e098-497a-8213-9ce70edd0a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb92d0ae-41d8-4018-aa7e-357a9d625f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fb1588-8542-4baa-80bd-8550044f7db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3a035a-d8de-4adf-aad0-e758fde36c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338b5c55-70a3-4b7c-865e-83e692ebf49b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1c0ca0-4aee-45e3-aaab-77c86cf95e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a583a6-0b7c-4a8c-8741-b8bb87dcf55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09b7fab-b962-4f05-a7f8-35c28b6d3c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b6d956-1ddd-45e3-bb34-fe4b5a68bf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c2fda2-6a49-4e0d-b508-23588fdae7dc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6051ed23-22fb-4d50-aafc-2781d64492c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da462391-aa6d-43ac-95f0-5ceb973fca50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad48a09-77a8-4a40-88f4-a2838a61979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a26529a8-9326-4474-887a-17adb171fec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41a501a-044e-4d8a-98da-502459d2d5a3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edecdbd5-6fc9-498f-9e51-522c0bb78010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943823e7-7393-424e-8d26-7d2bc5ba271a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6e011d-005a-4f52-86f5-4a391c462df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "927ea56d-e2e6-4f40-86b4-59b54f98eecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa74dea8-ed11-46a4-a799-417e9144a7d5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748fa6c3-1eb7-4e25-9449-01c413ed555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab4d897-4e37-4868-b03a-7aa174a0518c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d58c87-6000-419d-9547-e0bbf50684da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71c66bf-2831-4752-a7b1-ff3613c8f84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a49b8dc-2a64-4461-9718-0c8492111e6d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f69add-a23b-4ce5-839b-3aa311f14718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8000e34-ae8d-449f-aeeb-2e9783ddbbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746154a7-a3b5-483c-aad0-963879b6e242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "238938f8-2abf-404b-a244-c32c1e5d92cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235b5699-3da9-4c8d-867f-5d5cf71ebf4e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b44cf14-a5a8-43d9-adb7-c706594c1199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ea4fa3-23d2-4be8-a359-a096f96d7fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba983340-696b-4390-a1e1-041145c365e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4257226-58f6-4cff-8635-8708227d64c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbec83a4-22a8-46c8-8556-883695af246c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699a0394-83e7-4985-b386-4bf0b9cc47ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66bba48-e486-4816-a100-58b014d5b5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e77b9e1-ef4c-42d4-9545-8fb23c1effa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9153fe0-1072-4508-813e-c77688962b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4177d723-4ca6-4ced-880a-357693f6d874",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42096fe4-a2d1-4562-aaf9-a43aa9f3a994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a08e50-446d-4169-9a7d-083519162349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755eb672-93d4-42a4-b184-3236db8ac7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3417b00-2f66-4ba6-b691-3980b11a2c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee3df10-16b9-4711-af97-7f30ee61850d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda86dca-908d-4fd4-9179-0f87fd97e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d928f24-6807-4a89-9aba-86a65a9b88e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e8f075-c8ef-49a1-a34a-28c54bbc45b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bda3b7-a0a3-48ac-81ba-c6c4a93a1088"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8f8b946-d3bf-445b-bbc8-83431b9fd545",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6e014c4-2ce9-404d-8cea-779f5c7a6119",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8590445d-3f27-4ce6-bc19-58f6b6403f22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a45a655d-ec9f-43a8-9bd1-889fe09dcbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31c01d7-e3fb-41ff-a81c-6fce23b69edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f3bb495-0905-44cb-8595-e854a4c5852c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7cd376a-3d79-44c9-b9da-2625161baf84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8058c471-f5a9-4552-a412-84031ae4a475"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0728c70c-07b6-4802-8bd8-70ea4f704875",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70ba238b-8963-48e4-b127-060b28219683"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71393b62-7d00-4023-98b0-95119c8ccaa0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8e062e45-b58a-4b42-b6b8-bc083ea47c75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7d32daa-7b62-4652-92c3-c71b35a0fa65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35225795-69eb-40d2-bb74-b99f8a3bc716"
            }
          }
        ]
      },
      {
        "id": "3caab23d-a6db-46eb-abdd-d16d58ea2671",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bc1780e2-d7cd-4c77-9ded-1f1f5300acc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c752381f-ce8e-414c-b2f0-37c3bc3c50bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd1f481e-b05a-4aad-a420-24a2d9e3b600",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c61362-a8bf-49bf-855b-1fbd6790e19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3601591d-32c0-40c7-9022-e82e15b8b703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4342e4-2359-46e0-a9d3-a051a7796e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3981d6e8-3da4-48a0-85f8-290fa08f7b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba53804-9d0c-4572-ad48-6decdc6a0422",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253f29b2-82c1-45de-97c8-5cbac0d05927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a7e3f9-21be-49dd-a6bf-25c9562c0ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b8b816-06f7-4812-96ea-1527d2206b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "516fff78-cadd-45b1-a25f-4bae711c681b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712e314b-44f1-4482-85ee-c4ae806e81ff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3723eef-7e80-493e-aa5b-4a06c8215978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2637d663-72a3-4db8-a4d4-c38931940117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d9faf1-7862-4685-af10-1bbd4b544bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5197364-1315-4d6f-a8b5-45e96d536e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e004243-1bff-405c-abfb-b148d1b95283",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1473b51-171b-4f54-aa89-46e2efef36c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecc6dd6-1b33-4f51-9f7f-d2fadaa34553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f7b8a4-8d3b-414f-a367-ff0a8583cd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70017ddc-ca82-4411-921d-5f9a0ff36d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a756fafc-dd26-46bf-ab23-623877a5d765",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411286f3-7c64-4ce5-9bda-9fcbd90d70ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecc07da-6202-4ed8-aea4-9f11c3296f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4791e01-505e-4e92-b71e-ac2050e660fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "292e6223-3a78-45af-8b4c-fa37972ee0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3547fd-5805-42f3-ab7a-ad13143a54cb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0ff486-0d4b-48ee-9b37-eb288c3438e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dec147-697f-4961-95b5-ee0377d718fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324464b4-db6c-441b-8e9f-c3f7ae2c55e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95c3a784-9f10-4f49-bb5f-d375db5cd144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bf6726-635a-41be-87df-75d67bd2780e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd11b90-338f-4645-b7ee-158306f2f93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fe905b-76fc-42fb-9a52-16dfbb27dac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ba9d7e-e98c-4c06-94a9-454705722252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9006e72-28a4-42b7-85d6-27c9b13fdece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d44ca8-4857-4808-886d-1547ae9267f5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5067d8-11d0-4997-bf4e-cae637f74b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17380f6-b5d4-455b-be48-f64c4fe7ea49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fae397-9e26-4dc3-ae3f-1f6b347371aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e630b36d-b9c6-44a6-84ac-f99f21eb9d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b982dac-15d9-4fae-95af-ad63e059eb2e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbeefbe-992b-4589-a2c6-de8e468539ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca286fd-6e98-47b6-b05e-4e0fd1e05034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040a8aed-5b9b-4e4f-833d-f14db969fc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc6c869-fe07-400c-a6f5-bffac0053512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d654edee-56bf-416a-8a6d-72ff3a951465",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46604e0-2ca8-4d69-9053-823da1db9b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3b3532-67d3-4b83-ab39-706caacd8b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25e0fc1-f255-454c-8953-b4a63262d882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98c63a28-f0c2-48b0-9013-91358d2b7fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b516b466-f2b6-41e1-ad1e-f13c7e62abba",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fba067e-c4c8-47f3-b2eb-e5268ac1a202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1492b2-1da3-4b64-80b0-23d771cadba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a7ff8a-2580-420d-a411-8031f1c71e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5b449068-c058-47f0-bf71-931c8df3ba96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138bca8f-6095-4138-bdc6-848a7fddd105",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a2c9af-86c2-4c9f-be64-defc1e1e4cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0521adbf-5336-4a66-b277-7b880680192f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e35b94a-18c1-4f8a-affb-82138c986f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e83f61c3-bc5b-4bad-8d3a-014037630dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2d6a85-5c86-4235-ad27-e061197c5a34",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988f7856-7833-468b-8a3e-525eab24d0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5661135c-14d9-438a-8423-e363f7e5957f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b852e34-c416-420c-bf20-7b7cfc0b0f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd6941c-9274-4b45-841a-672d04d883e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54940ff-dd06-4b53-829e-410c42f0370d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a44bd0-55ec-480d-8a55-17ada6f7f0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c063011a-4e94-4c20-b8a0-ece83a4895da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966716ca-5142-4059-8261-98bb8b7c5e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb25e404-bd9d-4474-9a6d-065aada2ab2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdea88fd-d13b-4f57-91a3-bae8f4f84ea8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43310379-4ae2-4364-b263-a0de7f792eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39f9c95-4e62-44a8-9cc4-970308f15db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79d695f-ec2c-40d2-bfb1-76ebbf75b337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c4054b-c646-46d4-887d-1d7731e334fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339ede5a-4c89-4186-a578-70f284cab474",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c18c74-637e-4fe4-beb6-f3e1fb333051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8606f2f9-50e8-4b5d-b065-0f7d6ee12f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ed31f8-9d31-481e-8cef-e4effc9d9205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a84f262-5eb3-420f-910b-e8bcaf52a4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95645fdc-80c7-49c9-a387-a232127a9dc3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd133f3-9e27-41d4-908c-dddd40685a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8ec683-a4fa-49f4-819a-0aee9c943cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9362de5-9de5-4a7c-9bbd-9638a756d502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a7ddb0-e242-4746-9313-8a06411dbffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f60224-14df-4688-a4f5-207bde9ec9c4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e702c1-ae2b-4080-abc1-f405a898f176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1505fd-7619-47aa-88ad-9649973d3f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b5725e-a148-4a71-a920-bf91de1baaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "668f2006-c72f-4354-9cf1-9fb087c73575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e9bee7-674c-4aa4-9c1f-1c0e4e7f25dd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c9e140-f645-479b-b2f0-1ea64b3ecef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d04fbd1-834e-4cdc-8386-212cee9163b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd49b17-6f9f-4f1e-81de-2909247112fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b66986a0-cf1a-4c6b-86b4-c6609334975b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f7d5be-517b-4171-9a9f-8c89e3e2709e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33245e68-a694-41f8-bfa4-29bf7bd33f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e635fb9-4be5-440c-8cf3-ba7a640a3707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f79ce6-52c5-466f-af13-a8c6c875495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af67d1de-97c9-4f64-a577-a95efaa07797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb02c20-201d-4533-a924-9e52bea2c12e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb38b8f8-7648-404d-a293-21db884b7010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50913748-c3f2-4846-ae84-90bc7b26c6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cad0563-6e9a-4a2b-ac6c-489661c90c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd68d7a-b582-445e-9b46-ff3c47e0c63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abea309-a4ed-4788-9a6b-8c8609d302c0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181cbff2-fb5d-459f-bed5-c84f742e6f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5223775-45d1-4456-84b2-c70badd1f096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831c3cfa-fa31-4054-956f-31826e584ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca0c064-f131-4dd6-a973-81bf89ed5ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eab3ba7-a40e-49a9-aa0c-40583f7cb9df",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13aee124-9688-463f-b01c-e0cd7c543e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf3fce8-eb7c-481a-b55f-554f3b1a4bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2b3f42-c9ef-4f70-a693-fc0ac1a0aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b56a2d7-f6ae-49dc-a32f-0def0bbef2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ab0dfa-a0ea-4e0c-ab77-a2cfacac192c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d33f21-5cd6-4083-88b2-b45a12b440d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8259a9c-05f3-4d83-9b47-df5012b06cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6867c10a-7bad-475d-a867-f3cc11f99995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc01f65-fd61-42d2-9e7f-31899932f773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a686c16a-5c1c-4942-9896-d2bcfe888cd5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804a3157-c3b8-4ffe-89f6-f52231706263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617074a7-b4aa-44e2-ab90-29d84955aa53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019e1223-a894-4fa8-9780-dced9b164a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b774040-75b5-4a8c-9027-e1b598296ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629d866f-2ad5-47ef-9686-9d89002d5398",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec11b08-9dc0-46f8-86bf-62a83051939c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd023e3b-2ed2-4258-9a14-833f3337b33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f895c44d-594d-4e73-b615-e7d43e0f0913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a4a782-31e6-4684-a5fe-a6d821b4cef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aaebf5-8e7b-47ef-9f38-1e110addc1e8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc05caaa-de94-497d-bca2-3e58159448fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc60d17-d1cc-4c4b-8c61-0a2362d2fff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f4f60c-b5c1-4f8a-859b-33f4f1f57ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a62591-040a-47bf-8b19-48b90d1121dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c09af7-4377-4e22-9ec4-3e824302bf37",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d829ed-c191-47c6-993d-0460506dbbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79fa148-64f2-4a45-b3ef-cfeb1f5a0395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32e58ff-3d6e-40ec-81f2-85bf4a7306a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5b3f78-1c39-4651-9883-21e39ab66bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246ff5fa-0b78-404a-952d-63fe51011f52",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba13884-e80c-4ff9-8f46-2cdbf042269e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca1cb50-a6ba-456e-aafa-13a35d98cb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad8802c-a971-4a38-b114-04ecf16847e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3ad774-f0e0-4a6b-889a-218c4e72a35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fc50b1-831a-4ca5-96fe-247d0b476918",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c8d7d9-caed-418f-b57c-3b82d459f9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b6b51b-ff74-4dec-87bd-4f8c6f6cac25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58671e0b-d0a8-41da-81d9-b17e1b32a591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d31783f-1606-4c9f-87a3-18de50e93074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4ad8bf-5668-4144-b237-8dde82e4ff46",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e2df29-e1ad-439a-a110-ad761fb00abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c28c01-87a6-4109-894a-93e98f54d450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d6a8dc-b0f4-4d8e-b6bf-23c347850a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cb6e5b-270c-439d-b1d9-b142f45425f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7b4373-a143-494a-b57f-3a26e137a4c7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c10b2d-8026-4060-8d53-9652de9b3453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e353d585-2a61-4bda-b9ac-3a407aba8fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e58ec73-75e7-4135-b999-9d4af4921492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84da2923-e0e9-460c-b7b5-06652481fc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b906f7-605e-4dc4-a4c1-8466344181cb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b7ac0a-09a0-443c-abbf-8085db4c425a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9ae7da-4b16-4d64-9bd4-33544d803aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d61285-603b-4a30-b502-bbdf9d70daa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b82641aa-d7aa-4952-96ef-79df2a229f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343da101-0e72-49a2-8520-c3fd3bf05643",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb725bc5-5bf1-43a8-b80f-31efa50dd57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4aa14ef-580c-4863-b927-6ac8c3d15bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc2c15f-832d-40c1-9f69-34f74fa5a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67b3ed2a-1177-4298-8b08-250068021081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a80c46-36fd-45ba-82bc-4b83997c6fad",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314d231e-a758-475a-b201-5a0df622dbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42df38fc-0c7a-4e39-bc66-2ccded50cb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a2e604-fb99-46f8-88f8-b7e5f968d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43204c26-9ee4-4676-aeee-7ad04c03440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f3bb33-b65a-4517-907a-720b19aa08e9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfec73d8-9cf7-466c-97b0-b745a307aeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86803a60-0fea-4212-8ab0-d30e332b2740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df153b2-c421-4ee7-b35a-bb2f7dc98824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bca669-7113-4f5a-b6cb-e95cc48e5600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2951ed-5b0b-4eff-8dec-be00c398236a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c93008c-1e87-4435-85af-b5e680ee8952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a829a26-dce4-4542-a237-12855d0d777d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e86263b-5c46-4d9e-aac3-1b49e5f763f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb87b795-483a-4353-b0b9-261f491784a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49e46988-99a0-4c47-a88d-ec77307fcd71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af6d9c10-c6b2-4ac1-8812-0f91d767a39d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bf81b3-16fb-455c-9706-eb345bb46814",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7e055a1f-9cfa-4acc-b8bb-c521a02a8df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23efcd3c-22c7-42db-8413-68200284977f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "132d5a9b-acb1-49fa-a0f4-b733e2327045"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d70de8cb-7c48-436c-8d45-b5ef90b87d47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "959d29e1-cd5d-4868-8cd2-6551e6347ad3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c61bb5a-b530-45b6-a537-fdfb52c6a77f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edbd9f15-46f2-401c-b18e-e4bba1dfa05d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7a2e9ab-e82d-481f-b4b6-20d68a69041c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d9f6e9eb-44d0-439d-833c-ad085b5a3698"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0c53011-462b-4f84-9779-ead9ff611932",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15581b7f-85fe-4867-9f0f-82e890e12443"
            }
          }
        ]
      },
      {
        "id": "24ffcdc1-6a97-45e9-ab33-ea58b8efa74c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e70fc807-0023-4a39-ae44-62a8f71ea2e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7f4de2d-4ac5-40d6-9fe4-03319f6848ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "054360eb-6944-4a86-affa-2800e6a510f4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d9ddb7-f5ff-4002-a6f3-6fff245fe31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb221fe-4528-4ef1-82c4-82d852fe8795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3164e90a-4fee-4a51-aa19-a382406566e8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc8251e-9de0-47e2-9b5a-19b0a1ef2032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c888b1b8-d60c-4753-ad62-4eb7a139a279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431f2c69-e041-4bae-ad52-0b04a5958544",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea8c2b7-b777-4a88-b8c8-a24e2c255784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3af653-df45-41a3-8a19-be00f4c1ebd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e588c6f-4cbe-48c9-8281-18b82b814a68",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab61ddd1-cf73-4cd4-b69f-7682bb74abd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1296e3b0-53a8-45b0-8dfb-9ca96bda877f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae892a4-4662-4f9a-bdaa-39a7a8b5b671",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e13684-7461-4e32-8cda-c7f0ef9de40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8601dc0e-c5bf-4bf1-b197-ee48d78b7d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b609cb6c-93f6-4aff-9450-7d9a4997e050",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd9f935-1c06-4959-ba4f-9d5a5364b321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003bd706-5488-4946-a228-b0eaafa5bb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2510f3e2-e5e2-4ac2-98fa-e651bfee9dbc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd1c97f-824d-49e1-b014-e42b29f58539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0009814b-a243-4c3e-8638-250b97072fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bb190f-2867-4b23-8fa5-1f3ae5f7425e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b69a26b-38cb-4a3b-a3d7-47b23621c7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15b49a6-0f72-44a9-b3f0-30e6b55ea4fd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a6cf59-2876-4f8e-ab9b-0da1d995d8f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd51e3b-7968-4274-a885-93a1a79cc07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a121d9e1-9a88-44ff-8985-abdd520aae5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1258ed7-19fd-4086-ada9-4ac61eb94210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf82727a-77f2-47c2-b62f-09c7449dd9b4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed50244e-a786-4bc7-873f-55c5a60f956b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1cb857-35e9-4ee2-98a5-4390dd0f5c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3089c8-65d3-4892-8097-befbb9a5b5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d6f86b-8fb8-4dcf-bfb8-e8fe94800059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b475f8-1b76-4b69-bbfb-040c97c2b9c4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c9cc4f-8cc1-47fe-af58-6640ee245a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20332c43-8a45-460f-bbdd-5b0008646d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d12559f-775b-4001-9de8-d82a60e9b3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa42bce9-8b52-4f7f-b3bd-72c99450a8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b805f8d-d6c4-439c-8afb-80d205ab65cc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06518bcc-6ae2-48b7-b0c9-6075ee2b0c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd45fd18-b43e-4445-8208-35a6d8ea38e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fead190a-c56a-414d-9187-b479ce601737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911dc699-bae1-4eb4-9d4a-58ce1973a651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670d2657-6f75-4b58-a68f-57add7387811",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d02da3f-d23b-4200-b6bb-a07d242cdc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842fe2a3-9e8d-434b-823b-c578fa5544a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f3de0f-58c2-4a93-b895-b242672c07e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e346532-64bc-419f-9e78-d1bacf06e2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66a500e-0f18-4726-a2af-58843bac4deb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33859d07-0752-40f7-bf8a-7a1694b47183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "431568b3-5393-458f-af19-88b4371e78d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e852c7e0-dcc1-4254-aa3c-ded76b50c6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bb3943-edcc-4d19-ad0e-a68a8171c676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ae9e45-5141-4cce-b016-88a604d0f5d8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59df36e0-eed5-4319-a765-2d43a272e395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7fdd1f9-672c-4940-bbdc-b2092401578f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed40d63-c24a-4d68-b0cd-6c1a89868618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e188a42-63fd-4b13-b7d0-6d97de05508f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1e56de-bb99-46c4-916a-d6236e56ddfb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5ea54f-dda3-4956-86dc-1efcb5f59a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b817db8d-7496-44da-a83e-2fb4deebe6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9917214d-55f5-494e-9283-0e2730237ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71173875-1567-4b81-9989-57da436d7840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9570b1-d5cb-4ed7-b619-c67c39d3846a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f90a61-e75e-484e-9cd8-a8eb50ee4321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b644c951-a6bc-4db0-8160-060b1b99a71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c87fbc6-5b1b-436c-82c4-dfe96434292c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d03db0-c445-499f-abae-737b671c79d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b61ba8-6ac3-4902-8234-4387523b008c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec7dda4-53e6-4785-902a-599b0c025c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abc31e5-7c4b-4098-bef1-61a14bdeefcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f65d52-6fd7-45b6-ab7a-987d56520809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e73e01-571b-4335-bd82-9fe6a45d073b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef99c2bb-99c5-4b1e-a787-a00fe56ad3c6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec6b8f6-2d10-4370-87e7-c26943fd0296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb92233-08ef-4044-ae91-4e049a3eb422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dc60bc-dd58-458c-8a8d-3099e8fe0ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8c65a7-9473-417b-83cb-bc48ae631e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0867f10-111d-4051-8569-cc96654771fb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e76d568-005f-4da6-b6ca-32fe17248f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463f542a-2034-4b41-bd7f-d74819046070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de75a9b6-ee28-4fae-b604-c1621285a10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9353df3-0b98-4697-8874-18c3b03335fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e7cfc5-4e59-494a-8007-b8acfa3bf544",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73ea311-dccc-4755-ada8-5f4c759206b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaef652-b1db-4b24-a528-e84daf16a3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9002e3-ffe2-48fc-8a9d-504c9922f47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dde14ef-978a-42c1-9f9e-0cb03a6edf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc59b7af-755f-4021-a8d2-fd6024d20820",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514f18d4-3483-429f-b18e-5fca7916f1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d00f70-ede3-4344-b602-8303242e136d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49009ea4-f155-4c02-82da-aed3b1601a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd05074f-6f0c-4505-b301-9beb5d541e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575b2bcd-c6af-4498-b78e-e2c8269abe8a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b26ce2f-a1b5-4dd9-b063-88b4f018fe2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d35544-9b65-4433-9b73-8561f3eea4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7351c7-6b22-4145-ad63-e2081fb6fc63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654d87c4-8479-41b9-ac7e-987490bcda1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bc84e8-7acc-4146-8dda-76039f0bc692",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a3a11e-97da-4c14-bdd1-1091f40fafc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6540a037-151d-49ef-acec-07ea7b104a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92df6959-69c3-4d95-ab81-51700cd3543f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694a3ed3-faa7-42f7-983c-e12ece1039f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6d6987-4789-4952-b44d-a029ef6557e5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f8a06b-33eb-433f-9315-192fc05db53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463b7cd4-1d6f-412a-b29e-217315e3cae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58554782-73a0-4700-a84a-07c51174e880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab2f03d-85b2-4d35-aff0-91d4b47e040e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be90699-f1a1-444c-9ed2-954a6ba7a673",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bb37ac-4264-4b20-b5c9-ecd4efcb4c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af42379-521c-425f-b0b4-3993b73034af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0973075a-eecf-4d7d-90ff-2d3f8202dfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9bd363-1aaa-4231-842d-2dd364eb9aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a348a5-09e6-461a-8d79-c1c3aeaaf3b1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac3db24-baeb-43d8-9b85-bff3989c483f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d67d25-f790-4289-a035-f6f7f67cdc66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c394c4-55a1-43d3-938e-363ba8501cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cf0409-a9db-4b75-b838-89b23f914a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cd4283-7731-4850-b001-a479827fcb12",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c69c369-5c75-4119-9f60-3fbd01321793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ae29a5-5592-42df-985b-3db2248f67a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6abce9-b7fe-481a-b4d8-13dea9aa976d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2018ab4-0e30-4a75-8b11-461551b61326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87137617-7e3c-42d7-988b-7f520601795d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a326d8b-02c2-4c0d-aae2-a82b83441eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6626e275-d843-4023-b98a-83e610902cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd6c30a-189e-4ed7-bd23-9f1efe44af8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd8647b-e044-4f92-9c5d-905188d5af2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ba49aa-5dac-4435-bef4-b76e0a9af432",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c947d8-ff0a-4103-8980-202f58ced12b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c943e99-7d2b-445c-ade2-4a670c1b4411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffca9a68-2787-40f9-8456-d54c38038e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085c5f12-f44b-4089-8745-7da93b3dad7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dcdb5b-2e81-43bc-ac5c-750dc11fd1e8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e7e903-5ca9-4923-a78d-8fc53db9f5e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "728da638-0817-435c-b299-b29ba5db130a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590929e3-1734-4e3a-a47c-40a505e1390c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb3085a-31bc-4a37-83c5-661b76da5081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0268493-cd12-4b58-845c-db9de09fbaf2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f45afc9-b0d1-491d-83f5-92d9e3bdfd15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2164f256-e251-4f48-a64f-981df68db0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9957692d-f8ee-47db-9687-ca999abf35c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35603ab1-69be-4e2a-b21b-b3ac40f7fdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba2ea8e-fb5e-4055-8047-f1d3bc1249ec",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b229ac5-54c3-405f-9e97-d5fe3cf9d4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7455c4a-ff5c-4f3e-b8b2-684773a83512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a5ef11-72fb-478d-855f-479472f05d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5704de48-5f60-4591-a63f-8ca299e5c972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd140ce-f053-419f-b61c-ea66f968d143",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4ca734-5a78-4fc8-9ceb-b8a32f63dd17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e718368-e669-45b7-8135-d567af7897b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6de997-9276-438c-8676-a1e8cb763e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd779cf0-2fb2-4eb1-8075-6247f3817fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a381f09-afbf-4a26-a3f9-62342588e857",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d302ad49-217d-4bce-9353-fc4dc26edefc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc44c329-21db-4d63-ae43-5c9dfaa42c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67156bd7-c1c1-4b62-8d29-54d7b966c757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e420b5-a7cf-4deb-ab7f-268a9a804617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce47a471-b19a-492f-80aa-fd24e3c4e194",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e024bea-1153-4580-a831-045fb87c9cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e2f651-b03a-45e4-8e50-fedff10ff192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0a6376-1c06-4eaf-99fe-3509aabfcb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c89ef6-27c0-40c7-a68f-b87bbe4ec94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04450850-7fed-4769-be41-ff2b0d9e329c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3048f036-bbf1-4225-94af-211fd646d4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07ecc2d-6633-4151-87ea-5fc3692628bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70ea5d6-9203-4086-af53-e5209226aaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4a8593-e4be-4f62-ba31-17ab884ecf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080fe29e-a3e0-4ba9-8bb7-1b6d1f425f44",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a400e61-4b9c-43e3-9ea0-3f22a40e0e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b732854f-9245-4741-aa36-135fd7e56a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c673ac50-f77b-4b44-91ba-631043ead551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c125f89-4f78-4228-aab5-c27ec9227de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5fc369-0740-4de5-bc5b-6fa09861a64b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6877a7-ba1b-4fef-b123-a1904a4f76c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc6fd51-447c-46b2-ba81-559ec1f00a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dccbc1-3fa8-465b-b048-325707dcf0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e1b1af-68c1-4aea-8566-1199e7e98bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11576662-6570-481a-be23-a9632acf1e58",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec68e105-c2fe-4a7b-bdfa-760ec7d3f692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37b537e-3806-48f9-b27a-013e49587413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd9e305-9c0b-480b-8d47-2c4a81586a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc6f537-6293-4a95-988e-8ce01fb3a033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e18e19-5bb5-4c9a-9dfe-d7a7979a22b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3db711-c11c-4bfc-be44-d7e12484cbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c8a05e-22ca-499a-97ea-8bae7fa77308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ceb938-3cf4-4b74-b32a-2ff5cc78bb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557ba605-6fc2-4cca-bae4-4f7db71461c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a12ccc-ffd8-417c-8232-0417805bd524",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f62cc1-7813-4ff2-be4a-b8021bf28b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cede47-48f1-4170-a943-5383c61a0a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0925cd0a-7872-437a-904e-fbd59d79fe9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f2a0c2-f94b-4ca8-b486-39f22a797d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658ed93d-9848-4f93-a23c-79ca21c8df57",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68e4546-2d6d-406b-a190-ac3634a3e56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9c9c89-7e29-48f0-86ef-53fef8e9674a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cf4900-e69d-4392-a8ad-98abb379c6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f29fb0e-781d-4939-8cbb-1bebbf6cddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c3ea72-31a2-48be-9d4e-53d986cbe5f1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911be3cc-d6c6-4177-962f-b528d8872224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6ffe35-719c-446a-9afc-29c597765fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5615df-0f8c-483e-a2ab-9d5aa6a4295a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9173dec0-10bf-408a-a3c2-b2a24298490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a55576-850f-41f1-86ac-3fb47d1044f5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994dcf22-6a18-49ee-a0c6-af6ba2a9aec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cedb0a-6148-4eed-b790-91e134f5203b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9022c6e0-5264-453f-adef-5057b4275a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9253fc-a518-4da4-b464-893e56daa0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24b8cfa-e1e6-441b-b538-bc792c8484d5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f7ff97-2655-4028-8739-6914ae24f597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71351f68-2480-4850-b500-bf04b9964aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dba518-b6c1-4798-8bd8-5f64b0dd7484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec356f2-30db-4476-802b-d31c3c2730c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1800469d-50c8-4b85-bee9-0cfc5352735f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc3c98b-e867-4ae4-8f24-2401aae5e548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d200fad-22a5-4721-a975-f7671a52c856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7df9b18-a01e-4ff4-95d0-cfd8fff6533c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313167fa-4dac-4769-a60f-598bb3d2bf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3412796a-9ed0-4731-bd41-175829c63d98",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573d8028-85b8-4064-a2d9-cde7fbebd193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ca39e4-a9f9-4a57-b2a1-806148d72663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fadb205-be40-4c61-95ed-5729bc612dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de944c7d-6ddc-4773-ad42-9585753816c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9533853c-6321-40ea-a73d-3dff4dca0662",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aefd91-80e6-4b25-a00d-06731cd54c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8665afb5-93ba-4ad7-9ac0-3535a743a283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944a8604-16b6-43d1-a55b-8bdc7eabd055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812dcfc5-77b5-4f9c-9db8-93a817a2936c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a25028c-b118-4568-a9e5-4669bea44204",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07cf98b-9319-4174-9bc8-422fb317c440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02b1a02-cea2-4780-b04e-5d49fb1d98ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763ca75f-d9a2-4488-a60f-f3f6c64bf19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d719e4-e1b4-4c02-bcc1-5ae3b1158d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24adc2ea-b046-42b3-8740-9319437e80ae",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d925f69b-e876-466f-bbca-83d00ca49af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd55ab53-39eb-4546-81bb-1e2f2889cf79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a957028-b289-4746-bffc-57a9d360df1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090a62c0-4496-491f-986b-d1090fefe387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a839b9c-e350-49ba-98c9-00286c6a3f81",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5579045-c31d-4d0a-9b68-809bcfe9950f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3e33b6-5999-462b-9f8a-930fea29232a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1f0ae6-0417-404e-947b-6d5eeb0fe48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59dd112a-3cea-4836-98b4-836f11efe6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33209ecc-afc7-40bc-a9ac-6c5bed1fe02d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd38b16-f073-4781-be0b-fb9e2a532454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716f1a2e-275b-4dd1-a8de-a334fd388d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcda684-88f7-4bfa-80bf-d117517946c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3da41c-5a1e-45d2-8f24-4313bf4ccbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b777fa30-1dac-424d-b431-a3efa7657d27",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f39c6e-573d-4232-ba39-e9cd4ec75d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6316461e-470c-4566-8e3b-34085824c425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7234bf9b-8bbe-453e-b56e-a2046d468b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0995befc-1ff4-4d82-a99b-78f9de5dea3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91b8261-2ac9-4064-a99d-ecfd7666c864",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd1e18a-dec2-4ede-bb2c-cd7347bcecfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304a2b0a-d545-4363-afbd-b6cade02a56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed21a4e9-78d5-478e-b52e-d0d983f6ce36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32749fab-eaf9-458b-9a18-3c5ef63544e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef57df7-008a-4b7e-9db3-4c80d614c27e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c892a8-df19-4262-a8b9-62989c734dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5806feb-80b7-4406-8fe8-095c9f27414a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4789a0-dcef-476a-bf1c-d9a17c33d259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f02625-8775-460c-8562-4700a27b1676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be37c71-9849-468f-b4dc-ea5559ed9370",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07eb1239-3059-4f0e-a3f6-88d6318f1761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2997f8-b10b-4154-bb7e-a4a76a7bd877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7d7495-813e-4aa2-9382-64b38f262c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eb12c8-f299-4536-817e-d5102e205d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49887c6-6d72-4ce6-8988-5790e24b7fe4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0012c34e-6c5f-4453-a9d1-e39fe98ca199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9ee274-d111-4cb8-b22c-82c4d11b4171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e485d3-86c2-42b2-9593-53f36076077d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bd9b93-8d55-48a4-b0c9-9bea3827f5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc95cad-0765-4502-9cd4-a175c55737e8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83523e5-369e-46f3-9a81-dbb81d97800f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b21030-ffa3-4bcd-8913-9b164ce46256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00537c34-fc28-4e7b-b868-c71989a296cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2a3419-b735-45cf-97dc-b168804845fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fac12bf-dde6-4f81-a766-de9ab979fe7a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307ef3d5-6f00-4cf9-b492-440be8e48947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d986387a-8cb0-4028-8bf1-465f8f3786dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6228631-2b1c-4bc6-8bfa-a8253230e070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0f784b-0705-4b4a-a4bc-5fd52912d371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccfc1c1-74c2-4e4a-aa5b-4d53a8dcdda0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c977acbe-032d-4daa-a5b0-682404e5101a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2be3465-5f3f-4481-9a7b-663eab832c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b96851-709c-4a8a-80bc-31ab8ef95fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53e446d-ea3c-4c97-92e7-e3d5ee4f1cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3675f66-0a6e-4ab2-8b36-88ad8978834e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95542aa-2649-4a3f-b2e5-0f61e921ced0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34392669-9453-46eb-8491-971f30148383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec08392f-5ac0-4893-a7ac-cdfd42718320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cab172-078c-47af-972d-77136db55e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b237a007-4cd2-456d-bed1-7501dfa86d94",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b76910f-dc71-4488-9874-ed5aa0336ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3074a948-dba5-4dc9-93a1-4553f35f2402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8eaa7b7-c45e-44a8-9a52-5668005bbd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0d968e-d541-41c5-abff-dd4e2b2901bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a7e761-d896-4b74-8b4e-a6ef62cad1db",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa073235-2472-401f-bfbd-1ac2119b2396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803732b9-8b63-4dd5-a4bf-fc9af4ac663f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef33926-6a9a-4a4b-bc2a-e053ec4a40cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e032bc-74f8-470a-a6c0-227099233f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f8a194-c0f8-4001-ad8f-da0e06ec4bb7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5675244-d89d-4e3b-978c-e140a0320229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0734a741-b164-4c3e-b798-266fce95dba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b5ed4e-f16b-469b-accf-f0eea7c9f699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913459e9-1039-4a8c-b897-6b4460dc441a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c369fbf-383a-4239-a289-65914b97e427",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b198817-7266-4076-9b87-a04ab27ea015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "396eea93-bf97-44cc-a281-59362756dd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2961417-cd34-47ad-a376-063e3801e4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7527d03b-91a2-4bc3-b2e7-a8296dc48f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01924643-71e0-421e-a961-14c5a373e8af",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435412f3-dba5-4cb2-9081-6317376ba857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4849b70e-6140-44e6-80cf-8f76995538b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0296b9-3f9d-4d77-9303-bf224d35aa0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa74987f-70ab-4bd7-b770-012b5a54051d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f66e14d-331d-4050-ae27-8cf7456f43cb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87174ff-c8c9-4019-b650-ff4ef4431781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d698f0-234f-4796-959f-c94397780682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11840e0-ae7a-4a6f-9540-068fcbf3c4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf32b5d-5303-4c10-8bf0-5ac77f2b7b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb64e8c9-f17c-40af-9f36-21e5677c6601",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dc13f4-a559-4999-b9c3-8e4e69862c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9873c94-d1a2-4ef2-bbfe-16c3df70324f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2d0601-0d4d-4ef3-b4b0-b7788a901404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba330936-2725-4c1d-b2b6-630a10a88b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e0ddee-71e4-4987-ad48-1e2eb2b8c9d8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1118c16c-2c97-40a0-ae7b-f5364f253947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75beada1-15d2-4649-9aef-007e272d3919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2ab8fd-4df7-4cf9-a4c0-229e1e170057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83177a59-1086-44a8-8f4a-04699683b222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ac8786-b3f0-4aa8-a140-675211292807",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48940f60-37fe-42ee-be30-cb777ab5ced8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8af9261-32a2-429f-bf14-a955ced88307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9767737-360b-4546-a771-0071e2deac69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01376ba6-7727-4d72-abba-8177b5f1235e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a74c1b3-2997-4b38-bd7e-80b5c2adf240",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42a01be-7527-4dbc-aea2-ecbefdaea915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38bc4539-434f-4a21-879b-e703e5fe9802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b515eb1a-0d51-4ed4-a603-f518412ccf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45627024-df3a-4b6d-98e7-55e0b576c808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0a01c8-f089-4d47-ad74-bd28fa01a597",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c6f861-2d1d-4bef-acc6-09aeee20813b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "513fb25a-a735-41b0-9296-49535dd66417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073cf687-5ddd-4c3c-8257-47759ef70346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f99632-23dc-43e6-8a43-1a29f37cf3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64bb875-45b4-4781-b471-9d72affa7456",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bc1899-cff2-4488-ae56-aa76aa260eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d77ce0-df71-4ad5-9ad2-c57de1cf1e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6175cd4c-e972-47db-99a2-5b06bf56ed0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff4493a-e3b1-4a89-ab91-9893ed50549c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d6cfb5-50ab-40cc-af4b-8d2ab0f64556",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36ed2e5-13fa-4126-8d7d-3ae38c913150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced51068-798d-43e0-b457-2a61a5fb24b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ea1074-4bb4-42c8-a915-1233cd939ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a559f93-cb02-4794-8ca9-7f3bfd1542f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dab8e2c-b3c0-401c-82de-828fdd69105e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f9f4d8-bedd-4bf9-a2ee-95eea722c05a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0390dbf9-4501-48ab-9cc9-5af805ed2ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c830a43-20e5-404a-93e3-1b39b644369d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e37d28-8fd1-4af1-b185-a19322ac06c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef0a5a5-00fe-44ca-97d3-53de4dc4d2ab",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cfbbfa-5d6c-4758-94d3-1e9124c43e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4dfbf88-e860-468a-bd06-97c82ec99837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27653c20-530c-40e8-810e-44bf5fdc2a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3e7d92-e2c5-4592-958d-32e4600a193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9ea8ba-cb08-492b-a577-bb2f39bdaf44",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f719232f-5a9b-4eda-b687-2fe0a2e3979d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55b3847-7e0f-44ee-b8e3-8be6fcb19a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04663c3a-7771-48d8-8529-591afcbd7d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74987578-4be4-43e0-853a-159db02d43f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c73ffd-e6a0-4cc0-a32b-1a38bfbecffc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df9b90e-bf77-47e6-8219-d0adfee12092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "540be4f1-39d4-4e8e-aa19-e6963a6af7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d2f8ef-27ba-4f55-8653-29ce070df557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e328e2-3762-4996-b966-5d6b83d15ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fd7634-0319-4e48-b0cb-f54f1db1d429",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ce4d08-864d-4593-97be-46d28d2f302c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2aa110-5bf1-4ec6-aede-603dbaaf4066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fae70a2-376a-4825-92aa-bb04fccfb3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5eccd32-cb18-479e-aef3-e4e4a1f9fe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcd66a4-d88d-4167-8740-14e99930252c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7cd732-fbb1-400f-aea5-2de67a3ca3f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3599f617-641c-4fbe-af0e-5bdffe8b9fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "259674d4-f61b-452e-bd2f-2c23597c504d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205b267b-c2b4-4a7d-8f8e-903c2fbc8808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583578c3-f873-4157-a7f3-0e8c0354a2f2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a318af30-4235-43bf-a1c8-2a19fa9dadad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83e2c22-4091-46b7-9fb7-62ce098e35e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e9f52f-e30b-47ea-bd4d-ec3f31a70af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79bddb5f-b631-40ab-bde8-bbd77500b420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ba5519-c373-4480-9beb-ab38c83a99a6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea3a35e-9b37-4344-a554-301691c27ff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5937959-ae07-4418-9fca-ff0b8548c75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeae8d3-a17a-4fba-92ab-493c676b49df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8109c962-bb6f-4e2b-80d2-85c9d2e55384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c107e0a0-c8fb-47e3-8949-c08b3fbf8d9b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcf5f1e-a570-4a07-87ea-455cc856dcdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0961ea42-cbc8-4a0b-8409-e84e26b2d321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eef056-78b2-4f31-ab4f-50c3e4513628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3b2c2a-1a9b-42cc-9291-aa046164df9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63df049-b77a-4332-a92a-8e1766b5f1db",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2130a429-1ecf-40b6-ba91-d003acf05f5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa9388c-dea1-432c-b444-f109727605f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5391c089-b452-467e-9bf6-d3b50ff2771f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd27519-9f7c-498f-88c0-4e975ffc4f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4150f10-0365-45d1-b649-2707866cec48",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7ff29d-de1f-49e1-8178-d53dd993fce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82631946-ab30-41c7-9839-1656878e2cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05808b37-e534-4f42-8112-7bd8ce079e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1b9fb9-8bd9-40b6-986b-b73cadbac98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e914b27-f86a-4a96-8044-551d975a6f5f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd168ef7-88d9-4ca1-bb21-185c48d09726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2153f03c-7f03-4f54-a1f7-2946d8f5d9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaa8b4f-0469-41a8-9f25-a6a5e01618ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f58dc4-ddc2-4836-9aaf-ad4ea8b2a93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbac6145-b5ef-4d1b-95fc-ca750e95749e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8428a229-a2ab-4e34-8962-6badd3268d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893bdcab-f2dc-4ae0-82b3-3218b2bc0ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6795fec-1c15-4aa7-8f73-dedcaf74f847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa7ddc8-f231-4001-b2f0-c7af3b781c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a638c2-1f2b-4a4b-b1e3-28b571b05927",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8ede40-02dc-4e72-a294-4d4d36c7d444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fdeb697-9677-496a-92cd-9303f21c6ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2fdc28-fab6-4369-b462-64406e16c79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2772550c-21e8-443a-8cfc-3f68ab8d4f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47bd2a0-ce07-46c5-86fe-e6d1a23c9141",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfeb2f1-1548-4b94-92cb-93262f23006f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a61557c-fb91-468f-bbcb-4451b66654b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd30c834-09ed-478f-9a35-4613261f101a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1febbc5-0ed7-4677-9e2a-7d420bd19aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdd8697-d40d-43c2-a231-a413b241e9d9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e221669-00fd-41e2-ac11-13e274f39e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af21ce0-f424-4334-9b0e-abe25b54efac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae942bc-2028-451f-ad79-e7026d6e620d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a09355-a67f-4c29-9084-3e691b251b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddab31d-6528-4e93-b892-5b7fa03a9155",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa7d7cc-1296-466e-9464-bf045927761f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3a71e9-67a7-4a3c-8ce2-7b17ab2fbdee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d11127-88d5-4012-a700-e74d9a85a28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f72c92d-55b5-4abe-9771-fce5fa7504eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5489897-6ebe-403f-9702-d06966e22ad8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d548377-7b44-4872-b838-fd515720cde6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5334d75-ee02-4b5c-8ee8-ab2cf35ec0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4db328d-876a-4bd4-b647-eb2ec660958c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fea47c3-8b0b-496b-92dd-c4ef622338ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b92be9f-d013-4e80-bc31-27011fecba4c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a23385-32a3-4626-936b-8ebc198d753b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc1836c-e227-4e3a-9c44-68fcc5137be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f193da28-90f6-4877-b342-62a3caeff49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6328bf6c-00fb-4b6b-8bfa-af7501384059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98a44a1-3352-4919-bfce-3a543db4b25e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac74c14-5f88-4f7c-8144-747aff724c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762cbd58-c622-4342-9625-d624f9dfe336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb798b6-1fc0-4110-a6c5-f1bb7426f5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cbd4b8-77a9-4300-bf0b-e6c2cfbf1747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0ac34a-e61b-43c3-8366-d9b87a7479cc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ba3a39-ad18-467b-8fb1-a7eff4315325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da4aaac9-393e-4dd0-bbcd-91d7d1f5bb6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c512bcd7-f8fb-4da1-acba-77b60e3a2ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e790e861-e00e-4bd7-a768-b972d15967cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2731408-00ea-48d5-97af-3116040855a7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d1276e-3491-4d19-934e-378d20e1ca21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed36a92f-7024-44b6-b471-bdaf827cab2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfcfee8-aa19-42dc-9551-8e61757548a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2502ee-b3b5-4817-b265-16806da92d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ec7e8c-f46e-411f-83d7-311f9c6f744f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a7d6fd-92d8-4bf6-906c-7bd6b11248a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4faaaa59-1b8f-490b-8195-b7f2ee5a0438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7868896-e005-4609-81c6-4c34075e7733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3194a23-f270-47f6-bb16-1a3223ca8560"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9955be33-1db3-466c-bcfb-6c10cdbdf065",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70765d64-7e1e-4a6c-b510-17e0008e8719"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f8d29d3-7827-4856-8faa-8c25f114ee43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4436850-88da-45a9-a60b-a1eca6a60d6d"
                    }
                  }
                ]
              },
              {
                "id": "a09188f6-7fbc-4f1f-9d78-76e63551b034",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08179276-e8b5-46b6-8dce-2548685cf2f3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffd84ae-52ad-4ba9-a90c-7055da5f1dd9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c72e2eee-97af-4914-9085-e77828fa9795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016c5623-f156-48a6-95c9-80e447405e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa876492-ddf4-42d3-82d9-10ef60c7a903"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2cf38a4-b483-4ea5-9ec3-c5296b36433a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3c13edc-b451-4e56-abc6-25f6f1a38a46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0405b4b-d4d4-4ee5-9a1a-e8c1d6502620",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4ac958b-4b58-4ace-b1fe-f8817e7a570a"
                    }
                  }
                ]
              },
              {
                "id": "7d9ebe48-b5e3-4bbd-8b49-bdc2ddb31e9f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bda64fcb-7063-4b39-9253-59b1f93a7d04",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0b8016-3776-4343-824d-810dd4adc374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d3cfd564-834b-47fd-8b6c-5245e9871b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256c4c86-44eb-4f64-a1bf-879a67f0dcdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27679a82-735c-4dca-8cf3-e366442a2a7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e06b7ea5-d04e-459a-b5af-3e0462cc4877",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9df485a-6220-464d-9a42-d1fdf2dc6d39",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdce6d1c-d8f6-4857-b421-e646005b08ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5aa3ce3a-be17-485c-b802-d576cbc9d979"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "708c60e5-4f53-4207-b669-e578dc267dda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fa3dc15-bf83-4014-abf2-20e0e6f73808"
                    }
                  }
                ]
              },
              {
                "id": "4d5b5a95-b96e-426d-841a-314345589a50",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa9d7196-6e9a-481c-a2be-ca78924deb29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d6b0e5a-4a50-4c29-8268-4427c2a74f4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd6e0b1e-b4b0-4d60-a63e-88f8b2a6ec75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfd699be-1b9d-4168-a38d-bf7f654aea67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1095f45a-bf98-4657-931c-2a20de6e3812",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ccb0f2ac-205c-4aa6-b178-b478687782eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1b4cee1-7faa-4d30-b9dd-be931686edc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01659ce8-9619-473f-993e-8631db428482"
            }
          }
        ]
      },
      {
        "id": "8ef4e024-c263-458f-ba11-e2f1cdd87b97",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "407458d3-417b-4b66-bc66-e80712271ff1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91fc1034-ac35-4bb2-bd45-6a4fb42bf5b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c8c5e28-d2df-48b9-8772-0fe7dfd58e12",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d3b372-4394-4ee8-b121-8b8fe7217c8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3cde05c4-c028-4a0a-b8f8-32126d0b1d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41633798-e568-4298-b9bd-1d3c2d575e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a983ba2-7734-49b7-88e6-13887b661c3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08d9ff3a-2cac-4122-ac47-77a6ac03d8ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e30dbf97-9e16-4800-baa4-431396b3f3ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30015667-7697-4bb5-b229-7b97c9405885",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f1468ab-543e-4672-bd36-3cf50f91a5ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dec18ec7-fcdd-4608-a781-bf4310e4e80c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c40c225a-4ee6-4ed6-b8b1-d1aa21e9711d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29111d23-0b8a-422b-b719-8a9953d07c6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da9f28f6-2fea-4135-a6a7-04cc963c1ca4"
            }
          }
        ]
      },
      {
        "id": "3db69b7f-eb77-433b-9e93-53f7c9ac5d1c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e506095a-4deb-4e04-842d-a08914841575",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f07c63a2-166c-4c61-b312-4a3ccb631a89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "689afc85-083d-4831-b91e-bcb2f2274bd9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eec044-107c-416c-9169-4ebf3e5d095f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c8091b2-1c1d-4bf0-9331-e85967e9085d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c880c9ac-d963-4ad9-a573-54d44f8e1fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e323ba3f-e989-42ad-9c6f-d242eaf8c850"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac341cc7-d91f-4534-84ec-d6bd25b0c4f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f91843e-6239-4bd6-ad9b-121d0526f73d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ea494c1-222f-41af-8ee1-3028a52fa02d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d33ed356-d9b8-4201-a63f-0b535cb19db6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "879c9607-cbb1-4f81-b2d9-bc5bd9601367",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "561e05a1-46b9-45be-a118-cf30b6b07750"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e72eff05-f75c-4472-862b-48efe7b98fe7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2be0b5f-9d25-4081-a8aa-4888251e08ca"
            }
          }
        ]
      },
      {
        "id": "69b091d8-8f99-4409-bc52-b1ef00e85eb3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f0cd2c6d-6aa8-4b70-84c9-f1f766697b88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11b71286-977f-4072-95dc-31596d692675",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f768c98a-ead5-4c39-a7a4-5c8b568649e3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d716c6-a6b9-463c-a96d-c4366a5353b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d6b93cf-01f4-4e33-b261-7d6009f30780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c15dc39-d4c1-4d41-bce1-b2b5e06f5b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1736a4a3-2a80-4d59-821a-d0ff3317789e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c016bc91-35f4-49f3-b6f7-4375d7ce4c77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58ac2f00-e3be-4f20-b3fc-5d9b1f3b9924"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "195c7e9c-d970-4c7f-b185-21dbcdf64324",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e3f9b5e-bcc1-459f-bea1-957a3cac5edb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a5a137c-cdd1-4507-855d-de86f550f9c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "978f8dc9-13e1-4ae1-8bef-51bfa7e44fef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20d01e0e-9ee5-4046-9f50-451a704ec073",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "730937f0-ac90-4419-ae4f-ac9fe0fdbde0"
            }
          }
        ]
      },
      {
        "id": "2b7a3e4d-d4fb-441d-ad92-3df1c83ada51",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81a3d15c-2276-41b2-8c5a-c0bc2dc05d0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca635c58-3a2e-4b1b-80ad-27accb708e08",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "390c0c23-4037-48a4-a986-c7b3595d1fe4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "898ecc31-3b0f-49fe-99e2-3f9ab7168340",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57fa2939-0f5e-4ee0-8a3b-e71cbb6f1466",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 157.3556338028169,
      "responseMin": 9,
      "responseMax": 8338,
      "responseSd": 851.5383491918125,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692145880191,
      "completed": 1692145936526
    },
    "executions": [
      {
        "id": "2d7fc198-f274-4a2e-b844-c41a97173b99",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "67f9e1c8-7711-44d5-a972-6e960c71f361",
          "httpRequestId": "953cec8c-4244-4328-becd-6a5bf2f02808"
        },
        "item": {
          "id": "2d7fc198-f274-4a2e-b844-c41a97173b99",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a1757a7c-b966-43d6-a419-360615c9e051",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "de19c188-bc30-44d1-b01e-3e9b356ed844",
        "cursor": {
          "ref": "a3bbb567-a71f-4179-aca3-445fe9420372",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d732066d-a31c-4c19-90dd-10ddb663aa35"
        },
        "item": {
          "id": "de19c188-bc30-44d1-b01e-3e9b356ed844",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "acde6b47-6671-4487-aa22-0ce8d626ec8f",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "1ef7a413-74dd-4cea-9c6a-b191542006cf",
        "cursor": {
          "ref": "15860c31-e336-49c5-a6da-3cff3425f31a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c46a7fef-6290-428d-9d76-d4dd5a4e47ae"
        },
        "item": {
          "id": "1ef7a413-74dd-4cea-9c6a-b191542006cf",
          "name": "did_json"
        },
        "response": {
          "id": "28a02e27-11ad-49d9-a72a-95583bc500b8",
          "status": "OK",
          "code": 200,
          "responseTime": 412,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6a9e41-4bde-4df0-810e-6c19f4b85b7d",
        "cursor": {
          "ref": "efd5a23e-9331-4f0a-97cd-ccf6e2bb3e47",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "77f93f01-2906-465e-80ef-2a6274b428b5"
        },
        "item": {
          "id": "6f6a9e41-4bde-4df0-810e-6c19f4b85b7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0b7722b-984e-43d1-9db3-0cd5febd19a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 796,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6a9e41-4bde-4df0-810e-6c19f4b85b7d",
        "cursor": {
          "ref": "efd5a23e-9331-4f0a-97cd-ccf6e2bb3e47",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "77f93f01-2906-465e-80ef-2a6274b428b5"
        },
        "item": {
          "id": "6f6a9e41-4bde-4df0-810e-6c19f4b85b7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0b7722b-984e-43d1-9db3-0cd5febd19a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 796,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861e544a-3a4d-4008-9a3e-a871784273d7",
        "cursor": {
          "ref": "6be362ec-9134-4076-8172-cf6ba74c65d9",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "11725ece-dd6d-4c31-9449-5d0eb9541ede"
        },
        "item": {
          "id": "861e544a-3a4d-4008-9a3e-a871784273d7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "911f22b8-8e40-4204-ab73-315b9310afcc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311e389b-12ab-44d1-8793-5bad58d4cb3a",
        "cursor": {
          "ref": "7a31efe1-19af-4cc9-83ef-44de3da6e71f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1b2e7164-9606-4c66-985a-a09c013e4c60"
        },
        "item": {
          "id": "311e389b-12ab-44d1-8793-5bad58d4cb3a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8c797093-d630-43ba-9b1c-bcd59943e3f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db884394-bfb0-4b4c-bd66-5d2bd1475e3a",
        "cursor": {
          "ref": "2b7f5d14-0846-4abf-9195-46b8a1f2c603",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e2338632-1401-4540-a1b3-fecf2a3e0f5c"
        },
        "item": {
          "id": "db884394-bfb0-4b4c-bd66-5d2bd1475e3a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e3664585-bfe8-4a25-b5d9-602a72efe060",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 301,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9289fe-7c00-4421-a690-40586d513490",
        "cursor": {
          "ref": "95b0bdc9-c3e9-4753-b8b3-de63b7e1f8f4",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ab79e69f-655a-43cf-9c95-759b297722de"
        },
        "item": {
          "id": "cc9289fe-7c00-4421-a690-40586d513490",
          "name": "identifiers"
        },
        "response": {
          "id": "7be0681e-8acc-4658-b77f-1355dcd7a773",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6ff868-4b1d-437e-a5c5-c1a72186e91a",
        "cursor": {
          "ref": "77dcdebf-bd04-4126-a64a-d31296a0b43a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "994b9488-6c45-4a19-a69f-473c594d2009"
        },
        "item": {
          "id": "aa6ff868-4b1d-437e-a5c5-c1a72186e91a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9ead17e2-2915-4d06-999f-32480c8f1153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f802044-f347-43f4-9ad6-3d4f60743970",
        "cursor": {
          "ref": "4d31666d-6772-4f91-b7a1-bee8f0b68079",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cc903e28-263f-4dfa-8408-5ea98a2fb032"
        },
        "item": {
          "id": "5f802044-f347-43f4-9ad6-3d4f60743970",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a1719b4a-9468-4259-b51c-bad745fd3508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b679ef8b-b374-4c28-8532-df857fa4feab",
        "cursor": {
          "ref": "f8e1c63e-1878-40ae-ae9a-1742852ecb1c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "09e51ac7-1134-4b40-82fb-54dd64d07108"
        },
        "item": {
          "id": "b679ef8b-b374-4c28-8532-df857fa4feab",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b08aeb95-fe4e-4a02-adcb-f2a099226205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc774c18-b081-4a9f-9a4a-3da4f69278e8",
        "cursor": {
          "ref": "330830ac-554c-4f32-a2af-166ee6c866a3",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ac6b98bc-7b93-4cc9-9e8e-0ecc8ca44e55"
        },
        "item": {
          "id": "fc774c18-b081-4a9f-9a4a-3da4f69278e8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "32488983-289f-401e-a84f-d3e2ac1c9593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f78c8b4-a34c-4eb2-ae2a-a054694b48f4",
        "cursor": {
          "ref": "6bacf8ba-b5b4-4b3a-b771-68f0db2622d9",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dd6aa70a-9200-43f2-b4fc-7cdf12c2d64f"
        },
        "item": {
          "id": "3f78c8b4-a34c-4eb2-ae2a-a054694b48f4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eb599914-0bf5-46e0-9d60-72de1b439d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a69803-ec79-441a-973e-fe1960acc20c",
        "cursor": {
          "ref": "42357266-dc33-4374-87ef-2e3321f7f722",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1e274086-dc1c-44a8-b2dd-71806878e742"
        },
        "item": {
          "id": "f9a69803-ec79-441a-973e-fe1960acc20c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "34a34ef9-3f56-487f-a39e-9fec7c453594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e1e650-cb78-4b32-914f-f45f077affef",
        "cursor": {
          "ref": "612ed247-5501-4e16-af9e-0185307f9df1",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aeab1b2e-bc67-46c5-ac01-5112e7cc8091"
        },
        "item": {
          "id": "91e1e650-cb78-4b32-914f-f45f077affef",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fd4a21b3-33bf-4a36-a326-2222102c4b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cf68d3-ab05-4e0c-a935-d1ad88c06ddb",
        "cursor": {
          "ref": "ecd2d051-7d83-4632-871f-18977611cc77",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "edf266b1-9955-4b59-9dc9-7329d5602bab"
        },
        "item": {
          "id": "c7cf68d3-ab05-4e0c-a935-d1ad88c06ddb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d3b835fc-a1bb-46e8-85a2-bfd078dc21de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f47044b-ab8b-4b39-9b4b-ad6526c57843",
        "cursor": {
          "ref": "49e2a670-81cb-40eb-bd1a-7c268019f910",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ac864444-7352-48d6-83bd-be8e88bb3649"
        },
        "item": {
          "id": "3f47044b-ab8b-4b39-9b4b-ad6526c57843",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9b5f91ec-9332-4552-9e0d-6b0fa3abd201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47d6497-9e26-4ac2-93db-6a975be28c46",
        "cursor": {
          "ref": "c3b23528-8d87-49ef-a5fb-a35b84490cce",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "44820894-c1fa-4c1e-952a-b7fd2002939b"
        },
        "item": {
          "id": "b47d6497-9e26-4ac2-93db-6a975be28c46",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8a79bac4-44e0-4339-ab7e-ce6cb531334b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920cfcb5-b4b2-46c7-b331-231285ef2ec9",
        "cursor": {
          "ref": "6d4d8d03-bae1-408e-be13-b434df1847fe",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3ff05f79-b1eb-47e0-8407-4dad9046a708"
        },
        "item": {
          "id": "920cfcb5-b4b2-46c7-b331-231285ef2ec9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "94b39473-ffe2-4b9a-b2ae-a6d522c4fb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a82d485-3754-4b64-b380-a25a9fb50164",
        "cursor": {
          "ref": "48d1a22d-dee1-4eec-ab2b-9476525feed3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "92abaabd-fdc6-4920-8d97-93826604600e"
        },
        "item": {
          "id": "7a82d485-3754-4b64-b380-a25a9fb50164",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7adcbea0-3cdd-4793-bdfc-aabd079fbc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746ea26e-a589-4bc5-96c3-f7171b2ff0f9",
        "cursor": {
          "ref": "9bb34431-14f9-4900-8104-a967be605062",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "147ec1ae-11d1-4769-93cc-2427f6003900"
        },
        "item": {
          "id": "746ea26e-a589-4bc5-96c3-f7171b2ff0f9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cccbd7bd-038e-4882-883a-09a834f51252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3384106-470d-4044-aae5-071eee590a51",
        "cursor": {
          "ref": "73d7bc28-c15b-4d43-81c3-80949122d5b1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "13962183-34a3-4aaf-850c-65133125ab36"
        },
        "item": {
          "id": "d3384106-470d-4044-aae5-071eee590a51",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a6a1e196-4bb7-4eff-84b0-500c2efd855b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ef718a-c74f-4f31-8e17-163e15339473",
        "cursor": {
          "ref": "57f9d6f5-c28f-42be-9dd4-31a7bf94d279",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ee617947-0967-4f96-be80-9d9d0a82896b"
        },
        "item": {
          "id": "82ef718a-c74f-4f31-8e17-163e15339473",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "72268711-fb02-417d-bddb-8fb7d2d515b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0862a7-a8b5-4d65-8415-5f972f8201fb",
        "cursor": {
          "ref": "9b093f0a-a169-4e7d-8014-41aecddd64cf",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "514a2f91-080b-4937-baac-e8eecf4dec43"
        },
        "item": {
          "id": "ed0862a7-a8b5-4d65-8415-5f972f8201fb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5f3fc5df-2a13-445d-9dc5-f24c5fcd51ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb62936a-3de2-4486-8743-b96f807ec971",
        "cursor": {
          "ref": "6a345d8b-4815-4b4c-b4cc-f32cf8d4bab1",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0f3a7a2e-f6fd-4ac8-887f-59e32a158ff0"
        },
        "item": {
          "id": "fb62936a-3de2-4486-8743-b96f807ec971",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1a1c2b6e-effe-4246-bb5f-c711d3bc6e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f49e71-5c29-4a86-b67b-01ec1ac89b36",
        "cursor": {
          "ref": "f50e1329-1191-4111-93a5-7215f0858735",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "25353a51-8b76-4884-980d-bbc7986eb0c4"
        },
        "item": {
          "id": "34f49e71-5c29-4a86-b67b-01ec1ac89b36",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2cfbbaec-bcd2-4c2d-8819-54ec34e835f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3dfc5a-d895-47fe-8420-3da9c9e78a9b",
        "cursor": {
          "ref": "e86590bd-86e5-4372-897a-7e59e5b212ec",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "51d3e68a-0510-44ca-897c-77ff053b1dd9"
        },
        "item": {
          "id": "0a3dfc5a-d895-47fe-8420-3da9c9e78a9b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "63ab1b9f-c6c6-40c2-86f2-7a6f0e5d5b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7724073d-fcc2-4e65-9442-d2abf583ccee",
        "cursor": {
          "ref": "92b76c37-a74b-4f0a-a4d0-810c0c2e2278",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6b4e7e6c-35c4-40f3-a7d6-8262f4b5fe22"
        },
        "item": {
          "id": "7724073d-fcc2-4e65-9442-d2abf583ccee",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "53488add-d33d-40ea-9ffb-c020fa39ad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad851642-01a4-4c0f-b6e5-b94cda4af4f8",
        "cursor": {
          "ref": "32a28abc-7ca4-4a15-8951-e7ae20f7f5b4",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "077fd3ec-150f-48da-8614-fcee8dc0cdac"
        },
        "item": {
          "id": "ad851642-01a4-4c0f-b6e5-b94cda4af4f8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1403ff14-6d3c-4e3b-a1c4-89178dd4714f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874b0ca1-05d8-4c57-8786-473a33a16983",
        "cursor": {
          "ref": "d8a283a1-7177-4cc7-a474-9121953f79bd",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ab412997-376c-4aa0-bab4-99ae82bc9a4d"
        },
        "item": {
          "id": "874b0ca1-05d8-4c57-8786-473a33a16983",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "73608397-63e5-4ce9-9751-0a27be6ed23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6805c489-0165-4328-9f5e-131e35039d6f",
        "cursor": {
          "ref": "cf11ba28-9161-484b-8479-ff30803ef368",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "70f3c748-7dad-4056-920f-8150a0689e66"
        },
        "item": {
          "id": "6805c489-0165-4328-9f5e-131e35039d6f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "efdddff2-e07a-47fe-baf6-990716de204f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb3eff2-5a87-4f8c-b61e-e409f3274c4a",
        "cursor": {
          "ref": "bf1ee743-a2a9-4889-a2d0-dc47a841e835",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6a035b19-fbdf-428e-8a76-1de337f9b123"
        },
        "item": {
          "id": "dcb3eff2-5a87-4f8c-b61e-e409f3274c4a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ae1608a1-c29e-497e-9767-fd5d1bda9273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18002a70-7d76-45c0-b0c0-480e076a62e8",
        "cursor": {
          "ref": "7cecb4e7-c929-48f5-92c5-0037471df36a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e2cd7a6a-ab3b-4619-ab0c-5e4a00339dd0"
        },
        "item": {
          "id": "18002a70-7d76-45c0-b0c0-480e076a62e8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "22cd3041-9903-4d0a-b1f9-cd2d691c04bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af32ba8a-fc3e-42b1-b2d8-06b751715b45",
        "cursor": {
          "ref": "b6225966-3949-49e5-8b9c-57651c0cbb07",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "164e66f9-1ec0-4b0f-8af4-2eda1fe6b6ab"
        },
        "item": {
          "id": "af32ba8a-fc3e-42b1-b2d8-06b751715b45",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7f7d8de5-cebe-441e-9854-7e6d5ca60558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bd7b70-374b-4fb8-b763-bdd2da6a3f0c",
        "cursor": {
          "ref": "20abb4a4-75dd-4576-80a7-e18cca4883ea",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "58ad35e8-0195-4bc4-ad08-33941d01cf3f"
        },
        "item": {
          "id": "d2bd7b70-374b-4fb8-b763-bdd2da6a3f0c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c49825a5-47be-42f5-ac94-ebccff03b492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df8317b-c3a2-479d-b638-da58c7f4be05",
        "cursor": {
          "ref": "4e6ac46a-ebcc-44bd-a862-c627eea55ba3",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "31a6d0f8-1ac7-423a-89cd-e0e329f96acf"
        },
        "item": {
          "id": "4df8317b-c3a2-479d-b638-da58c7f4be05",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5328cca7-5774-43d6-ad29-e5a0b011f0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ea9927-adc0-4662-8761-73d48c307cc1",
        "cursor": {
          "ref": "eeaddda5-312c-41ed-b74d-405850689292",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "34a6838c-9298-47a7-bb17-a343b4462ed0"
        },
        "item": {
          "id": "c2ea9927-adc0-4662-8761-73d48c307cc1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "14fb16c7-356a-4ac7-a643-4190ce7c1278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc6024c-a810-416a-8bef-5bd43934363c",
        "cursor": {
          "ref": "6fb66780-2397-42c8-b7ef-b24204dd04d3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6e4f5bce-985c-48f7-a932-2ec84f0765e6"
        },
        "item": {
          "id": "3dc6024c-a810-416a-8bef-5bd43934363c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "73d2a42b-4fab-4ef6-a67b-f431c5bd0cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fc24e6-8e3f-4aff-bbaf-b4b2b24a7a6b",
        "cursor": {
          "ref": "434081b7-8e1e-4f71-abb0-2a597a9201a6",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "180d584a-4136-4133-b942-b6510a7eed13"
        },
        "item": {
          "id": "b0fc24e6-8e3f-4aff-bbaf-b4b2b24a7a6b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "65ea5fe2-0d8b-4763-93d3-d65ff343fc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfffe9fa-e8a9-478a-98a9-3747607e71b2",
        "cursor": {
          "ref": "6bf3569d-1846-4f9c-9ce7-871572e37c08",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ad062cac-f76c-483f-85c5-34647ba73d3f"
        },
        "item": {
          "id": "dfffe9fa-e8a9-478a-98a9-3747607e71b2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf9707c8-95c1-45bb-9e15-27d9f79c1fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea198436-ad69-46c4-8bda-32109ff332a8",
        "cursor": {
          "ref": "a527d36b-70d2-45d0-979d-8ecbfca89e48",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "867de584-0fce-4bb7-98b6-71bcbb926215"
        },
        "item": {
          "id": "ea198436-ad69-46c4-8bda-32109ff332a8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b6f55214-fdc9-46c0-9a53-16fc93c425c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4aa128-76be-44f7-a513-63fad351ca8b",
        "cursor": {
          "ref": "52a4feb9-7ae6-4df6-8e9e-141045e536c6",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3921f5f9-d7c9-4752-b559-9213470e6e3d"
        },
        "item": {
          "id": "0d4aa128-76be-44f7-a513-63fad351ca8b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a13121c4-f3c9-43ac-9b22-ae4812067d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d363b50-043d-4b51-a36e-fc5439852a4d",
        "cursor": {
          "ref": "ab1c0b70-e4f2-42b7-8a43-6b0064d2e965",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "51f86250-abdc-4ef7-9517-f4df605a8e7a"
        },
        "item": {
          "id": "0d363b50-043d-4b51-a36e-fc5439852a4d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "703b4494-e567-4620-befa-c16358ada9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa2afe5-5c78-4f7e-a22b-cbc526d05708",
        "cursor": {
          "ref": "a780a85d-63d8-4ce2-8973-0b287eb9f7a2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5c53e8da-27c1-4e2a-81ea-dd96650dd1df"
        },
        "item": {
          "id": "9fa2afe5-5c78-4f7e-a22b-cbc526d05708",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bd805fb6-ed33-46c4-9c80-dedff48a132d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4067430-cbd1-4718-8536-b9718ab3e8a7",
        "cursor": {
          "ref": "ec7c4889-21ea-4b94-b813-f10cc74f2093",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d315867e-5dd4-421e-a8f3-ee6db1cd8489"
        },
        "item": {
          "id": "b4067430-cbd1-4718-8536-b9718ab3e8a7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e844ed53-c1fc-400c-aafc-59f9e945f521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf7b8e0-462a-48e5-8efd-9fbf05845659",
        "cursor": {
          "ref": "c46c6edd-c96d-4782-b6fb-cfef7615d875",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3a96db99-6a9f-4b07-8dea-b980f69ca5dd"
        },
        "item": {
          "id": "0cf7b8e0-462a-48e5-8efd-9fbf05845659",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9012278e-ae02-4dc0-b638-1e4b95baa9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc63686c-3f21-40bb-b5bd-5c7df99e1be2",
        "cursor": {
          "ref": "c3d28d70-8e2f-4c5d-ab53-a25c2f8755fe",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d74b6dea-d4e4-4e56-ba93-1d039e36a82c"
        },
        "item": {
          "id": "cc63686c-3f21-40bb-b5bd-5c7df99e1be2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "abd41b46-82d5-4a12-b8e3-bc5d11b4ebc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d80b44-5e05-4c27-8b0e-351b867438e0",
        "cursor": {
          "ref": "9279188f-229a-4f3c-aea8-75dc89bc0ca1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1d2394a6-97a3-406a-a640-0d2fde784a85"
        },
        "item": {
          "id": "30d80b44-5e05-4c27-8b0e-351b867438e0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a19901c0-deb4-44ec-ab7b-d27eb5637d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c34f8cb-cf4e-40a2-883c-d85841404411",
        "cursor": {
          "ref": "6ee729f7-f6ca-46c2-baa2-7f33343dd250",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e622c9fb-5b72-4ef7-9ead-da89bbdcfafd"
        },
        "item": {
          "id": "2c34f8cb-cf4e-40a2-883c-d85841404411",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9c61789c-3990-4ad4-9157-e7794827352c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4aa591-9ec8-473b-a560-dce7cfd2cc73",
        "cursor": {
          "ref": "0c62a0a9-33ce-4db4-bba3-d8b86868708e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "96c7c70e-8644-4437-9555-e7837eddf32a"
        },
        "item": {
          "id": "7d4aa591-9ec8-473b-a560-dce7cfd2cc73",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c3a1a586-f35a-44c4-ace0-55ebc7e397a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d068115f-736a-4a3f-971d-62cbb14c2912",
        "cursor": {
          "ref": "1f2a82d1-71cb-4103-9a44-ddc2cfc3bfb5",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "440726f6-4f5c-40c6-bc85-9b792e2bd4b0"
        },
        "item": {
          "id": "d068115f-736a-4a3f-971d-62cbb14c2912",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "667fd6c1-1178-4c20-82b1-9186aca12dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7227184-5b68-441a-b73c-17f73ac190d1",
        "cursor": {
          "ref": "1cd454ab-963e-4c12-8e1f-d045d29dea48",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "43007c83-2d9c-4051-9df0-b811d9e2b923"
        },
        "item": {
          "id": "c7227184-5b68-441a-b73c-17f73ac190d1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b0b4f1fb-6987-4d34-a3cb-16519ae65dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360568c5-4ef1-4bbc-8350-a5f684f58ccf",
        "cursor": {
          "ref": "0218558f-7d0e-4560-8ddf-9913c704d25c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "513bb52d-405a-40ff-931b-d8d00b0a5d0c"
        },
        "item": {
          "id": "360568c5-4ef1-4bbc-8350-a5f684f58ccf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "86ff78b9-1b61-438d-abf0-621ea2470883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610b79c7-d4cc-43d3-899b-12005dd57a2f",
        "cursor": {
          "ref": "44587898-a930-46d2-a7a3-296f8cc8aede",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0fbd0842-8fd2-4dbf-a104-f0e1fad023a3"
        },
        "item": {
          "id": "610b79c7-d4cc-43d3-899b-12005dd57a2f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ee962d46-dc33-49d8-8ce1-e6e3c8c422b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f3a1cc-9bf1-4628-8e9c-b9275636f248",
        "cursor": {
          "ref": "b3dcf79f-db86-4330-8c9e-106562258114",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "da3e702d-6a8d-4258-8883-669e8c536152"
        },
        "item": {
          "id": "25f3a1cc-9bf1-4628-8e9c-b9275636f248",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f740cff1-8cae-488c-99e8-38f3b68f7ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7ef8c2-dafc-4fd9-8b8f-082a953c73f0",
        "cursor": {
          "ref": "51698f2a-ed40-48ee-bdd3-7419f4e6e91b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d0ee9cf8-0443-4ce9-b379-4f4f5a6dc423"
        },
        "item": {
          "id": "8f7ef8c2-dafc-4fd9-8b8f-082a953c73f0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7410caa7-92a4-4220-a34d-8c5acb91998a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e7d1b7-d269-4c20-860c-c117c9616da4",
        "cursor": {
          "ref": "3dac5996-d7a2-4767-93a4-edab4d84c4f2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "21b1816c-dce9-4f28-ae87-7c8c6091108c"
        },
        "item": {
          "id": "04e7d1b7-d269-4c20-860c-c117c9616da4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9c270c2a-6929-4c0a-98c1-bd3ea3268b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8677b0-dedc-4799-b51c-7f5c2ff02eae",
        "cursor": {
          "ref": "9d24af1a-cd68-46c0-b9d4-f059c498e83e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b4458214-28b3-47c9-a00b-c2ce1099f8bf"
        },
        "item": {
          "id": "5f8677b0-dedc-4799-b51c-7f5c2ff02eae",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2c115ede-b8cc-487b-903e-2c858b525e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57b3679-cb66-4cc9-9287-845b0882fa16",
        "cursor": {
          "ref": "1a3aa734-3ee5-4290-b65f-cebed4b22060",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0a96c78e-f7cb-4725-aca8-1514ed69c1ec"
        },
        "item": {
          "id": "f57b3679-cb66-4cc9-9287-845b0882fa16",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "19cdfa95-84b9-401d-ab40-58de59391179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689d2a50-2006-4629-8d60-07bd36878202",
        "cursor": {
          "ref": "143878f9-b68c-4984-ad16-eee47d60773b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "81743da3-99bf-4afa-ae38-680c8164e150"
        },
        "item": {
          "id": "689d2a50-2006-4629-8d60-07bd36878202",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c9b59593-eb6f-4989-aa5a-9e79911356e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2158b96c-784f-42a0-9d39-ce1aee0197df",
        "cursor": {
          "ref": "2f2cfbfe-da05-4318-b03f-4ce3696b1476",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a8e0cad5-4e42-4cb2-a410-ba2650172746"
        },
        "item": {
          "id": "2158b96c-784f-42a0-9d39-ce1aee0197df",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ebf1e7e5-169f-48e6-a143-e4746c93b08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0015e6-60c2-4783-9416-631af746ab3c",
        "cursor": {
          "ref": "2bf423db-4599-4110-99d6-f993f0a3b0f9",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a18ae5fe-1e81-4ac1-8323-1e8fd019478f"
        },
        "item": {
          "id": "af0015e6-60c2-4783-9416-631af746ab3c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "23a78448-0004-4c58-8fe9-bdb27bda2a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9404fb6-20eb-462b-8d7c-3e8d1166281d",
        "cursor": {
          "ref": "e64d206e-a197-41e5-8401-8b407bee1f4f",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a827c449-f8df-4ba3-a396-048d91ef541a"
        },
        "item": {
          "id": "c9404fb6-20eb-462b-8d7c-3e8d1166281d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "629498f6-2745-417a-9431-aa46def67743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd73a79-cca8-4a5e-ab58-14adc4710697",
        "cursor": {
          "ref": "c36927f8-c0d9-4c44-8a7f-2080a76394c0",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a59d354e-0570-4572-a82a-7cecae765ad4"
        },
        "item": {
          "id": "4bd73a79-cca8-4a5e-ab58-14adc4710697",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c86912ae-46f7-4b2e-b0e4-ef54828dcaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f2867f-aca9-4a5e-ae4b-6b60dc942a75",
        "cursor": {
          "ref": "d1074022-e21f-4af3-b0ee-d3e396ea3c7b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "15c4becf-8522-4df6-b8e1-a44026dc732f"
        },
        "item": {
          "id": "90f2867f-aca9-4a5e-ae4b-6b60dc942a75",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "667387de-e59c-4ded-80d4-6c6b051a47c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a645096a-68a1-43a6-a50e-9cfd45926d20",
        "cursor": {
          "ref": "8923d658-8b13-4c4b-96f9-32201826ec9b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d2a92e71-1016-4d10-8373-ccd40397e066"
        },
        "item": {
          "id": "a645096a-68a1-43a6-a50e-9cfd45926d20",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "32912dc7-8f19-42e7-9f79-f0ae2481e224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfee528-1ea6-46af-9964-0e45cc8c91f3",
        "cursor": {
          "ref": "7cd138ce-8c7a-4dc7-a185-75b99222d95b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d4cf3041-ca64-4b53-94d6-da8ff976ef6c"
        },
        "item": {
          "id": "bdfee528-1ea6-46af-9964-0e45cc8c91f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "addfde15-98af-48b6-9cd4-2d75209832a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2931ec5-0386-49e7-bea5-5d1eb9f0c7ca",
        "cursor": {
          "ref": "1a7dcfd9-4f23-46b8-99bb-f8ba06f0d0e6",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bbe0f941-78fa-418e-aa91-3b547bc6f8c7"
        },
        "item": {
          "id": "b2931ec5-0386-49e7-bea5-5d1eb9f0c7ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0f47c172-8e93-4b23-8e38-e318c63927a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199bbae8-26b9-41ee-9201-2156afd1707f",
        "cursor": {
          "ref": "6591a853-1651-4ce2-abc7-ddd3ba058793",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "39dca7a7-3a65-4087-90b4-1af00452e4eb"
        },
        "item": {
          "id": "199bbae8-26b9-41ee-9201-2156afd1707f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "25bf2d18-a92c-46a7-87fd-51f81e3f2858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba62376c-502f-46a3-92e3-6ca07e480aaf",
        "cursor": {
          "ref": "ae3dddd2-c337-4a9a-91d3-fbd732418de0",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "87c49b26-aca7-4b45-945d-764ba5bb407a"
        },
        "item": {
          "id": "ba62376c-502f-46a3-92e3-6ca07e480aaf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bb0a2d1f-2413-4aac-8fb4-f41e99fdce98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ca40d9-169c-49c0-a341-794ba05233aa",
        "cursor": {
          "ref": "1a94ef9e-1e32-4ca4-87c3-e341178b547b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ab97d7b5-bcad-4157-bb5d-b9685393af48"
        },
        "item": {
          "id": "f7ca40d9-169c-49c0-a341-794ba05233aa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0289de22-7544-4ca2-9e00-2c7415d5625d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35ee702-c2b6-4e25-a48b-e7387d53a0d7",
        "cursor": {
          "ref": "9b8bcaf4-561d-4bc6-baf6-3a538e7a7682",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "972df054-b322-4302-b92e-beb1a38d1caf"
        },
        "item": {
          "id": "b35ee702-c2b6-4e25-a48b-e7387d53a0d7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4d738bb4-a71e-4f7f-be99-474f705611af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cde3e12-a396-453d-ba84-d5f14e28ec63",
        "cursor": {
          "ref": "eb42f7a4-02a5-440b-9b2a-b17fff3dc59e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8b677952-126c-4019-8314-adad97667b0b"
        },
        "item": {
          "id": "2cde3e12-a396-453d-ba84-d5f14e28ec63",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "15b84d30-427b-4530-85b5-b36900ff74ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3182230b-f987-4970-899d-8ac21e154c12",
        "cursor": {
          "ref": "ff09e61e-8640-485c-b271-8c7608b88d19",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a5c7064e-1804-4240-b032-a8998c18e110"
        },
        "item": {
          "id": "3182230b-f987-4970-899d-8ac21e154c12",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5806162c-b804-429a-b65a-774d6c9448b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f616676-eef2-40ae-87b7-9ceaa3a490ff",
        "cursor": {
          "ref": "233d06e8-694f-4b0d-a527-5a1dfcc16707",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b04f5e93-4275-430e-a51f-01c6caf5c6e4"
        },
        "item": {
          "id": "0f616676-eef2-40ae-87b7-9ceaa3a490ff",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b483ed62-c9c7-4767-85a3-f35f7641a826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140536be-6575-4c80-b26e-44bb4cb282ce",
        "cursor": {
          "ref": "7fe86cbb-a277-4ca8-aab7-cced57383451",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "57e88e64-1c12-4aa0-a9ac-eb1315167c62"
        },
        "item": {
          "id": "140536be-6575-4c80-b26e-44bb4cb282ce",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "aab10ae2-6a3c-46be-95a6-a513fd74f0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb2f907-47d1-4d8b-89d7-389971d1eb4b",
        "cursor": {
          "ref": "1e0605d6-a556-4cd6-9944-6711edac8a68",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "74e1c770-6272-47be-8aa3-135b8d10d352"
        },
        "item": {
          "id": "6eb2f907-47d1-4d8b-89d7-389971d1eb4b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "49abdd3d-03de-4592-9094-6ae883f9edf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad99d5f8-f5c7-4c2a-9585-ac0f66e47e8b",
        "cursor": {
          "ref": "25eb3484-1ae5-409a-ba3b-02d9890d0e60",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e120bb59-1e75-476b-8225-e9a6648bcc82"
        },
        "item": {
          "id": "ad99d5f8-f5c7-4c2a-9585-ac0f66e47e8b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d139ba78-d82b-4a1f-a7c5-317044c66646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146dd287-744e-4f69-b7dc-cfe452b57d79",
        "cursor": {
          "ref": "e1c7593f-2113-49e6-9882-fc7d27424e20",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "05db6d1a-22e9-4273-ba2f-80ed703e4c57"
        },
        "item": {
          "id": "146dd287-744e-4f69-b7dc-cfe452b57d79",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b34938dd-cf75-419a-887e-7d859baa3482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dae0e30-08d9-4bd8-aa40-001c453ad2d4",
        "cursor": {
          "ref": "eb90ead6-6be5-47f9-b50f-6f76f5c10430",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "350c176a-5e44-4e34-ba5f-3798cd98378c"
        },
        "item": {
          "id": "6dae0e30-08d9-4bd8-aa40-001c453ad2d4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0540c251-f74f-4ccc-88bc-0899a335ab00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a7e50b-54ca-466b-afa6-c2e50960f376",
        "cursor": {
          "ref": "b7aa5499-e191-405c-a0aa-8eedc772307d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cf2c8930-3dbe-41d2-8fc8-a011376c1228"
        },
        "item": {
          "id": "97a7e50b-54ca-466b-afa6-c2e50960f376",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1f7f5fdf-80d0-49d9-8b66-832e684ea572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53ddd14-3b19-4433-be44-7262b4033117",
        "cursor": {
          "ref": "de325350-5a9d-4157-aaae-5ecb0d6e7958",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d70f261a-4551-4fb2-b4fa-d5713037bda9"
        },
        "item": {
          "id": "d53ddd14-3b19-4433-be44-7262b4033117",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "34d3130c-95af-4f76-b839-9b647766431d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f156bd7-9e02-4ef9-ade4-08750e13cc9c",
        "cursor": {
          "ref": "ac203c6e-a827-4718-b00e-805b7b2da253",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2ce2d50f-01ae-404e-8484-24367fc83764"
        },
        "item": {
          "id": "6f156bd7-9e02-4ef9-ade4-08750e13cc9c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9d1f0476-4248-4962-ba2c-7bde4348de1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5377a178-26fc-4e67-8483-67f354a3a530",
        "cursor": {
          "ref": "ee0760c4-af88-4ebe-b064-4fa7130f688a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d7f7238e-25cd-4b4c-9b70-3cf14e11dee8"
        },
        "item": {
          "id": "5377a178-26fc-4e67-8483-67f354a3a530",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b7b95b53-d30f-4b70-b2d8-18d52103db98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327e42f8-8470-4b8c-84a5-8bd15be9fbd0",
        "cursor": {
          "ref": "dd15238d-3fbd-4fd5-8dfb-427fae7a9cf5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cec03202-6bed-4387-bbca-664b3c04d47e"
        },
        "item": {
          "id": "327e42f8-8470-4b8c-84a5-8bd15be9fbd0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c18935e6-5a7e-4212-adac-0534d6430a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079ee98e-1483-4c4a-96e8-1bea4788a173",
        "cursor": {
          "ref": "e4771f5e-fef1-4207-8760-97d9fc0fa1e3",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "35cc599a-a6c0-42ea-9338-b8749a19db57"
        },
        "item": {
          "id": "079ee98e-1483-4c4a-96e8-1bea4788a173",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4a2ab331-c5c6-49c7-8ec8-7e0867552dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2a0672-3697-4c7d-8a43-eeab83aa3de4",
        "cursor": {
          "ref": "b063843a-367f-44e4-b330-ace95866d925",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "794af320-1ab1-4fd7-bb7c-b348839cfce0"
        },
        "item": {
          "id": "cd2a0672-3697-4c7d-8a43-eeab83aa3de4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4e68aa92-e628-4d43-83c3-abdf66979b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81585396-89af-400b-b00a-16d6fcbf3881",
        "cursor": {
          "ref": "09848412-24d2-4c2d-8766-077363941f1b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fa65daa4-2b7c-4315-be39-45a9db0d1d98"
        },
        "item": {
          "id": "81585396-89af-400b-b00a-16d6fcbf3881",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "58f9fb7c-a3cf-4977-8e84-5d499ab2a5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276cca0b-0eca-4179-b062-09f7585dcd39",
        "cursor": {
          "ref": "31bafb6c-ef3c-4048-862c-8ae2c72a6d69",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f216b6e9-f8d6-41e5-b9fa-19d4b39fc8fe"
        },
        "item": {
          "id": "276cca0b-0eca-4179-b062-09f7585dcd39",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "17c427af-d7d4-4ac1-a3f8-3b1d73aeabc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029a7307-74ce-4f32-926e-ae40795522ac",
        "cursor": {
          "ref": "cb3d0db1-d538-41c1-ba1e-31e19df3c3bd",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b3198367-c8d9-4a37-b2df-518944864dd3"
        },
        "item": {
          "id": "029a7307-74ce-4f32-926e-ae40795522ac",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2968b3d8-4d9d-4fec-b387-96568135656e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17ca767-fb96-492f-8ff9-cb115bc32fb7",
        "cursor": {
          "ref": "abde4dc0-4e5a-4a16-a6ea-591f8d120b2e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6d2ff676-0a6e-4da5-bc8b-7dda57f9e538"
        },
        "item": {
          "id": "f17ca767-fb96-492f-8ff9-cb115bc32fb7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b780639f-171d-4dd8-a461-1f0b0dd82545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6418edbc-b35f-4868-87ac-ce76f593270f",
        "cursor": {
          "ref": "bcfc54bf-0629-4ec8-8cac-17be28778c0e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "623ca222-0745-460b-be18-3bf3489637eb"
        },
        "item": {
          "id": "6418edbc-b35f-4868-87ac-ce76f593270f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "52bcf0b0-0bf4-458d-addc-eee6555ca81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a71775-5c46-4897-8388-af797ee778a9",
        "cursor": {
          "ref": "e57b4da3-c6cd-41d3-84df-f7593e4ee953",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6484d05e-5f5a-4d1d-ab17-87e62b2544d0"
        },
        "item": {
          "id": "c8a71775-5c46-4897-8388-af797ee778a9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1879d833-2a41-42d0-8050-634f68002491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003f1caf-392d-4847-9b68-a35d2ddc154f",
        "cursor": {
          "ref": "db18a263-7fb0-4182-9d1f-83ecd950855d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0091e6aa-8e18-4eae-b77a-448a5bb17895"
        },
        "item": {
          "id": "003f1caf-392d-4847-9b68-a35d2ddc154f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "11f6139d-fcd3-4ec2-85e5-5e6fa3396d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82193e-46e1-4b89-a5db-f036bc61af23",
        "cursor": {
          "ref": "2801cb02-8588-42a6-9893-444161a8fe0a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8fd7364e-a71e-4060-9b8d-1ad68914f3b5"
        },
        "item": {
          "id": "3e82193e-46e1-4b89-a5db-f036bc61af23",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "43868820-81cf-4c14-9a97-50f139e2d9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5412c59-9d77-4a85-a788-a54a53f0c7e5",
        "cursor": {
          "ref": "8cc4ae38-cbc8-4f54-b461-93f8639cd8de",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b83bb928-bd18-453b-804b-82e44af12a2d"
        },
        "item": {
          "id": "e5412c59-9d77-4a85-a788-a54a53f0c7e5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "27aa7ce2-167e-4185-a758-7a982aab593f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c1f098-8a81-4d22-9c7b-6799c59d1f13",
        "cursor": {
          "ref": "4cf5aa82-392f-4320-a50b-4b5acefc98a0",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3c8debbe-3cdc-46e9-aee4-8b0eae4b05b7"
        },
        "item": {
          "id": "d5c1f098-8a81-4d22-9c7b-6799c59d1f13",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8c59f1f4-a34d-4911-8702-1ca9ff43df13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf59d11-569b-47d0-bb04-1905ee1e52f4",
        "cursor": {
          "ref": "01d9f785-8e67-48ea-8414-98a4a7870de9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "36eeee40-d697-4cec-b925-07d2da53b9e5"
        },
        "item": {
          "id": "baf59d11-569b-47d0-bb04-1905ee1e52f4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "885e3e34-fd07-4371-add9-ca303245a354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3269,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1923e3b-9572-49fc-b27f-1ad02a46d826",
        "cursor": {
          "ref": "44781296-0dc1-4766-bc5c-2c901b8280a7",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a969f75c-8574-4d8f-a050-15eb30f56980"
        },
        "item": {
          "id": "a1923e3b-9572-49fc-b27f-1ad02a46d826",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7f41aa5b-d879-47bd-975a-490f74fa293a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c00173-8ca6-40da-b6d8-79795342bf33",
        "cursor": {
          "ref": "f7c89925-bf21-476a-ba2a-2f1ff6ecd0e4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "36d4a7eb-d030-424d-b1bb-c4005c4397e1"
        },
        "item": {
          "id": "47c00173-8ca6-40da-b6d8-79795342bf33",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7314873a-0cc3-41b6-8ba9-9776c485e360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8439a3c-2927-44fd-be02-f4daf141bc32",
        "cursor": {
          "ref": "4e676034-69e9-4c28-b585-d5e288077404",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7b6cf454-5af1-48d2-8236-00f595b83b16"
        },
        "item": {
          "id": "a8439a3c-2927-44fd-be02-f4daf141bc32",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d5a43f83-01bf-4878-bb8a-18aa710c2460",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeff31f0-199e-40e1-b6f8-d2592c2970f2",
        "cursor": {
          "ref": "fe1a4233-28ce-423f-b6f9-9bf2804c381e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0f8710bd-1bc3-4cc8-aa08-779e16f369cc"
        },
        "item": {
          "id": "eeff31f0-199e-40e1-b6f8-d2592c2970f2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "af1f3a5c-578a-44cb-ba12-d98bc15fb663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "ab9dd581-7deb-47d1-9869-35f7a7191b28",
        "cursor": {
          "ref": "49832ea3-3ed2-4285-8c04-33d0ba0d8bb2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f2ff2831-44ea-4863-b992-2cc6c4a45748"
        },
        "item": {
          "id": "ab9dd581-7deb-47d1-9869-35f7a7191b28",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f92e5acc-253a-4a5c-9650-a290f726e0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "0480445d-a585-480a-a8a1-dd627c26f745",
        "cursor": {
          "ref": "af89229a-c6af-4bda-907f-d0242fd83d24",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3e682cc2-a709-44aa-901d-e786ab8b6ba2"
        },
        "item": {
          "id": "0480445d-a585-480a-a8a1-dd627c26f745",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0f71a6dd-1871-46a3-855f-a945cfe9d563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1a50a445-9a30-4e86-af10-99b7682de44f",
        "cursor": {
          "ref": "f113c647-abcc-4096-8497-e5de394bd04c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "58175ba3-f9c2-49d3-b184-ff5958395a0a"
        },
        "item": {
          "id": "1a50a445-9a30-4e86-af10-99b7682de44f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "59ee7ae6-a012-4d8d-9c1d-c952eb09c3ee",
          "status": "Created",
          "code": 201,
          "responseTime": 7949,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9591803-cbbd-4764-9f04-01a4e17999dc",
        "cursor": {
          "ref": "d2784a6c-084f-448f-b0e9-6bfeac6d01dc",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "78f6ad22-db93-4e29-9132-61f96aba3976"
        },
        "item": {
          "id": "c9591803-cbbd-4764-9f04-01a4e17999dc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8536bfc3-7401-4169-ac4d-de90cb2e18ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1d5f8e43-6884-4f4d-b512-e78e571e228a",
        "cursor": {
          "ref": "9607998a-9649-495f-a142-2ba2e09365c6",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0ab6d96b-d80c-43d2-afb5-b7d19cd217da"
        },
        "item": {
          "id": "1d5f8e43-6884-4f4d-b512-e78e571e228a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6f25e787-af9e-4dab-b7c0-f7d159626171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "580fa48d-08d5-4509-827b-5337b920210d",
        "cursor": {
          "ref": "2bc7040d-e500-44d1-a1d2-6433aee7fe52",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "80666914-6e67-40fb-9702-3b32788bec37"
        },
        "item": {
          "id": "580fa48d-08d5-4509-827b-5337b920210d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "29684901-24f0-49c0-b47b-a8125138a031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7941186f-e79d-4317-a1fe-a38afc2f1f69",
        "cursor": {
          "ref": "bb9a4259-4d6b-410f-9da2-045083f158d9",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "775c75c4-c93c-4acf-a972-af780f6860ec"
        },
        "item": {
          "id": "7941186f-e79d-4317-a1fe-a38afc2f1f69",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8cb5cbf9-7db6-4e21-bf36-b50e309dc75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69031a99-94c3-496f-84f8-186a0f6de6b6",
        "cursor": {
          "ref": "f9c981c0-5c3d-4996-8eae-d37fd658f9f3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d693bb25-7eac-45da-a322-5ce0cb6cc509"
        },
        "item": {
          "id": "69031a99-94c3-496f-84f8-186a0f6de6b6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "80845ba6-4047-4db5-8a73-76cb6cbf5c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee206cd1-7546-4667-b0e4-de865848011d",
        "cursor": {
          "ref": "7166ae23-acd0-47af-adb2-d4f4789054ab",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8ef419e1-6770-48f3-9cca-1168d8613b7c"
        },
        "item": {
          "id": "ee206cd1-7546-4667-b0e4-de865848011d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b9156381-7ba2-4ee5-baeb-8f29b2b3df43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a50923-0e75-4ae6-b0f2-5aacf6853836",
        "cursor": {
          "ref": "fd61b6f9-f2a5-4cb8-8668-afd0715b04ad",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7b2e75e6-ebbb-454a-8904-2eb2a80606c5"
        },
        "item": {
          "id": "20a50923-0e75-4ae6-b0f2-5aacf6853836",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "73532945-bb70-430a-9a68-2afc3a75f408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bede9ea-ab24-4e1c-a879-18d801147de4",
        "cursor": {
          "ref": "f17af9d3-d280-43f5-bd7f-0dcb920b3937",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "eaac9e9b-503c-4188-aa1c-2a0b40c95239"
        },
        "item": {
          "id": "1bede9ea-ab24-4e1c-a879-18d801147de4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7a198d54-746b-404a-99e2-dc3b8db04454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29984d81-4220-4dc4-99e4-c5820bd2d37f",
        "cursor": {
          "ref": "fea89417-dea0-4e26-aaad-d8c851763621",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f1b001c2-f17e-4475-840a-a5247ac6499f"
        },
        "item": {
          "id": "29984d81-4220-4dc4-99e4-c5820bd2d37f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "59f99871-3e0a-46c7-ba79-802b0d6aeb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c9fe0f-ea00-400e-ba0e-f83f43a4bbfc",
        "cursor": {
          "ref": "b9f2ec72-db7f-4ec6-9782-ce598f7fb038",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5f905831-1a52-4ded-b890-bff8a167da35"
        },
        "item": {
          "id": "d2c9fe0f-ea00-400e-ba0e-f83f43a4bbfc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c3d0720-d9c3-4378-aec3-4b532218225d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c327cbc-69fc-4eab-95be-9c19d9e869bc",
        "cursor": {
          "ref": "4ef6afa0-dc8f-4baa-81ba-5491211f8f93",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "10d947e0-96da-41b6-ac92-d3dab29e20f2"
        },
        "item": {
          "id": "6c327cbc-69fc-4eab-95be-9c19d9e869bc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9688fbc0-09fb-43f0-92a6-7dc356f6a185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0187f06a-dc2c-4893-88e8-42ad4fee055a",
        "cursor": {
          "ref": "58eb0e7d-459b-4ce8-8d28-a755357f6b6c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "17c56a29-d1bb-4ff8-a084-b7f5f6174a42"
        },
        "item": {
          "id": "0187f06a-dc2c-4893-88e8-42ad4fee055a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3ede14d4-3b4a-4a71-b0b8-bced4c0507d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c80fb98-3ca2-4fd3-b58a-527504b02676",
        "cursor": {
          "ref": "c99ef1cf-4c46-45ef-8295-f00c36e2abad",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "889c71b5-8a1d-486e-b993-d87d4717e4bd"
        },
        "item": {
          "id": "9c80fb98-3ca2-4fd3-b58a-527504b02676",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7a18c836-c2f2-423c-bb92-72ac081b20f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bf7a6f-7c89-4b9b-9d9f-6b117dc3360e",
        "cursor": {
          "ref": "efdd8863-9e2e-4d2e-ab0d-88338b68d2da",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5919a409-ad8f-43f2-9a2d-d88e05bc1638"
        },
        "item": {
          "id": "29bf7a6f-7c89-4b9b-9d9f-6b117dc3360e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f561536-8d58-4e4f-95c8-5bd8103f39e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786df0da-1506-4e3b-ba89-72bba7585925",
        "cursor": {
          "ref": "875db97d-097a-4548-a614-985bb7d42a5f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f38d9e5f-d48f-4f7c-ace0-f143351e7a21"
        },
        "item": {
          "id": "786df0da-1506-4e3b-ba89-72bba7585925",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5b344b45-a100-42d3-8bcf-95731c3bf912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6600481-3d9a-46dd-b91b-5c0cde4df1db",
        "cursor": {
          "ref": "769f2ac3-5dac-4332-80e8-b8d222500035",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "26a47b16-6179-4069-ab5b-65c217178bd4"
        },
        "item": {
          "id": "f6600481-3d9a-46dd-b91b-5c0cde4df1db",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b9037e01-4d50-419f-a04c-42f07c850f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8600e40b-41de-4f81-b0d0-f51c281effb7",
        "cursor": {
          "ref": "f0c1ce05-df61-4ffd-a59b-6e1ef21a3b43",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e74854c9-422c-4346-adee-5d1a95c2977d"
        },
        "item": {
          "id": "8600e40b-41de-4f81-b0d0-f51c281effb7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "55b4f91b-d522-42ea-90ab-7e94addebb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a2e625-17ce-42ca-a31f-8c9be0b9142b",
        "cursor": {
          "ref": "3ed281ce-d902-4031-8071-596f7d3b87e8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "82d525d9-f111-4264-893c-078d6cfddbe2"
        },
        "item": {
          "id": "f2a2e625-17ce-42ca-a31f-8c9be0b9142b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2a7d0bec-e6e6-424a-8d82-f8b99cfe27ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39715111-7db1-4c45-b76d-b4be44edd698",
        "cursor": {
          "ref": "83fb1187-05e7-430f-9d3d-51fe9a5dd06c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2b90cc44-7d01-4275-a4a7-7d05b3d4acab"
        },
        "item": {
          "id": "39715111-7db1-4c45-b76d-b4be44edd698",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e28abdbb-5c53-4691-b265-b51a1aa26bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee8a490-c3bb-4557-a655-70df02cf8730",
        "cursor": {
          "ref": "2b7aae14-acab-4c81-9f7e-da5795949d40",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1756b48f-260e-49dc-b801-3f3d2ea1ac1d"
        },
        "item": {
          "id": "aee8a490-c3bb-4557-a655-70df02cf8730",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cbf570d4-5626-49f9-87b1-e7e1c131f8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f88330c-129e-4c67-8b1d-72f2022807f2",
        "cursor": {
          "ref": "d49ac161-0678-48d0-9e15-d07c8fae4a41",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1310edb8-75ad-48eb-a6e4-f3ae6d904bc3"
        },
        "item": {
          "id": "2f88330c-129e-4c67-8b1d-72f2022807f2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d9ec0893-2341-4dc2-aed5-2ab812565371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30aa9b0d-b424-4a60-a2b5-75f1542e03b5",
        "cursor": {
          "ref": "00d4c953-5b88-4411-a38e-5f0f632d73d7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aeefc258-6e6a-4648-b5d4-e6413c1da41b"
        },
        "item": {
          "id": "30aa9b0d-b424-4a60-a2b5-75f1542e03b5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "80a99a28-0492-418e-9fbd-a334d4538916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c1d51b-55ae-49e6-ac40-7022be5a1cc4",
        "cursor": {
          "ref": "14bd5258-00e9-428d-adb0-14f982401fe0",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7fbe60eb-fb06-415c-a311-0f7199510b48"
        },
        "item": {
          "id": "b9c1d51b-55ae-49e6-ac40-7022be5a1cc4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5e414e7d-055b-45bd-b46b-9d3560d00a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e2b50d-5dae-4f51-b94b-c13d53e8db40",
        "cursor": {
          "ref": "acd2d6de-7cd8-4a5a-b2df-7b5e068b2533",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9d165396-2673-40da-a1cf-6760cfe763d9"
        },
        "item": {
          "id": "e5e2b50d-5dae-4f51-b94b-c13d53e8db40",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bc8718d3-37b9-468f-813f-d7f02c9c8a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9791a1-f052-487a-96cf-f734ae5b30d4",
        "cursor": {
          "ref": "2eaa473c-cf57-4a1d-ad34-0a7e9b20ec1c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "61af8015-78c6-4b5e-b517-8b1b59a6e5f1"
        },
        "item": {
          "id": "3b9791a1-f052-487a-96cf-f734ae5b30d4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0080131a-4da2-4677-acdc-f59ea2c41903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338b5c55-70a3-4b7c-865e-83e692ebf49b",
        "cursor": {
          "ref": "4a404154-d179-44ed-80e3-b514a08b4182",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4a6c2df8-b400-4879-bc4d-53413c4b0ad4"
        },
        "item": {
          "id": "338b5c55-70a3-4b7c-865e-83e692ebf49b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c16afad1-dd97-4763-bc8f-f2a2b5040f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c2fda2-6a49-4e0d-b508-23588fdae7dc",
        "cursor": {
          "ref": "7809f482-e532-4708-ad02-87cf94726d99",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "802f08d1-6ac8-44ad-9c2b-4b70bd2c90a6"
        },
        "item": {
          "id": "29c2fda2-6a49-4e0d-b508-23588fdae7dc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fac230a9-95e7-4b52-a6c9-a74e408a5912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41a501a-044e-4d8a-98da-502459d2d5a3",
        "cursor": {
          "ref": "c3e40177-2859-4c9a-88cd-5c0a8fbd93ee",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "754eb555-50ee-466f-a216-5d3aed7d413e"
        },
        "item": {
          "id": "b41a501a-044e-4d8a-98da-502459d2d5a3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8f298ad6-7d24-4d30-91e6-5fc6a0e3bb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa74dea8-ed11-46a4-a799-417e9144a7d5",
        "cursor": {
          "ref": "37703f4f-0636-4bde-9ad6-4320c89dedec",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "74b35a02-c87a-4dc1-a23e-60b9d9bffd2a"
        },
        "item": {
          "id": "fa74dea8-ed11-46a4-a799-417e9144a7d5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "02e0a8e1-10bf-4534-9fa0-fc1fd888f928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a49b8dc-2a64-4461-9718-0c8492111e6d",
        "cursor": {
          "ref": "ed19723c-67cc-4ff9-b689-7ca88b5f7479",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a6d5bda9-03be-4c50-ae1f-aa1624f815ab"
        },
        "item": {
          "id": "8a49b8dc-2a64-4461-9718-0c8492111e6d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6e5ad76f-6a6c-48ef-97a2-89969143a0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235b5699-3da9-4c8d-867f-5d5cf71ebf4e",
        "cursor": {
          "ref": "7a8422dc-6f83-47dc-b661-a06ebfd9351a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c572b515-2cfa-46da-bd27-53d7932e9456"
        },
        "item": {
          "id": "235b5699-3da9-4c8d-867f-5d5cf71ebf4e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "36692939-550f-49ca-b9f2-465e77082cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbec83a4-22a8-46c8-8556-883695af246c",
        "cursor": {
          "ref": "3a7da3ea-addb-4263-a59f-18be9f3f1a28",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b2abe7fe-c5e6-44ea-98fd-a34c68f2cdab"
        },
        "item": {
          "id": "dbec83a4-22a8-46c8-8556-883695af246c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9c93419a-3f86-45d8-9d4a-57225ec9f9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4177d723-4ca6-4ced-880a-357693f6d874",
        "cursor": {
          "ref": "901f2448-de25-4aea-bf16-7ceb1bb41396",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1c93cee2-9910-4e9b-957d-aa7399b5db05"
        },
        "item": {
          "id": "4177d723-4ca6-4ced-880a-357693f6d874",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0026cb3e-9279-4883-8469-e03cd18b11fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee3df10-16b9-4711-af97-7f30ee61850d",
        "cursor": {
          "ref": "c7c5ff68-c12c-4739-b8e5-f14c305f28d3",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0792b488-fc03-4811-89e2-597769e3ffd7"
        },
        "item": {
          "id": "6ee3df10-16b9-4711-af97-7f30ee61850d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8a3516d1-f09b-4707-9eae-d2fc64bdb662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e014c4-2ce9-404d-8cea-779f5c7a6119",
        "cursor": {
          "ref": "3e9ed1cd-32d6-416b-b5a4-ceb2c40f7d82",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1ff2e32f-4d1d-4dbb-81d7-7817fde1c9e9"
        },
        "item": {
          "id": "c6e014c4-2ce9-404d-8cea-779f5c7a6119",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aa01fb47-967d-4ce3-96da-4bd28a8d92de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1f481e-b05a-4aad-a420-24a2d9e3b600",
        "cursor": {
          "ref": "29b10962-cebf-44c2-8828-a5894bea910e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3b9e9aee-3009-48a9-b140-934bbc9b26f2"
        },
        "item": {
          "id": "dd1f481e-b05a-4aad-a420-24a2d9e3b600",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0d3700a2-67b3-444d-ae24-b00d81c0ea93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba53804-9d0c-4572-ad48-6decdc6a0422",
        "cursor": {
          "ref": "48d896b3-37c6-4b68-980a-9452013d74fe",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0daeaa16-2ea3-49c7-bc09-04cfee024a0c"
        },
        "item": {
          "id": "4ba53804-9d0c-4572-ad48-6decdc6a0422",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9ced644c-8ce9-438a-a824-473b827e2ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712e314b-44f1-4482-85ee-c4ae806e81ff",
        "cursor": {
          "ref": "8398caad-12f6-4a56-9af7-4b560d3ec101",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "01b376a1-3df2-4e18-b55a-eec4690bc1ac"
        },
        "item": {
          "id": "712e314b-44f1-4482-85ee-c4ae806e81ff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "01bdac3c-78bc-487a-8efa-2c5609b0c16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e004243-1bff-405c-abfb-b148d1b95283",
        "cursor": {
          "ref": "4e776458-def0-4ead-910c-c34caf772897",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7ae7dea8-4b92-46e4-82a3-f930e9685fc6"
        },
        "item": {
          "id": "5e004243-1bff-405c-abfb-b148d1b95283",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41149656-4356-45a3-967d-c0784a47df0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a756fafc-dd26-46bf-ab23-623877a5d765",
        "cursor": {
          "ref": "ec3e0419-299a-434b-b4b0-304ec92d2d15",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5671b432-00cd-4797-a867-7b6f0bc9e8e1"
        },
        "item": {
          "id": "a756fafc-dd26-46bf-ab23-623877a5d765",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6db0aeaa-9f8a-48bc-bbf5-e1221b6b8d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3547fd-5805-42f3-ab7a-ad13143a54cb",
        "cursor": {
          "ref": "73e4fefd-4b9f-433c-99f6-30bd3ca3c5fc",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0ce33e3a-4e1f-40e7-a35b-76b4a96b3b1e"
        },
        "item": {
          "id": "6e3547fd-5805-42f3-ab7a-ad13143a54cb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "67784d48-aa1e-4e24-8467-0f658721c06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bf6726-635a-41be-87df-75d67bd2780e",
        "cursor": {
          "ref": "b25988b5-08c0-49aa-9928-79ca156872d5",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4fafc198-e7c6-4e0d-b249-6b020a6d333f"
        },
        "item": {
          "id": "97bf6726-635a-41be-87df-75d67bd2780e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9057e722-75f6-4b18-958e-b6660bae2a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d44ca8-4857-4808-886d-1547ae9267f5",
        "cursor": {
          "ref": "462a4783-561e-4812-89e0-bdb9b363d352",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3d1354d5-165c-4905-800d-9444553fef2e"
        },
        "item": {
          "id": "09d44ca8-4857-4808-886d-1547ae9267f5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2c4cc9e7-d891-41dc-8063-e09a4feeed67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b982dac-15d9-4fae-95af-ad63e059eb2e",
        "cursor": {
          "ref": "46e09e96-4014-4bdf-ac83-f99dacf708ca",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fb218945-97b7-4180-8c20-42b40aa2e554"
        },
        "item": {
          "id": "0b982dac-15d9-4fae-95af-ad63e059eb2e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3a7c632a-e77e-4624-8dfb-40785602c8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d654edee-56bf-416a-8a6d-72ff3a951465",
        "cursor": {
          "ref": "4a94b836-89f1-4ec8-99ac-00e22f6cfff4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cc387f4f-f890-40d9-b2d1-311954884bba"
        },
        "item": {
          "id": "d654edee-56bf-416a-8a6d-72ff3a951465",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cdd043f4-a5a5-476a-8526-ced99a7a337f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b516b466-f2b6-41e1-ad1e-f13c7e62abba",
        "cursor": {
          "ref": "55a7a3d0-ce81-4776-a511-564ccb76c385",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4e13cedc-d87f-4d2e-9385-72d61d75013b"
        },
        "item": {
          "id": "b516b466-f2b6-41e1-ad1e-f13c7e62abba",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6cead1be-f7c8-4b68-b7c1-cc23a323a832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138bca8f-6095-4138-bdc6-848a7fddd105",
        "cursor": {
          "ref": "86bfa913-12ec-417f-9600-173cee0def3e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "25feb586-8907-448b-a801-7804bb802e56"
        },
        "item": {
          "id": "138bca8f-6095-4138-bdc6-848a7fddd105",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8487a818-ccb9-4b84-9448-bae475f430dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2d6a85-5c86-4235-ad27-e061197c5a34",
        "cursor": {
          "ref": "febe3fdf-c11a-47aa-b2ca-2043e7442cf5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ea75a4ef-0572-453f-9ffe-f9b336b68091"
        },
        "item": {
          "id": "cd2d6a85-5c86-4235-ad27-e061197c5a34",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "68c356b0-11f3-459c-a47b-a0029a515138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54940ff-dd06-4b53-829e-410c42f0370d",
        "cursor": {
          "ref": "a02454f0-dcb8-4710-98dc-2074ce1dd089",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ab888348-bc32-499d-a027-2d051372c4cc"
        },
        "item": {
          "id": "e54940ff-dd06-4b53-829e-410c42f0370d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "43df0dd5-a18e-4a95-85de-b27bff03f129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdea88fd-d13b-4f57-91a3-bae8f4f84ea8",
        "cursor": {
          "ref": "d95fc5fb-966c-44b6-8bcf-2447e6fdf959",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "856b9eda-06ca-482d-87b6-1b7e5186664c"
        },
        "item": {
          "id": "bdea88fd-d13b-4f57-91a3-bae8f4f84ea8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "874d1f2a-524e-4692-9bdb-d3d35f27bb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339ede5a-4c89-4186-a578-70f284cab474",
        "cursor": {
          "ref": "d8aa10f9-662d-4230-8aa1-2b64b619c725",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "beed594f-eb3e-4713-b136-be25432fb137"
        },
        "item": {
          "id": "339ede5a-4c89-4186-a578-70f284cab474",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "09c5cb60-893f-45c3-949d-16b54d7cbe2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95645fdc-80c7-49c9-a387-a232127a9dc3",
        "cursor": {
          "ref": "d121d0e1-7a64-4f5a-99ed-5048f105cb3b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "60c7d73e-fa92-4b1a-9991-e623c5ea7fcc"
        },
        "item": {
          "id": "95645fdc-80c7-49c9-a387-a232127a9dc3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "161b5d86-3e42-4302-be8a-4527dad2d22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f60224-14df-4688-a4f5-207bde9ec9c4",
        "cursor": {
          "ref": "7e20fcc3-cd23-417c-87a5-a7d42623aee9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a933b08a-662d-4260-9327-d4832295e993"
        },
        "item": {
          "id": "b2f60224-14df-4688-a4f5-207bde9ec9c4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8b05470e-e518-4c5d-b3ad-d9e1c4c0570d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e9bee7-674c-4aa4-9c1f-1c0e4e7f25dd",
        "cursor": {
          "ref": "f64bef06-c440-4a49-95c6-6d02233c684a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "66e6e0b0-45b6-492c-9fb1-86973e0928f3"
        },
        "item": {
          "id": "70e9bee7-674c-4aa4-9c1f-1c0e4e7f25dd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dcc7be7f-bb50-4690-82d9-f9cdd148a639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f7d5be-517b-4171-9a9f-8c89e3e2709e",
        "cursor": {
          "ref": "6a25a8b4-f566-4252-870d-36b0fe03e211",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c66b185f-f359-4ab7-948a-9569efeea1ca"
        },
        "item": {
          "id": "a9f7d5be-517b-4171-9a9f-8c89e3e2709e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b54dac29-c3f1-41ae-9de1-9d9f530fe9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb02c20-201d-4533-a924-9e52bea2c12e",
        "cursor": {
          "ref": "9e883879-722e-45b5-aab3-71431871bc44",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "30755cab-2661-42ff-9b71-cbe0732e3825"
        },
        "item": {
          "id": "1bb02c20-201d-4533-a924-9e52bea2c12e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "39c482ed-1240-4f17-b1f0-8781a8cd02ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abea309-a4ed-4788-9a6b-8c8609d302c0",
        "cursor": {
          "ref": "093391d1-8504-4259-b8cb-77119364ea34",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ece7eae4-3890-4b15-9d76-99ae4497383b"
        },
        "item": {
          "id": "2abea309-a4ed-4788-9a6b-8c8609d302c0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "43180c20-e4a7-46ff-8a37-b2cb36611128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eab3ba7-a40e-49a9-aa0c-40583f7cb9df",
        "cursor": {
          "ref": "bdf8378a-c028-4632-bb28-bfba951ab4b4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c0637805-25b7-4d0f-818f-e51edc228a76"
        },
        "item": {
          "id": "3eab3ba7-a40e-49a9-aa0c-40583f7cb9df",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1b2ba9ef-8644-4eb8-b4e6-4d3fd7a13161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ab0dfa-a0ea-4e0c-ab77-a2cfacac192c",
        "cursor": {
          "ref": "055ca0f7-2ddb-46a2-9f9a-dc91e31a02e9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8465f091-56f6-4951-a2fa-c318eaa9d101"
        },
        "item": {
          "id": "24ab0dfa-a0ea-4e0c-ab77-a2cfacac192c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "29e3e755-1b06-4c9e-a087-1a0b02523cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a686c16a-5c1c-4942-9896-d2bcfe888cd5",
        "cursor": {
          "ref": "df7a6905-025b-4414-95d3-8ff854340c98",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cff19ad9-5510-40d6-aecb-46e3c1ca922c"
        },
        "item": {
          "id": "a686c16a-5c1c-4942-9896-d2bcfe888cd5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "461be7f2-b988-4af6-b2c6-d95e5900a960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629d866f-2ad5-47ef-9686-9d89002d5398",
        "cursor": {
          "ref": "80921648-6493-40e0-98d0-27230ce19664",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4a1e23e2-574d-43ba-8285-885605cf0bec"
        },
        "item": {
          "id": "629d866f-2ad5-47ef-9686-9d89002d5398",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6ef0b015-b1e1-4d9a-b39d-8b362d2fee6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aaebf5-8e7b-47ef-9f38-1e110addc1e8",
        "cursor": {
          "ref": "d949b0f5-90a9-497a-9fca-55c3f58d6573",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "70213f1f-516a-4b3f-a26d-a025b67c3fbd"
        },
        "item": {
          "id": "06aaebf5-8e7b-47ef-9f38-1e110addc1e8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ae4eaff4-94e2-4fb2-b2f4-1c33488af4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c09af7-4377-4e22-9ec4-3e824302bf37",
        "cursor": {
          "ref": "2693fb0d-d25d-4283-a52e-dcb417f6e526",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2bf2a185-d0a4-427c-b543-10f52ed53459"
        },
        "item": {
          "id": "70c09af7-4377-4e22-9ec4-3e824302bf37",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "152d759e-8ba0-4e62-aaa7-93cc01760c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246ff5fa-0b78-404a-952d-63fe51011f52",
        "cursor": {
          "ref": "03d5a583-4e32-47bd-96c3-5d6d1642e573",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "00502fdf-a725-43a3-8d05-f2f35bdd3a20"
        },
        "item": {
          "id": "246ff5fa-0b78-404a-952d-63fe51011f52",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "00a2fc77-af57-46cf-881f-93482f604c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fc50b1-831a-4ca5-96fe-247d0b476918",
        "cursor": {
          "ref": "3e5d3a17-7f7f-4892-a277-81b74da28fa9",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6f51b971-d7f6-4edf-99b6-5bc33044ec91"
        },
        "item": {
          "id": "35fc50b1-831a-4ca5-96fe-247d0b476918",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b73095e5-3f25-49fe-8d6b-64b240083067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4ad8bf-5668-4144-b237-8dde82e4ff46",
        "cursor": {
          "ref": "674d8e41-ce5a-4219-89e7-655050da2477",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "86d78fbc-0b40-4cab-afad-559481ad4e2e"
        },
        "item": {
          "id": "1e4ad8bf-5668-4144-b237-8dde82e4ff46",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "07c6bb66-bd76-4b49-b1a3-e0415ec0c024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7b4373-a143-494a-b57f-3a26e137a4c7",
        "cursor": {
          "ref": "7e331087-3d3b-453f-9eaf-bba112979e46",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e38f5931-8e53-405e-92dc-4e295e26a6de"
        },
        "item": {
          "id": "7f7b4373-a143-494a-b57f-3a26e137a4c7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b89f8928-f459-4a08-9511-768d93ff47de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b906f7-605e-4dc4-a4c1-8466344181cb",
        "cursor": {
          "ref": "c7904fc0-299e-42af-bd25-d8ca28cca0bb",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "68e231bd-253d-4130-82d1-768f139319a4"
        },
        "item": {
          "id": "d5b906f7-605e-4dc4-a4c1-8466344181cb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7f83493f-3eae-4a68-8ebe-86b691073d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343da101-0e72-49a2-8520-c3fd3bf05643",
        "cursor": {
          "ref": "64d8c060-4801-4778-9449-cd0447a2526d",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "41fc662e-9087-4b19-a073-220a2a14b3aa"
        },
        "item": {
          "id": "343da101-0e72-49a2-8520-c3fd3bf05643",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "71c9937a-989c-4546-9ad6-18db7b40f25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a80c46-36fd-45ba-82bc-4b83997c6fad",
        "cursor": {
          "ref": "48f4593d-ac96-412f-9272-3c69142243de",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c2730003-eb24-415f-b936-1213a9a96c29"
        },
        "item": {
          "id": "43a80c46-36fd-45ba-82bc-4b83997c6fad",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "95621004-d2ad-4342-a02d-c35c90b78ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f3bb33-b65a-4517-907a-720b19aa08e9",
        "cursor": {
          "ref": "90c2dd9a-023b-4904-93dc-a0bd01e6f6b0",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3fd44785-85a5-48ae-afa5-2caf954fc923"
        },
        "item": {
          "id": "e9f3bb33-b65a-4517-907a-720b19aa08e9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c30c3595-792b-40b4-b9bc-e9ab083e2647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2951ed-5b0b-4eff-8dec-be00c398236a",
        "cursor": {
          "ref": "24b53093-40e8-4507-a43b-e8050130e256",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dd5ca606-1ffd-4f86-a122-12d92b264f1d"
        },
        "item": {
          "id": "5a2951ed-5b0b-4eff-8dec-be00c398236a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "053db61a-f9f5-43f0-ada0-d5ff012c2f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6d9c10-c6b2-4ac1-8812-0f91d767a39d",
        "cursor": {
          "ref": "576a5e5b-7558-4389-8641-05d843942192",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5fb1d4a1-3ae8-47bf-ba3a-3afd5c8c4697"
        },
        "item": {
          "id": "af6d9c10-c6b2-4ac1-8812-0f91d767a39d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b816c595-49a2-42e0-b24e-dfa4db015e4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054360eb-6944-4a86-affa-2800e6a510f4",
        "cursor": {
          "ref": "ff7450df-4685-4158-90f5-b402a84ac3e8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a0e9cfde-a789-476c-aeb6-944a86a1eb0f"
        },
        "item": {
          "id": "054360eb-6944-4a86-affa-2800e6a510f4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5fb66c63-5238-4f8c-845e-b7e273d40d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3164e90a-4fee-4a51-aa19-a382406566e8",
        "cursor": {
          "ref": "bc05518b-bde4-4b85-975a-f1a613b42635",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4eb1ba7b-25d4-495c-868b-09f68135006d"
        },
        "item": {
          "id": "3164e90a-4fee-4a51-aa19-a382406566e8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ccefbfb3-c20c-48b4-9d09-b6abda824265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431f2c69-e041-4bae-ad52-0b04a5958544",
        "cursor": {
          "ref": "f3fd1615-487a-4263-ae23-af316ad7967a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3919fbd2-6a0d-4526-87a9-5d3cb69382a7"
        },
        "item": {
          "id": "431f2c69-e041-4bae-ad52-0b04a5958544",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ecb2ddf7-3a93-4385-ac8f-f1091c70e8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e588c6f-4cbe-48c9-8281-18b82b814a68",
        "cursor": {
          "ref": "e3342835-aeae-4bd2-8a02-f689a4ac1324",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "80f465ea-c535-4667-8213-dcc75c2eab73"
        },
        "item": {
          "id": "6e588c6f-4cbe-48c9-8281-18b82b814a68",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "843a596d-3855-4458-939e-cab98f3788a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae892a4-4662-4f9a-bdaa-39a7a8b5b671",
        "cursor": {
          "ref": "aeebd927-c706-46fd-aa46-b9ba950bf067",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "999d8e7c-d81e-4446-bf67-deec86698e0f"
        },
        "item": {
          "id": "0ae892a4-4662-4f9a-bdaa-39a7a8b5b671",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0806b43b-5c87-40f0-8479-236bf26f1b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b609cb6c-93f6-4aff-9450-7d9a4997e050",
        "cursor": {
          "ref": "2dcfda18-6530-43a0-8e5b-d681ac40d321",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e017315e-afea-40da-8805-882490786ca4"
        },
        "item": {
          "id": "b609cb6c-93f6-4aff-9450-7d9a4997e050",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "847b7a7e-129b-4e15-8aab-183733e6c96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2510f3e2-e5e2-4ac2-98fa-e651bfee9dbc",
        "cursor": {
          "ref": "652a12dd-de24-4a0b-9bcd-9f948072ea18",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "27acae90-2141-4349-ab44-3b757d6683e8"
        },
        "item": {
          "id": "2510f3e2-e5e2-4ac2-98fa-e651bfee9dbc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "84576bf8-d57a-4c5a-8e62-00a76d6883c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15b49a6-0f72-44a9-b3f0-30e6b55ea4fd",
        "cursor": {
          "ref": "9e005ca1-5eb8-44f3-81b3-27537062fe23",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "efff6f2f-069b-4f70-8194-99e1a27fe64a"
        },
        "item": {
          "id": "a15b49a6-0f72-44a9-b3f0-30e6b55ea4fd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "89e6a922-7b18-45f0-b5f6-b2c29a6e4499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf82727a-77f2-47c2-b62f-09c7449dd9b4",
        "cursor": {
          "ref": "e2e077d1-cd8b-4d92-8357-7f855214f087",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9eef18f4-7c96-4a37-a464-0dab07e0ef46"
        },
        "item": {
          "id": "cf82727a-77f2-47c2-b62f-09c7449dd9b4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b816cbfd-5a01-49ba-98b2-b4363fb5ebfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b475f8-1b76-4b69-bbfb-040c97c2b9c4",
        "cursor": {
          "ref": "8735d635-76e8-44be-bbf6-b115961a58a5",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e8cffa8a-2970-475b-b738-202de594c9a7"
        },
        "item": {
          "id": "14b475f8-1b76-4b69-bbfb-040c97c2b9c4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ce536afb-6753-4476-a67f-9f726e71374b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b805f8d-d6c4-439c-8afb-80d205ab65cc",
        "cursor": {
          "ref": "b69a472b-b584-4f7c-8268-602247781b65",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "824cb4d4-4cf8-4e6c-94ec-3f5af1760f8f"
        },
        "item": {
          "id": "8b805f8d-d6c4-439c-8afb-80d205ab65cc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ce14afd6-5892-4a10-8c8e-02ad583a4a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670d2657-6f75-4b58-a68f-57add7387811",
        "cursor": {
          "ref": "14318931-0733-4793-898f-b7851cf2dbbe",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0ada3170-4852-4722-b2bf-1d8c18e73f49"
        },
        "item": {
          "id": "670d2657-6f75-4b58-a68f-57add7387811",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1ef6dba2-ade9-4691-94cf-f2c77f446074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66a500e-0f18-4726-a2af-58843bac4deb",
        "cursor": {
          "ref": "ba7ed918-2e5e-4d5f-8112-ff6eda164d7d",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "27921261-3c95-4fc8-9755-f781d1391055"
        },
        "item": {
          "id": "d66a500e-0f18-4726-a2af-58843bac4deb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e29c1c9b-3ac6-4618-9a98-9b78639acdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ae9e45-5141-4cce-b016-88a604d0f5d8",
        "cursor": {
          "ref": "8cc75064-2619-4fbe-86f6-dfaad1467e89",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "422a5f24-bb1f-41ec-a9dc-dff57fbb9323"
        },
        "item": {
          "id": "f2ae9e45-5141-4cce-b016-88a604d0f5d8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bbe88e5e-065a-4ac0-a035-a44eb97b8aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1e56de-bb99-46c4-916a-d6236e56ddfb",
        "cursor": {
          "ref": "42e39037-6b88-484a-b8f2-13d187e1f72b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cfdbb3f8-d987-4df7-af7c-15d47da4c328"
        },
        "item": {
          "id": "cf1e56de-bb99-46c4-916a-d6236e56ddfb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b08d3e42-780d-48be-b517-3b41fb2bf46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9570b1-d5cb-4ed7-b619-c67c39d3846a",
        "cursor": {
          "ref": "d3fa11d2-c3d4-4ae5-b2c6-e7a6505f3511",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d8f8b4b8-e599-4036-bcea-05354e88eaeb"
        },
        "item": {
          "id": "6c9570b1-d5cb-4ed7-b619-c67c39d3846a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f361f989-7bff-47df-81b3-df0128d8b144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b61ba8-6ac3-4902-8234-4387523b008c",
        "cursor": {
          "ref": "934322e9-aab5-4920-93ab-1b3987865aec",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "27f1e61f-f91c-46c1-b715-fdb9b9410b3d"
        },
        "item": {
          "id": "49b61ba8-6ac3-4902-8234-4387523b008c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f7443dc5-494f-4b7f-8f66-2b356e33823e",
          "status": "OK",
          "code": 200,
          "responseTime": 202,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "ef99c2bb-99c5-4b1e-a787-a00fe56ad3c6",
        "cursor": {
          "ref": "3ca56176-ed16-44f0-a516-536d74e07269",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "778e7cb3-f511-4589-aeed-f5c0440f3cdc"
        },
        "item": {
          "id": "ef99c2bb-99c5-4b1e-a787-a00fe56ad3c6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c77b305c-a151-4cfe-8d6d-53a74be541c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0867f10-111d-4051-8569-cc96654771fb",
        "cursor": {
          "ref": "ef23af94-ad77-4eb2-aba3-267e02d895bd",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eb31482c-c320-401d-a052-8348381ed3cb"
        },
        "item": {
          "id": "f0867f10-111d-4051-8569-cc96654771fb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3aa13c17-a542-45c3-8b32-1f8c67883647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e7cfc5-4e59-494a-8007-b8acfa3bf544",
        "cursor": {
          "ref": "210e9641-1964-45ba-901e-3bc036239c5d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "58600ccf-0c08-4cdd-a942-2b47a0bd9fc6"
        },
        "item": {
          "id": "22e7cfc5-4e59-494a-8007-b8acfa3bf544",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cee595d6-9860-4d3e-86e8-f4782e6f4f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc59b7af-755f-4021-a8d2-fd6024d20820",
        "cursor": {
          "ref": "fedeea07-3a09-4985-9595-de3e608a0627",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad4e7c91-cb61-4fb4-a2bb-375110d2f46a"
        },
        "item": {
          "id": "bc59b7af-755f-4021-a8d2-fd6024d20820",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "efd9f6ef-b9ac-4aa4-8c19-f76b40f10360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575b2bcd-c6af-4498-b78e-e2c8269abe8a",
        "cursor": {
          "ref": "2c3d14a5-5891-4ef4-9622-486ea48bc64b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f2b57da6-61a7-4b73-9d34-c7f2a24bc4e9"
        },
        "item": {
          "id": "575b2bcd-c6af-4498-b78e-e2c8269abe8a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "464a16dc-01ff-48d9-ac69-e06b0bfdf694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bc84e8-7acc-4146-8dda-76039f0bc692",
        "cursor": {
          "ref": "7c3c9a11-c581-4965-a1d0-b4b53fa6243f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4e74467b-759c-4840-9eba-dc3fe0680440"
        },
        "item": {
          "id": "65bc84e8-7acc-4146-8dda-76039f0bc692",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fafe43a0-cddd-40f2-8bcd-8c4e3ba8d5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6d6987-4789-4952-b44d-a029ef6557e5",
        "cursor": {
          "ref": "9a3fd160-b911-4364-bde0-6cd4d54bdf43",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "162ff590-3ae5-4959-9eea-3326df18df08"
        },
        "item": {
          "id": "5e6d6987-4789-4952-b44d-a029ef6557e5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "52aee57b-a3d3-43e3-9cbb-74a1df4aac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be90699-f1a1-444c-9ed2-954a6ba7a673",
        "cursor": {
          "ref": "7ec412fe-4cf8-4de8-aec5-6e4c232eb6e3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6e02533d-c574-4d13-99b6-ee3ed8a9a684"
        },
        "item": {
          "id": "3be90699-f1a1-444c-9ed2-954a6ba7a673",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ab2acd67-ba74-4c26-b17b-4b72a27f5c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a348a5-09e6-461a-8d79-c1c3aeaaf3b1",
        "cursor": {
          "ref": "f597a259-b9c5-4808-956c-0cbb06b3a3c6",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "934b921d-1ebe-4465-ac75-0654356b4814"
        },
        "item": {
          "id": "42a348a5-09e6-461a-8d79-c1c3aeaaf3b1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "45453b50-b9f4-4540-8784-6bc74dacec86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cd4283-7731-4850-b001-a479827fcb12",
        "cursor": {
          "ref": "ecfb0bd6-fa96-41b7-bdbf-3c2bde6148be",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b98fed5a-5f1b-48b2-9c17-5f506a50535a"
        },
        "item": {
          "id": "94cd4283-7731-4850-b001-a479827fcb12",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6046d5f7-a137-4bcd-aa43-95c898c7479b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87137617-7e3c-42d7-988b-7f520601795d",
        "cursor": {
          "ref": "9d07cf61-adf4-46d9-b314-a80516f34e8b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d65486ca-3a0d-4e8b-9061-29b4debdb405"
        },
        "item": {
          "id": "87137617-7e3c-42d7-988b-7f520601795d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4daa8f75-e69c-40c4-b02b-2cecbee4abca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ba49aa-5dac-4435-bef4-b76e0a9af432",
        "cursor": {
          "ref": "d5f997ca-6d0a-4fa8-a868-14b92d178b39",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "609345a8-56ee-4922-b5b7-f548b0e80c2e"
        },
        "item": {
          "id": "a6ba49aa-5dac-4435-bef4-b76e0a9af432",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2acd1a26-d8d8-4825-abca-965111d29b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dcdb5b-2e81-43bc-ac5c-750dc11fd1e8",
        "cursor": {
          "ref": "e112c635-a8a5-4bc4-a546-e249129beb0a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "927f3425-0b64-4ed0-b98c-0120b28b8a5d"
        },
        "item": {
          "id": "63dcdb5b-2e81-43bc-ac5c-750dc11fd1e8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2e7f8be0-a954-4770-9118-da0630928be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0268493-cd12-4b58-845c-db9de09fbaf2",
        "cursor": {
          "ref": "cf0dfc01-91f0-4019-9c31-c963f2cff140",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8c0bc03c-f626-4483-b214-0bc51356a39e"
        },
        "item": {
          "id": "f0268493-cd12-4b58-845c-db9de09fbaf2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ee1257d3-cf34-4bd4-ab1a-37c8414a8433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba2ea8e-fb5e-4055-8047-f1d3bc1249ec",
        "cursor": {
          "ref": "0bf0bd33-eeb2-4b9d-9f3f-44ba75977f43",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1300e8d3-27c3-4ba9-aeee-90c06e56dceb"
        },
        "item": {
          "id": "8ba2ea8e-fb5e-4055-8047-f1d3bc1249ec",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a6b63d96-8a03-468b-b822-19b67b4897a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd140ce-f053-419f-b61c-ea66f968d143",
        "cursor": {
          "ref": "82d3b0a0-3c54-4a84-a439-8e5f3d726d0a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9882f68f-e4a0-42a4-9b04-75c1e31de98a"
        },
        "item": {
          "id": "9dd140ce-f053-419f-b61c-ea66f968d143",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "39dc50a0-ded1-4e28-88ce-8325c2eb4d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a381f09-afbf-4a26-a3f9-62342588e857",
        "cursor": {
          "ref": "59506fbb-559f-42a7-a090-5cb911bfe9ba",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "877afbed-d43c-4b38-b0a9-735f3ad1fded"
        },
        "item": {
          "id": "9a381f09-afbf-4a26-a3f9-62342588e857",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b0257035-e997-44c6-aedb-ecc76c0a97b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce47a471-b19a-492f-80aa-fd24e3c4e194",
        "cursor": {
          "ref": "9074feb5-614f-43e1-9785-0f59ac7b1cb6",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1e913c2b-0e59-4fa3-ab39-fb8ee68bb26e"
        },
        "item": {
          "id": "ce47a471-b19a-492f-80aa-fd24e3c4e194",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "104bf84a-1886-4c92-acf6-408d435d48e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04450850-7fed-4769-be41-ff2b0d9e329c",
        "cursor": {
          "ref": "744a8290-d8f8-4f3c-aab4-cac0542eaf1c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "574c1a27-80b1-4e2b-88e1-c8f4188b186f"
        },
        "item": {
          "id": "04450850-7fed-4769-be41-ff2b0d9e329c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "72e452d8-fd2e-4ad6-9a1e-0e5692bcaa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080fe29e-a3e0-4ba9-8bb7-1b6d1f425f44",
        "cursor": {
          "ref": "27b50909-8d91-43b0-be41-82e63f8e4912",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "250584f0-ea84-4dd7-a780-21a71af34386"
        },
        "item": {
          "id": "080fe29e-a3e0-4ba9-8bb7-1b6d1f425f44",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9d4b4b0c-8e01-466e-9455-1b06252b4543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5fc369-0740-4de5-bc5b-6fa09861a64b",
        "cursor": {
          "ref": "67bdc74e-d90d-4128-9a77-00b380c261ed",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "adb308d2-fe9f-488d-b5c4-c0ac91b9f038"
        },
        "item": {
          "id": "cf5fc369-0740-4de5-bc5b-6fa09861a64b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "00f3b0f4-bc29-4b83-8b5a-f139ecf2bae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11576662-6570-481a-be23-a9632acf1e58",
        "cursor": {
          "ref": "8e11cc47-8bae-40d1-85c3-a45c6df81c10",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "efb155a4-708d-48a3-a7c0-ab1afd5542ea"
        },
        "item": {
          "id": "11576662-6570-481a-be23-a9632acf1e58",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "316436ee-fb7a-431d-9797-8860b6496833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e18e19-5bb5-4c9a-9dfe-d7a7979a22b9",
        "cursor": {
          "ref": "580b0797-1a41-4281-887b-160a4f1760d3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7ecd0fb0-e811-4e88-a48e-6aa603c9b590"
        },
        "item": {
          "id": "e0e18e19-5bb5-4c9a-9dfe-d7a7979a22b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cd46d90e-409d-4686-ab48-36482ccb144d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a12ccc-ffd8-417c-8232-0417805bd524",
        "cursor": {
          "ref": "cd827730-504d-46af-b0a2-b7d3089afd18",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "18208530-7a3e-4153-b0fe-29c1489e1635"
        },
        "item": {
          "id": "d1a12ccc-ffd8-417c-8232-0417805bd524",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "aabafc0d-e716-4304-ac6a-c73f5fc9c1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658ed93d-9848-4f93-a23c-79ca21c8df57",
        "cursor": {
          "ref": "7b73ff1a-a600-4e78-9d62-d8a20698f1db",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "36a29e77-fbc3-4ec0-b898-d1ab2d66acee"
        },
        "item": {
          "id": "658ed93d-9848-4f93-a23c-79ca21c8df57",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "af5004bc-d589-4af4-86ea-42f38f189544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c3ea72-31a2-48be-9d4e-53d986cbe5f1",
        "cursor": {
          "ref": "eb18f94c-028f-4389-9de0-9777f7f27757",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "32ba034c-b565-443e-9b8a-cb09e908a1c1"
        },
        "item": {
          "id": "a6c3ea72-31a2-48be-9d4e-53d986cbe5f1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b6f1528e-69c5-423b-b933-2263dbee05c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a55576-850f-41f1-86ac-3fb47d1044f5",
        "cursor": {
          "ref": "75f052df-ffd9-4c52-b55e-da576fd7be7f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b8b4d964-b769-482e-8327-9113e836cd1c"
        },
        "item": {
          "id": "e6a55576-850f-41f1-86ac-3fb47d1044f5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "190e59e4-91bf-4a24-811d-3c7b1fc2e4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24b8cfa-e1e6-441b-b538-bc792c8484d5",
        "cursor": {
          "ref": "908e16a5-46a1-484f-8078-08181930ee06",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "edee97bb-ea12-4dd5-9cd3-286c34be2b3f"
        },
        "item": {
          "id": "c24b8cfa-e1e6-441b-b538-bc792c8484d5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "89f7aff7-02a1-4f5d-87a0-54f8d28dc2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1800469d-50c8-4b85-bee9-0cfc5352735f",
        "cursor": {
          "ref": "abcdbca6-096f-4ee7-86af-6782227f26b4",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "453872fb-3819-499b-95b1-4f7f7cb1b604"
        },
        "item": {
          "id": "1800469d-50c8-4b85-bee9-0cfc5352735f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d5a80bdb-c1cb-48b5-b4d7-5d17ce555be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3412796a-9ed0-4731-bd41-175829c63d98",
        "cursor": {
          "ref": "2ad3b08a-bc60-4e4e-ae83-3f4b3051b079",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ecf98f19-b4bc-459d-9d5f-90fad9244000"
        },
        "item": {
          "id": "3412796a-9ed0-4731-bd41-175829c63d98",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "83cb5f60-e9fa-48a5-abfd-5c8b6df55023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9533853c-6321-40ea-a73d-3dff4dca0662",
        "cursor": {
          "ref": "f5db72db-49f0-4ef7-bb4d-b6410d5b7cf0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "83a256cc-faab-4310-94f1-d8593a3512fc"
        },
        "item": {
          "id": "9533853c-6321-40ea-a73d-3dff4dca0662",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9e2785b8-e525-4f0a-bb6f-1e51d8e727b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a25028c-b118-4568-a9e5-4669bea44204",
        "cursor": {
          "ref": "af3c1ae5-1505-4ca4-ae5d-f933647b5ae6",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0ac87ebb-a231-4e7a-9827-6064c1638622"
        },
        "item": {
          "id": "9a25028c-b118-4568-a9e5-4669bea44204",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3144d5f5-c648-4628-bd7a-437f8d9856ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24adc2ea-b046-42b3-8740-9319437e80ae",
        "cursor": {
          "ref": "d83ddd4c-308c-4648-8266-bbc09b3ffd1c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a176fdd9-7741-4fd7-b79b-5189fce75c17"
        },
        "item": {
          "id": "24adc2ea-b046-42b3-8740-9319437e80ae",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b8920b24-0a12-408f-b179-2df4a6895a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a839b9c-e350-49ba-98c9-00286c6a3f81",
        "cursor": {
          "ref": "94311505-de88-4945-8d6a-2432a834062a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8b1ee070-ac25-4fd3-9834-bc5625d68929"
        },
        "item": {
          "id": "1a839b9c-e350-49ba-98c9-00286c6a3f81",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fc775f27-a79a-4d37-90cd-b62a3e97db08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33209ecc-afc7-40bc-a9ac-6c5bed1fe02d",
        "cursor": {
          "ref": "e3ff6a57-ead7-435b-8af1-883e08e777d7",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "622de68b-6d4a-461f-a6ba-6c4139292a16"
        },
        "item": {
          "id": "33209ecc-afc7-40bc-a9ac-6c5bed1fe02d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "43c1bdc4-e296-43da-94b0-77cb4a764136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b777fa30-1dac-424d-b431-a3efa7657d27",
        "cursor": {
          "ref": "00029927-9539-46a6-b956-0cc8f0961795",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c352a3d9-e2fb-4ae2-85a3-2a948a30b6b7"
        },
        "item": {
          "id": "b777fa30-1dac-424d-b431-a3efa7657d27",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e71b782d-3321-421e-8a54-19db53318917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91b8261-2ac9-4064-a99d-ecfd7666c864",
        "cursor": {
          "ref": "400c95ac-8397-4e91-9466-84068929e76c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d9038f57-48b7-44f6-bf65-0992d8fce176"
        },
        "item": {
          "id": "e91b8261-2ac9-4064-a99d-ecfd7666c864",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1e1a3281-310e-4cd7-a8a2-88735a8ec299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef57df7-008a-4b7e-9db3-4c80d614c27e",
        "cursor": {
          "ref": "cf1e1a14-a4be-4586-bc0b-260c6619ea78",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8820aba0-af60-4322-93cb-f7493eaa98bb"
        },
        "item": {
          "id": "fef57df7-008a-4b7e-9db3-4c80d614c27e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "882fcc50-1038-4b46-bbb7-77ad239adc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be37c71-9849-468f-b4dc-ea5559ed9370",
        "cursor": {
          "ref": "8f3bc6e6-7248-48ba-931b-90407b04223d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "81c25150-6fad-46d8-ae92-a2b322752360"
        },
        "item": {
          "id": "0be37c71-9849-468f-b4dc-ea5559ed9370",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a6bed9ab-e5b7-429c-b372-71961ec5b4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49887c6-6d72-4ce6-8988-5790e24b7fe4",
        "cursor": {
          "ref": "76c5bf61-5b34-481e-af2c-b87c06ab5d8e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9420eab7-9b26-4a73-844d-5b5c6b573b8b"
        },
        "item": {
          "id": "d49887c6-6d72-4ce6-8988-5790e24b7fe4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "99405276-16d5-4339-8913-0470d9e61652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc95cad-0765-4502-9cd4-a175c55737e8",
        "cursor": {
          "ref": "19d87a41-c06d-4441-acea-0ab371ed6fab",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "60422446-236f-41d7-a75e-38588abc6214"
        },
        "item": {
          "id": "ecc95cad-0765-4502-9cd4-a175c55737e8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9ea4620f-1405-4b3c-b850-7867dc459ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fac12bf-dde6-4f81-a766-de9ab979fe7a",
        "cursor": {
          "ref": "55513da5-ea6e-4316-a47d-d142e9d85c8a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6857f444-999e-4a74-8464-139f5ed0f4bc"
        },
        "item": {
          "id": "2fac12bf-dde6-4f81-a766-de9ab979fe7a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b3a3176c-7b36-469a-8588-2fc1f7ef6b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccfc1c1-74c2-4e4a-aa5b-4d53a8dcdda0",
        "cursor": {
          "ref": "d61e308c-b39c-4590-9ab5-025759afa6e2",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "940086cd-536a-4394-a1a7-42d416a6b39d"
        },
        "item": {
          "id": "6ccfc1c1-74c2-4e4a-aa5b-4d53a8dcdda0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bc9540aa-5106-410e-be67-ad33511d0313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3675f66-0a6e-4ab2-8b36-88ad8978834e",
        "cursor": {
          "ref": "c9914f0d-8cd9-4f4f-ba36-a09395adad14",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e106a84f-0aef-40a9-b361-96485db2c131"
        },
        "item": {
          "id": "a3675f66-0a6e-4ab2-8b36-88ad8978834e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6d302814-bb79-4976-a2ba-0e6a13428aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b237a007-4cd2-456d-bed1-7501dfa86d94",
        "cursor": {
          "ref": "664b140e-bef6-420d-bce3-6f333c68ffbe",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "668e0355-0a70-4f7c-83dd-09814f5e3085"
        },
        "item": {
          "id": "b237a007-4cd2-456d-bed1-7501dfa86d94",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c0854b70-d835-4a30-9a02-4694f20fb670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a7e761-d896-4b74-8b4e-a6ef62cad1db",
        "cursor": {
          "ref": "b5e37081-79da-420e-8ebe-2252a2f5a564",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c20bab3a-9bbf-44c0-b4ac-607c0c2ef9a7"
        },
        "item": {
          "id": "f0a7e761-d896-4b74-8b4e-a6ef62cad1db",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1b18a5d7-e4fa-4222-a058-d18cb4061e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f8a194-c0f8-4001-ad8f-da0e06ec4bb7",
        "cursor": {
          "ref": "b0f998cb-c183-4cea-9c30-1beb5def5a72",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cff8f1bc-8264-4c05-bdff-7e31e278708d"
        },
        "item": {
          "id": "77f8a194-c0f8-4001-ad8f-da0e06ec4bb7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "98ecfda1-4203-42bc-88f2-e03c2bef79d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c369fbf-383a-4239-a289-65914b97e427",
        "cursor": {
          "ref": "96ac2ce4-e91d-425a-b024-6a502c5bc104",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c6e68617-eacc-411f-9c74-d80e0bb5a869"
        },
        "item": {
          "id": "1c369fbf-383a-4239-a289-65914b97e427",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0401f26f-40e3-4290-9f1a-ecc277ee3fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01924643-71e0-421e-a961-14c5a373e8af",
        "cursor": {
          "ref": "472085fd-e88d-4e80-9e54-ee7529943a24",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "536a23e7-2f59-46cd-b4ae-0ae077e34a15"
        },
        "item": {
          "id": "01924643-71e0-421e-a961-14c5a373e8af",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "260a8071-ce6f-40cd-9a8f-c312e543ad71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f66e14d-331d-4050-ae27-8cf7456f43cb",
        "cursor": {
          "ref": "4903eb16-f2c3-44d4-814f-0b9786334c34",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "394f2677-dfc9-4c01-8591-e826646dff4a"
        },
        "item": {
          "id": "8f66e14d-331d-4050-ae27-8cf7456f43cb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b8aa21ac-3d8c-4076-a94e-d60cebd0aaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb64e8c9-f17c-40af-9f36-21e5677c6601",
        "cursor": {
          "ref": "fe7c6fb8-9b63-45af-a44e-a786eebbf328",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0bab08c7-b51f-422f-a552-b5722786c51c"
        },
        "item": {
          "id": "eb64e8c9-f17c-40af-9f36-21e5677c6601",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4ffc42de-5955-436f-8bd1-e38793b44394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e0ddee-71e4-4987-ad48-1e2eb2b8c9d8",
        "cursor": {
          "ref": "1fec9141-edfb-481f-b9a2-5ad6fa4e5e84",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5c41e300-c5b9-4461-a5df-2f0f49bfad49"
        },
        "item": {
          "id": "f3e0ddee-71e4-4987-ad48-1e2eb2b8c9d8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e54621f0-f703-40c6-a5eb-9a48e0917dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ac8786-b3f0-4aa8-a140-675211292807",
        "cursor": {
          "ref": "1c58c19f-ebd5-4b53-9395-0ffb0b0ed58d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "34cabbcb-e801-4332-b5c8-95457a314610"
        },
        "item": {
          "id": "43ac8786-b3f0-4aa8-a140-675211292807",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "90a334c0-b967-4aef-84fc-229a8640ab06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a74c1b3-2997-4b38-bd7e-80b5c2adf240",
        "cursor": {
          "ref": "282c00d6-be3d-4de1-868d-94017f8ab929",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "552da06f-cb78-4cba-b9a8-a03bbf50822f"
        },
        "item": {
          "id": "6a74c1b3-2997-4b38-bd7e-80b5c2adf240",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a7569dd4-9b83-49da-a662-959f92ce8711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0a01c8-f089-4d47-ad74-bd28fa01a597",
        "cursor": {
          "ref": "62e9bfaa-8cfd-4664-9ee0-b3b5b24da711",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "76af3e03-ae7e-4232-ae79-30ebeb473f75"
        },
        "item": {
          "id": "dd0a01c8-f089-4d47-ad74-bd28fa01a597",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "27cc0e69-f2f7-48be-8584-c49484b3ab5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64bb875-45b4-4781-b471-9d72affa7456",
        "cursor": {
          "ref": "5c940d44-7013-45ba-b21c-f396b58cb57e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "85df3b65-f2e3-4a05-a168-30df81ba5b26"
        },
        "item": {
          "id": "b64bb875-45b4-4781-b471-9d72affa7456",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9b325aee-9f61-4de8-b521-869789f339ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d6cfb5-50ab-40cc-af4b-8d2ab0f64556",
        "cursor": {
          "ref": "a6949e59-d265-4626-856b-0e905e7546ec",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "284a4007-d0d6-4b3d-83a8-a92ce16afe2a"
        },
        "item": {
          "id": "d2d6cfb5-50ab-40cc-af4b-8d2ab0f64556",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8bc5f64f-3a86-4afd-ba53-0e3f35524861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dab8e2c-b3c0-401c-82de-828fdd69105e",
        "cursor": {
          "ref": "0562f170-5d66-445c-b91b-f364b24db54b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4f1cd567-867d-403b-86b5-b7c7f03d3987"
        },
        "item": {
          "id": "8dab8e2c-b3c0-401c-82de-828fdd69105e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ae3466d9-e730-421e-a828-ecfcedbe7d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef0a5a5-00fe-44ca-97d3-53de4dc4d2ab",
        "cursor": {
          "ref": "f7824043-5a98-4882-aba3-c8238b608850",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5cca6443-e48b-4b50-8f09-15da0b3cb0bd"
        },
        "item": {
          "id": "fef0a5a5-00fe-44ca-97d3-53de4dc4d2ab",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e08acc7d-d0ce-4a06-ab64-9b7c76e3424f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9ea8ba-cb08-492b-a577-bb2f39bdaf44",
        "cursor": {
          "ref": "a9a10859-3e2b-477f-a0d9-93ebe7bf6dd5",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b5ebca93-252b-4752-9431-35fd48d0da32"
        },
        "item": {
          "id": "fc9ea8ba-cb08-492b-a577-bb2f39bdaf44",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2fcb1d3c-c3af-405c-a90c-1eaa52bd2d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c73ffd-e6a0-4cc0-a32b-1a38bfbecffc",
        "cursor": {
          "ref": "0e9e2ed2-3a40-49b3-9c39-a210ebfc006d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3cba6bcb-f9ba-4f9a-b95c-031a69aa42ca"
        },
        "item": {
          "id": "92c73ffd-e6a0-4cc0-a32b-1a38bfbecffc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4d6c3a20-03e3-4981-aaea-4b9e3f4cb46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fd7634-0319-4e48-b0cb-f54f1db1d429",
        "cursor": {
          "ref": "7ae72ec4-1509-4327-bae2-5e79a90623db",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0e89c40a-fe36-4b5a-83db-e8c69759cf4a"
        },
        "item": {
          "id": "b5fd7634-0319-4e48-b0cb-f54f1db1d429",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "207ac355-690a-4206-ae96-c5913c6b7088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcd66a4-d88d-4167-8740-14e99930252c",
        "cursor": {
          "ref": "052fedf6-dcd5-4b97-bb32-0aa53ce4ecd9",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fcda406f-4e73-425d-92aa-6d3925a43e07"
        },
        "item": {
          "id": "9dcd66a4-d88d-4167-8740-14e99930252c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "aafc1880-2ec0-4e5c-85f6-7d5379a5d32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583578c3-f873-4157-a7f3-0e8c0354a2f2",
        "cursor": {
          "ref": "e868c4ca-e735-4e9c-a7d4-db639f764f8d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9ebe65e2-687f-4342-bc1c-fa95361156c1"
        },
        "item": {
          "id": "583578c3-f873-4157-a7f3-0e8c0354a2f2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3b76b621-225b-4428-ad35-45d6f8f5dd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ba5519-c373-4480-9beb-ab38c83a99a6",
        "cursor": {
          "ref": "4c7c17b7-9742-4141-8607-f1d7811d0987",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a450b7ad-38fd-443c-ae09-dcb0c6eafab5"
        },
        "item": {
          "id": "96ba5519-c373-4480-9beb-ab38c83a99a6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "75ac732d-67c0-45f1-8093-18e553f55b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c107e0a0-c8fb-47e3-8949-c08b3fbf8d9b",
        "cursor": {
          "ref": "0ab55101-050b-4fa9-a839-df0b4a4f3344",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5e834972-cf9b-4f2a-acf8-f7deddc91081"
        },
        "item": {
          "id": "c107e0a0-c8fb-47e3-8949-c08b3fbf8d9b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "86cbb5d2-1ade-4479-9cac-196270c17adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63df049-b77a-4332-a92a-8e1766b5f1db",
        "cursor": {
          "ref": "77880365-100c-4faa-a474-f46e0af4d5cd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c4c1eddb-9440-43c6-b493-251f49ae7b7f"
        },
        "item": {
          "id": "d63df049-b77a-4332-a92a-8e1766b5f1db",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5078d105-59de-4f91-8840-e5a88f72c004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4150f10-0365-45d1-b649-2707866cec48",
        "cursor": {
          "ref": "50e9395b-b400-449c-a719-ac63e20f81bc",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5de66e71-c1f7-4169-8f74-fb4e9b642a9b"
        },
        "item": {
          "id": "a4150f10-0365-45d1-b649-2707866cec48",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "756d85da-29af-4677-9984-6c7d7cebe4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e914b27-f86a-4a96-8044-551d975a6f5f",
        "cursor": {
          "ref": "755d16e8-67a8-431c-b771-050003fdcc2d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bee59237-bc29-410b-a1dc-8ded1ac93624"
        },
        "item": {
          "id": "3e914b27-f86a-4a96-8044-551d975a6f5f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b79fa50c-5b12-4efe-88f3-609df70ef948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbac6145-b5ef-4d1b-95fc-ca750e95749e",
        "cursor": {
          "ref": "7ae208e2-2912-4168-bf99-2d41875db3d6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f294b7e4-182f-4d4f-a7d3-07d6a6712eaa"
        },
        "item": {
          "id": "fbac6145-b5ef-4d1b-95fc-ca750e95749e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c192e402-128d-4626-9e81-382d968117f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a638c2-1f2b-4a4b-b1e3-28b571b05927",
        "cursor": {
          "ref": "37e9bc04-b693-4a1a-a9b7-7818a941dc13",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0828d4a7-8b88-41c8-9764-6ce4df686dd4"
        },
        "item": {
          "id": "f2a638c2-1f2b-4a4b-b1e3-28b571b05927",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f35633df-c5ac-471e-91ea-5ccc204a5bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47bd2a0-ce07-46c5-86fe-e6d1a23c9141",
        "cursor": {
          "ref": "a29bffbc-86ad-40b1-a3b5-7d5f669a8809",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "74b5ba0e-dd96-4e1f-a2f6-01364f81dab5"
        },
        "item": {
          "id": "f47bd2a0-ce07-46c5-86fe-e6d1a23c9141",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ada06873-edac-4098-abb6-16836f7d8570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdd8697-d40d-43c2-a231-a413b241e9d9",
        "cursor": {
          "ref": "ea61f48b-89be-4e8d-a51e-990dd43b7aff",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0dd58360-f880-4b48-81cf-b2ea9e18b64c"
        },
        "item": {
          "id": "efdd8697-d40d-43c2-a231-a413b241e9d9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b38ff91b-1f34-4f2c-b2a4-7c5fcdb8ece8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddab31d-6528-4e93-b892-5b7fa03a9155",
        "cursor": {
          "ref": "52f847de-f61f-471d-b2ae-8210c3ec1669",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ceb70a34-0259-450c-8748-66320a3197b7"
        },
        "item": {
          "id": "6ddab31d-6528-4e93-b892-5b7fa03a9155",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "815a59a0-84de-4544-8fcb-d4fff5c54e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5489897-6ebe-403f-9702-d06966e22ad8",
        "cursor": {
          "ref": "f4b2b22a-281e-45da-af81-b4d290bfe86c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "234c11cd-46d9-4cb2-ac9c-8e3c4dbc2a92"
        },
        "item": {
          "id": "e5489897-6ebe-403f-9702-d06966e22ad8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f187b41-413c-4c5c-a38d-43883cc5381f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b92be9f-d013-4e80-bc31-27011fecba4c",
        "cursor": {
          "ref": "e8e69ba1-14cb-48cb-a4fa-584172bfb648",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dde77b9e-ac71-44e8-a7c2-bb5480049f32"
        },
        "item": {
          "id": "3b92be9f-d013-4e80-bc31-27011fecba4c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "088aaba9-cdb4-4a8b-aba4-1b4e6fa8fa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98a44a1-3352-4919-bfce-3a543db4b25e",
        "cursor": {
          "ref": "3c2da254-ccb6-422e-af55-965ea204b9ff",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "56fb62e4-46b7-4e5b-a310-ee49bf87901f"
        },
        "item": {
          "id": "f98a44a1-3352-4919-bfce-3a543db4b25e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dcb6e649-713c-4fa5-91f2-5be766d3eba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0ac34a-e61b-43c3-8366-d9b87a7479cc",
        "cursor": {
          "ref": "bb055544-afe9-429c-baa6-8fde0c7f31df",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "af505eb4-9557-48c8-befd-158a9b1287be"
        },
        "item": {
          "id": "7a0ac34a-e61b-43c3-8366-d9b87a7479cc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "770e1949-89df-4378-973d-161e807684f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2731408-00ea-48d5-97af-3116040855a7",
        "cursor": {
          "ref": "9c1d8d36-1dc3-45cd-bd5b-dcd930f43301",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c51d3e70-c348-4674-b0d9-f94718513faa"
        },
        "item": {
          "id": "f2731408-00ea-48d5-97af-3116040855a7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9562512d-0aff-470e-95ff-70d44787fedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ec7e8c-f46e-411f-83d7-311f9c6f744f",
        "cursor": {
          "ref": "68367200-d489-4457-815a-cda106b503d3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "aebe7a57-12ff-4cd1-a2ed-69f6b06de1d0"
        },
        "item": {
          "id": "21ec7e8c-f46e-411f-83d7-311f9c6f744f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b132ef32-27cf-45cb-a3ac-340f4c1bbdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08179276-e8b5-46b6-8dce-2548685cf2f3",
        "cursor": {
          "ref": "f1b46875-ac91-4a5e-9cae-2db2df115548",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b56f4d2b-1ac4-43ef-8691-570cd2cc64b2"
        },
        "item": {
          "id": "08179276-e8b5-46b6-8dce-2548685cf2f3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1dd3e934-e7d2-4fed-a384-4e8a2dab17d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda64fcb-7063-4b39-9253-59b1f93a7d04",
        "cursor": {
          "ref": "1dac1d61-4797-47e5-8961-49548022da43",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d48b15c2-c004-4414-ab0a-393d309f49b6"
        },
        "item": {
          "id": "bda64fcb-7063-4b39-9253-59b1f93a7d04",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0ea62890-361b-4542-a172-bbd1a7d5d5c9",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9df485a-6220-464d-9a42-d1fdf2dc6d39",
        "cursor": {
          "ref": "394e00fb-9931-48eb-a001-34aedc86c4c2",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6430fffb-78e6-4cc2-82ad-f49d7a7ace4a"
        },
        "item": {
          "id": "d9df485a-6220-464d-9a42-d1fdf2dc6d39",
          "name": "credentials_verify"
        },
        "response": {
          "id": "486bd987-5099-47de-8928-347a81af3e38",
          "status": "OK",
          "code": 200,
          "responseTime": 8102,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5b5a95-b96e-426d-841a-314345589a50",
        "cursor": {
          "ref": "a2321339-9c78-4861-bda7-3b9524d29f39",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3e19ca91-722a-4805-b941-9bf82d072252"
        },
        "item": {
          "id": "4d5b5a95-b96e-426d-841a-314345589a50",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "daf66d1d-7ef5-488c-aa8c-068be8cb92ec",
          "status": "OK",
          "code": 200,
          "responseTime": 8338,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8c5e28-d2df-48b9-8772-0fe7dfd58e12",
        "cursor": {
          "ref": "c12cf360-a5c2-43e2-aeeb-cb566b818fd2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5d812a9d-6ee6-4e0e-a7c7-a5f72de7ed8a"
        },
        "item": {
          "id": "3c8c5e28-d2df-48b9-8772-0fe7dfd58e12",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e845d82c-c266-4cc7-8b5e-9f1832a16e06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8c5e28-d2df-48b9-8772-0fe7dfd58e12",
        "cursor": {
          "ref": "c12cf360-a5c2-43e2-aeeb-cb566b818fd2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5d812a9d-6ee6-4e0e-a7c7-a5f72de7ed8a"
        },
        "item": {
          "id": "3c8c5e28-d2df-48b9-8772-0fe7dfd58e12",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e845d82c-c266-4cc7-8b5e-9f1832a16e06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689afc85-083d-4831-b91e-bcb2f2274bd9",
        "cursor": {
          "ref": "705c5a57-0f41-4705-a31c-7e3ecc657ac3",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3c257ee3-1c06-42d6-852d-016011add8dc"
        },
        "item": {
          "id": "689afc85-083d-4831-b91e-bcb2f2274bd9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "67a13ca6-a2b5-4c98-9cf4-b43c0b246f53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f768c98a-ead5-4c39-a7a4-5c8b568649e3",
        "cursor": {
          "ref": "f2ae6619-f52a-4708-8287-ff1756e9a10b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "765c4e21-d2f7-44d2-b5fb-b80a50a13dec"
        },
        "item": {
          "id": "f768c98a-ead5-4c39-a7a4-5c8b568649e3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9cffb1c3-c700-4a84-adc3-9f2d47fb5baa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}