{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "92f9689e-2649-4c70-9f6a-b09e7566f136",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3b5e2169-611c-4930-93f7-5dab448fae87",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c549c952-a53d-4b25-87c7-14bdc21a62f9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b571797-8cdb-48d7-bcba-aa2532b1f4e6"
                }
              }
            ]
          },
          {
            "id": "9f48ba05-b38f-48b8-a0f2-14099e05ff38",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29ab6356-f903-499f-9b7c-7481fc60d902",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9007987f-3559-446b-9272-e96d52e84997"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a3cdc9dd-d3f3-4f40-80b2-b8f27439d176",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6de6ca7b-d49c-4fc9-b72d-c6db0616518e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "efc97d28-1995-403d-8927-9095eaf1a69e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e3d2051-cfa9-43ae-a950-d899a361184d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f59a34c6-fdc4-445e-861a-a32aa1573881"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f62d89d-66a3-4521-805d-aa91865bbdce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31c663f4-2145-4dd0-8b99-88ce8905d2fc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f061ebdd-9fcc-4c17-942b-7e7d72b0f13a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97356cb7-fe1e-4a48-8b31-d6c9b15cc517"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15136a39-28ec-406f-b5b3-35cc99d6c91a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e47fb6e0-0501-4e81-b261-81529b556baf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d72b225b-5a64-4566-8b22-9662a13b8886",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61952ca0-f45e-4906-9b4d-4732dae6acc5"
            }
          }
        ]
      },
      {
        "id": "955a8d65-aac6-4077-a658-b91d618c5add",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ece199d5-23da-48e3-8607-fe23b699cf74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de0b3b5f-f142-4eae-8b02-d13ed5b90dac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "891addca-ccf9-4901-9301-07edd809c574",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f4266e-f539-44e2-a8c6-7ca2e938411b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20e93b1e-a6f6-4fe5-836b-ec89c982ada3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed7edd5-2fa4-46cd-a12e-8c43af1429d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f507f48f-26f5-49c4-bb89-ac676dcc00ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20278f8e-ce15-46d5-991c-18429615bf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36f6e67-d358-4cbe-a8a6-189e01a88b95",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8e60ea-c945-4a36-8933-7238a371bf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5dce132-4f4c-4fe4-8114-a793b0a6952b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e63386b9-4db6-40c9-ba4c-004bb25668ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f6822dd-446c-4d32-8288-f69ecf93871e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3a5b9d-069d-4569-a945-3571ca1074f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aec38feb-e28e-4cb3-8a28-8fd087a92f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0554e7f-72ba-4038-971a-2d4db64f024f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bccb92-8c27-4dc4-a3bc-d9f5a423925e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e7945161-57ed-40df-872b-7dd801c8e98f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aff6b47a-a353-449f-89f7-264986d602d4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17a3414f-1bbd-4935-82aa-2a9520794215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9c94b79a-f452-48cc-b52a-a0e5be167b5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5721422d-cdc8-43fb-adb2-80fdf559c411",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "03a8dd85-be19-4d92-904a-2c5219f50ec5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f32cc9f4-6ed4-4d62-bc09-d997bd574653",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7757901-0265-4bde-b09b-3dab54dbe913"
            }
          }
        ]
      },
      {
        "id": "c3c9eab4-2073-41c8-85a4-b48f5e1b032a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2c2caf31-257a-4e94-a60c-4040076255cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92134bda-3c1d-4eae-84fd-e6c2a274c70d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "926b8e59-24a0-41dd-8d13-55255cb7fdb6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d05a336-8f65-4436-b51f-dddbc87c637b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa54d27-d0b1-45c2-94ab-5c983a9f0e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6692a3-4725-4407-9ddf-81b01dcb2dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "416cf9d7-e833-4dcf-a383-01b71c477852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9860d30-7ebe-4d29-840b-e971708761a6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3a3d18-0f95-4b41-99ab-1d5e4d2d9465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cb5156-6908-4950-b0aa-981371db1284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303f451a-da82-471b-a143-12a653cea089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9208f1f4-9eed-44bc-a32d-79b7d3f578aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00aa9fd-676a-4ae5-9bf4-06d58167f42b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc97533-627e-4d85-aacc-98cdb228e3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e2da89-3fd1-4566-ad72-7df8b373cef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6481310-af85-44f1-a183-5e809f855da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48e21018-1297-4eca-9372-09ee3529559b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3852fc81-9a78-4047-afe7-fbcbd820311d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251f9639-8564-4ddd-884b-e232b9ae5f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123cff4c-b41a-47b6-8a33-54a22ea7ce0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eac72d-377b-4ceb-8636-023c33f1df9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4084414e-d47c-4c2c-bf55-e33e76d5b586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e334d1-f2ef-4cf0-96bd-9db809b4183d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ea0895-6a61-4542-afd7-f41591dba438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8effb0-e0c0-4967-90f3-290ead87624c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbcca3f-4a15-459b-a902-a102a4287839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5cc1e32-579f-4f3d-9202-bc08493adb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ae3755-ce63-416a-a50d-de4b3e9105cb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c69e5a-93eb-47f5-93a3-e68962d7a028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eeaeb5e-0ace-4b6b-8490-de77da12a448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d958992d-842f-4212-b6bb-bca47750e66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ea33e08-c63a-4908-bdee-f40644df76c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bb2938-b874-4eec-bc8f-40a663732156",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78779045-aa24-41bb-a503-4ce4a9b929ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7cb4ba-1574-43d9-9898-155c1bdc9afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfd6031-7e26-45d5-8301-bef0dd130464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9f15993-769b-4165-9828-b3da02d520da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572bbb92-4436-41da-ae11-dcd9bcc62321",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cf67bb-597e-4c9d-890f-d37407cfdcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8172f24d-d9e8-4553-a103-7739bd62967b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91ad704-05b5-44d1-b442-c5a65ddb5880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e0bb6a6-3893-4836-bb03-619c62e9fbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5dc27b-3bfc-44dc-abfd-e831ff152745",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eb15c8-d6e1-4083-bfae-042723987773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934ae551-6000-45bd-88ea-42bb64858bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a63cee-be64-4006-99e6-d2c0f55c5fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd639a93-cc7d-468d-a802-73b8a3d0dff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161aae3e-70b6-4d27-b48f-ef7728e3b810",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0879f947-34dc-4167-86b0-e01376a7a7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65497ca2-836e-4135-8fdb-6cbe79c547aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdad2e6-b29a-4e69-831c-238dbeb50f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f909e2d-9881-43a8-8914-3703b620b284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4731352e-42d5-4f88-960c-0cd26e7dd938",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bc98d0-9478-4a2a-8fe0-af8e66341da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611b3092-aa7c-43b8-8c9d-8ee01f6cacd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c87b16e-f41f-4312-b0f7-200513a4c73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edbdd720-232e-4697-beda-910f5265b12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be8765b-a35f-4897-b9aa-12b9a8f9c85a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fc6e4e-3414-4dfc-9aae-cfebc146bdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a94ab12-2186-41ea-9ca8-ade40c62569e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ca0923-32fe-4924-9a68-a62690325da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78bed800-d944-49b8-88ef-d1cb655d9d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2514795f-ebe0-4243-ad68-6d689a4809c3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c131f2-36fa-4e50-81a9-4f46c868ff78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f896ca-732d-416c-bc5e-d18bc22dda06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893ccdba-b213-432b-ada6-9fe2fa978c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b1e3509-497a-4200-8d61-c021e1fbdda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e72f597-3685-4453-92b7-c0547f57e54f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1ada34-2621-4064-b8aa-e0c608174bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcf10f3-e0b0-451a-8a9d-9d9a0e7a308a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2006066-e187-4205-b140-92493b23784f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47a0d5da-d616-4585-92fc-938290101809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b4461b-d922-4d81-8a7f-8db25d756d1c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053d361a-801d-40ff-9159-96b8177cd90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dbb7f7-93cd-4c24-adbc-5114690cc4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c4f007-c9d1-4041-a090-ba23ecfccf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c686a2b6-111b-420f-bb60-d263fce54a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f97794-6d23-4754-85e5-fb1a1aa6cb25",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb77d2a-051c-4276-b7b9-1aaf5a2a93c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5537dd75-dbee-419b-99a3-03a052a49a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5f084e-4bd0-4bad-8328-17002e454a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0da4ddef-7b72-4914-ab27-0384f35895c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df2c840-d2d0-47d2-bb14-720f9a7a806d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a25833-2850-4d8c-adb5-da3a90b35798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0546db5d-6e2b-42e3-a8f4-7f5571f40c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229e99a6-2abd-4a94-8d81-4b868407f13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e0ad154-59b8-4882-af93-49a10025a27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78270bc1-1edf-4878-b766-7b9406fde5bb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886e30e8-51cc-47a8-b328-51583b0245c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be649b1a-25c2-484e-a643-251e1d57f645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74ebe75-3e64-406d-aae6-5b3aeba84e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0821e0d-2e2e-487b-92fd-951ff7d4ac7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7c479b-49d7-4b65-ae48-4c56a750d957",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab502e1-0273-482f-b54d-00b072bd4a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc4c97a-7723-490e-ace6-6672b3be5c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2aa7409-945a-46a7-b2eb-8bd9f46e9183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73d0f5d1-5dd9-40da-b6ab-51777238910b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3971b62c-ec1f-4490-822d-554755069b9b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef3b538-c147-41d0-9baa-05216743562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafa5bc1-7400-451e-9715-05bd7d4c6755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece26f77-b3ed-4591-867b-4482e5c3cbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96a883a9-2c70-4266-8354-bbf9ace2ae5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6f2e71-5ea2-4555-bd36-afcedcf2b254",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd9a48f-6cc9-41b4-a72a-dce3aed7f117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba15209-6bb4-489a-a27c-5eccd8e9906e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee2561b-ce60-46d6-99ed-1eac3863a1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "094396b8-b210-47e3-87c3-a55c3a8398b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e895ea40-fdfd-41a0-aac6-4c6c543a573e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b39563-8fe5-469c-a3ec-1b4b456489c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e86531-3698-44a8-a337-451935a99901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c382ad9c-ed2d-43e0-aba8-38e711769f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e01436c1-7076-477c-9d8e-89b768eaaa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d907babf-b926-4210-a9e2-29486cf8549d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad80824-16a2-4046-8b0c-1e286f07fbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168cedd5-6e31-4a17-b685-43b6c0fc7a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37700ec8-0a78-49b1-953f-4d11c90c02d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb186f8-3958-4602-82f0-8b041520c66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48104116-cfab-448b-9b27-a1358285a3ba",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c67e78a-2fb6-4392-9ad2-0612705bcea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e79775-d92d-41a8-96fe-d4b9d3c088fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a70cf81-1160-459a-be45-2266821bde10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ee44a3-642b-4e6b-847d-046a41630706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecca4239-5bf9-49d2-bc09-4036e7aae5bb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e801b2-b7bf-4e05-acdb-cf748c6328fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62f0a0f-8060-4b65-8b71-e868dded5069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f485c523-2d3d-4d0e-97a6-5bc8ae558544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9a8559-3095-40eb-8058-63203808f55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71036b2c-5cc7-4cbb-8fbe-ed097603f852",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bd302f-9ed5-4c31-9b2f-1ea23ef24dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92984ece-15fe-431a-990d-5f97393bfafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfde3ab-6aff-4e24-8e19-bc784acaf3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08dc72f2-5f7e-4c6f-a1de-20eb950eaf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8177e10c-638f-4922-8ed7-0dabc3e72318",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8534e2-bddb-465e-bcb3-4907c1ac4540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e42857-79e7-4042-8ecf-76f82c20f619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17cfcbd-73b4-4eb5-9219-d3571bc3415c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ab2d15-d75f-4b9f-883b-35bf9d312766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5792eb-b72c-4a33-ad39-f0d3e11de722",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51630a66-91f5-4e4e-a24e-c063b5c7be58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd0d6f9-e32b-4a82-890d-4974e6aaf7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83896854-5b32-4b12-86ff-a9389ee40951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a1686b-89b6-4990-ba73-6f86b3698863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1ba408-1639-4c67-ba7c-ef11e7ce56b5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b80452-d22f-473a-89c3-a90c4e2c6989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563ea1d6-ab1c-4bde-ad52-33e870a2ecfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6ddde7-e235-4d2e-907b-8452814179e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f66be6d9-1522-4c50-af87-a2558d2f1057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bf94a0-6c42-44dd-93b7-ff77790398db",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18ffd91-c2d8-4edc-bf33-4486417d14f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cec4b4-95fc-4ba0-9757-dc87e254b545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29600706-5627-4a59-a74e-89175ce826a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "052e389e-c1dd-4211-9676-01d853253a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ab9d7d-b5e8-4d92-a245-7475fb2a60e4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa1e5f4-67a5-4138-93b1-3203fc600b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325254d7-688b-4f3c-9930-1a9c0d0781d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300b4de1-e7a4-4c74-95b6-f0bd680d6448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1772620e-7191-4a3d-9263-e3557da693e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf62d2b-5b33-42eb-b20c-6ed396a8f1e6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d88337-d096-418b-b336-b743e00261d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e839630d-6b96-4ed4-b689-110e4f6f931a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b7af04-cc19-4578-bc1c-9965c0d65065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7d04ed-f616-4f20-b82a-9f3d177844d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec11510-8466-429c-84b2-cc06e0a27514",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220dfaf7-59ee-4e02-88b9-12fe0a1abb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59da7573-e5b9-49f2-944f-4bb42f177014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f31b33-99fc-4f36-95d6-1527965f73df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b17908-fc26-4aac-995f-e082ec63c1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68037ec4-f0f4-4a60-b5c0-1d2c0fd78020",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0643df61-5462-4fc2-84cc-f45c4b615856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6fa463-7ffd-4ca5-9c02-125194e84fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff40cf41-9b69-47af-b57f-ed3b106c15c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd714866-9931-439c-b83f-c40dc8bebfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed5f044-f28f-495f-8b2e-fa5ff8e56f42",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f40b9d5-4157-44f9-99bc-da28041ff4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167a0e43-33ab-485e-bd00-c11e880582dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d97d9a-1c15-4f28-9b21-d02a24db9f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ada1b2a8-246c-4c7a-bd5f-ae2f4edd05e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a0fff1-7c0c-45a6-853b-38d797eb6fdc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f61e19-4840-495c-b2cd-14ef55e947c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06136352-0ec7-4dc4-8f03-54b1d0519bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f96dd2-4a59-4bcd-b673-78265f03bdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7b706a-f070-47f8-b953-3a4c07d6e02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e2f54a-1348-430f-a736-8ac62fbc4a52",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7f544a-74bb-43f6-ab1f-35ce6e5e2b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c218e256-c17d-4da1-98d9-a25e331189ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d5b905-616a-445b-bcd5-8721af2fd034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "745761c0-301f-490d-9adc-53b4cd148452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf6396b-166b-465a-8133-2add58be61e2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f4b676-c4c6-4d4b-85d7-6527eeff789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8a3fd6-5820-4a30-b6a3-79fbeea366a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63055fa2-e2cc-4c11-b1cc-90aa8d6f7735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "73791427-f5b6-43bd-af3b-65fdeb1467da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2d120c-4e7f-4e3f-9734-2c5107fb1f6c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a843fec-b302-437f-988e-e7c6fce6d6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dc270e-c26e-49f4-8afd-d71175e79be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bfe24b-f8c8-47c1-b04d-4485522843ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe75688-f192-4458-acec-92f694b7d180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf459d4-2f52-4d26-aead-70ecaf819b5c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59271cc1-9bce-45a1-8c38-05a9f629a4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4076fb40-ed89-4f0b-b76e-472d8f939861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aee7739-6159-4baf-b17c-bf5f45b343bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8222eb89-345d-41d5-8f66-0b5b501166b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee433933-3d0e-443f-8640-86e033cc861f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6dd089-db4d-4ded-ba5b-23fed2c6dfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978c8638-db09-48c0-b8d1-0f2470988b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb257f86-61f9-48d8-8b2e-68a3a502fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fad63e10-57c3-4a63-b126-064bb8569229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675ce3b8-ca85-4073-97bf-e54eec82694a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0c960e-8385-4567-876f-c813e46c535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017dd805-93a5-4807-b2b7-03c47ef7224f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fd3e82-5aa2-468d-b51f-d18691f1ef8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9441a45f-e48f-4a06-993a-6d8e7a73f63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db26d681-6b4c-49f1-95d7-08d15725625e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c45ab48-f452-4ca6-9f26-0dc08bc08ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adba6f43-b8cc-47a8-89d8-7038722846dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35705ea4-41a6-4c8a-924a-2006ff16464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "295d8bbb-0510-4789-8fb2-70e58b2f7007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe5b41f-7521-4522-8858-860ab4a01a22",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30347b39-fa6f-46c7-bfd7-5eb6c7f0746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e46d4f-f98e-4ca3-9619-44783e98158e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818b0789-58ba-465f-bd59-fa5116f050fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b400975-81ea-4cb8-a0e1-0a5be51b124b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca5a38f-b8b5-4d05-99d5-ee3a60067672",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dad9fc7-9fa6-45fd-bc6c-b2d507aaa485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64b8b43-641d-45f0-b859-96f3bb3440c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e77abcd-961e-445e-ab29-5ee1e2ebfbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c68a2dc5-87a0-4ad8-9064-4140b2c70517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b06526-f997-40a9-964b-424419430437",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44087d45-8e64-4078-8e07-35e83bc2d28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622d9173-4fd6-4f03-ac7d-2780905f75d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eca3239-e4b6-46ef-b2fe-5920e23d7d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e782873-def2-4366-ad58-b5cafa00c3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35be880-6b82-4a8d-a87e-995272d45ab2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d01698-79c5-43e6-879f-4c198538a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e00c736-6cd8-4377-b87d-a63a4980d161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6659b22-7e93-4de8-a88d-715c4ee50398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b84f95c7-f0dd-4d33-8b57-714070c844f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af371cb4-cb50-4e97-b99e-9b944f0d9c1c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b6ebcb-9873-461d-9823-481ec0c12d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a18842-d3ce-457b-8ae8-b8d72017819a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab80d649-4f04-49d2-8f93-454a7bb2d3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0b20cc-e85d-4272-a566-643514ddee11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af52806-62b7-4d25-8eea-dbd556182427",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d76f66-023e-4a83-a07f-97d592c5d164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8dd518-7c82-4845-b8b0-0a03282651f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0632914-c033-407e-8ac7-20347523c2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7828d2f1-3673-4e6f-b3db-40f4f3730c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158908cc-fa26-4ab9-8af6-98409446a241",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e55a687-2bd3-4102-85f0-f25b2d93d2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39c44a2-9aaa-466e-883f-d2a607dcc68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18db0a94-765b-4ecf-8ce9-02f1f2dd691d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4941d47-2341-4a31-b3af-ce4f236ca065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9935b501-3f37-4158-b707-dcc256310f2b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2b36a4-b5e2-414a-92f8-d7b01fea1edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c29efe3-a90b-418d-b66c-833601e55ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c60b15-ba70-4ade-8d10-679884fed104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a172db40-0a31-4115-8a66-e136d8a7cda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12549e9b-491d-4cbb-8988-5157116eb52a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f563cd4-bfeb-4254-9999-215d48eb18fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d3ff17-df5f-4cc7-a4b9-29401bc24399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cadea1c-fc41-4832-8d55-b7abae812bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0615e3f5-1ca1-478a-b932-2d2e86cd0224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea01927-432b-416b-b33a-009cab1b68d3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eb2fe7-ec94-4510-a249-10034ddd121c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8baca2a-fe59-4ebd-9dfd-188ada2fb028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df10158e-46a8-4d8d-86c5-b652e5ad288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36846d97-cf45-4483-8afa-a767dda1e4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d23f29-7b23-4edb-b4f9-185396b5c049",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524901f8-be2e-4ca8-a72f-4a1fc2309ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9951257-1565-405b-96f1-6052830522b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0f7b60-2528-4b6b-a1a0-e33883f6b729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32348633-44d7-4f0b-95c3-a5c5803aab12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5093d78d-41e5-49d1-927d-fc0b0fed89f6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d362246-8f91-48c9-a63f-3850608b88be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296b37ba-6c83-441d-9852-1e86bf69fb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d075faf9-79e4-4a6a-b611-2cd1b0164c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0cd052-c954-4985-a54e-1db97d74a515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9690cfcb-7dbc-4603-a7e8-4cfaa1dff054",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f7a422-685f-4da3-8261-15fa84ac0f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d241ce22-7c3b-40e4-aa79-519a8d33b23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2803a5ae-9966-4eac-87c9-7872586a2b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1aef6411-236a-459f-9980-fe2860223cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8897949b-8cd6-40c4-a047-e9064258f586",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752f3eff-de3d-4cde-b31a-db5647b8b403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea933c1c-59a4-46b1-98c9-6dee2df7d2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71d9749-4e91-41ee-9fb4-06d6d7074bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb894fc-d989-464c-a120-7f5bf6518af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670ff8f3-bc4d-4083-8d24-dd7386503d96",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1033e6f3-da15-4028-95ee-6ddb2fe7d552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9320925a-a1d4-4e02-a687-60898f7de99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ab4cda-4301-45d1-8e8c-c8a905cf96f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c952c210-7369-48e6-b8ce-f01969dd6ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6644f58c-8a81-4e24-9919-615e0513a7e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1415bbd7-6e74-456a-b51e-c7be3b7e9b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d25f738-0080-460f-a872-deb61ab54007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a0a8f9-88d1-47d5-ac18-9c171944b8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ea1bce-3f81-409d-b410-cdc46c6a67f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19855c2-ab0f-4f13-91ad-7fe6288c6fff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ef85ea-3874-4086-8fab-45349343a206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec748b2-ceb5-40c7-a7fc-45334ebce51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b46583-ea22-4d9a-a097-3285c6daf41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae36911-cf87-4b01-8ade-d21fe6133ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a19af9-995d-4dd5-a198-8c4069e903bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45bf081-d51c-4063-9e11-db07f069669a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c69d766-591a-47ed-a947-2e9a843e0eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144f2dfc-d004-4561-9a54-2be5e47f6645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09615979-c791-42c3-8982-7dc02b6d8b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c054a53-7b98-459b-891f-fac8e1fd1d2d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6e59f8-df28-419b-a8ed-49730805b3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5811ec0-9222-413d-a8b4-f0403adae089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e8bfec-9443-4c6c-925f-b64444dfd2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6863d47-e29a-4700-9360-25a0845a9c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24bbff4-4eb2-413d-a1df-0ad2e8dfeb67",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9ab232-a363-47a6-a000-193871fc114d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14386a03-434e-4a5f-abec-288832df9b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c17d3e-2dc4-49eb-a4f0-bae0243172cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf39f55-f748-4235-9bd2-be836cb69a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb480ace-94d2-4cfb-9d14-19a411d6153b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0044fe-a49c-4819-8d4d-a250532c0aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8384ce36-e7b1-4b4a-9d5b-49e0de7c8b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e279552f-3bb5-446d-9888-ebb39efb6c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff39b20-e5db-4abc-b7b8-7023142d4313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12eddbd-4747-4b68-b4d9-5e35ab817729",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c409ee69-647b-4ebb-853f-f87721fa1119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5bc39b-651e-4507-9f2e-3c6a31cb0617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863a9355-3996-4a36-8744-9edf40d722cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6924e5-3522-4e79-9ad2-fee18ef2c13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea897c8-94ba-4088-986b-9014e3d17b3c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e899b637-54fa-4b5a-9cdc-13f80bf38d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ab24d8-9d0a-411a-8d88-ca5bb38eacc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecd656e-4745-4619-97bb-8a4dee3817b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb58b5f-aec3-433d-bc64-92fe0f3211f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac37c0df-b818-48fb-b789-edf8d9f2683f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983d8472-c8a3-4172-b712-2b85faceb86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ddb91f-a9d1-4c80-9263-cd511e0c2fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9eef42f-62f1-4920-b5d7-7149be5ef014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "715def81-e2cd-4a28-8b96-e10f7dcfdad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec57f5a5-ed62-4878-a404-6b5ba06b502a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244e5740-1cf1-4a01-9caf-2857641ffd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da800dd-e397-4f90-bab4-c03e649a5527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b40762-674b-4dd4-bc5f-d6b85244a718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f09168a-7663-437b-be09-bfaa1988ba32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd555545-bbbf-487f-b9ed-2e7d7f5b49b4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f89996-a734-43c6-84f4-eb3d78cc4010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79df0fa0-9892-4e6f-8ad3-78ae2f41f584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7d6136-9ecf-4682-a526-cc0ba90c1e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31269571-148f-4dc0-97f4-f85c1e4ce095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134f7832-dcdd-4e5c-8085-319738dcc20c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f72d1cf-ed43-4aab-bf6e-7242e566b93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c67b097-e404-4362-9205-2f26121bc191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777f1d1f-93f4-4b03-b7de-bbe5f0448888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84a0f21-7577-4586-9a62-9fd246f098e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f3cb3f-48e4-41de-b4d7-10c6ba630e6d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022e7dcc-c715-49b1-a931-0c36e855fe90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80b8466-1c85-43dc-b30f-9195251d5166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98216667-0ae0-4379-b3e7-9d665e1d7337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa29e4f-e2f2-4f39-ae0e-c65dc873397a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5eab381-851b-402e-9915-3ae1498c78a5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34df9768-efd6-43f9-a378-92a8608ee823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35d6dc9-778c-4231-8a71-88907e4b49e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1299dda-8289-4b51-abc4-d7720168457c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c61da4cd-8523-4c21-897d-b86cae7a022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834abeef-2bdc-4b56-84da-44a87a306877",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee6087c-8527-47c8-a7ff-6824bfdc45ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74235f1-7644-4551-a541-93bb7623866f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6976291-dc61-49d1-be32-b71a66f14d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b78b65e9-f336-4de6-850c-41eb0fd9d4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eb2f64-e223-4480-8907-42e41b82cb14",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd66d28-9933-4d62-aaa4-521d8d03a387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c28f007-24a3-4b81-9b92-caf053f828b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eab2da1-752a-47b5-98f5-4fc425574c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3147f78b-365e-4c07-9536-a1d46f5535f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f346e1b-7d95-4141-b0de-eb10d18d34bf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af7ea7f-f338-4241-810c-045093060d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1302463a-e8fa-4a7d-9687-f7165d4d8bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43316aa4-6687-4187-b050-1e5aa8544097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1e4dd2-8d73-441a-9223-8c18b2d0a50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e032cf-de11-42c8-ae46-d22f34839209",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d580a96-f785-4a0b-9f38-b974959e96f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a0c0db-18a2-4232-848d-9063886c5495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38e3b3d-92eb-4a91-bd76-851a93f35f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d9721c-617a-47ab-a214-64d5ff0881eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fb5d7f-cc64-4cc2-8472-c21374ff4553",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8f4b79-eac0-4deb-aa73-ab6c8e02fdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef31181-db67-40f7-89c3-14b44c520842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1a43f3-3684-4df5-9be4-1c19403992cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87d59fc0-290a-402b-a69e-0daf20fa6edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2da5127-a18b-4477-a0cb-b2f8e4e80555",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8ecde3-31cd-4e51-8dfb-990bf483bb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17bf208-10f8-4e2c-8d40-ddd0e15680fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a72b06-e650-4e61-8e96-559bcefaf431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c50b24-7395-4bdf-91e3-052402b6a76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619d6148-82c8-4b3a-9eab-a7dee118777a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43d7f8d-e26c-4a18-a414-aafa2342f59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14811667-789a-4ba3-b0a3-b0ad25f2b381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad3a341-5d22-4b21-a2f2-7216f26194eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d375537a-a612-422b-bc1b-eea796e8e7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956225cf-3ea9-495f-8c54-9702984f73f2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ef46eb-395c-4ac0-90a7-606c9b461e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47fa22be-39f2-4521-8b4d-27a05ea18385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d30984-f839-4973-bafd-495c0057e45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9589cc80-c8ca-412d-ad91-58839f2bd033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6a5b06-e4c9-4a87-b289-d0bd122d9922",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076c8a19-1cc5-44ae-8e58-1b636c1db107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c98853-cae9-4fee-b7e5-6dd8c035b3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d4f417-f20b-4b81-89c9-a6a03a5070a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d8e3b8-3b8c-496a-813e-b533878c55eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd353e4-921a-4dea-89ee-30ddf59cc25d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3048fb-f984-48b7-b7a8-2ea6ac1b0540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8e5902-dd45-4358-a9cc-63d27fa020ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19c8299-b972-4775-b42c-e4256bf4c713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd02568d-b0a2-4c9c-b800-25464df453ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d70436-5a0a-4e8b-a516-41582b959b01",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f974500-24fb-4891-b3db-9466c910c389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437308e4-ab96-46e8-bdd5-7e3da4460fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b818b20-1041-433b-8f25-43581c2e248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2863f0f6-6786-4f9a-bc86-9be0ae32ae6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ced93d-92f5-40ab-81e1-237c4f85f4c9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d0f603-320f-4d6e-ab61-fbcb748feeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8566dc2-9e16-41da-b423-9633269ae7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e77c7c-32f7-491f-ac31-e78b5a57306f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85611120-8f9e-46f7-9460-768b47b9cdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f18fa79-04d3-4364-962d-a35587a684f8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16226edb-b326-4b38-804e-e978ad58bb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7afc9e6-5503-418b-b0ce-dd82a4c7cc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f0db8c-ef03-418d-9389-9997bd4a4d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a72005c1-40b6-4a37-8cd9-4bd582ba658a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd161f89-9fbb-4ded-8e0c-6a10d5a97936",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7738c2ef-db9b-4eef-813b-64b3ac1f6748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b9901b-777c-4f06-a1a4-60f345a6b887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91698073-695c-4199-9354-7d4c51a6b8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03a2c5b1-6dba-4ab0-bf58-c694e7d2cc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8602ff86-d2da-4d4a-8136-ff1d55bfc50e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c546ca5-e33d-4fdf-91ec-6524a485c8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f661230d-8c62-4f4c-acd9-91c639208339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663235ec-edc9-4fa4-862c-29bab4194b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b43ea965-4c0e-4891-8db4-030cd683314f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c8cc13-c150-49ec-8ad0-81e52806c097",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f67d4be-ad6b-4cf6-b0ce-f797d846b992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d93414-2350-405d-878b-0eb04b80762e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c0fa79-8f75-4c2a-8bf2-ef7d8c73f595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4815f761-d357-4cdf-a9d3-0cd44ef6a402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2d8172-4999-4969-b9ad-29a95358d41b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd496c2b-3122-47e3-86a0-d1dbc1f61605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dd16d1-2a62-4842-9973-d935d089f25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147aa72d-0c51-4547-9223-e2be973c1b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ca833d-7b1a-4aa1-acff-2ce9ec7681ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b897c5a4-23cd-4077-8c65-79474c19ea58",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3909c1d-3cfc-4d4b-851c-5e09206bf0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db555816-8d18-470c-8729-f2119a3ef1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b562f6-c3af-4e94-8371-53b5f47c037f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e49c8f2a-9a57-4d05-a6de-5056ade25a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db9cb92-9cb9-4008-b89c-8fedd3afa781",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b2225e-ab19-4e0c-84cb-4200162d35b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd79483-ba80-4976-aa6f-d832bb297362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87ecca8-beb9-4bab-8b8d-02c83085b5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d793b0bf-d5a7-4fad-91fa-03d285b292de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601b34d2-41be-45a1-a563-b00751bd8be6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ceb25b-fc16-45ec-bc98-a0e20f2a0136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "82373810-c080-4f03-a2b4-1c4afbf8f9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8821122b-69f7-41fd-8d1c-bb5d868db607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "703bdfe4-8c39-4552-af3b-f8d12d47a201"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df9dfdc3-65dc-46b5-8fba-8e9557734d82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f0afdab-cae6-423c-ad64-05ff1971b8b9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1bb4c7-ebf3-49d1-8bf3-cb2a42e773ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f25a14e-5829-4583-9495-9c261e5bf5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b560a6ce-8fc1-448d-8cff-c67fab2e5507",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dee6c53-2db4-4bce-8e47-fe7b5ed10202"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb428307-5d1c-48e1-9497-4156ecbdce18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5e29620-ae69-4f45-b267-f58bc8954591"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52f50f04-2d13-413e-9360-c3eae39f258c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4241aa1a-b0a6-4a9c-ae66-bf0b7442bf06"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68f01f7d-6845-4d5b-94b2-ca9e447489e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "095b302d-418f-4dee-9661-fbc3c5221d6a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a4167f3-4b81-4b1c-b158-8b15b647c734",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "030c62c9-f958-4199-9b16-e593a59be882"
                }
              }
            ]
          },
          {
            "id": "0e222159-401c-45bc-bdf5-0eda6f86d510",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b38b6fb-5dc9-4787-a04e-1a064bd26282",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "19d80130-580e-49c6-a35b-44ce4049e786",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2d86c6-4f6d-468b-9ca3-7ce953324e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5e7dbe9c-3de9-4a72-bd97-2c5d5b572a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642ed077-99c4-4966-a206-ddf28f1b639b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ceaaff-a21e-44b3-a770-14d6e2094d38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95e67bb5-bc4c-436d-ba71-5491e5f4d192",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab4d6583-2f11-4f00-96cc-ce73f246bf7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "443053e8-96c8-49e6-bf5b-32d37f7db578"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5674c674-e617-488c-aa82-1229d7b4cdec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed3e883e-9e4f-4f28-9861-906c0e6e757d"
                    }
                  }
                ]
              },
              {
                "id": "5757a41f-9530-4558-bc0f-57479b3c2c86",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04a19dae-9880-408e-ba95-085579853f43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34472984-9359-45b3-a3da-be3f684b4db7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3dba25d-d28b-4d2b-a007-b17ebf71d4a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6bcab916-30f3-4ef7-b68c-cefa9393c63e"
                    }
                  }
                ]
              },
              {
                "id": "a32e0568-fa66-4002-a88a-4507c83ee143",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66e3ec07-874e-4008-b214-46b4c873ccd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79ae457e-d06c-449e-952b-b2bd49a4d3f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84f6a05c-a3a3-44cb-813e-c39c0ed9207e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec92610b-5a87-40e3-8236-34cdb4044d66"
                    }
                  }
                ]
              },
              {
                "id": "df7c9f7c-fc01-4642-a2d0-e6015066d4f3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0535af53-be16-463a-b007-737bf2219d84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ca1ad4a-cc47-4d57-b765-089e23550eca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b42d83f1-2643-4d47-942a-d2e6d25f5d25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a0270523-63f8-4714-9cfd-0754f551ed20"
                    }
                  }
                ]
              },
              {
                "id": "eabfe9c4-96ea-406a-be11-f145efe1b3cb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66660d76-61a6-4032-b7c1-2cb0f4f207f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17af336d-b20a-49c3-84a2-d85a7321e97b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "187f4b04-1ecd-46d1-97f8-d88e9c4142e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a3e05476-89c0-4a7d-9718-8ef8c4cddaa5"
                    }
                  }
                ]
              },
              {
                "id": "97412085-fc2c-435d-aedc-d7590185e65c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ac10c63-cf39-4499-84f6-aadc9e4e30b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75dc97b5-8cba-422a-ab0a-bf472b490028"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a244328-f869-4975-b880-d8bfcc468000",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c86be106-e22d-425c-b4e8-aa43324fba83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6445e0db-4d72-4c27-9703-c42c1aa6296b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b161afd3-9187-4586-97a8-b9ad06b52727"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b052efef-1ea9-40ea-b05b-e66865133395",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04f2a721-9287-417b-881a-be607368d238"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "832e12cb-a389-4580-a1af-115e8366249a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2aa976ed-9bb1-4fa6-9336-04d7c342445d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ccc699a-34f8-448c-aa34-399a65ab8cb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5076449-b13d-4fa9-ad11-265dfb979cf3"
            }
          }
        ]
      },
      {
        "id": "b73ae7a7-3588-4489-8b98-92178f75cf15",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e3064c55-ac28-43c0-8712-9d5e7d8aec98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74d8a7d7-f90a-45f4-a9fc-f830090b6192",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6764fa81-6a61-4842-b794-f793b82bb036",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22010f4-b037-41bc-bb1e-a379d521683d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a3119d-4d7f-4b27-8eae-6f3d71bc63a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f70071f-91c0-4028-8a4e-e7a9e1e0fc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "627fbbd9-7ad8-4015-9bdb-86d328d6757e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc2f3ce-3c4b-4fa8-aaf0-e06b39703a02",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa488043-7bb0-4845-a829-b1e0ed35a90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578b3684-c313-46eb-9995-796f49b48167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df2ba53-5430-48a6-8429-40e40c652bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17bb4495-c841-4ae9-8036-0517d1fd073d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0ec776-4650-4e35-80ef-aef3f22e061b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e7fd9a-0c2a-4334-8741-e83c8cf25275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bec3577-19fd-4497-8466-ec0cd9b8f270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ecd8ea-dce1-41bd-8668-52f0d315c30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca88bc6-f3a0-4acc-ad70-b9200cb6b1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee41ec5-58a3-4a44-a776-67f5ad55dcc2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26e2a2c-8bdc-41a5-9ec0-f0c9a886a375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03b8d7c-6a39-49bc-bd9a-17c9c368ee76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3a27b8-7635-453c-86ad-4401db878354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af89631-e4a3-43ab-ae7f-bcc759cad223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c927fca6-2140-44a4-ba10-f5751cf7c270",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db9fdd8-47e0-4c3f-bc39-d8e84d0c4dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35731fb-fe34-47b0-afcf-56c3701a3f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ede9605-1e04-47b2-b613-4411d3eb5b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8103a16c-b3ab-4b1a-aff4-a90d82b177bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a546a2c-ab35-43a8-aed3-7cac6ad7ce70",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd69c46d-aafd-4b7d-9a01-278b4588ecb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85713ae-0eb3-4e3e-b2ba-f6807c7b7d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e2c661-49e5-42cc-a135-39407c8889e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c678df5-55e0-4fc5-8b0d-07e2e59e32e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd52de2-3b1b-426e-a9a4-70c53c079faa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fdb7d1-6b01-4ce0-8b61-e2a8ed0b2020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819ac11a-5d60-440b-bb0c-076214ccb6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0436aaa4-6278-4eb0-afa4-62315b804a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "529e835b-88b7-4668-9583-49b65f61022d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac29fec6-ee29-4aad-af14-ddb6f8b503a4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c594d3e-8639-4b9c-9348-cfb8feb9e991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6de97be-fc5a-4fc9-8481-07ff2ba7e17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b2ab38-7d07-4f18-b27a-85c911115e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff60e9c-17ad-4533-8e4f-34ae87ca461a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70c76c3-c4bc-49c8-b1c0-81eb0c8e608c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7387a6-abca-4721-abfe-dbc131971700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890100c1-558b-4245-a957-3af86ea48ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0633ee-b3b0-4a6f-987b-675cad89b08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1511d1d-2c4c-4ac5-a718-c2eb036f40f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea5b6ba-7cea-4372-8af0-90381342c285",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7e40d5-ac5d-4280-aee6-73186984adb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cdb2e4-f319-4261-9fd4-b81719293e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c96193-62a1-495f-98dc-2506379f8f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b2bf44-5c4d-4866-8e38-d7db94b11e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873b3857-e836-4427-90ee-6b1047861dbb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c979e689-5772-45d5-b545-e2a5bb03fecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375ba251-8c02-42b2-a56b-7552acd8e662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07462a87-8e36-437c-9ca9-80e3a4a37d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "16f7b73b-7595-4346-a728-86eb637df360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a43edd-14eb-43d0-9262-18a571ee81d9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076e7e52-7a16-4bc3-86bb-a7b7a3bb3ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83d9eb9-55b4-4eb0-8ebf-df9a1bb0e62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a2ea8b-ea8b-4a10-85f5-819f03002c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de9a504f-007e-4afd-9271-ec44fee9a91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b849f8-3902-4a65-b9c0-a58ad80f26c3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af15a5c-ae48-417c-9826-3a5309a035f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3991ba44-4836-47bc-a419-09d618aecbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03e99f1-70e8-4d4d-a993-d37a3e42e495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40adc388-30da-41fd-86e1-1ab54dd475b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc4120e-1409-4ff1-b4ee-0ccd911b0feb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48d8569-270f-4ddb-b619-671a7c43542b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6772b816-f1bd-4888-8f8a-18bc85abe1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dab5cc9-d2cb-40de-a9ad-15d82fc16874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee61bca0-2c93-4ea6-9e1d-a170c93482c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e330a35b-bfb7-49d8-b964-960ad9280f0d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963cf701-e706-465d-a206-503a4f4d191a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408eaf9b-8a50-48f4-83ae-c3505350a43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e745b-4a60-4a2e-a1f7-300e0b839dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5262f31-aa7d-4c02-b68d-4a4adbd4e231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3e8770-570e-436d-99da-cc539cedeae4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafac368-f09a-42d9-a250-84caffcfabb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5904803-2b78-45d7-84a4-824c40136bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284d4e6d-9fce-46b1-9a06-926faae357e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4c019a-cafc-4956-9645-fd5591ab1657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c4b531-d498-4da9-84c7-239019d30fa7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e990d6cc-675b-4daa-af32-9b2305b444f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8768fa11-c8ca-479f-a3a5-3307ee5b4815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0794eb0-052d-4e44-9239-914c58f2fc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "518d8189-17d7-4655-a1df-bf0a1c32ec04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cbfcac-d1d2-479e-99b7-1aa636384929",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2cf3dc-560f-498e-8422-bb2af171db1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46b1a75-74a5-49a0-b5fd-d8334e6e7cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070f8aa6-5748-4fa4-8fe1-b69f9d1377ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f48f803-2785-4444-a6e6-c5f62e0c27c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e1f415-26e4-40a0-a97e-3c54d4b24136",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0735ec-64c5-46ad-958b-5dcea52e1b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f6cb57-a785-4315-aded-e26b236c912d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16347591-72bf-4fe5-a6a7-4c07aa6ac862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c41eebe-6841-4d6d-9456-4a698be0d0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721d404d-2868-4523-8401-50b24ac8591a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb392e0-341f-41b1-9875-8e1b8258eb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70240cf2-45bb-4f60-bb90-786bc645c0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59449c55-b27a-4314-8dfb-9f5bfd3b44c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "043a0895-a519-4108-bffc-7cc18fbcf362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d039294-26e5-444a-81f1-92712720bb72",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c1932a-5154-4d23-b83f-5032f0d40c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f3c1c9-3ddc-42e2-8fbd-73d8955cbf10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b670c07-9173-48d3-9655-4fd2f77b78e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b88a99-95fd-4a17-a120-6154da862bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7b11dc-c849-4267-813d-00dda63aa977",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6f782e-83f4-4671-a984-cbad5897ebee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e70b86b-da6a-47db-8999-a75dae9673b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92a9ace-62ed-4a2e-aedc-04cba68c2fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19731b42-e82d-48c5-8d0a-8e3178f4a3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68040d4-8d37-4b99-af10-22dcc1327e99",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3142f5d-5445-46e2-aa50-6341223e844a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fbee41-9d35-4363-aa32-cadf641f90e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb753273-322d-4820-bd34-b196945ab045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e19d623-d1f2-4c1e-8b3a-a6d48e4e0098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8602f5-f923-48dd-b90c-4aa91fc24674",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31f649f-5850-4eb9-8ae9-11d1b4cf9412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faae3241-020e-4e70-aaa9-be2be3e2dc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcd3604-6308-47b7-9467-aa7f5a565f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "914192b3-8945-440d-a3a1-e96d4f25df44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abbd6c6-fafa-4c16-9dc9-3580b6abb3e2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d1f0b7-ad1b-4f3f-9169-9948f360ccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73857fa-ad80-435d-8f78-5609194965c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42cdfa6-7405-4538-b773-df95d74e8242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32137afd-3660-4353-a4ca-052fa4ca884e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8bdaf1-3a77-429d-8986-42d7c266e8b4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9800a14b-2c2a-486f-b139-696a8317e208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7d985c-8de5-4bbf-8c65-11a94fdfd519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1147038-2d43-415d-9ae1-18dffd29104f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fadeebc5-8680-4d9b-b4ea-7b3075ac9e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6731093b-6a77-41fb-b09c-bdfcb472127b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303b64ac-6546-4717-a6e8-77f19329810b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b53d15-5fdc-42b3-9345-113d6e2054fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2da95e-a8dd-41e9-8358-a9373c920059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0274f51-a532-4c88-a481-d2728abb9105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9963365-c15b-4917-b9ec-b35007c81f82",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f20a998-e300-4d14-b2db-52ee3335c202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66623222-b811-4abd-a0d8-8e47a728143c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8835e11-8c4f-44d0-89f9-e333256230a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b65eb20b-2e79-4dbf-b489-b672772df2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75626876-fd93-48dc-974e-7e682ea914f3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c453d801-0940-4cbf-a98e-d20694dc7514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0597a3e9-484a-48f1-8ca3-cbc5c7e175c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963ca6d8-3b29-40fe-9a51-f67600abfdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d557f2-6570-4cbc-85a3-09c532f53374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206fc01c-d9d2-41b5-84e7-9029ce33dd48",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6a979e-93b7-4ea8-87d8-b1f697338003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287f0286-f5b9-43d3-baed-6354fe7632ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96976696-4ceb-41e5-a033-12ca54420ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8708bdfa-c5bd-443a-b534-597786f9bf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a1eec1-c829-456a-8d08-541a785705ee",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff31f3c-5be8-40dd-9998-5c531161085a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46d08ad-3b6f-4e9a-b282-f3d923a108c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4f662b-e7b9-4d16-870b-69cb3fc96c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a7ef80-90cd-4755-af5b-631aea611bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474932cf-f722-4f81-9589-92cef0578c26",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caca68c3-c51c-48e6-bc55-43819cc5f01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df874940-abae-4fa5-ac62-9ea29376a6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091f9828-5e34-4568-9262-344ff85ce773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fb0b3e-26b2-48ec-9246-d49516352fb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b36971de-f4bb-4ad6-832e-347152067f19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9bba332-c2c6-4933-8481-41287c2f2e65",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063b29e0-2e74-4a8c-9e6f-7addf3478a62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1000a8-73cf-4ef2-8c2c-91168c1f2de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f944b9-4254-4c26-9da2-b332b9d2f2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6723875-3c1e-47d8-982d-d69e966c15ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ff23fee-eafd-4246-b438-213833820f80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba655766-ca9d-42d0-85f9-25104d53128a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58e97d04-9c77-42ed-b981-458489cdbfa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32ea1e67-17c7-4708-a650-0f415f9b6680"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7691d86c-d04a-430d-bd40-42a0a999d380",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ffe3258-106a-41f4-8841-ecdb16c94def"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "030959e1-5782-49d1-aff6-ad66c28e479d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c1ddc42-5892-493c-b670-82b4656007b6"
            }
          }
        ]
      },
      {
        "id": "31d276dc-bee4-4ece-82d5-a64da312a87e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6f029944-b955-4c7e-b043-4acc99190c4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19fab3aa-35ed-45ab-a46c-a12d8349b584",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93061813-13c8-4258-941b-0e76f3e2da17",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643faec4-4d27-4208-9cb0-87deeda4dd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3ac4dd-1d75-4e19-9c94-777ec1e661e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbe92e5-e343-49b0-8863-ac33fc40dbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "63716f5a-8230-4262-b111-cbf110bcd049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264ad698-96e8-4f11-adea-90b633248867",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0346d477-5d4d-4b43-871f-4ad228553d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edb9de7-a8c9-4582-93f1-7b5d589d5168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf2cf00-8d3c-4837-8488-9d4263a24af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3bb228-6e6c-4371-8920-f8b0aee12f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171321fd-0cbe-4df9-a6a9-0c6ca81bf1a0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73109494-2391-42b4-9c34-e0d4f9471287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5661eaa6-f631-409f-b613-a61530b1ba91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0560c3-d3a2-4d0d-834e-03ba70e9e0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27bf92f3-b1b0-42fb-b7ad-aba2381b50b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af6cb78-3b3f-43dc-8e23-c95733985822",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7842ab45-e0b5-482e-97e2-5566d9ba7677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81f10a9-816d-4340-8901-2df388ab98de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cafd1b-b391-4851-9f80-abee022c10ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7ab73a-d2b2-453b-a614-6fc73e59d061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee759e5b-4d85-42a5-965b-c975ed710bc6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da9eccc-8afa-4ba8-bd61-6e401a70fbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca63ba13-747f-4de5-867b-66ee16ff9720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0387da91-1c22-456b-b587-5c80d708dc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f77ac9-2687-40a4-a5eb-2d5f446e2d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d27274-0556-4e9a-b023-11c0e1bd63ee",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e80a60-affc-42ad-a11a-2e8cc518cd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f30064-606a-43e4-a9d1-2864c71bf946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f2c975-0668-4da8-b523-d3b8bd7925b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c022df44-6a35-401d-a910-946082b54c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51d5641-75e2-4203-a55c-3b56f317cfb2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ae5ebe-12b8-4e05-b747-afb62662274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e33bba-53b3-4b4c-96c2-f94cf4ed7f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc65f1af-18f8-4632-832b-4b098b6f592e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec64c76-5938-4dc9-8522-0fe471f0f143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4407db60-37ea-430b-8732-8db3ab933a53",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51ce280-100e-4695-99d6-3719c1b591be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2d802f-731f-4a26-87ac-729dfc5c457c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bf5e78-3133-4e95-b8c4-27aa33393708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15e14f78-b7a2-46a4-a0ce-2513f931df75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d0ab2a-57bc-4105-b740-fda756d24fd1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44359ace-ec12-4bd9-ba55-cd6d4b88fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1aae7e9-5483-4d24-88f7-29f9ee1978fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4310ba-2f24-49fb-b328-8518fb25bfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f74c313-d50f-4584-bd39-715ec3fc0432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b06c9b-aeda-42f1-9674-fe3582f23807",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c07473-d994-4b3c-a834-439d6410253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a30c66-56ba-4f64-8381-e3bf4d1b2973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b726cd94-c80c-451a-abdf-f76dfadb3230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d995659-23e9-4994-a2d5-c208f5e25804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abe5625-de81-4877-9a1d-293182b63004",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8901c3d-633c-41d0-a449-0cf87136cbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bc8149-392a-48c9-a518-e6f5098b6321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfecbd8-b412-4cb7-ba3d-340ac685febf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b22d5884-6809-4774-b6b2-569f4fca6263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa25ea7b-fed5-411d-82d2-1f37940ad15e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cb01ce-b077-4429-aa2b-060db6bb893e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643a9188-1b76-44d8-bcdf-b7b1ce31252e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e2b77e-62b1-4949-8e2f-2a646b7b75aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d483c5b9-c443-4046-81de-cdc91bd360c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f99d87-d9e6-4e02-8856-b87d28022076",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0677df94-f623-433a-a7ae-6619dcc3ef42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ce39e7-2f07-4292-9eab-c0c8e6c4cec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2539240-a91a-47c3-9fca-4769b67345a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd26ccd1-a387-41ab-a0f9-859ad5fc7771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091dd61f-f822-41b5-9bc9-96f5978db643",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7c2fa6-9fea-48d4-847c-6f359467f272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ef00a4-9c3e-40e6-b1a1-678eafb1c5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8356424a-c5bc-4848-b1ae-9076f6d7bfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "93106780-baf9-483a-a747-fe92c5c5a19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f68f5f2-c6f8-445d-b00c-c18ba09670af",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b437769-aa6b-4918-befb-13811ba7aa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04aaec59-b7e0-4144-b76a-a631f6b868a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f842eac-950d-4fb7-b055-6cf3ec93e0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f44a958b-d3fa-4c49-b010-0e54941c0afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40335358-a3b8-45be-8872-a609b4324d94",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eca3f0-6708-4a32-8104-5d63659760e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de70e9d1-7628-40c6-b69e-f352c38d5923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4ef6c6-abab-46a0-9ed0-bbded7b3de92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1732896e-b49d-4852-8af1-a336251014f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd62d09-0dd9-4b9c-8e7d-473dbad515c8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7076a9-1bb0-4a1c-8399-9cb72986c8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f38c2a6-879e-4249-b5e4-46b66d8f2cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57036eeb-1904-4061-9f53-3cc16015322d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5598a8-7470-4075-acb7-de9dd21a561d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecdecab-2c10-4505-bf0b-bee231aaaa4e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7162b62-cae4-4717-ae86-34fb4d03ac41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b621d8-0a14-42ee-b0af-f18c61391977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21b391c-a613-410b-9456-ad064f22e799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4318e49f-5492-4365-99ec-83c1f37f16ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb691f5-fb84-4156-93a1-b6ef90603363",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec085a08-39eb-47a5-a8fb-47dc483df21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b975940-36af-4d8c-8e9a-05393bd795f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19aacce-6edd-4895-a54a-e967df895b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d59b0b4c-58b3-456b-ac78-194f6e0f8ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e479f8af-59c1-48ba-922b-e5489a8d8f7b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b128ec73-0dc9-44da-8f3a-866d0b4eabd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e99754-6650-4618-86d6-d2faa9e2a891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c71773-3e7c-4770-9d88-379453ba3fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "373fd0e5-9686-48bc-ab75-ef9059d3c55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9b2a4c-b01f-4ef5-8786-c1ca128f2de3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50be6081-f501-4eca-bf80-ac95540b238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1743a7f-75e8-4e5d-9e36-c1be275635ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf7e656-30ee-48e1-9d99-c57fd35334d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d47c427-cacb-4580-acfd-953b1842d07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0c1045-74af-4520-af6b-ad4cd4146a80",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0f94e4-9dc7-4616-a595-3d359b11d4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283e5df8-0b64-4fc4-b63a-b83666d79ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49302c05-2edc-448d-8530-dcdefbd3a6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb7a84f-cd2f-4d45-9794-3799672b4bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3addc1-d06a-490d-8048-61cc8f43fc22",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28ecd23-943d-40fc-8770-930f7761072d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025207ef-3d3c-4986-b8f0-5c64d6d0b0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6447feb4-8be2-4df2-9247-0d97450eeada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06934fb-51c4-4961-9465-3ccbf834f785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c048ac-bb02-4b18-b723-47c372239af5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdbd820-5730-4d76-b594-d84f46e4b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4389e955-c7f6-4f5e-894d-9c07a679429e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad42af75-3855-46c5-a020-11a0a31702b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1006f71c-f453-40e8-ae98-149a8b696d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0615e94-8263-4581-b0d1-f6b63d4f2ba2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf2bdee-1c0d-4a1d-9dc0-b42393e73f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9ab46f-89ae-4592-9c37-1dbcfce3d1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd67d260-44d1-487c-bc46-c6f6ed63926e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5a0f0a-14e0-4a24-8f2b-7504f2d6d08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901416de-26e7-43ac-b8b3-8a783b0632f2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24ba252-72c9-46f6-a87e-537146b5871a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dadca1c-5e89-4d89-ad74-9057beca6d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b8a9d9-370f-4b71-860f-997314249922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "079964f6-2940-41d7-8a30-cc7426ce380a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5306fec2-b26b-4102-8ae7-5e70f68db013",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c234327d-db65-4ac5-b80d-4fa164cc704a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9cb1f2-a0b2-4556-9071-f4d9d7219e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41e1e8f-4aa9-404b-99fe-631454e71d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d935183-860c-4123-b22d-372574bad74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a7b096-c259-4919-b425-6af6de75aea5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4992dc-4c12-4d93-97ca-3ec66a745225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c6e1d8-0ba0-45af-83ec-72a3e4856fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3980cd2e-2c87-4ef1-8b13-15fc7e26fe7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d8770c-0961-4ac9-98c0-cc2b16e6f586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd5fbec-3340-499b-b48c-eb875a90a047",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ab5766-d6b1-48cd-91f4-b4b190d60c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd81d01-7920-454e-b6b3-6e8340cfe35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87be310-1f81-4066-b77d-39427b6166ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7f7330-b572-4678-ad65-44783819f759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8e39c4-b766-42e4-874d-a4bda95de7ea",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f074a9-9820-49df-a9b0-bae76f9d90f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ec37fa-1acd-4bb4-a2b4-6af852f570b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2229b7eb-1217-4b73-b8a7-e826bd288b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a49e8969-5dde-4eb8-a57b-ed1d1a0621d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcedc32-bfd7-4180-888c-975cac30f99d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a36797-8153-42e6-8123-ec3971c2f557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b8d244-bc26-41e2-9520-8f6d908d7e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1a58a2-a606-4058-a4f8-ec460f2453eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2641fd5-703a-4cad-82b7-d9b40ae5b8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1eb690-bb8e-468d-ba42-c13982d1dbcd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d682f122-b3ce-4df9-8e0f-7205620c9fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644a7324-a0d4-400b-8145-07c10ac09361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbe3f3b-565b-4548-b8aa-f17b585929fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef71e343-bcfc-4772-8789-5c0933c5ba85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b19a429-f4a6-4bda-8864-81c9bc64f0e0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27aff5a5-d0f2-4912-971f-b4aaf8147a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4131fab7-fbad-4127-862d-73cbb27f2e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a7a3b6-1ff4-40f0-871e-b603120f603e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "058c81fe-43a1-4785-baef-07859df7fb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0176d693-f752-4973-a455-2346c6526914",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6eba622-f670-4d9c-be7d-5baf8724c5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aafcd03-b235-490d-b13f-051987fd61ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daebc97e-95be-40cc-a86b-12986c86ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26efc92c-91fd-40d9-a77a-c3e899b6ec2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0313123c-5db2-433d-8fcb-c5d9efaa7d6f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b44a10-9378-4d11-895c-c4fc1bd8f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec090ae-b791-4fb3-b64d-5fccf5d23a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e14990-2191-4c15-8b11-e3133b89ddc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6c823e-f0b4-4434-94c6-9a49bff7f8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7ba282-266a-4e1f-8068-abf1d869b8ec",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228352e8-fb57-4c28-a6e5-0b901ce8ba3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf119f0a-c78f-45f3-8817-d6dc3d9de9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f63239-3ceb-4255-a9e2-b227d8301410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87a3a7b4-5a45-4cfe-a69a-df19d32533bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f548a344-cf33-49ae-bf4a-e263e46acac7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871c9bba-1a01-4ed9-b304-ca10020c6b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53d3ab3-9e2d-43dc-8f71-49936f9f63c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effd0300-b26e-4764-af40-f210118673a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c77fb09e-eb59-4a9e-b52a-70fea2e73c0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6e3bde2-3836-46a3-afe9-a172f652fd2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d8e8bc5-ac1c-4944-857c-673a516befd9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f11048-af5e-4c92-a04f-11610084dbc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "25a8bf4d-9b79-4671-a523-7071c697140d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7c84a3-5ceb-4976-8ace-10ea58299fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd9c0fd2-7a59-48a4-9443-e48628bfcaa2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eda16097-fdcd-4cfd-b48c-f356b82f5d80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "876bdeff-7efd-43f3-a19e-76bc44b0330e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fd2802f-a094-4499-8a71-8415c47ad55b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40975dfb-b3c2-4471-966d-f30409702981"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7192e4bf-4fd7-4db3-8cd5-58b8390534ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7908e6d-07ec-462d-bae4-01b472cb7db2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fa2e8b4-8609-41da-b0e7-3a3228c269f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a49f4a03-f522-43c9-a6b0-9a7b650d3279"
            }
          }
        ]
      },
      {
        "id": "60407502-8c1f-4200-94b4-f16fb5643a85",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "39de0d95-efe5-4188-afe6-be729b013ac8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2636dacc-ecb3-46da-9efc-774fb30edb1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "521df0ed-c6f2-49b9-853c-8a7c26f46c2d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e737fbe-8042-482b-88f7-25b7755c77fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b409116b-f944-4eb9-8fae-7c91c9633bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec201527-44ea-4133-a28c-60e04a047107",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7747075-461e-48d8-92bb-4cfad6322d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbecc57b-2ab7-4092-b152-26271450f77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4f7766-54a3-4e72-b942-15b7aae03227",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dbb084-cad7-49ad-af83-09957be266e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b713a89-aa47-46f5-93d2-0481fe09ccbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590e8c65-bb30-4e8c-96af-d860ed572099",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffdf2bd-88d4-489c-91f7-1fa7381175f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f959d7-bf17-4b82-917c-20e5ba9f1a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5574c5-a097-4940-bcb3-29e7815280ae",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537a0e54-8cdc-44f4-b82a-c37e6c4b8d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd6b267-8c7f-489b-9f5d-7f4bb3a5c69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3fa504-68fe-4d83-a917-1b7969981506",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460a00cc-e341-4518-8d16-047ea1b3698f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3281f459-765b-483d-ad34-abf95c94c8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669b7e35-1b39-4f36-86f2-c7980c175e82",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215b3389-2d14-4be3-bf50-45bc74467c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e90b74c-3254-4b86-b2ba-2a9d57050700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0edf52c-fc14-498f-90cc-ef62aef148c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1105907d-3cf5-487a-b9a4-3ccb32e3e6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3d2b8f-7908-4ee5-b38e-5c99b1aa3038",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ca6c4e-017b-42b5-a747-2fc0aea2e0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7519810-eae0-4311-94b5-764da640f262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2357fcb-e994-46dd-94d8-543aa63884df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2caa1044-07f0-4db1-ae33-4454b2a75a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025eaa16-ab2b-401b-b38c-8f0d29d22e45",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc62b3f-bfce-462d-bf5a-3d77b7027b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c260886e-6854-46e7-8222-ce0a9344a7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2c02ba-b626-4722-9877-e8452c2835fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0830a9c8-603a-4111-948a-772af6c026d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409f91d3-7e32-4fc1-ab50-162e707b9f38",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98244d8-0ef8-4032-a275-570b153eb0f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d872f8e4-a4c5-4448-8641-cd35aec2255c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d3e397-68cf-4be7-95de-94fe5d05e3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a060792e-a704-4acd-a0e8-5ab8d2923795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3edefd-47af-4d6f-817c-bd482d561668",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc371cf5-296b-4aff-84e9-bc35e0199b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ad305b-c5d9-4827-9630-b20d9fdb798a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ffe9b5-3b48-4b3f-9eb9-3cbebf1170ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fec3cae-1f42-4824-a319-05589394ce5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b0d15c-8fbe-4935-b13b-0bb53ca3a6ec",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5308556-f636-4885-b0e9-dbf4204c5ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981b990e-b068-4099-9ea4-5f9a4f5435e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f4c0ad-2c6a-45bd-99f4-2b6d237a79ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b00f5ca-5f6b-4ec6-b2c0-956183ae1dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49bc207-d0a1-4a7f-98ff-0b8fef999f93",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f34b18-2722-4e1a-8084-e4ccc839fef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8c18b8-f543-4869-939d-36b94558c32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2608e9af-858c-42af-93bb-216bc4839c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28808d9-e10e-4f5c-aa67-30a7edfb890f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40559df2-b1ad-42ed-be5e-c062821a31a6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c660702c-9440-4156-9a6a-95e47b3df66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0f817e4-264d-4dc2-ae5c-dc4c8a6cbad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e4b56a-72f0-4506-9a32-c0a4b66b32bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecb6106-e4a2-4775-b7ec-241a398993b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489a2e26-4b68-4f12-a29a-541a2316d503",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14cd770-bdfa-469f-8070-04dc01d06772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96044aaa-e1a4-45db-941d-f5fcab9dd47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ea6a21-7263-4c25-9f1d-614b671ad766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aafe620-be1d-4a98-864a-c46477ca0bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f896bd0-1bd2-4f23-a9c4-6bcc7c0183d4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6d5dd7-2996-436e-aaa6-6f5f2c0db269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f8589d-14de-4342-8d6c-dfb892a00f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517c8324-23e6-4a99-8802-947c87d5739b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf6e65d-aae9-4b4f-9ec1-605ec3941320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4465a15a-3be2-4438-af63-aebdcfb05497",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82890c0-585d-4c31-b5d6-f6f62db5c678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43379301-b0f3-415d-8eb2-059306b72095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23de2ef-e153-4c78-ab1b-31965b6b73cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7e4722-6739-42c6-ae1d-4a92ed281af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b371d1f3-6609-4d58-a020-d52fef0d64cb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a7a24e-e641-4e39-8f78-490fda6ac3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9183278-d2a9-49f7-9bb1-3821c9c20202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2516726d-aa0d-4931-a219-2f623c878932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797fef36-bc1b-4957-aa22-b58585d9db40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a226f6-d9d2-43e9-ad12-31367825e5c8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20d70f2-ba86-4ef7-bbf3-61b9e893a881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fae8b4-9a89-48c3-bd11-f22beab1f410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703721c2-59f1-4ef8-bd55-e893374c4eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92d19cb-5dad-4d2e-959d-335b3db8b506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eaee77-11a3-40fa-9571-1f7d031983f2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fe67b2-e245-4cfe-86be-cf8051de8ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd1ae56-3c6b-45bd-bdc2-3f5073a95361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c3f18a-f658-4ae7-8ce6-97e857356ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cb619a-9ff2-455d-99f3-033907438186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fa12d3-7eff-4c1a-9c1d-3c1bbcd7dc39",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd1985c-b451-4591-a7f4-988c0878ba8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9c5088-d9d2-4a0c-996e-c31a92cc8043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10db6374-3997-428f-95d6-b15d70f8aa18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2390b28-8dd4-46e8-b00c-27a36c2e6189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e11452-da60-4a71-9eb6-a6fcf8c086d2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc15e259-47d2-4e88-830c-a4b04bbcd43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26486ff6-94a9-494c-a8a5-854bafd75eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ecaa8b-f479-4692-90f4-5672965bb944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d975b994-f323-4717-886c-20d93e4990dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a205ed65-9829-475e-9aab-70e9a0157122",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4341841e-134a-4b45-a9c6-e312f0521578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1779f192-6942-416f-955f-1be1aa69dbaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a486a2-0395-4551-aae6-2252dd3fee0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72425786-0528-4471-b274-a9fe137e35f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d892369-6657-44fb-9009-ff3e9acb63c0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0926d25-0bf7-4604-a60f-c84276c2b277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d2259da-5de2-4dfa-a0dc-46390fb470f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb460121-188a-4c13-81c0-1b58736c4d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6daa24d6-d7cd-425c-b8d4-e78bb920decf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cf515a-568e-49e1-a063-b9ecd0feb3f5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c26e41-86bd-42e5-a920-4cf2b0013ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d67fce-64e9-4472-9634-bad82a302c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0452e38-3112-4ebd-9499-49638f473d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b1bfd7-fd90-49d3-9b35-b4d3d7c0c951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13a5ad3-b6db-4707-a595-c03f3d7470d0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0b53a4-5b5d-4c27-9296-5a332a8a88cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb22c1c9-24b5-42e4-a097-55f97dfd7d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ec63b2-8a99-4e81-a479-900124772164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc691e3-3333-4535-af69-aff56390a8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0b9012-09bc-4bd3-9f95-f405f417b340",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3373a54-a03b-4fc7-b029-cce6769fa43a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4353f90b-5068-4812-b709-2fd7ecacb839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf5f9ec-3be6-4b33-a1de-85100cc39e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ff806c-9143-4d53-bc72-bd4ffde58180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2392d484-787c-41ad-a724-725e2a6ecb33",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f2ec42-838a-45a0-816d-6d5eba7a0917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd8acb0-048c-44ff-9dea-ee104ec3b586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456ec6e0-05c4-4188-946c-46b739d99cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da67cfa0-799b-4515-99db-79c343a6d5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4fc8aa-1b12-4164-b949-27da74c13efe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c266f73-a29c-4482-80db-a190f4c1430e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a20132b-43d4-4550-a611-fee6fa6b0690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbda6cbc-80e8-465a-9ba8-3d0f1777ce89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eaed0fa-825d-4759-ac64-21f6e9116d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970dd8d8-0dfa-4401-923a-c338c591f230",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33868c79-96e6-420e-91d9-ff7f22ceba51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a89916-c7d2-4f2d-bf0a-81b8bed7b70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80eeb02-4079-447d-a069-5f1d19ae5a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2219201d-53db-442f-ba5e-271936acd93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8830cca5-961d-408e-a6a9-14c98f04f2a5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d2b979-8c81-425c-ac0e-10119b210d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eef53a2-4870-4d98-a695-ba0b0140d779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2fa6f7-c38d-4e64-96ed-3e52fffd7036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db27cac-ab56-4fb0-abdd-0229044b41d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02241153-9578-40f8-a79d-e4e8ebec5124",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba07057-8186-4357-a9a4-27b90753bf14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee6d824-f934-43c6-be70-7d11364d0609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018d5e26-d19f-4168-b450-202f0da832df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94342ea-b195-4706-9828-a69793b31ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6526c9de-9b36-4301-8f33-353949e6e938",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec6508a-0e17-4410-ac30-f4ad92252bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e502ef-7988-480f-8d1d-df86b0efd296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93a33fe-4de6-4563-b4a6-02caf8d2f92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748e07f8-a4e2-4653-8a4b-73c614d0ae0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cc295b-1993-44af-94c1-015865fe428f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388a4a48-9b2c-4c2c-98a4-4e7769f562ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fa3ab9c-c3ae-43d0-9f1a-6289fe563fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1320ee8-e9e2-42e0-a35e-8749a67f21b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d51bb1-89fd-4410-8083-3785b4bfac83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a6552c-e84a-4ca9-8596-1f9700008216",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86919590-c403-4582-8689-e75b7603a2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaef5025-549b-471d-b9bf-4edfd2de9e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855824cf-42d4-40db-bad1-0ca5a93dcdc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962753bf-fe77-4677-b70f-37cf3b140db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a609e75e-3a22-421e-a5f0-ac12688cb453",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802b0781-47c7-4fb3-83c1-f1886c9981b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad27a691-3819-44d8-a071-061e8265e7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda1a1b6-0b6a-41c2-95d8-ea2798e9bc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6c340d-1ae7-47bf-8bc7-e54030beb1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2cd2b6-4e45-431e-800e-fd5221a0999b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7c316e-c7ae-4580-a4ba-85483c9d242b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebbb44a-bbb2-4c23-9b72-2cf9d4885dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118aa597-7511-4437-9410-40e3fc62191d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56cfd44-18d1-49c7-8ead-e32c926c9102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e7a382-a9fc-44c8-ba06-0ed065e777f3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d84727f-a1c2-494e-8c33-5b8e5189d13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b391f1-6feb-4075-9d24-e78c484eb81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0170c22f-8d26-4b47-a728-f98c9f1079cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890e7f06-ecc6-4a4b-a57d-4ad5ad82601f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8892d156-3885-4bfd-a3d8-79f7f1223c68",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ed8fee-6d99-4d3e-ad3c-96ac99f332f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dece77-4e5a-4524-adaa-c430e3d54cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc006df-969e-4145-8d99-ced69ad550f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17406441-58eb-4ddb-b609-9b7054629c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da439cbe-1c42-4f16-ade2-2e8951aaec4d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bc9e8c-c8f7-4fd3-a90f-c9dab6f00908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36306915-4f3a-442f-8696-3d92804a2471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea68406-f1df-4c75-a7cf-78a6260deb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3f94ce-6e31-4452-b5ee-cb00193eef67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12170913-7861-44ff-abe3-b84ea309d87d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a44e588-a3b2-4fb3-ab39-83284a9595c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b73b618-a081-49a3-a494-24edb12471ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7323840b-7895-4622-b468-ee5f83de167c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e1d2ff-ebda-49ca-bc47-cd25fa8e4c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d2e02d-e050-472b-bec0-cf36ccd2f563",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96382039-599b-46f3-8d1e-98cfdcedb28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc92486c-204b-4f89-be90-69fbe3f66ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c53762b-3343-4bdc-9982-1ff3b31c9722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31908eac-47bd-4ffe-81ae-1941d5d955e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa10a41e-4d5a-4c35-9db1-1a2830d9b192",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72ffc95-7877-4ed6-b7ef-6a36281cf3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be43d8a-1f53-40ce-80b8-e3969400e19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910ddc1c-f3c0-4543-a50f-f3483afb9d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8621c5c5-5c02-4c14-8ec5-fd6ef178a8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a1a780-9117-4f2d-84d9-7d3bd65456cc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bab5e8c-d346-4e46-9f9e-260cbc9b89dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf215504-b717-43b8-b788-9ac718989048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204db735-815a-4264-a3d6-c9abc5cf58d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d14ad5-7085-479e-93f3-0985a02d83a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5a48f3-4933-4e22-91a6-5cd2fad90035",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42272eed-66c0-40ca-a4a2-7187b1353e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42bd1a2-8b4c-4a24-8126-31e350c84d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c29142-137d-48c9-ba2f-48d198f86d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cb1f8e-0600-4cc1-b329-ee32f5399921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d3616a-f975-4675-8606-098cd7b5732b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1f0838-2266-43ed-a68c-99073f3923dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a57ebc-d970-4c3d-9762-629b4609ba91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b354c1-0f48-48eb-adfa-685c0d02f004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c8f95f-028b-43b5-923a-42bdfc385f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810aec4d-6df4-432c-9e65-79dac5d0bfe6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb33859-aefd-4744-bb20-767653c9a423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f03805-8a0d-4f11-bb33-4f3e99701841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25f45ab-3cbc-464e-a47d-79f4c901d7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222d3a16-b15f-45ee-b873-e2732b1d9373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c92172-a289-46e0-8be1-a1ddae20b4aa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8446fd1c-fa16-4640-bffb-2849df2e3c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c903432-8191-4fe7-a031-248b46b02075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17e03c2-b837-4212-ba7c-bff53ed3f2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0ab696-41fb-4214-9f79-713cbaae1819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993a6f6a-c8cf-4445-af48-dbdd71017aa2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8655d3f-ade6-451f-a571-4a0e2b1244b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1babf2-27b6-4c36-ac19-a8c73d798937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01550d1d-bb41-4b1a-96f3-9d523c9bd98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e4c65e-1002-4f85-b2e2-d5bdb2ca3913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d6b7ce-b0b6-4274-b479-3bfe921efbb5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c226578f-e7c9-41f5-8cee-fa341750431b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0fe179-973d-4e5c-8eee-dc96dd2ae49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "856e1b23-12fc-482d-bfc3-d864dc9f4c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbf5b8f-abb2-49a4-a002-262d0600aff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959cd386-96b9-4922-8c90-58030348d6b3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7307b14b-56eb-4c20-ad5e-312e844d5edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445ba7da-2218-4717-9cd9-8d701c08c050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87b1654-9a26-430f-a8a8-ab65d6ec77f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee27321-a446-42fa-9298-a4a47328ba7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ed8115-518f-45b9-b8be-3f7e6bf4ea97",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d779ad-8afd-48ac-b8b3-94f79fa66406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339af847-f664-4a20-80b2-58a6dd392138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df97d17-11fa-4f45-8bc7-80927f26e5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5597d1a2-44f5-49e0-8aca-60d81c399445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f3e776-0a23-4473-8f16-9b8d3dcda309",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc242e84-9850-4a75-b2cf-f505157db149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da40275-8757-482d-a5f7-d65300dd4f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e2125d-8de1-4a1d-a8c5-ed5eedcef269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec3b8c7-6270-4cfb-a5de-364c3789da91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9899c637-14bd-42ca-880e-9191e2728786",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9981e568-e471-4342-b7dc-b3ccabeb63ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0276af3-3c54-471b-937e-cb558f9b8f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b2598e-6492-44f5-af40-c8eb8117771c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7200b75e-0f0f-4dc1-9338-8fcd7d87d280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e168fa99-286b-4322-95fc-b39a27b32a51",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486433d5-ff43-4f44-a3c9-dce2c95d2e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b801e9b-5d39-4486-a2b8-0658bd7ba897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7bb0d5-5db9-418b-b16e-0b152f3d7180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd098a4-5098-412e-b550-df3b57cba499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf6e3b5-51b2-424a-9013-4d7a3a64e990",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cc055a-e642-43be-bf8a-88c4c294b0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6971b990-6880-4384-8d3b-6c2ce5601b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d97634-5b08-4a5a-8d5a-5e86814d99c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f672b7-84b8-4812-84cb-39e0a4bfd84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c88d925-3d9a-4c87-b34b-669635213c74",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8e3d55-82f8-4962-9561-f7eb737a8f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d5cd8f-43b6-4fb4-ba92-30ccd4969082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3a2912-649c-4944-b681-c588588675a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899afbdd-c83d-4ee9-a167-6187b5fcc984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cba5add-2b13-41a6-973e-ed8f1c5042ed",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e5e231-c5a3-4a12-b494-456bb07dd8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2762fb79-f5e7-492f-8f80-f3f4693cf024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f534171c-d37f-4c52-b092-f53ec109e117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71003d8-830e-4aca-859c-bc130da76de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db78386d-ecb2-4ddd-a24f-876d28702783",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5384e7-c154-4a0b-9a59-621dfe25d4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02f7432-9292-45b8-90b3-aaee10e2e39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fbd4b3-521a-4510-aad4-f6d1540610e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a9173e-7522-4ce8-8b42-579a5bcc7af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07760f1a-20eb-4846-8009-3d642c42e08c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cbb180-a2ec-4b49-a737-59b89f27b20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5c79e3-43d9-4a1c-a530-41459520eef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad2e96d-a04f-4260-b399-ef060d7229e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f312daa-2e6b-44b7-b220-78a9618b0567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a62557-0ba5-44e2-a39d-ea47ccacc3f6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eff515-8991-45e6-9ada-06ac8522ceeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786db69c-6735-48d7-8d96-f1700c8b4c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbfb53a-4fa7-479a-a1dd-20ec25f0bd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378e16ef-ea07-4a81-bd9f-0b3203c3d947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c76e41-14be-4ff3-990f-92364490be3e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14748d19-2e38-4465-b188-b21b1f84f080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b529bde-1299-4ae5-8cae-b5dbb4b5ea73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4e2a5f-3c56-4481-8859-b4e0b8263794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c0b324-97a9-48f6-8720-f85ae68398f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b64deb-b0c6-4aa2-8cfb-8d2c0aa5433b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6af7ba-7383-48ae-8bf1-33edfa6fae9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea313aa2-82dc-43be-9708-c34141687537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41723a8-cd66-411e-a65f-ac2a4bd28e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8d05c7-452d-4694-9cb2-d04ab80ba118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35456fd-9658-49d9-87b6-fb3e68ce03f3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080e1908-cff5-402a-8d73-dfa23a96c25c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d41eeee-bdef-4e55-9238-640146342b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26d22a2-5398-4b8e-a67d-94d31d95e71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a48523-491b-40c8-863d-9c4a830b66ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e264d0-2168-48fe-8f45-249a1684cd94",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9696307-56e7-42ec-8933-e74a567e8465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac1118bb-6c4b-470a-a842-f8da30ef3be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c634a76e-bf74-475b-a410-df59627c7b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e556571e-183e-459c-a2a8-9bbc314b50fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4135efdc-b85d-435d-ab1c-afbe39d0e84a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c3a5c-8ac3-4681-9a79-ee5956792877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b791169a-8c0f-4369-985f-f68aeae121d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f175ddd0-4e03-4277-aa64-236d7bd23172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9766b69-3c37-4455-9ff9-87e68e1bffe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4198837b-4e1f-4998-8814-bb73e9c60642",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94697c28-1b08-4c86-8c34-432d84e38c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0075f7b-9288-42da-9b14-8eee59b59b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6933d052-fa26-462e-9c61-b8cb730663f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c20faa-af92-47f5-a1b5-a059e2081f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498aca0b-1f28-463d-a8ed-1dfac33da36f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64b0aeb-db3f-4529-98f9-6bb00e327809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60cc9909-9d3d-4112-ada9-c4c9762b27bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed3bf9f-947f-40ee-ba1d-c88b527dd3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dc738f-dbff-4756-ab8f-5a8457be357f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7f7438-7b5c-4639-bb92-9caa5197744c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dacd50-fe74-4952-9f09-f127273cd59e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5675f5f-2511-4355-b052-35c95fc0a86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81dba2e-3685-41b2-b0dc-cd64a1a40554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b0f70e-2254-42ad-a509-57ca9007bf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eeb91b-f611-4197-b962-218204157f42",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a51f543-dab5-4052-8533-505ec937190e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5adc1eab-76f9-44bd-a1ed-307a9cda2dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fdfd10-33ae-4c58-b4d0-a7a708001081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a61bb3-befa-432e-930b-6cd28399503d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41c291d-094d-4a80-996f-b8cfceff74cd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40033b8-210b-44d3-88d1-c8293851c9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e5ce88-1a41-4f81-b8c0-5f20d772821e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cd6f4c-f89e-43d2-9fee-915eee0a4aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648da085-c051-4c89-a9c1-918d46082ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0c85a8-2652-4473-a206-97bd1e5afbdd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987ab4ef-1e22-4b09-91c5-234059cfe658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3493b0-d909-4054-8297-4245507bdbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac8ef88-a663-405c-bed6-945eb1d7bf27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acfd3fe-8fd9-4efa-bcfa-750b848fd6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640e7a21-8799-4666-a4db-f43e433a8a90",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02f6b46-0a5c-4728-986e-18d48f616b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9c30a3b-effc-44ba-999c-fb02dd954674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a4b02f-2f07-4f29-96b3-726eeff3bf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1db0950-3cfb-4ea1-bb48-b9b7ac729429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50712de7-a1e0-4270-8dad-c13cea0fe349",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7584058-3ce2-4141-8d87-5a725ae33c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85752f2a-091b-4192-93a9-e97fd3f73daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f429511a-dcd1-473b-a0b8-ec718516eba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db5425d-1291-41b6-9f42-21ba4d9387f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5083011b-a9c5-43d0-b43c-36bec8c2282c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b470c94d-a084-4d86-8d42-3e95dc46c311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283b52c0-2e7e-45d4-abc3-2d10749c41ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f27d5a-6fe8-4070-b057-d416cbfd7d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b734e7-5b44-4e37-a318-02911e12c1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcecbc1-61c3-45df-aa03-6e2b11d64a94",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd97b114-3495-4e80-8179-c6c63de383df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e252dd4b-1c13-4955-b85c-e723a8e7b906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b586a476-864b-43f4-8550-5f950c4d8962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e63a203-1c0b-4d04-96f5-1a6c95b5f76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5409866a-72f8-42ee-890b-b83bed0d869e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5db0835-1ee4-4a57-8d98-31624af744ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58c4bc5c-911d-47c5-8066-b188f4d04eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a881879b-812f-44af-ae05-3e1c57453bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89de98fb-3ed0-4ab6-9bc6-08e10042a059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6be755-34fc-402e-bf34-3440f84c68d3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0cc699-71ca-4a44-8eec-eefc9644ec41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b363810-a9f5-4341-acaa-a482e7cc05a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50a1e8d-54b2-450a-8529-cee9436d5be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f01227-10d2-4f57-8d92-55307d564770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c497214-7c00-48ce-a96a-b5d5a84efc1a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd23fe2-2e4e-4ea9-b653-637f4efac771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d937a6ec-d51d-4931-9452-83af411c3ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504fb322-912e-4caf-aee9-c461413d7240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0106d2-f977-4048-beb5-3d359b6ce18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fb7ba4-c067-4345-b568-3d3e71b6f074",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b37eab-c033-4acd-bb4a-35f2802cff7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4277dfa1-183b-4b8e-bc78-30e5c06f8925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512ae028-db1d-480c-82a2-f54895b29ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5afb7c7-9fc0-4b19-9cf5-976befcbfa6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8269f81d-a66e-4dd1-b844-348a73f96239",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcaf305-ec79-47da-bc72-a81abf9bf31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c72f8f8-19bf-4105-a4d3-2513188f782e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe4e36a-45c2-4bf5-b890-474499a4c61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298fd8b1-40c8-4fec-a62c-0e2e16686919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce06e9c-3628-4ed3-8db9-7f416eefdb71",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec5df59-8df6-445f-8a07-c2767c38118f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b11353e-b3a7-4392-b184-4ffb93ad0170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bade31-2b5b-4dd8-a482-dfd07f2cca66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b1eaff-74e9-465a-8375-5d198c0fb9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71c5b50-3ce9-4194-a910-a591ef47454f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c4525e-c52f-4894-be57-dd6ada4c615e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb99a6f-2606-4c5f-a278-90de27e2c7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a61da7b-24f0-40cc-b51b-bd80b1832373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d53bf5-7c6c-4092-b693-403cab314dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a0e58d-fbad-49fc-b199-437ccf23dab1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3178f09-2e10-4e79-bf68-2a9de18198dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c31df82f-d5bc-4970-bd6f-3ca502bd73e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2d29b6-7d10-45ae-9a45-17f24efb382f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2c250c-8d1a-4365-b545-472835f94664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1591483-8517-40a2-9e8d-b3d585ac98d0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be917a18-4852-4e42-ac94-aea94a033b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b211cc-c720-4e8b-9b8c-8c6627969e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00c6b8f-01dc-43a8-9fff-084261a1b40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172628ec-2a83-4f2e-9458-6a66517d05cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be133bfc-da83-4c19-8f84-b00fd3090f84",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfeb9d5-9d6f-491e-a337-b5ba942b062e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c482c323-5a58-4657-8497-0b41b354fdcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4deca4b6-d145-4ab2-b891-5b68ec42b7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a26b22-c746-4314-90fa-871b79c96c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd06b47-ad6f-4933-806e-0ceb406db298",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9575c0d4-9ec3-4b92-84fd-2aea45fccaaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69fa24ee-a573-4a24-a152-7ceb2ccf089c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874517ed-60d2-41e0-af5e-9ac6d7f6005b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e920fb0d-63ac-4cd7-84f8-03131f467d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317999bf-b87d-4da8-a13d-109d0c03c464",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda70884-692d-494c-a545-f7a187356ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9e45981-37e6-4902-b9c8-46ee5c9b9798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170e1000-d02f-47f2-9dbc-5d05e4623c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba4314b-1c13-4712-81f9-8c6b6f989a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f20d89-9af5-4b23-80a9-327e262a4480",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b6521e-7dd2-4ae5-88f4-8e5252677e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f98b38-2bca-4af8-806d-c4bf019090d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2ab5d8-9c28-47c0-9ab0-29dc8beb6f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4970045f-eb07-4283-8b15-21689a5c14e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f22154-96a9-477e-b38e-a89b9124d2d9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7958ec26-2304-4e61-9f1e-2b8e38010522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406a6cac-943d-4f9d-b126-c54a4a8432a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9d99a4-1667-4cf2-80cf-e59800ebc7b6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb7308f-26ae-43dc-9ca2-1fe779430ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cc0eb7-80e5-4e45-97b5-78c6137e8c2d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b069e3b9-6d66-4339-8149-4789d92b5b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3896c999-bec8-4caa-877f-3b99a0fdd7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedcbfec-a532-466c-b96a-5fdc2a8cb255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec38b259-3006-4c7f-99a0-9b4ed25c6b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeee2f76-3a99-4ec0-b927-dcefc9036cad",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caeb466-eab0-469e-82ba-416a4bd63111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0061ca36-18a6-49e9-89bd-310088b802ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b4d9e4-2818-4222-a635-2ef7152c8cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8b2002-f2eb-4c8f-bfbd-67b295601b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8512685-fd75-4598-ae28-efa3a0760155",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8db614-7b19-4320-a8eb-55cc0d544cfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d218eb-0f40-4bf3-9fe3-a3a1ff77a5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2c6a39-98d8-47c1-a516-a47565b7654e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822a07a9-e6e9-45ca-8197-5e648ac316d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df80f576-5808-45f7-a283-f13e2053af4a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1b41bc-015b-4b01-8938-b07f734aebca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d255aeb9-a584-431b-b596-eae13fcc7e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636c45b6-b638-4955-9537-2c2e0f3d097e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a6ec8e-c7be-48e0-be3d-481d30548c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5403d49c-cc2a-40e6-801f-769b40f854a5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1774da-44c4-414e-ae9b-b1d9828c2912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4f3f85-9cba-445b-97d0-c50ebbfd5ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7064686e-326b-4f40-b7c7-cc6fa2925254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebab543-f726-4800-976b-ee5726ad2086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd75c03b-1898-40d5-b99b-65c9ae39be91",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2698ce8-9ed2-4490-b229-1207fe91eec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8676f727-ac94-49d1-a201-aab47896662c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435d370f-02ef-4fea-aca5-bcd2dc74f0b0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05fb7df-5e4e-4580-ad40-330eec2c0957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f389bb-bc09-4efc-b8ab-42a829a7239d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3309a5-2d8b-4bde-aa9a-1157809dd0ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7719584f-ed0a-4138-a8c6-4d190ef160e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469eff8c-c917-4898-9de4-2177697a4251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f1f89a-23ae-4e91-9c29-9fff0ab9363b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ab0c4be-9235-4e12-b62e-8a4b7cd592fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3debdbe-bb1a-45fc-8c61-19b36d650914"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "522c1a3f-ab09-4bcf-9da5-09ece0c18067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f214a27b-0fe4-4ef1-92af-88f84b5be0d9"
                    }
                  }
                ]
              },
              {
                "id": "864890c9-214c-46cb-9143-085f72825f09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6cde444-1610-4ed2-88d9-6b91fc5ba87a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64343c5-b99d-4608-ac68-afbea06ed71c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d509b552-d1b1-4672-bb55-93ae90c11285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643b5549-64d3-481e-bffb-931438ba95d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b545a356-40fe-479c-9e0f-764704269a00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c942bba-7498-4b70-b305-88692666227a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6ebe5e2-0272-4c2f-81af-7ebb10960230"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "145aab2b-47da-42aa-90d2-52a7c55b95d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26493237-99e5-4de7-924b-41342eb5eb2b"
                    }
                  }
                ]
              },
              {
                "id": "14743941-abd0-4183-aa7d-7886ef8e6b00",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "305447fb-fec3-47ac-8ad6-71b5f491a0ab",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7024d253-71be-47c7-b364-9875378817c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7a98a42c-7ae6-4900-8e86-11c9a0c3a524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90389dcd-974c-4af8-9ea0-5a4e16a32e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62bf7bf-c51d-41e1-8731-1eff1bdac2e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f7d095aa-7bb8-417b-ab2d-17861fb23a91",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e480fcdc-edee-4ba4-ac04-a80fde3ab9c7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1567b02b-f138-4c07-9123-ff4b712785ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95a78a3d-08d5-4d2d-9430-86fc383b3a85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a902a5e-ae1d-4f63-8e8a-b6e242f6141d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1939bf6-067c-4cc5-b93c-9c6a4a6ea5ac"
                    }
                  }
                ]
              },
              {
                "id": "537d7e3f-7520-4999-a9bb-8d651ef8f34a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ace678df-af7c-4244-83e3-2ba70bce3720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "87e60c7b-b0ee-40c8-bff3-26dfb536ce90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60ee0607-16e7-4b6e-9027-1416510d7b40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dda5d8ac-7f1f-4c26-b3d4-1f6d8bdfe05a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19d5a818-c22d-47f8-9899-45862ab11d8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b91de47-d553-4854-a3b5-7f4fcb2b8308"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50269140-4e35-4239-a0e4-cebf48220820",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dd0dbdd-406b-4f3c-bbcf-fbbbda575763"
            }
          }
        ]
      },
      {
        "id": "0c1ceb97-314e-4a4e-88fe-ae148d3b51e4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7a4ec1bf-6fed-46a4-a17b-7b9667eb10e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3cbe330-6d90-43ef-84b1-5f914e240f9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4abcf7b8-dc8f-42ab-9bec-d8469ba8edc6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d02eb1-a4da-4b94-99d5-ef12f39b8e44",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cd486da1-2885-4550-a3ac-10bfe9e5b539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dc686b-4807-4d9a-ad30-01f59b079676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ade2829-c1e1-4120-b3fc-658339f580aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b68ebaf-8265-47db-b806-3596b7b2cd55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9993d194-70b2-44e2-95f5-44525d1a8750"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b478c9b-a7f3-4dcb-a01c-cc8f90faf35c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25e29266-7ed9-45ae-9314-364790e1e380"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bb8fa0e-632b-48b0-bf96-065ad4e31191",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2517bb31-de20-4e15-94fa-22220eff10ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01006df6-f339-4d2e-a97f-ae00d3659ef3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca823413-ad0f-4574-abef-d4876eb62c25"
            }
          }
        ]
      },
      {
        "id": "13d3f6e9-fee8-4a41-a961-adddbb540c83",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4130c443-46c1-465b-8f73-81529279e6a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36550f7a-b0c2-4914-a685-239469d93219",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "380e07bb-5698-4347-9942-77552a53449c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b7db24-482d-4c40-a814-2522d2929a38",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9736bb20-7809-4977-ad75-5ffdefe237a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ab3af4-d835-44d4-8102-9c773c6e4e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f21fd2f2-733e-4487-b18d-9fd8ba6e1687"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6a53d2b-50a5-4e71-b885-4ab5880eac51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cc7e697-fa74-4337-97e9-31683c1f3f42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a7e238d-6a63-4f1e-8fda-351844b1d4ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4fb4fd6-90d8-46d3-87b2-958de25dae60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b233882-9c92-4c4d-bd0d-62eae3790e74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2601adcd-506e-47e9-888e-3db3ccae251b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afb00488-3214-4191-b161-7c973c759eec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45273c07-a93d-4a94-a3ab-ad0801d6adfa"
            }
          }
        ]
      },
      {
        "id": "52091a61-be34-4758-b936-95ba0b09caee",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4eb50fc3-3585-49f1-b378-9e6f6a07819b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "837ec5e1-881f-4b6f-995c-ee419684c2f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b9b2d5a-4f23-40b5-aba3-8247a0f03a20",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b419d10-e7ba-4430-8740-2bb4f0fb4239",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83e816eb-14dc-4928-b0a0-209fa5298f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071e2648-75af-437f-8420-02f0997130f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09caa493-a7ae-4912-87dd-3a01508e75c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e65f82c5-7308-461e-8976-3d2e298bfce6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bde27c76-d6ad-4e43-84e8-9b49607ff0be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e278efe7-5f84-42cb-85b4-c005a6ab59cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "934db0a4-d17a-4de6-8653-ae90efa88b50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3910fbc-f30d-4b7a-9c50-7b7e7c844e2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "04159b16-3603-480f-b9dc-895579eb5488"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9e04cc1-8dba-4b2f-9e3c-099c7df91ab0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95af8f96-5b2a-4ff9-ab2c-82bcb872b6da"
            }
          }
        ]
      },
      {
        "id": "4ad76328-e8eb-49ef-a112-d6161ce94234",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b1c4a32-8744-4b48-bc50-3f97ad3009fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e0d76db-3855-46a4-8d9d-64e52334fad0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f1b0b3ae-228a-4d45-863a-e31a445fa6b9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e7eaaca-d7ed-4d52-ae65-dd314c99fba7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52e22164-8cb8-405d-9463-97d1e040b918",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 10.947368421052632,
      "responseMin": 6,
      "responseMax": 255,
      "responseSd": 15.746033811537755,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707611825890,
      "completed": 1707611837889
    },
    "executions": [
      {
        "id": "3b5e2169-611c-4930-93f7-5dab448fae87",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9e99f079-ec95-4e16-9220-8016f0126801",
          "httpRequestId": "6d8e4b52-2ba6-4530-aeec-d9fc7bf4ab40"
        },
        "item": {
          "id": "3b5e2169-611c-4930-93f7-5dab448fae87",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "90e62b50-93ad-48f2-95b5-f363603c5676",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "9f48ba05-b38f-48b8-a0f2-14099e05ff38",
        "cursor": {
          "ref": "446c27bb-d31a-4283-bca5-48302b208219",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "826ebe26-aba2-449b-8ff7-b38f72798551"
        },
        "item": {
          "id": "9f48ba05-b38f-48b8-a0f2-14099e05ff38",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9c445f1c-32ba-467c-9b23-44b1e4a73ea9",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "efc97d28-1995-403d-8927-9095eaf1a69e",
        "cursor": {
          "ref": "fb69c404-028f-4f30-a201-9400acbf27b3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6eda2618-0c0a-40ca-99c0-837c8b6ae5e0"
        },
        "item": {
          "id": "efc97d28-1995-403d-8927-9095eaf1a69e",
          "name": "did_json"
        },
        "response": {
          "id": "b81b9bd1-d95f-49fa-8d1f-0f1df23c2db4",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891addca-ccf9-4901-9301-07edd809c574",
        "cursor": {
          "ref": "0f1efa5f-44df-4830-80c8-3c5019feca81",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab1eb221-e198-4e4a-a89f-b7df02c74255"
        },
        "item": {
          "id": "891addca-ccf9-4901-9301-07edd809c574",
          "name": "did:invalid"
        },
        "response": {
          "id": "577d5f09-e584-48ad-aafd-f978e88802b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891addca-ccf9-4901-9301-07edd809c574",
        "cursor": {
          "ref": "0f1efa5f-44df-4830-80c8-3c5019feca81",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab1eb221-e198-4e4a-a89f-b7df02c74255"
        },
        "item": {
          "id": "891addca-ccf9-4901-9301-07edd809c574",
          "name": "did:invalid"
        },
        "response": {
          "id": "577d5f09-e584-48ad-aafd-f978e88802b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed7edd5-2fa4-46cd-a12e-8c43af1429d1",
        "cursor": {
          "ref": "07ca7b44-753a-4d23-9950-ba930b10945f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9d58b5da-abbd-42bc-8a3a-d9f9f9db4beb"
        },
        "item": {
          "id": "aed7edd5-2fa4-46cd-a12e-8c43af1429d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "017b823f-5a74-4a79-95cc-be7e2f1f8520",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36f6e67-d358-4cbe-a8a6-189e01a88b95",
        "cursor": {
          "ref": "326c05c8-ff63-4b4e-ba4c-b6e0803e1d94",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5b6b7b1d-a973-4c5b-ae37-b1c620dfe060"
        },
        "item": {
          "id": "f36f6e67-d358-4cbe-a8a6-189e01a88b95",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "77e507ec-3e2d-40cf-9716-ce4f334fc2c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6822dd-446c-4d32-8288-f69ecf93871e",
        "cursor": {
          "ref": "fdab5bbe-c3fd-439f-bba7-d377dd6779f8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "62b6637d-2d62-402d-a7eb-bc3e3cec2287"
        },
        "item": {
          "id": "4f6822dd-446c-4d32-8288-f69ecf93871e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8c8d5c40-8315-4c9d-b450-e00666b17747",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff6b47a-a353-449f-89f7-264986d602d4",
        "cursor": {
          "ref": "1b9e7545-34c2-4c7d-bf12-eeb6256d7b70",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1996c27e-967c-487e-b667-a22fd57f688d"
        },
        "item": {
          "id": "aff6b47a-a353-449f-89f7-264986d602d4",
          "name": "identifiers"
        },
        "response": {
          "id": "bdaa47c4-56cc-443e-a704-621f0d75ca6b",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926b8e59-24a0-41dd-8d13-55255cb7fdb6",
        "cursor": {
          "ref": "e3c3f704-4f44-4629-9dd7-b7a02f7f5ea1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "19615a1d-bfae-4fd6-88d0-aeb945f66e60"
        },
        "item": {
          "id": "926b8e59-24a0-41dd-8d13-55255cb7fdb6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "59e3437e-a17b-4510-a14d-c7e852934471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9860d30-7ebe-4d29-840b-e971708761a6",
        "cursor": {
          "ref": "af2a1940-757f-483a-ae3c-2fff3f070264",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ac7a74fc-fda3-4832-b13e-75f1013dc6af"
        },
        "item": {
          "id": "b9860d30-7ebe-4d29-840b-e971708761a6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3358f74e-862e-48de-9232-785036415677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00aa9fd-676a-4ae5-9bf4-06d58167f42b",
        "cursor": {
          "ref": "17d13754-cbc2-4a77-91f0-57cedfd286f2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a80dfc7f-f10f-4d9e-ac6c-842a7740114c"
        },
        "item": {
          "id": "e00aa9fd-676a-4ae5-9bf4-06d58167f42b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "53c3e10c-15d5-43c0-a5b1-3f914abaf8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3852fc81-9a78-4047-afe7-fbcbd820311d",
        "cursor": {
          "ref": "1c9b31f3-e42c-4b84-bc80-12dc1fdf4f8f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f3cb98c1-cd28-4dfc-9137-a6d968883b58"
        },
        "item": {
          "id": "3852fc81-9a78-4047-afe7-fbcbd820311d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b1da4717-2481-42a4-8d59-d066fcd65d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e334d1-f2ef-4cf0-96bd-9db809b4183d",
        "cursor": {
          "ref": "9b98bcb1-972b-46f5-bf0e-3b44dd14db14",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2204f419-4867-4e4d-97f3-6890eb8dbcec"
        },
        "item": {
          "id": "a3e334d1-f2ef-4cf0-96bd-9db809b4183d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0384032f-c32a-4f50-abc3-7274a275f8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ae3755-ce63-416a-a50d-de4b3e9105cb",
        "cursor": {
          "ref": "86401a05-5213-427c-9a2d-2503d9196d59",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ab8e70f4-3361-469d-84b4-2e39ffe1678b"
        },
        "item": {
          "id": "d6ae3755-ce63-416a-a50d-de4b3e9105cb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "26c13ce1-5634-44b9-acf5-e8da877eecfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bb2938-b874-4eec-bc8f-40a663732156",
        "cursor": {
          "ref": "821e3afd-87a5-4b00-b8f8-c5a726db80eb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8f5ad8d7-7d0d-4650-b92e-f1afebaaa11a"
        },
        "item": {
          "id": "31bb2938-b874-4eec-bc8f-40a663732156",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c2647b7b-e7f1-4e65-ac1b-2ef7bafb1f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572bbb92-4436-41da-ae11-dcd9bcc62321",
        "cursor": {
          "ref": "b5b5eab2-b747-4d08-962d-3744b1730435",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ad273eb4-6c1f-489f-b722-9141a1183d78"
        },
        "item": {
          "id": "572bbb92-4436-41da-ae11-dcd9bcc62321",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2bd0a3e5-6174-4b23-a9ac-e9cab7cbe1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5dc27b-3bfc-44dc-abfd-e831ff152745",
        "cursor": {
          "ref": "dac9a475-c3a7-4df7-856b-e9ac5875d2d8",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b2b970ec-86c6-4cfc-a4a3-325c04482297"
        },
        "item": {
          "id": "bc5dc27b-3bfc-44dc-abfd-e831ff152745",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "31083cf6-1ab9-4aaa-8119-a5e62c34eeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161aae3e-70b6-4d27-b48f-ef7728e3b810",
        "cursor": {
          "ref": "b20ccd14-cd12-426f-bcf4-b7a0edf0f532",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8b19ce00-4d51-41e5-8875-c7876e6f6f90"
        },
        "item": {
          "id": "161aae3e-70b6-4d27-b48f-ef7728e3b810",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06357539-7700-421e-8237-ab92719e9ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4731352e-42d5-4f88-960c-0cd26e7dd938",
        "cursor": {
          "ref": "b218787f-427e-45a5-940e-b3ad0a537931",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7b29b9c4-b7a2-4cd2-924e-61d675143b16"
        },
        "item": {
          "id": "4731352e-42d5-4f88-960c-0cd26e7dd938",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9592f785-aea8-40b1-bcec-1bf1f4e6b675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be8765b-a35f-4897-b9aa-12b9a8f9c85a",
        "cursor": {
          "ref": "9f2d30bc-43e2-4e03-934a-fa4d6b29cbd8",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fb6d6799-fcf4-4c5a-81e2-80a5282184e1"
        },
        "item": {
          "id": "8be8765b-a35f-4897-b9aa-12b9a8f9c85a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ec5db985-4819-4c10-8fbd-66ef699c3417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2514795f-ebe0-4243-ad68-6d689a4809c3",
        "cursor": {
          "ref": "27ead1d5-cf23-49ef-9c94-500e5125a73b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6de13546-9a88-4f8c-b1e3-9dec862e8b10"
        },
        "item": {
          "id": "2514795f-ebe0-4243-ad68-6d689a4809c3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3a5b2295-66a4-4987-9c80-52bd75d477aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e72f597-3685-4453-92b7-c0547f57e54f",
        "cursor": {
          "ref": "8431eb15-4715-4750-bca6-639eadeea809",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e960272a-220f-42b0-ba36-be5dd40f5126"
        },
        "item": {
          "id": "4e72f597-3685-4453-92b7-c0547f57e54f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cb131037-27f5-4f44-96ef-112aff5d6d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b4461b-d922-4d81-8a7f-8db25d756d1c",
        "cursor": {
          "ref": "0d101d04-ed9d-4909-baa6-dd1889424216",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "85eadb5d-81d5-4535-bb07-49920f03fc5f"
        },
        "item": {
          "id": "36b4461b-d922-4d81-8a7f-8db25d756d1c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0f991547-86aa-42c5-b13e-b64c4aa40456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f97794-6d23-4754-85e5-fb1a1aa6cb25",
        "cursor": {
          "ref": "b81c8331-2294-4a42-bb28-1aa346f03bde",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "43b97126-e800-45c3-b389-1624a706e294"
        },
        "item": {
          "id": "c2f97794-6d23-4754-85e5-fb1a1aa6cb25",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9755ccbc-0666-434f-83c5-4e92d0157755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df2c840-d2d0-47d2-bb14-720f9a7a806d",
        "cursor": {
          "ref": "928c8000-64ab-4cb0-a647-eed681dceec1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "24166229-7b76-4c8c-b0bb-2121e61f3a4c"
        },
        "item": {
          "id": "3df2c840-d2d0-47d2-bb14-720f9a7a806d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "022106af-93dc-4325-ac23-090a05e6f680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78270bc1-1edf-4878-b766-7b9406fde5bb",
        "cursor": {
          "ref": "f4ddf514-ed53-42ae-913f-a01a0728ead1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "60c6c61c-770a-470b-8438-a37b391a0f14"
        },
        "item": {
          "id": "78270bc1-1edf-4878-b766-7b9406fde5bb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5f8b8eb9-eea4-4304-80f7-9f50d469f53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7c479b-49d7-4b65-ae48-4c56a750d957",
        "cursor": {
          "ref": "0da5e7f2-eb1e-424b-8b96-70abfe3c05db",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "26a3086d-f59e-4290-8413-39eb45ff781f"
        },
        "item": {
          "id": "3c7c479b-49d7-4b65-ae48-4c56a750d957",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ee3f38db-bd8b-437b-8459-1b61e8eeeaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3971b62c-ec1f-4490-822d-554755069b9b",
        "cursor": {
          "ref": "b3664b3f-9dac-4007-b59e-b9d2488573ef",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8d03233a-1146-4cc2-94f1-628879519b3d"
        },
        "item": {
          "id": "3971b62c-ec1f-4490-822d-554755069b9b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c74eeb00-feca-41cd-8403-b19bb4654dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6f2e71-5ea2-4555-bd36-afcedcf2b254",
        "cursor": {
          "ref": "1b23d5bc-ecaf-4efb-82f6-776a91770503",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8dec6959-eab0-4bb3-8f83-77d2fdcae013"
        },
        "item": {
          "id": "8e6f2e71-5ea2-4555-bd36-afcedcf2b254",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1ffd95de-c0e9-480c-9175-1acf884455c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e895ea40-fdfd-41a0-aac6-4c6c543a573e",
        "cursor": {
          "ref": "d21852a4-8692-4519-8854-c3e9475bccd8",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7b224c93-887f-4cea-81b6-6c29115a0897"
        },
        "item": {
          "id": "e895ea40-fdfd-41a0-aac6-4c6c543a573e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f58ac45f-0ce3-41a1-b8d1-298a60e4766a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d907babf-b926-4210-a9e2-29486cf8549d",
        "cursor": {
          "ref": "8e370e56-cca6-4ea2-8c0c-7a4cb1998169",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d773a118-f625-48aa-8859-26343e6950ac"
        },
        "item": {
          "id": "d907babf-b926-4210-a9e2-29486cf8549d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "50e8ca27-1240-47f5-93ce-7d9ce07cf1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48104116-cfab-448b-9b27-a1358285a3ba",
        "cursor": {
          "ref": "b5edd4f5-f585-440f-9106-92b6d455da51",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "02c1a723-f4a8-48b3-8fbb-d91365ddd0a8"
        },
        "item": {
          "id": "48104116-cfab-448b-9b27-a1358285a3ba",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "65904c3d-767f-479a-9923-9afa57a58d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecca4239-5bf9-49d2-bc09-4036e7aae5bb",
        "cursor": {
          "ref": "751ac368-d02f-400f-afc8-f8f1c121d59d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f901b2af-5fb2-4735-a113-55f8b5537efc"
        },
        "item": {
          "id": "ecca4239-5bf9-49d2-bc09-4036e7aae5bb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9351b1dd-dcbb-43bf-a628-d92af84bcca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71036b2c-5cc7-4cbb-8fbe-ed097603f852",
        "cursor": {
          "ref": "8b750351-8786-4c18-afb4-adca33394a4b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0dede47f-0c58-4c71-b2da-c99852795f8a"
        },
        "item": {
          "id": "71036b2c-5cc7-4cbb-8fbe-ed097603f852",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "67862493-6cca-4ebd-9377-f63871f82074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8177e10c-638f-4922-8ed7-0dabc3e72318",
        "cursor": {
          "ref": "85801e48-843e-4876-98f9-cf73641551a8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d074123b-5a58-45fa-ae56-1f406165ff3a"
        },
        "item": {
          "id": "8177e10c-638f-4922-8ed7-0dabc3e72318",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "688abb7e-8750-44f6-8c15-3f84ad39dcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5792eb-b72c-4a33-ad39-f0d3e11de722",
        "cursor": {
          "ref": "96348b30-b236-4e6e-9555-85b4c1e9131f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f7ff29a3-c506-4362-a1f5-e5b423c633d6"
        },
        "item": {
          "id": "1a5792eb-b72c-4a33-ad39-f0d3e11de722",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "269316e1-3a84-45fc-966f-83b3243da06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1ba408-1639-4c67-ba7c-ef11e7ce56b5",
        "cursor": {
          "ref": "dc8add19-3421-42e8-b8ec-ef69b2324f2f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "37b5d0fc-08e8-4596-a12d-c96042be5f1a"
        },
        "item": {
          "id": "8c1ba408-1639-4c67-ba7c-ef11e7ce56b5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a455126f-eb5f-4a29-b64a-9fe687cfdc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bf94a0-6c42-44dd-93b7-ff77790398db",
        "cursor": {
          "ref": "63d31604-3e56-4a2a-a799-edd57baf200c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b5c45d77-2ada-4c1d-89e0-1896a5f323d4"
        },
        "item": {
          "id": "a2bf94a0-6c42-44dd-93b7-ff77790398db",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "043f58f5-2c28-4a52-9142-65920d0ec844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ab9d7d-b5e8-4d92-a245-7475fb2a60e4",
        "cursor": {
          "ref": "1de3994f-a0f8-44e7-b8ce-067f8e6ebf29",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ae08ce25-0223-4bb9-ac66-1e86573e050e"
        },
        "item": {
          "id": "39ab9d7d-b5e8-4d92-a245-7475fb2a60e4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "395519cb-5db9-477d-9520-4e81ec34946e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf62d2b-5b33-42eb-b20c-6ed396a8f1e6",
        "cursor": {
          "ref": "5357682e-11f8-49e4-a240-d80eed97e0fd",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1e60ec68-4c16-488a-bafc-9bdf161890b9"
        },
        "item": {
          "id": "cdf62d2b-5b33-42eb-b20c-6ed396a8f1e6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ed68f590-d81a-45d2-a897-3ca0fb44a468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec11510-8466-429c-84b2-cc06e0a27514",
        "cursor": {
          "ref": "a5b6d5f6-8237-44d3-aeb4-9170b72910b6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1cfe7022-3c67-44c2-83af-de3b22339461"
        },
        "item": {
          "id": "7ec11510-8466-429c-84b2-cc06e0a27514",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "87685e05-35dc-4a30-ab94-bc57f9a1ee3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68037ec4-f0f4-4a60-b5c0-1d2c0fd78020",
        "cursor": {
          "ref": "43fe449e-27ad-4487-baaf-a8f8afa189e2",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "059f76a4-fb93-4044-8332-ab8f5e070ad9"
        },
        "item": {
          "id": "68037ec4-f0f4-4a60-b5c0-1d2c0fd78020",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c5908b56-4196-4cf9-91a3-12b54e21c00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed5f044-f28f-495f-8b2e-fa5ff8e56f42",
        "cursor": {
          "ref": "a46a6aa6-f68e-44fe-9509-f7bd08dcc878",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4d6d6049-372f-4708-97ab-43509a97c6b8"
        },
        "item": {
          "id": "4ed5f044-f28f-495f-8b2e-fa5ff8e56f42",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "efa3d833-e3c5-41c3-adc8-959e668b02c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a0fff1-7c0c-45a6-853b-38d797eb6fdc",
        "cursor": {
          "ref": "4d943783-f711-4086-be5d-95f4ef1e8e1e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fa0a36ca-30e6-4357-ad3d-279a04dc679a"
        },
        "item": {
          "id": "a9a0fff1-7c0c-45a6-853b-38d797eb6fdc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "222658a2-01da-4595-8415-63be57bab769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e2f54a-1348-430f-a736-8ac62fbc4a52",
        "cursor": {
          "ref": "e6b1df71-b435-4983-b64c-026e461162c5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "963e921a-d3a0-49f8-ad23-4b73538ad091"
        },
        "item": {
          "id": "f3e2f54a-1348-430f-a736-8ac62fbc4a52",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "db17ab04-3f70-47e7-97eb-d6f56d433608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf6396b-166b-465a-8133-2add58be61e2",
        "cursor": {
          "ref": "b7740dcc-dd0a-4f6e-b3ed-2b965b51d651",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "06738af4-d177-4972-9bf0-7ebb8ed7d099"
        },
        "item": {
          "id": "4cf6396b-166b-465a-8133-2add58be61e2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d19afa0c-8766-4fda-a966-9f8c3309fa69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2d120c-4e7f-4e3f-9734-2c5107fb1f6c",
        "cursor": {
          "ref": "4bafebe5-7594-46f6-91f1-587aef27818b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "76379fe5-7e6c-4ba5-8f92-e5652d2082e8"
        },
        "item": {
          "id": "1a2d120c-4e7f-4e3f-9734-2c5107fb1f6c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "77e522de-21ff-4a3a-934d-81890bf5ae94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf459d4-2f52-4d26-aead-70ecaf819b5c",
        "cursor": {
          "ref": "a7e4761f-8716-4f28-b672-5cf5c3b447db",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d3c873db-cba7-406a-be01-9006120647c9"
        },
        "item": {
          "id": "fbf459d4-2f52-4d26-aead-70ecaf819b5c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6e08ffbe-75c3-433f-ae08-7949ed167fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee433933-3d0e-443f-8640-86e033cc861f",
        "cursor": {
          "ref": "37e36903-00f2-4717-a6bc-a875f7830f13",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c889eb17-a1e6-4ba8-833f-4c972f6edbdc"
        },
        "item": {
          "id": "ee433933-3d0e-443f-8640-86e033cc861f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f0198f20-24ce-4916-9e17-7b16756bb0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675ce3b8-ca85-4073-97bf-e54eec82694a",
        "cursor": {
          "ref": "8b4b54bb-f118-4206-b19e-293b28fd5aba",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e67e56d5-f579-4180-81a5-9a8b924a98c5"
        },
        "item": {
          "id": "675ce3b8-ca85-4073-97bf-e54eec82694a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c88e62fb-eb50-4dbe-bdee-c49dd6ae2645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db26d681-6b4c-49f1-95d7-08d15725625e",
        "cursor": {
          "ref": "6ea77b48-0915-46fd-9f32-0d698b25a102",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "12973f6c-2a44-4762-bcaa-9a033006e644"
        },
        "item": {
          "id": "db26d681-6b4c-49f1-95d7-08d15725625e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "70a35804-a00f-4ca1-8da7-2900c92945b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe5b41f-7521-4522-8858-860ab4a01a22",
        "cursor": {
          "ref": "441af9f6-bce6-4dc2-afc4-ac97455aab49",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ddff69e0-828c-4f8c-b7d5-2d5b602f9a28"
        },
        "item": {
          "id": "0fe5b41f-7521-4522-8858-860ab4a01a22",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f2e9a5a6-a829-4e26-ac1d-1cb37e40c733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca5a38f-b8b5-4d05-99d5-ee3a60067672",
        "cursor": {
          "ref": "4ff20a40-eb2a-4d33-8fff-e7c2a5ea64a3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "222eef07-bb06-4a99-a697-58e91605f9a3"
        },
        "item": {
          "id": "bca5a38f-b8b5-4d05-99d5-ee3a60067672",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1684d921-38bb-47e5-bed1-acca87b78e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b06526-f997-40a9-964b-424419430437",
        "cursor": {
          "ref": "61152016-f642-40bd-8fd5-f0e7f247038e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1a4b22e3-64b7-44c0-9641-46762e80b120"
        },
        "item": {
          "id": "f5b06526-f997-40a9-964b-424419430437",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5ad15b6d-30c9-4258-a6fd-c426f7b99ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35be880-6b82-4a8d-a87e-995272d45ab2",
        "cursor": {
          "ref": "7c1adc68-331b-49f3-84e4-b04dedf8f4e3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9d78a07b-8ebb-47b5-87b7-70cb13f3fb70"
        },
        "item": {
          "id": "d35be880-6b82-4a8d-a87e-995272d45ab2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f52b3509-be9b-46dd-9d25-2c462e3c71ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af371cb4-cb50-4e97-b99e-9b944f0d9c1c",
        "cursor": {
          "ref": "1f52a125-dff0-4408-ab5a-4698776a32ef",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b377b546-ea68-47e3-86bf-80c3d7b19592"
        },
        "item": {
          "id": "af371cb4-cb50-4e97-b99e-9b944f0d9c1c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a28baece-5d54-44af-8a96-14752b7a8ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af52806-62b7-4d25-8eea-dbd556182427",
        "cursor": {
          "ref": "551e7907-8c12-4003-b351-4ab114b74428",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "96a3d976-efa8-4b6d-a2c8-05eac8d8f0b5"
        },
        "item": {
          "id": "6af52806-62b7-4d25-8eea-dbd556182427",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c7a2fcd5-e57c-4296-ae7b-83e6d9c07b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158908cc-fa26-4ab9-8af6-98409446a241",
        "cursor": {
          "ref": "96e8668e-7182-448e-b077-b37073674e11",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a7a91aaa-6f02-4840-aefa-b527b7f79f8f"
        },
        "item": {
          "id": "158908cc-fa26-4ab9-8af6-98409446a241",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1525124f-da37-4321-8629-bcbe068f2bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9935b501-3f37-4158-b707-dcc256310f2b",
        "cursor": {
          "ref": "282fdbb6-90ce-4d64-aebc-ffcfaa7b5b60",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3867fd8e-10be-4761-afaf-6961f83a4ac4"
        },
        "item": {
          "id": "9935b501-3f37-4158-b707-dcc256310f2b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8a58cf15-df77-437a-be45-6bab62a1f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12549e9b-491d-4cbb-8988-5157116eb52a",
        "cursor": {
          "ref": "d1163261-0668-4980-8f57-af61885b0962",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2a9af8fe-6398-4a00-8ef7-444d3796dc41"
        },
        "item": {
          "id": "12549e9b-491d-4cbb-8988-5157116eb52a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "466cc5c4-b2e0-49ad-a30e-db41402942c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea01927-432b-416b-b33a-009cab1b68d3",
        "cursor": {
          "ref": "7653616f-1558-4266-95e8-c05de6842308",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "81dd52b0-daf1-457c-9462-5dc90199c575"
        },
        "item": {
          "id": "6ea01927-432b-416b-b33a-009cab1b68d3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f25e7e1a-e5b8-4094-97f6-8efff4732b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d23f29-7b23-4edb-b4f9-185396b5c049",
        "cursor": {
          "ref": "1c931cbd-0c25-4b5c-aa79-39813370cc99",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c28e7a0b-f64c-4c70-8223-936a462ce3f0"
        },
        "item": {
          "id": "87d23f29-7b23-4edb-b4f9-185396b5c049",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4569b344-a564-47da-96d6-9324bd900e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5093d78d-41e5-49d1-927d-fc0b0fed89f6",
        "cursor": {
          "ref": "b4ad1f6b-5a30-4c8c-941e-57ad1cbee1f3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6c65e161-bbff-4978-b6dc-08f8fea992f3"
        },
        "item": {
          "id": "5093d78d-41e5-49d1-927d-fc0b0fed89f6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "90453b51-d82f-499f-bf05-8fb5f8dabbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9690cfcb-7dbc-4603-a7e8-4cfaa1dff054",
        "cursor": {
          "ref": "434dd43f-accb-4ede-837d-653b37592a13",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5b70643b-3545-4764-84df-2b374e14a450"
        },
        "item": {
          "id": "9690cfcb-7dbc-4603-a7e8-4cfaa1dff054",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "19394dc0-b902-479c-859b-b7eb53aa141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8897949b-8cd6-40c4-a047-e9064258f586",
        "cursor": {
          "ref": "7e0b23a6-9e4f-4a40-9aca-820111135742",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8349a27b-de12-4739-9fd8-47c228a1f4c8"
        },
        "item": {
          "id": "8897949b-8cd6-40c4-a047-e9064258f586",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f1d503da-53be-4393-a24c-6b6228421081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670ff8f3-bc4d-4083-8d24-dd7386503d96",
        "cursor": {
          "ref": "59de2ced-1a55-4ea5-aa55-ae81ae58e56f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9481e5f2-d25a-460b-83c1-c7f51f19b44c"
        },
        "item": {
          "id": "670ff8f3-bc4d-4083-8d24-dd7386503d96",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "96948587-2372-42eb-9786-8fbbb39b6244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6644f58c-8a81-4e24-9919-615e0513a7e1",
        "cursor": {
          "ref": "bd060f8a-13c3-458e-8483-d8fd5e3f2ef6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a8782bc8-0765-4bea-ba83-a872d4bb8fd2"
        },
        "item": {
          "id": "6644f58c-8a81-4e24-9919-615e0513a7e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7074f581-2daf-4861-b0ea-40a82ca0e93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19855c2-ab0f-4f13-91ad-7fe6288c6fff",
        "cursor": {
          "ref": "34127934-7096-4d0b-a0de-c09d625a617c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ea7a10c4-8a66-4d48-a78d-5208c8d11d9e"
        },
        "item": {
          "id": "e19855c2-ab0f-4f13-91ad-7fe6288c6fff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5a6391cf-ca13-4b5d-9de1-3fe23ba65a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a19af9-995d-4dd5-a198-8c4069e903bd",
        "cursor": {
          "ref": "d0c21ec7-0161-4fa9-be8c-ca91c5048bab",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4b57d7d3-56e0-43b9-bcdc-d9e3f516158f"
        },
        "item": {
          "id": "19a19af9-995d-4dd5-a198-8c4069e903bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "058842dd-61aa-474d-bcb1-4103dc482b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c054a53-7b98-459b-891f-fac8e1fd1d2d",
        "cursor": {
          "ref": "d154302f-cfc1-4c0f-910e-c5b8bec939cd",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ab2f18cb-eebc-4ddd-a733-3e50f51ef654"
        },
        "item": {
          "id": "5c054a53-7b98-459b-891f-fac8e1fd1d2d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1901aec5-20cb-470f-bc7a-f11e75cbc596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24bbff4-4eb2-413d-a1df-0ad2e8dfeb67",
        "cursor": {
          "ref": "ca897c44-a96b-4cd6-9bab-6f1662239f59",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5f3e58b2-3e99-49bc-83da-9ad5348c4095"
        },
        "item": {
          "id": "a24bbff4-4eb2-413d-a1df-0ad2e8dfeb67",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a7b64756-c70a-4fcd-babb-8242a2710979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb480ace-94d2-4cfb-9d14-19a411d6153b",
        "cursor": {
          "ref": "3951623a-94fd-40bb-b2c4-3323c7183ce8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d59de451-d91f-4493-91d0-76c580db47aa"
        },
        "item": {
          "id": "fb480ace-94d2-4cfb-9d14-19a411d6153b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dce32190-d41b-4a80-92c2-dae452fd720b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12eddbd-4747-4b68-b4d9-5e35ab817729",
        "cursor": {
          "ref": "ec3e8250-8886-4bc9-827e-5a6b05408134",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9ccf01b6-5592-4013-b5c0-e7c2e326a820"
        },
        "item": {
          "id": "f12eddbd-4747-4b68-b4d9-5e35ab817729",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "39cddb20-f072-4a85-8ef4-d1197604c4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea897c8-94ba-4088-986b-9014e3d17b3c",
        "cursor": {
          "ref": "ce65a722-ab00-425e-8716-a3366b792a31",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "24fecf14-3ce8-4450-b59b-13a8b83110f8"
        },
        "item": {
          "id": "8ea897c8-94ba-4088-986b-9014e3d17b3c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "addd210a-279f-44d7-bc22-351f6d32fc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac37c0df-b818-48fb-b789-edf8d9f2683f",
        "cursor": {
          "ref": "92b44f5d-a3b7-4b53-9f40-86c9d616e80c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9e7765ec-ad6a-4f83-bd0d-f2ee26360697"
        },
        "item": {
          "id": "ac37c0df-b818-48fb-b789-edf8d9f2683f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "87befc55-a398-4097-9b3f-4358056bbb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec57f5a5-ed62-4878-a404-6b5ba06b502a",
        "cursor": {
          "ref": "32ab1ad9-1236-46d6-8f2c-df509849601a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "549626c4-33c9-409b-afb8-690efc354a0b"
        },
        "item": {
          "id": "ec57f5a5-ed62-4878-a404-6b5ba06b502a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bfc59473-68ec-456c-909b-70158a7bde91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd555545-bbbf-487f-b9ed-2e7d7f5b49b4",
        "cursor": {
          "ref": "fe6f39f1-fb4f-4d68-9d6e-d74723b901b7",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e3c1e479-9661-4a80-a876-e33b8c246e45"
        },
        "item": {
          "id": "dd555545-bbbf-487f-b9ed-2e7d7f5b49b4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "59726ed6-dffa-4ec2-b10a-a7467a56f362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134f7832-dcdd-4e5c-8085-319738dcc20c",
        "cursor": {
          "ref": "54a8c915-f933-4928-a6db-8b9662881141",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a79d6513-e267-4c4f-8ac3-5473f93287f3"
        },
        "item": {
          "id": "134f7832-dcdd-4e5c-8085-319738dcc20c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "94d6a8f4-6dc8-4f39-b1dd-926a8ccaa995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f3cb3f-48e4-41de-b4d7-10c6ba630e6d",
        "cursor": {
          "ref": "e3229d83-7cf0-4fcb-ba07-4770ff8e885b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d910e708-0ddc-474f-b54e-a17a97b72602"
        },
        "item": {
          "id": "43f3cb3f-48e4-41de-b4d7-10c6ba630e6d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1cfebd1a-5586-4c6d-b94e-72f54279073c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5eab381-851b-402e-9915-3ae1498c78a5",
        "cursor": {
          "ref": "f6d54638-f965-4694-a1bf-e58a0fdc6be3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "41ab7a8f-4971-49b3-901e-7ebd15ba5d2e"
        },
        "item": {
          "id": "d5eab381-851b-402e-9915-3ae1498c78a5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4303c227-42b9-4f0b-8e2f-99b67893058a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834abeef-2bdc-4b56-84da-44a87a306877",
        "cursor": {
          "ref": "c9509087-d66d-448c-90b2-44cd462d3f8f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cf763de2-f4fd-456f-8700-50c133c398b2"
        },
        "item": {
          "id": "834abeef-2bdc-4b56-84da-44a87a306877",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8a25041f-2ac8-4635-ae9c-d57dd9512e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eb2f64-e223-4480-8907-42e41b82cb14",
        "cursor": {
          "ref": "d39230c5-3161-4a63-a25f-bd00ffa87c7f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c80196c1-b223-4372-86fe-982b243bf2c4"
        },
        "item": {
          "id": "66eb2f64-e223-4480-8907-42e41b82cb14",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ddd71e4b-4052-4158-8695-72a36e42a3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f346e1b-7d95-4141-b0de-eb10d18d34bf",
        "cursor": {
          "ref": "67ed49f5-dd33-4a28-9d9b-26a3a33b19a2",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3e9e0cab-0869-4171-b7ee-8471a8c2fabe"
        },
        "item": {
          "id": "1f346e1b-7d95-4141-b0de-eb10d18d34bf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8e8a8bdf-24aa-4d24-a254-62b6cbc6eae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e032cf-de11-42c8-ae46-d22f34839209",
        "cursor": {
          "ref": "d0f3e371-20ad-4e92-8ca8-1389e3180a9e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5ce71385-3679-49db-aa72-ebfc3c12fc49"
        },
        "item": {
          "id": "f3e032cf-de11-42c8-ae46-d22f34839209",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9b279f99-31c8-4f0e-a986-dd64bb6345ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fb5d7f-cc64-4cc2-8472-c21374ff4553",
        "cursor": {
          "ref": "82d99424-aed3-4210-9564-aaa558d500b7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cc925700-3f4c-4bcb-8fc4-39fb8def1295"
        },
        "item": {
          "id": "42fb5d7f-cc64-4cc2-8472-c21374ff4553",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "af94aa50-b0e3-487e-8e95-c0dd918fe8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2da5127-a18b-4477-a0cb-b2f8e4e80555",
        "cursor": {
          "ref": "46f670a9-0fc0-4273-850a-afe0ce84f95b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ea9d1a4a-61b6-4e4f-9be7-ca7027e530a0"
        },
        "item": {
          "id": "c2da5127-a18b-4477-a0cb-b2f8e4e80555",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ba2d3344-532f-4480-999a-dcf61d4ebc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619d6148-82c8-4b3a-9eab-a7dee118777a",
        "cursor": {
          "ref": "9ebdac51-646d-46fe-a10f-bda3ebd25675",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "08511ebc-31f5-485b-b400-5dd9ce5e4fb7"
        },
        "item": {
          "id": "619d6148-82c8-4b3a-9eab-a7dee118777a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a5c31f9d-9421-498b-9a77-df8ca7078bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956225cf-3ea9-495f-8c54-9702984f73f2",
        "cursor": {
          "ref": "b595d177-8ca0-4f3e-a158-410c7ccd083b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c1249abf-0663-47eb-83cd-d5dd5a620a0a"
        },
        "item": {
          "id": "956225cf-3ea9-495f-8c54-9702984f73f2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8168d38c-9eb8-4daa-aa22-1bc2eb20625b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6a5b06-e4c9-4a87-b289-d0bd122d9922",
        "cursor": {
          "ref": "d4c95f2c-d31c-40d9-b792-72012839641a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "281d5041-87df-4c57-91a2-fde6e3c38f8a"
        },
        "item": {
          "id": "6c6a5b06-e4c9-4a87-b289-d0bd122d9922",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cebc1cf6-8986-4919-8692-fd8445801de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd353e4-921a-4dea-89ee-30ddf59cc25d",
        "cursor": {
          "ref": "9f219601-fa58-47e2-93db-78c0bd439b67",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "269f6146-d896-4ccb-99d8-42af87e30e52"
        },
        "item": {
          "id": "9fd353e4-921a-4dea-89ee-30ddf59cc25d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cdcc9e1a-85c4-4011-b59b-b69cf52776dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d70436-5a0a-4e8b-a516-41582b959b01",
        "cursor": {
          "ref": "29172380-b515-4d70-8862-020ae7209b4a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "50a5f639-010e-4fde-a3c4-fa7a2bd3be5d"
        },
        "item": {
          "id": "29d70436-5a0a-4e8b-a516-41582b959b01",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "752e6d15-a61f-4456-a3d1-8c9e5724b61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ced93d-92f5-40ab-81e1-237c4f85f4c9",
        "cursor": {
          "ref": "7a9ae487-58f1-403c-8102-94d2eba3c018",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d6d93642-5add-4e64-94f1-a9cefd26af97"
        },
        "item": {
          "id": "f0ced93d-92f5-40ab-81e1-237c4f85f4c9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "13f95893-ecd9-4874-89b0-d532c71d1b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f18fa79-04d3-4364-962d-a35587a684f8",
        "cursor": {
          "ref": "90ed7190-0982-4391-a31d-25cef9559c9b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "492c0f78-a7cd-4db6-8753-ad3cd11b16ac"
        },
        "item": {
          "id": "1f18fa79-04d3-4364-962d-a35587a684f8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bcc79cec-1742-4aff-ba7f-5ae8ee67be43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd161f89-9fbb-4ded-8e0c-6a10d5a97936",
        "cursor": {
          "ref": "c55c41d5-241c-4db0-9197-dfc94c860cd6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "26127e7d-e17a-4aef-afb9-53f1120e558f"
        },
        "item": {
          "id": "cd161f89-9fbb-4ded-8e0c-6a10d5a97936",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e1e167ba-9835-4989-a2c9-f015be89474c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8602ff86-d2da-4d4a-8136-ff1d55bfc50e",
        "cursor": {
          "ref": "fdeca2ab-18cc-4fb8-b98b-7b0f1646e4e2",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "52300d2a-8803-478b-8a78-765fd918889f"
        },
        "item": {
          "id": "8602ff86-d2da-4d4a-8136-ff1d55bfc50e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d12ea899-5b4b-4915-b8aa-c34814997d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c8cc13-c150-49ec-8ad0-81e52806c097",
        "cursor": {
          "ref": "072fb473-b3c8-4cb7-99dc-a727e821fc0a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6b4e8e7c-e82d-4041-b60a-d00cc42469b2"
        },
        "item": {
          "id": "25c8cc13-c150-49ec-8ad0-81e52806c097",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ff4ae48b-ecd2-45b0-be9c-647e1f3eae8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2d8172-4999-4969-b9ad-29a95358d41b",
        "cursor": {
          "ref": "b63d9fd7-1530-4933-b16b-1d48bb2aead3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "11e34f38-4dbb-482e-98d1-70e8f4193364"
        },
        "item": {
          "id": "4f2d8172-4999-4969-b9ad-29a95358d41b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2256141d-7ddf-46f3-8b27-338293b240b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b897c5a4-23cd-4077-8c65-79474c19ea58",
        "cursor": {
          "ref": "30f0eaf1-f1f4-4fdd-b990-483a23b14fb9",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "58ace37f-cf72-4c4f-a015-09164937127f"
        },
        "item": {
          "id": "b897c5a4-23cd-4077-8c65-79474c19ea58",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "80b7cd79-d85f-4f5d-9171-dbd5aba51a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db9cb92-9cb9-4008-b89c-8fedd3afa781",
        "cursor": {
          "ref": "f95e1f34-987c-4c96-a6d5-b67edaec9520",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "74ca9caa-f589-4b38-9acc-1e126cb87828"
        },
        "item": {
          "id": "8db9cb92-9cb9-4008-b89c-8fedd3afa781",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dc5d1b3d-8e90-4d66-a11c-451328e47c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601b34d2-41be-45a1-a563-b00751bd8be6",
        "cursor": {
          "ref": "a15bc91e-13aa-4c84-afcf-0d9af75e2e97",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4f0283de-32a5-4504-83b6-271903b63b5b"
        },
        "item": {
          "id": "601b34d2-41be-45a1-a563-b00751bd8be6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2fd15f0a-a2af-4cf4-9e81-51bff497fed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0afdab-cae6-423c-ad64-05ff1971b8b9",
        "cursor": {
          "ref": "a9871c10-9380-4a8c-bc45-1c99e0fd5ff5",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7c9177b7-d4c8-423a-a07c-f01649af69a5"
        },
        "item": {
          "id": "5f0afdab-cae6-423c-ad64-05ff1971b8b9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d7d0bcac-5862-4a3d-9eeb-15a757faf130",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d80130-580e-49c6-a35b-44ce4049e786",
        "cursor": {
          "ref": "dedc8a60-a131-4b98-b8d0-b77d7e9b2943",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "140b205c-edfd-4c27-bd9b-c0087637d5c5"
        },
        "item": {
          "id": "19d80130-580e-49c6-a35b-44ce4049e786",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "15bd679f-86cb-46c2-8a8e-f959ed3229b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "95e67bb5-bc4c-436d-ba71-5491e5f4d192",
        "cursor": {
          "ref": "03cb05ab-aa0a-4601-a40f-c0ff4c552235",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0277aa3b-8245-4ae9-b4fe-2c9275872d81"
        },
        "item": {
          "id": "95e67bb5-bc4c-436d-ba71-5491e5f4d192",
          "name": "credentials_issue"
        },
        "response": {
          "id": "699c374e-320f-42c0-8fe4-af0702c0e576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5757a41f-9530-4558-bc0f-57479b3c2c86",
        "cursor": {
          "ref": "246cd9fd-f2f0-43ee-a8b8-dab36c174ccd",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1e19bae9-5bc7-4ffa-8fc2-80f58f8971c0"
        },
        "item": {
          "id": "5757a41f-9530-4558-bc0f-57479b3c2c86",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ba2997b1-3955-4b80-85cd-3f5edb380150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a32e0568-fa66-4002-a88a-4507c83ee143",
        "cursor": {
          "ref": "d7953bab-37fc-4a06-8769-ad517b0a2b56",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a72986a1-afb3-47cf-9bf8-3e54a4b05e21"
        },
        "item": {
          "id": "a32e0568-fa66-4002-a88a-4507c83ee143",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "836e0c65-dd86-4b20-894f-4f031002bb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "df7c9f7c-fc01-4642-a2d0-e6015066d4f3",
        "cursor": {
          "ref": "5cfe5123-9bb1-448a-8603-6c425ba8211a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e1864c0c-242b-4d16-b75d-723863e33f6c"
        },
        "item": {
          "id": "df7c9f7c-fc01-4642-a2d0-e6015066d4f3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b211ef7d-1246-4096-b4ee-8d8bd6f454de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "eabfe9c4-96ea-406a-be11-f145efe1b3cb",
        "cursor": {
          "ref": "5a7697bb-3519-4f51-9c3b-51b326ab300a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9e3e8370-0b62-4a1e-b891-accfb6128b22"
        },
        "item": {
          "id": "eabfe9c4-96ea-406a-be11-f145efe1b3cb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ab0c5c11-778e-4229-83c7-c0b0ebd4e8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "97412085-fc2c-435d-aedc-d7590185e65c",
        "cursor": {
          "ref": "c5fb1e9e-370e-44f6-8255-3da28582c935",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "57f2dd89-83f3-4e2d-9c7f-d1f66db7948d"
        },
        "item": {
          "id": "97412085-fc2c-435d-aedc-d7590185e65c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f0a0e444-a91d-423e-a810-1716386c4651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6764fa81-6a61-4842-b794-f793b82bb036",
        "cursor": {
          "ref": "2d2ed3a7-2f68-4656-a04a-b668200d7515",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bf2b428d-a877-4bd3-a726-b88a54424755"
        },
        "item": {
          "id": "6764fa81-6a61-4842-b794-f793b82bb036",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aba06d19-db70-43a8-96cb-a0acdb938adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc2f3ce-3c4b-4fa8-aaf0-e06b39703a02",
        "cursor": {
          "ref": "6de39efa-901b-48dc-98c5-df58af46b6c7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cb34f807-6bd9-4bc6-9019-80f2b8dc5fe3"
        },
        "item": {
          "id": "ecc2f3ce-3c4b-4fa8-aaf0-e06b39703a02",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dcc5fb74-0e2d-4ada-bc26-b4c8bf0c8f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0ec776-4650-4e35-80ef-aef3f22e061b",
        "cursor": {
          "ref": "e887d62b-f9f0-4c08-ab30-9a34354d1e6d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1985485e-feba-4a95-8902-70f9a08e53ee"
        },
        "item": {
          "id": "1d0ec776-4650-4e35-80ef-aef3f22e061b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6ecb2faa-cc48-4309-b8a1-fd5ef7ec2a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee41ec5-58a3-4a44-a776-67f5ad55dcc2",
        "cursor": {
          "ref": "a74484bb-b212-47ea-b432-a65b5baf2201",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9e8848c4-0d6d-4ff9-b279-4f34e7dcfc90"
        },
        "item": {
          "id": "6ee41ec5-58a3-4a44-a776-67f5ad55dcc2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a6246079-910e-4f3b-8bdf-bf9e2cc2da0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c927fca6-2140-44a4-ba10-f5751cf7c270",
        "cursor": {
          "ref": "6dbeb1cd-0c51-4631-bc1e-8b8d95eaff8f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f90fca14-3e48-4bda-bd57-114bcb6baf2e"
        },
        "item": {
          "id": "c927fca6-2140-44a4-ba10-f5751cf7c270",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1fa31bf2-df23-4bac-9de8-bfced970242d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a546a2c-ab35-43a8-aed3-7cac6ad7ce70",
        "cursor": {
          "ref": "bd84767b-df7f-46d8-9f79-6b85f7c01777",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "00bbd5fa-9f3b-42a6-b5b1-1237dd9d3d5d"
        },
        "item": {
          "id": "1a546a2c-ab35-43a8-aed3-7cac6ad7ce70",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "96f4a826-5eec-460f-a872-11c6af8524d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd52de2-3b1b-426e-a9a4-70c53c079faa",
        "cursor": {
          "ref": "abf500f0-3648-4122-a68a-5da19e6a6101",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4c3ce6b0-d92f-476e-bd31-cf8df4ecca5f"
        },
        "item": {
          "id": "fdd52de2-3b1b-426e-a9a4-70c53c079faa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "010af383-ffb1-42c9-80c2-3bb4c94ae733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac29fec6-ee29-4aad-af14-ddb6f8b503a4",
        "cursor": {
          "ref": "822025bc-c8a9-4b02-a227-d6878a219a5e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1031420d-50af-46d4-9891-2d00bb333734"
        },
        "item": {
          "id": "ac29fec6-ee29-4aad-af14-ddb6f8b503a4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "44b2fc60-a952-4454-a83a-0a309c365813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70c76c3-c4bc-49c8-b1c0-81eb0c8e608c",
        "cursor": {
          "ref": "6ea7a0f4-f307-4ddf-8041-02606243f864",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f6a866e7-6c82-429f-a055-7f9dba7ddfb1"
        },
        "item": {
          "id": "b70c76c3-c4bc-49c8-b1c0-81eb0c8e608c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "690dd72c-1648-4cc0-987e-f9803e766401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea5b6ba-7cea-4372-8af0-90381342c285",
        "cursor": {
          "ref": "9ad2ce89-597f-4ba3-8be5-8985aa45430c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "84fd12f0-d165-4e7a-9154-37dd1083902e"
        },
        "item": {
          "id": "6ea5b6ba-7cea-4372-8af0-90381342c285",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a5337623-6f65-4c84-bdc4-a1d76e51fe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873b3857-e836-4427-90ee-6b1047861dbb",
        "cursor": {
          "ref": "19919237-1d36-4833-83b7-e32d14fb6a9f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6b0d0a7d-d20f-4d75-869d-56856d3ad995"
        },
        "item": {
          "id": "873b3857-e836-4427-90ee-6b1047861dbb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b7c24592-b8db-4c04-aa71-593f29f06cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a43edd-14eb-43d0-9262-18a571ee81d9",
        "cursor": {
          "ref": "bec8356d-e9b6-4bda-a12f-9a057695f5a2",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "63f602ed-5a9f-42a7-83c6-eab9a82998ab"
        },
        "item": {
          "id": "07a43edd-14eb-43d0-9262-18a571ee81d9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5808aec5-dfae-4e9a-befd-1b748a057140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b849f8-3902-4a65-b9c0-a58ad80f26c3",
        "cursor": {
          "ref": "804f77ba-74f3-4e21-be2e-84f7bd3fac0f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5c5e87a1-8e1f-46d7-bf4d-c25c57c4fb52"
        },
        "item": {
          "id": "b8b849f8-3902-4a65-b9c0-a58ad80f26c3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a38fbd94-a4b6-45ad-bee1-01f200738d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc4120e-1409-4ff1-b4ee-0ccd911b0feb",
        "cursor": {
          "ref": "3662e12a-e9cf-4c98-9731-6810f4cee42f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ca912386-d479-41ff-b46f-1c6ce292e315"
        },
        "item": {
          "id": "bbc4120e-1409-4ff1-b4ee-0ccd911b0feb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "769ab1a5-4f2e-475a-a6d7-cdd540c21164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e330a35b-bfb7-49d8-b964-960ad9280f0d",
        "cursor": {
          "ref": "9f733a89-a413-4e51-8d35-1aac9871bad4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7213ffeb-c352-4aa4-be02-79395f92cd49"
        },
        "item": {
          "id": "e330a35b-bfb7-49d8-b964-960ad9280f0d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c1482a28-b8eb-48a9-b6b8-b1da5aaea513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3e8770-570e-436d-99da-cc539cedeae4",
        "cursor": {
          "ref": "9626d721-7670-4e94-ad0f-0045cb43caed",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "47e9af80-ea46-4891-8cd3-6dc559485b58"
        },
        "item": {
          "id": "2d3e8770-570e-436d-99da-cc539cedeae4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0e4e6c9b-0632-429e-b2ab-946a6d283ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c4b531-d498-4da9-84c7-239019d30fa7",
        "cursor": {
          "ref": "d6361618-d4f4-4176-940c-5586ffbbdd93",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9aaeed0c-a107-4077-a475-e876ec187ff9"
        },
        "item": {
          "id": "14c4b531-d498-4da9-84c7-239019d30fa7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7a34e289-a01f-4b1e-8c15-5a697dbb3520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cbfcac-d1d2-479e-99b7-1aa636384929",
        "cursor": {
          "ref": "11b71449-cf79-4f54-99fd-433d42e84250",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9c480f24-7f91-4319-8567-0eaaba0daf2a"
        },
        "item": {
          "id": "51cbfcac-d1d2-479e-99b7-1aa636384929",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e89aa28b-9688-43be-9943-0f2cf0adf11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e1f415-26e4-40a0-a97e-3c54d4b24136",
        "cursor": {
          "ref": "c33af975-6d58-4497-b0e1-b20dd23436cf",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d378fad0-7883-4385-92b2-c7d83c632e1f"
        },
        "item": {
          "id": "c1e1f415-26e4-40a0-a97e-3c54d4b24136",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "002932e6-9078-46c9-bfdc-f08e2c40519b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721d404d-2868-4523-8401-50b24ac8591a",
        "cursor": {
          "ref": "10c489f0-47c6-4023-b463-936a03dd54f0",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4d912d45-9b62-496e-adc2-ae75ad3d4f66"
        },
        "item": {
          "id": "721d404d-2868-4523-8401-50b24ac8591a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8b84b4f7-84b6-443a-bce0-12e6042d89c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d039294-26e5-444a-81f1-92712720bb72",
        "cursor": {
          "ref": "a309005a-506a-41c8-9bb0-8a6c02cbfeb4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bd0998d3-a9b7-47ce-b78a-c51be6cc4b5a"
        },
        "item": {
          "id": "4d039294-26e5-444a-81f1-92712720bb72",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f35534ed-f510-4ad4-8dc5-f06a06bdb8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7b11dc-c849-4267-813d-00dda63aa977",
        "cursor": {
          "ref": "b771799a-4f2d-4748-ae7e-27066fdf1b75",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "719e06d5-9aee-4205-85ea-b76a6274b5c2"
        },
        "item": {
          "id": "3c7b11dc-c849-4267-813d-00dda63aa977",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cd62b7e2-1c4e-491b-b7b6-9f726799a151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68040d4-8d37-4b99-af10-22dcc1327e99",
        "cursor": {
          "ref": "91fc452d-3976-4125-b6b7-bee915e7dbd0",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d9d94c0d-367a-49ed-8a8f-4f61359abe67"
        },
        "item": {
          "id": "f68040d4-8d37-4b99-af10-22dcc1327e99",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7d589e5f-9d82-4286-abdb-a93c17743b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8602f5-f923-48dd-b90c-4aa91fc24674",
        "cursor": {
          "ref": "dc50454d-f1ae-4154-a7e2-c727e556e095",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9f305b3e-5201-4e8e-9ba7-de855c9c9fcf"
        },
        "item": {
          "id": "5c8602f5-f923-48dd-b90c-4aa91fc24674",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a212b4d-6a08-4761-bb46-e62175251c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abbd6c6-fafa-4c16-9dc9-3580b6abb3e2",
        "cursor": {
          "ref": "fe923815-074e-4457-998c-198d324f3c78",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a5926a2d-059a-4c82-bde6-54ded5f8b79e"
        },
        "item": {
          "id": "4abbd6c6-fafa-4c16-9dc9-3580b6abb3e2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "02625357-e84e-4520-b2d3-3bafdd580c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8bdaf1-3a77-429d-8986-42d7c266e8b4",
        "cursor": {
          "ref": "630b004d-6148-4950-9e4c-685dbcb01fc4",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f105d86d-2208-4889-bcf3-899e99bb856d"
        },
        "item": {
          "id": "2e8bdaf1-3a77-429d-8986-42d7c266e8b4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ecba9746-c927-4b9e-ac72-311ff64cda23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6731093b-6a77-41fb-b09c-bdfcb472127b",
        "cursor": {
          "ref": "d01bf2af-925d-48ab-b4b3-260b8ba4bf1f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1eea8474-d819-44d2-b426-505aa1bdf8be"
        },
        "item": {
          "id": "6731093b-6a77-41fb-b09c-bdfcb472127b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5461b6e5-8df5-447f-aea7-4c6194be2267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9963365-c15b-4917-b9ec-b35007c81f82",
        "cursor": {
          "ref": "dcdab663-09be-436b-a44b-aee216b167ff",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c234668c-d8d4-48bb-b58a-bb5b686b1969"
        },
        "item": {
          "id": "b9963365-c15b-4917-b9ec-b35007c81f82",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bc095d40-8e9a-4cc1-9f42-ed699cb50703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75626876-fd93-48dc-974e-7e682ea914f3",
        "cursor": {
          "ref": "be4ee770-4940-4215-a276-b871a9fa99a2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4aa86ca7-1778-4ae2-af08-0449ed31c9f2"
        },
        "item": {
          "id": "75626876-fd93-48dc-974e-7e682ea914f3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0097f8c0-5b95-4a0b-b8b6-08f53e80c660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206fc01c-d9d2-41b5-84e7-9029ce33dd48",
        "cursor": {
          "ref": "050cf12d-053a-4eac-9d15-d55eb73e6352",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "53921926-e98f-40d2-9e26-9120263494c5"
        },
        "item": {
          "id": "206fc01c-d9d2-41b5-84e7-9029ce33dd48",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cb971f83-3eb9-4b74-ab5e-90ee894f2f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a1eec1-c829-456a-8d08-541a785705ee",
        "cursor": {
          "ref": "9f8fe7f8-a4a1-4e8e-9949-301e7d8ef76b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "306604d3-0a04-44a6-ab69-7a91709a6451"
        },
        "item": {
          "id": "a4a1eec1-c829-456a-8d08-541a785705ee",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "262ae2d5-da0d-4086-b1cb-60b68fa6ed47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474932cf-f722-4f81-9589-92cef0578c26",
        "cursor": {
          "ref": "4e860061-8a32-4de2-9b0d-a1ac0b42d1ef",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "60a7fe08-fddf-44d0-ad37-e181ccb8f299"
        },
        "item": {
          "id": "474932cf-f722-4f81-9589-92cef0578c26",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "36e295c8-e480-4efb-ba1a-295fdb3073e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bba332-c2c6-4933-8481-41287c2f2e65",
        "cursor": {
          "ref": "6ceea41e-a064-4a71-bc41-32ee465affa6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b21320f3-219d-479b-8b17-6240cfe2e39e"
        },
        "item": {
          "id": "d9bba332-c2c6-4933-8481-41287c2f2e65",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "193c00b3-c735-4cec-99ae-d317b7f61364",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93061813-13c8-4258-941b-0e76f3e2da17",
        "cursor": {
          "ref": "99a5cd74-b482-430b-9b6d-2a1885038267",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "58eceb9e-cc3b-40e1-ace2-03a96281684b"
        },
        "item": {
          "id": "93061813-13c8-4258-941b-0e76f3e2da17",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "174dbcf9-c65c-4c41-b674-49cc14099cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264ad698-96e8-4f11-adea-90b633248867",
        "cursor": {
          "ref": "7c8c6710-dc28-4103-b106-e67ad598cf0c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a94563ad-f350-40d5-b6c7-2f69005cc9db"
        },
        "item": {
          "id": "264ad698-96e8-4f11-adea-90b633248867",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e472268e-e8d6-4b7b-9a28-e8e3328b65a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171321fd-0cbe-4df9-a6a9-0c6ca81bf1a0",
        "cursor": {
          "ref": "7f41777f-3b83-44e0-ad6b-6650d0d4c0e6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d044058c-558c-4eab-85dc-f0aa95b74e5f"
        },
        "item": {
          "id": "171321fd-0cbe-4df9-a6a9-0c6ca81bf1a0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dbd3cef1-8ca0-4e8a-8907-49a1b35e5cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af6cb78-3b3f-43dc-8e23-c95733985822",
        "cursor": {
          "ref": "8e30116f-403c-495d-9abd-5b00b38224c4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "140f8daf-78b6-455e-8414-cf45634a6e23"
        },
        "item": {
          "id": "6af6cb78-3b3f-43dc-8e23-c95733985822",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "48c49019-9e65-4aea-ba2c-ad362c2f6362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee759e5b-4d85-42a5-965b-c975ed710bc6",
        "cursor": {
          "ref": "eaa1aba6-05cc-4e8a-9dec-b356390f1a02",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ac3fc95d-9318-4116-821c-c6d901d884cf"
        },
        "item": {
          "id": "ee759e5b-4d85-42a5-965b-c975ed710bc6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7b1e55cb-f74e-45b2-ab4e-2388d49e58d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d27274-0556-4e9a-b023-11c0e1bd63ee",
        "cursor": {
          "ref": "f40dae4f-794b-43c9-a987-77020b4864b6",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "98abf223-21f3-4b0f-8f9b-0dd5c4ce0505"
        },
        "item": {
          "id": "97d27274-0556-4e9a-b023-11c0e1bd63ee",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30abe7d0-4300-4089-8035-66ee3d182722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51d5641-75e2-4203-a55c-3b56f317cfb2",
        "cursor": {
          "ref": "56f2c32d-63e4-4b8f-861c-485feac74237",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0e8c3832-f842-451d-ae4b-f6649d4491e6"
        },
        "item": {
          "id": "c51d5641-75e2-4203-a55c-3b56f317cfb2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "70a82357-23f2-45c1-888f-b91d3d408f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4407db60-37ea-430b-8732-8db3ab933a53",
        "cursor": {
          "ref": "a52542a4-349a-4e76-a903-ca7a82588af4",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a97ae005-e2da-482b-b4e2-b1f68dd4f25c"
        },
        "item": {
          "id": "4407db60-37ea-430b-8732-8db3ab933a53",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe20c241-471e-4c8a-a6b2-15ae220a6cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d0ab2a-57bc-4105-b740-fda756d24fd1",
        "cursor": {
          "ref": "d8ceccea-16e3-4be8-ad23-cb1ad7aca577",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e8f0ac4e-190f-4142-ade6-91626899a722"
        },
        "item": {
          "id": "95d0ab2a-57bc-4105-b740-fda756d24fd1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "32bf4716-a605-44b2-a33c-9e47eac606ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b06c9b-aeda-42f1-9674-fe3582f23807",
        "cursor": {
          "ref": "4c3f4179-dc23-4186-9d2d-3117b4ec41a5",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "51787245-c0ef-45a5-be27-9eb25b496c45"
        },
        "item": {
          "id": "37b06c9b-aeda-42f1-9674-fe3582f23807",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f9a57079-91eb-4f07-8b48-e3f1f7421d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abe5625-de81-4877-9a1d-293182b63004",
        "cursor": {
          "ref": "b5ab7d1e-e380-4f5f-a17c-f9e425802dc0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5bea8f3c-0ec8-45e6-b8fb-cc939e8e4c6e"
        },
        "item": {
          "id": "6abe5625-de81-4877-9a1d-293182b63004",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d461b74d-141c-4a90-aa03-1d53f79d139e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa25ea7b-fed5-411d-82d2-1f37940ad15e",
        "cursor": {
          "ref": "058f9d65-8dfe-4f07-8dee-1e1f5235826b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "64d638ee-216a-491f-b5cf-c980c3c5dfcf"
        },
        "item": {
          "id": "aa25ea7b-fed5-411d-82d2-1f37940ad15e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b8981086-ea29-4f20-a378-1bac4713cbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f99d87-d9e6-4e02-8856-b87d28022076",
        "cursor": {
          "ref": "232c1bc1-0f60-46fc-b912-2a337680f010",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4ea51241-14fa-453a-a145-b0fe73801df7"
        },
        "item": {
          "id": "71f99d87-d9e6-4e02-8856-b87d28022076",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "814e7a53-ff80-408c-8f93-760ddc82c989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091dd61f-f822-41b5-9bc9-96f5978db643",
        "cursor": {
          "ref": "85ecad42-bcfb-4dcd-94dd-95b2aa011bd6",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "96367f2a-0c73-4228-bba2-1c81c4186ac7"
        },
        "item": {
          "id": "091dd61f-f822-41b5-9bc9-96f5978db643",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b45a5efa-991d-49a5-a65f-6c5d9fb44dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f68f5f2-c6f8-445d-b00c-c18ba09670af",
        "cursor": {
          "ref": "81c0b153-ccac-42bf-939a-cb80786421ee",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "51171341-2745-45d8-b5bc-21d06d3962c0"
        },
        "item": {
          "id": "2f68f5f2-c6f8-445d-b00c-c18ba09670af",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fd4f4b3d-aab7-4c78-b951-54c3f0775715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40335358-a3b8-45be-8872-a609b4324d94",
        "cursor": {
          "ref": "c3b2fc0e-63e7-4275-83eb-1778f83ad074",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "869b9cfd-0edb-411b-ad15-454f09c6ab05"
        },
        "item": {
          "id": "40335358-a3b8-45be-8872-a609b4324d94",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f82822a4-19ba-4b94-afae-04122b980915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd62d09-0dd9-4b9c-8e7d-473dbad515c8",
        "cursor": {
          "ref": "f1a54690-211e-41e2-82bf-cbf6edbc3976",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "82d294c9-51d1-4660-bbbe-39c280a5cb5b"
        },
        "item": {
          "id": "2fd62d09-0dd9-4b9c-8e7d-473dbad515c8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fa9bf3df-8edd-4e41-b864-25ee2131a31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecdecab-2c10-4505-bf0b-bee231aaaa4e",
        "cursor": {
          "ref": "46f824dd-c658-4ca2-ae58-eb332dd38b68",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cda89314-bf9a-47ae-bbf8-16b1bc279f14"
        },
        "item": {
          "id": "1ecdecab-2c10-4505-bf0b-bee231aaaa4e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f362c694-5e15-40b3-880b-ea20ab6803a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb691f5-fb84-4156-93a1-b6ef90603363",
        "cursor": {
          "ref": "4a4de9fa-2604-4670-804b-6a90e2edd1c1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6d743e0e-9925-4d8d-8f43-69ec654f8550"
        },
        "item": {
          "id": "3fb691f5-fb84-4156-93a1-b6ef90603363",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fde485d0-f0f8-43f9-a8e4-30f8502a1053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e479f8af-59c1-48ba-922b-e5489a8d8f7b",
        "cursor": {
          "ref": "fb111ecf-f935-41dd-8355-dfdd8610c676",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d16f8461-e791-4a02-8ba8-bfea7a09711b"
        },
        "item": {
          "id": "e479f8af-59c1-48ba-922b-e5489a8d8f7b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "528fbcbc-f010-46bc-80a1-150d9b3403c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9b2a4c-b01f-4ef5-8786-c1ca128f2de3",
        "cursor": {
          "ref": "36ac3203-aa8f-4fe3-9538-2793a3c4cf52",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "53aff540-b75c-4606-bfe9-f7bcc64fc795"
        },
        "item": {
          "id": "0f9b2a4c-b01f-4ef5-8786-c1ca128f2de3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ffc6a64e-a08d-4465-9ddc-56165a0b6b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0c1045-74af-4520-af6b-ad4cd4146a80",
        "cursor": {
          "ref": "de125305-02c9-4712-a560-425348ebe89d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "397bdea3-92cc-4bb3-b550-f64b529eed6c"
        },
        "item": {
          "id": "7a0c1045-74af-4520-af6b-ad4cd4146a80",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4156a44f-7274-4acb-b42f-a383ab54f3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3addc1-d06a-490d-8048-61cc8f43fc22",
        "cursor": {
          "ref": "8b995078-b795-47a4-824c-057fe88f878a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "88891ecd-922e-420a-b053-716ed2998490"
        },
        "item": {
          "id": "7c3addc1-d06a-490d-8048-61cc8f43fc22",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "da9886f8-d24d-4fbf-ad9e-91619bd955c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c048ac-bb02-4b18-b723-47c372239af5",
        "cursor": {
          "ref": "dbcfeb6d-cc2f-48f2-ae24-2eb22cbd3216",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "65ce9978-82d8-4edd-80ff-a326389dad74"
        },
        "item": {
          "id": "06c048ac-bb02-4b18-b723-47c372239af5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "58776481-a12d-4f4c-8508-a3738ef4b652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0615e94-8263-4581-b0d1-f6b63d4f2ba2",
        "cursor": {
          "ref": "46ae4388-ce7e-41ac-82f6-36ecfd81022d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b39bdbea-11db-4644-a35f-b2107cbcd159"
        },
        "item": {
          "id": "c0615e94-8263-4581-b0d1-f6b63d4f2ba2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7be04dce-c69a-48cc-be44-36debcfc3739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901416de-26e7-43ac-b8b3-8a783b0632f2",
        "cursor": {
          "ref": "8ec52208-0cc5-4d7d-9df4-240e01847e03",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "01876fe5-5598-45e1-8393-4d57008eb33b"
        },
        "item": {
          "id": "901416de-26e7-43ac-b8b3-8a783b0632f2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e4e67f4f-578f-433e-8539-277d6c183770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5306fec2-b26b-4102-8ae7-5e70f68db013",
        "cursor": {
          "ref": "f2651c9f-092d-44ba-aeef-d756efcb0b42",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bf81dd19-0d97-4802-909b-88e1065f795c"
        },
        "item": {
          "id": "5306fec2-b26b-4102-8ae7-5e70f68db013",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "96f8eada-869c-4f3c-b940-b5ae6a66ed02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a7b096-c259-4919-b425-6af6de75aea5",
        "cursor": {
          "ref": "a5a49416-76e1-4060-a3b1-407581ace828",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d7551f35-daca-4ba4-915f-027c466dbacd"
        },
        "item": {
          "id": "a1a7b096-c259-4919-b425-6af6de75aea5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e5850b8-31cd-4f68-a076-be88c1435871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd5fbec-3340-499b-b48c-eb875a90a047",
        "cursor": {
          "ref": "1ddbc95b-72ae-4d09-ab86-b94075830b40",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "899ee9fd-c321-469d-9101-c972ed3537d7"
        },
        "item": {
          "id": "6cd5fbec-3340-499b-b48c-eb875a90a047",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9a366a65-f086-4dec-9e01-000551b3e02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8e39c4-b766-42e4-874d-a4bda95de7ea",
        "cursor": {
          "ref": "2485a083-03cf-45db-958a-7030dda8c1b4",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a150a7d2-3768-4212-a825-60a10860133a"
        },
        "item": {
          "id": "8f8e39c4-b766-42e4-874d-a4bda95de7ea",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1d28ce6d-7e5a-497e-a2a8-1a15a66a6861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcedc32-bfd7-4180-888c-975cac30f99d",
        "cursor": {
          "ref": "307e40a4-9542-47cc-855e-a39ac7a80d45",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c09d1727-9664-4d53-8052-3f7134bb0edb"
        },
        "item": {
          "id": "ffcedc32-bfd7-4180-888c-975cac30f99d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eb3ebc88-2d86-42b2-b366-6862cad4c541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1eb690-bb8e-468d-ba42-c13982d1dbcd",
        "cursor": {
          "ref": "0eef089b-514b-489f-a64e-f30398e8af54",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a867629e-28ee-484c-98c2-77ebfe6985fa"
        },
        "item": {
          "id": "bf1eb690-bb8e-468d-ba42-c13982d1dbcd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9609ac93-6cc3-42a9-9f4a-00143e354b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b19a429-f4a6-4bda-8864-81c9bc64f0e0",
        "cursor": {
          "ref": "ce6398ec-1850-4357-abf1-cdad97a980fd",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b7ede035-7ee6-4716-9519-df1505b901de"
        },
        "item": {
          "id": "2b19a429-f4a6-4bda-8864-81c9bc64f0e0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7a0ca340-fbff-40ad-a186-6e656559d1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0176d693-f752-4973-a455-2346c6526914",
        "cursor": {
          "ref": "3e30db96-e95f-4a83-90c7-0e17936babde",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c8ced864-2a58-4a73-8ee1-16e12f7f8970"
        },
        "item": {
          "id": "0176d693-f752-4973-a455-2346c6526914",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a98b45fa-00a9-4740-8c10-7d872b603f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0313123c-5db2-433d-8fcb-c5d9efaa7d6f",
        "cursor": {
          "ref": "37dc6a68-2018-484b-bc23-a7ca9a18e5a4",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2e275bb0-14ac-4ea3-b8f9-b8634a241dd4"
        },
        "item": {
          "id": "0313123c-5db2-433d-8fcb-c5d9efaa7d6f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9bb74143-a3a9-4964-87ad-5c9116fb06aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7ba282-266a-4e1f-8068-abf1d869b8ec",
        "cursor": {
          "ref": "def3a73d-d9aa-4bc5-976a-23ef4b06efc7",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8320d645-13ad-45a1-9113-b73420aba4ac"
        },
        "item": {
          "id": "ee7ba282-266a-4e1f-8068-abf1d869b8ec",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "17b6c739-fee4-45c2-910a-0526d00a9dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f548a344-cf33-49ae-bf4a-e263e46acac7",
        "cursor": {
          "ref": "0eeebd66-503b-4d1f-a3dd-36f2550baa17",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8191e1cd-9bfe-4e93-a19b-2fe9b265c535"
        },
        "item": {
          "id": "f548a344-cf33-49ae-bf4a-e263e46acac7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b285ed0d-31b3-4a83-a7a0-5befcf547f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8e8bc5-ac1c-4944-857c-673a516befd9",
        "cursor": {
          "ref": "b942e0bf-1bfd-4c63-b813-727752bc20b3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c7920a2f-7111-4267-83e5-4ede4a47c814"
        },
        "item": {
          "id": "9d8e8bc5-ac1c-4944-857c-673a516befd9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c8839ceb-ec70-404d-b8df-7f3725ff449c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521df0ed-c6f2-49b9-853c-8a7c26f46c2d",
        "cursor": {
          "ref": "263ab6fa-9d7d-405b-830f-b1db841ec1e9",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "289dd9d1-3c13-4fcc-a2a7-e2e0dd688af2"
        },
        "item": {
          "id": "521df0ed-c6f2-49b9-853c-8a7c26f46c2d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "56455694-9a1e-4995-a5f9-a878824db938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec201527-44ea-4133-a28c-60e04a047107",
        "cursor": {
          "ref": "81e1f108-2767-4cc2-b896-5e0dc067b3fb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3c31e141-3983-426d-8e8a-b7849b868145"
        },
        "item": {
          "id": "ec201527-44ea-4133-a28c-60e04a047107",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30981632-fffb-48e4-ac82-588b8704966f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4f7766-54a3-4e72-b942-15b7aae03227",
        "cursor": {
          "ref": "357e0521-bd51-45b2-ae6c-736bfaad0ef1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d37834a2-3a77-4dc6-9877-3c72f92802bc"
        },
        "item": {
          "id": "de4f7766-54a3-4e72-b942-15b7aae03227",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "30f97513-54f0-44db-b04a-c4ce898ca5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590e8c65-bb30-4e8c-96af-d860ed572099",
        "cursor": {
          "ref": "15a525ed-2d8a-4262-aa22-98fdd84c41de",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4fbef9ba-58b0-4f04-bf26-c6a1978fca83"
        },
        "item": {
          "id": "590e8c65-bb30-4e8c-96af-d860ed572099",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "34d5b23b-3412-4a19-8cd6-08f4f8f4148f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5574c5-a097-4940-bcb3-29e7815280ae",
        "cursor": {
          "ref": "1d8f15dc-5f31-4758-af57-3ef15f0cca9d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6b6ea503-6c5b-4f5d-bf86-1f5ffb520abb"
        },
        "item": {
          "id": "cc5574c5-a097-4940-bcb3-29e7815280ae",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "42e5081f-619e-4041-9712-44a4256e0e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3fa504-68fe-4d83-a917-1b7969981506",
        "cursor": {
          "ref": "ef3fdab1-6ac0-4d0a-902d-ce4ab2b3e81a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0d2f2b58-17c8-4633-b974-2c65cf68f036"
        },
        "item": {
          "id": "fa3fa504-68fe-4d83-a917-1b7969981506",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "25ba8314-626e-4699-9f8d-ae0435a66caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669b7e35-1b39-4f36-86f2-c7980c175e82",
        "cursor": {
          "ref": "3415bd15-9911-4686-a4bf-7c3365cabee9",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3228ccf9-84ca-49d3-880d-57dc8ca56d2a"
        },
        "item": {
          "id": "669b7e35-1b39-4f36-86f2-c7980c175e82",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3506d079-12a7-4602-a77b-7d0bb6cb6ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3d2b8f-7908-4ee5-b38e-5c99b1aa3038",
        "cursor": {
          "ref": "aa0c9fea-86e5-454c-b2e5-e65754b77f03",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "270f8e91-d04c-471c-b64c-121a000d9e82"
        },
        "item": {
          "id": "7f3d2b8f-7908-4ee5-b38e-5c99b1aa3038",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "60a02965-307c-454a-b9ff-a62f69b6bfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025eaa16-ab2b-401b-b38c-8f0d29d22e45",
        "cursor": {
          "ref": "134c1351-1940-41c6-898b-35ff0d5de4a8",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "add170d9-9cc6-4a35-a654-6b8a281177d3"
        },
        "item": {
          "id": "025eaa16-ab2b-401b-b38c-8f0d29d22e45",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cd9fa617-22c5-418f-bcb5-d4b395ff3f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409f91d3-7e32-4fc1-ab50-162e707b9f38",
        "cursor": {
          "ref": "abaa6ff7-91a8-453f-b5d6-0819d8ba4566",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7e28a0fb-7017-41a7-9e6b-3a8c6420a45c"
        },
        "item": {
          "id": "409f91d3-7e32-4fc1-ab50-162e707b9f38",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d89f5927-ae77-46b1-b050-5f0fbcfada2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3edefd-47af-4d6f-817c-bd482d561668",
        "cursor": {
          "ref": "4827c407-514e-4538-8937-64d3e0ee7fa8",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0114e921-3a6f-45de-ae7f-03c350fe81ad"
        },
        "item": {
          "id": "cd3edefd-47af-4d6f-817c-bd482d561668",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "63f77155-0022-47e2-b0d6-8e906ab7f2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b0d15c-8fbe-4935-b13b-0bb53ca3a6ec",
        "cursor": {
          "ref": "d89799f6-b00a-469a-b6c3-8f0c5a0c4520",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "055376e1-7355-466e-a219-20e9445ac4f8"
        },
        "item": {
          "id": "06b0d15c-8fbe-4935-b13b-0bb53ca3a6ec",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "66c56adb-5124-4479-aec1-e0f3682ce1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49bc207-d0a1-4a7f-98ff-0b8fef999f93",
        "cursor": {
          "ref": "a6297b0a-072e-4550-923d-fae604368b49",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3df137a7-309d-4517-b4fc-3e01bfffd91a"
        },
        "item": {
          "id": "c49bc207-d0a1-4a7f-98ff-0b8fef999f93",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0e72cad8-4cba-487b-982c-dd24b2588d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40559df2-b1ad-42ed-be5e-c062821a31a6",
        "cursor": {
          "ref": "d88481c2-408c-4785-b51e-b5cd30782650",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "998264d4-15fb-4762-91fa-6d0e89e3605b"
        },
        "item": {
          "id": "40559df2-b1ad-42ed-be5e-c062821a31a6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a4958ec2-ca9d-4e1c-8882-79e828c086dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489a2e26-4b68-4f12-a29a-541a2316d503",
        "cursor": {
          "ref": "211c7413-eaa1-448a-a806-2181850516cc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b4a1f0e4-5b21-4869-b905-524b3a7f73a5"
        },
        "item": {
          "id": "489a2e26-4b68-4f12-a29a-541a2316d503",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3fa59e69-dd3a-4131-b3d2-53b63a89f599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f896bd0-1bd2-4f23-a9c4-6bcc7c0183d4",
        "cursor": {
          "ref": "6c334f5b-999a-48fe-a9e2-d55bea3a58c9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "27fa643b-f823-4233-a4b0-476fbedf88fa"
        },
        "item": {
          "id": "6f896bd0-1bd2-4f23-a9c4-6bcc7c0183d4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3c0e7d64-d010-4be4-97f4-f7e9d58a1357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4465a15a-3be2-4438-af63-aebdcfb05497",
        "cursor": {
          "ref": "ea8ed151-07a4-4ea3-a3ce-38e4a26bcebf",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1df9c695-be72-4a2e-ad65-f20bea0631cf"
        },
        "item": {
          "id": "4465a15a-3be2-4438-af63-aebdcfb05497",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "25c486a7-e137-43df-9029-b1350f1f0af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b371d1f3-6609-4d58-a020-d52fef0d64cb",
        "cursor": {
          "ref": "7c83fcd5-ac10-441a-909b-fb503017392e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "516c642c-5745-4485-ab5b-3ac6aadac780"
        },
        "item": {
          "id": "b371d1f3-6609-4d58-a020-d52fef0d64cb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ea350115-deec-4b05-ae43-594943beb1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a226f6-d9d2-43e9-ad12-31367825e5c8",
        "cursor": {
          "ref": "b487c682-0f55-43ca-82b0-add66222e510",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7bd7aed1-5859-44b5-8532-b4d99f33732b"
        },
        "item": {
          "id": "22a226f6-d9d2-43e9-ad12-31367825e5c8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2c041bff-e455-46e8-b963-2ba77dd39ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eaee77-11a3-40fa-9571-1f7d031983f2",
        "cursor": {
          "ref": "c4960b59-92fb-48a8-a2a4-e12ee43dd409",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "790194d5-ed38-4ff9-a580-20610adb5355"
        },
        "item": {
          "id": "72eaee77-11a3-40fa-9571-1f7d031983f2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6c21f953-a518-4a7c-ae3b-9dd56fa6ccf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fa12d3-7eff-4c1a-9c1d-3c1bbcd7dc39",
        "cursor": {
          "ref": "7f68dca2-e188-40ee-8f6a-c949ebb7771e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b108d6d9-8440-448b-86de-7191fc615d90"
        },
        "item": {
          "id": "c2fa12d3-7eff-4c1a-9c1d-3c1bbcd7dc39",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "47b0c186-8033-482c-9b64-36bb3cd678ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e11452-da60-4a71-9eb6-a6fcf8c086d2",
        "cursor": {
          "ref": "cace1a11-b54c-4e22-8edc-01c8d400940b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cee0e79b-e102-4251-9ca8-90c6608b0ffc"
        },
        "item": {
          "id": "d3e11452-da60-4a71-9eb6-a6fcf8c086d2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9df825e2-2192-4a97-9767-e7722e46a30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a205ed65-9829-475e-9aab-70e9a0157122",
        "cursor": {
          "ref": "90266049-fefc-42ae-881c-06f4f739f648",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2bcd0f47-8b59-4cb9-ad47-0f986dd19bcb"
        },
        "item": {
          "id": "a205ed65-9829-475e-9aab-70e9a0157122",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4df6be95-d2b1-4012-a05b-6f95006290be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d892369-6657-44fb-9009-ff3e9acb63c0",
        "cursor": {
          "ref": "d1d59192-92da-4945-b9bc-473353e7c8f3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8946f4ce-a096-48b1-a8e9-83a85c32eef5"
        },
        "item": {
          "id": "7d892369-6657-44fb-9009-ff3e9acb63c0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b5b14fdd-15c4-46f9-a057-9ad4a0544d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cf515a-568e-49e1-a063-b9ecd0feb3f5",
        "cursor": {
          "ref": "70deda48-d835-4e8e-83b7-89eaf0f6be69",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "40e3fd07-d856-440e-9baa-33eee32242cf"
        },
        "item": {
          "id": "68cf515a-568e-49e1-a063-b9ecd0feb3f5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2f7da145-a9e2-4497-abff-bae3f850a70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13a5ad3-b6db-4707-a595-c03f3d7470d0",
        "cursor": {
          "ref": "dfa6cb2c-95a3-489e-a38e-6f326de01c63",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6f9f47b7-ba2d-4158-819f-5cfff8d15911"
        },
        "item": {
          "id": "d13a5ad3-b6db-4707-a595-c03f3d7470d0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6c9d611c-254a-4df7-98be-d2c862be5ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0b9012-09bc-4bd3-9f95-f405f417b340",
        "cursor": {
          "ref": "31ef930d-fbc6-4496-8a3e-9f25df1bb94c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fa1eb06e-6672-4701-ade6-6fbe9374504d"
        },
        "item": {
          "id": "3f0b9012-09bc-4bd3-9f95-f405f417b340",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dd81417b-c974-413e-a9cb-c9e4798a7300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2392d484-787c-41ad-a724-725e2a6ecb33",
        "cursor": {
          "ref": "6cb23cd9-0720-4b8d-ba05-0e3f3f2019d6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6ee6ef27-d9d3-4316-9947-22da0c49491a"
        },
        "item": {
          "id": "2392d484-787c-41ad-a724-725e2a6ecb33",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "13f7788e-ebd8-4392-a9f9-f7bd114120a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4fc8aa-1b12-4164-b949-27da74c13efe",
        "cursor": {
          "ref": "886a78fd-758c-4474-8424-2e0c964b6549",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e46831f1-8480-437a-b8d2-59eee10edc5c"
        },
        "item": {
          "id": "bd4fc8aa-1b12-4164-b949-27da74c13efe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "db5c285d-a78e-4a97-a4ef-9e24b52933ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970dd8d8-0dfa-4401-923a-c338c591f230",
        "cursor": {
          "ref": "6ddf27bf-2fd6-4bd6-85bd-0d742d99018e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4b6dc245-4d4d-4e88-ab0a-c913bf03ad47"
        },
        "item": {
          "id": "970dd8d8-0dfa-4401-923a-c338c591f230",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "25a09d5d-4bbb-4c35-bf78-6234dbdda165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8830cca5-961d-408e-a6a9-14c98f04f2a5",
        "cursor": {
          "ref": "75e06e8e-05ec-4d4e-baa2-b22ee674782f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d2983ede-a1c1-426d-9608-0aa4da2465e1"
        },
        "item": {
          "id": "8830cca5-961d-408e-a6a9-14c98f04f2a5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4259fd8d-10d4-4e74-83a8-c4b6aa326cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02241153-9578-40f8-a79d-e4e8ebec5124",
        "cursor": {
          "ref": "a2a041f0-9e78-48b0-ba48-f6c305217eaa",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ade48c3a-c429-45c4-a402-5030766059ab"
        },
        "item": {
          "id": "02241153-9578-40f8-a79d-e4e8ebec5124",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9df16565-add6-4bfd-b95e-0c7766d74011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6526c9de-9b36-4301-8f33-353949e6e938",
        "cursor": {
          "ref": "5345c7a8-a489-46af-8ce9-f39150b060bd",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b554cbca-c147-4a22-b915-40a17b77fd43"
        },
        "item": {
          "id": "6526c9de-9b36-4301-8f33-353949e6e938",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "963e1106-cf9d-4919-bd7f-f103455b5b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cc295b-1993-44af-94c1-015865fe428f",
        "cursor": {
          "ref": "8b826979-d397-414e-be16-6fef08c6cb5c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "91f1cf81-b3be-4a94-a80f-f13cce3689fd"
        },
        "item": {
          "id": "92cc295b-1993-44af-94c1-015865fe428f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "768a44a0-9c24-4744-bb8f-0a545c5593ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a6552c-e84a-4ca9-8596-1f9700008216",
        "cursor": {
          "ref": "82076d25-5ab7-4cbe-bdc2-2d0e556a77e3",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a7d97c38-cc0f-44dc-b414-e577713c5d77"
        },
        "item": {
          "id": "f1a6552c-e84a-4ca9-8596-1f9700008216",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8ff2f909-613b-4d9b-b8fb-6fadd79a34cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a609e75e-3a22-421e-a5f0-ac12688cb453",
        "cursor": {
          "ref": "90b27b9d-7d0a-416f-85f7-f4efe9679768",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9843355f-5647-4198-a328-3fe8cee38157"
        },
        "item": {
          "id": "a609e75e-3a22-421e-a5f0-ac12688cb453",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "215b1766-f427-4402-935a-6892789d0b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2cd2b6-4e45-431e-800e-fd5221a0999b",
        "cursor": {
          "ref": "6e44be0d-aef6-4b35-9869-2c17dad648a6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d0bbef05-8b77-4781-974a-97f02b4b2f82"
        },
        "item": {
          "id": "4f2cd2b6-4e45-431e-800e-fd5221a0999b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "983d3a64-ce57-4ab1-b4bc-088403fcf545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e7a382-a9fc-44c8-ba06-0ed065e777f3",
        "cursor": {
          "ref": "b374db63-d953-4670-b9e1-1e1106f01904",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0ceccbb7-52fc-4d70-9419-bdf89b8edbb7"
        },
        "item": {
          "id": "b4e7a382-a9fc-44c8-ba06-0ed065e777f3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fc2bb803-5601-42c7-ab7d-99fbdb47d3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8892d156-3885-4bfd-a3d8-79f7f1223c68",
        "cursor": {
          "ref": "c48c214a-497b-4b4f-9765-027c3478f560",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bb69501a-0595-47c0-9f94-b3b510dec5b1"
        },
        "item": {
          "id": "8892d156-3885-4bfd-a3d8-79f7f1223c68",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "11d87d98-bf68-4585-bb0f-d4f8368b0cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da439cbe-1c42-4f16-ade2-2e8951aaec4d",
        "cursor": {
          "ref": "8232d0bb-8a8a-4ccd-8d46-d257d176b14c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "64899bf2-7f02-4495-be06-734c7a36a37e"
        },
        "item": {
          "id": "da439cbe-1c42-4f16-ade2-2e8951aaec4d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2f7a34b4-91f6-4c5a-a13a-54a621776e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12170913-7861-44ff-abe3-b84ea309d87d",
        "cursor": {
          "ref": "3c51c1a1-842d-4c20-8550-4cc00a04e822",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "44254951-2041-41bd-b4a0-b88665615aa2"
        },
        "item": {
          "id": "12170913-7861-44ff-abe3-b84ea309d87d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a637d076-2160-4a36-84f6-125be62b68a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d2e02d-e050-472b-bec0-cf36ccd2f563",
        "cursor": {
          "ref": "dfab2b3e-f374-43f9-9716-67cd3a236798",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a293209f-1d84-4a5c-82b5-1df9edb461af"
        },
        "item": {
          "id": "70d2e02d-e050-472b-bec0-cf36ccd2f563",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "67757970-982f-430f-baff-d27c23e535f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa10a41e-4d5a-4c35-9db1-1a2830d9b192",
        "cursor": {
          "ref": "c9170c2b-4475-4299-ae34-817444f6f699",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a5e8e165-6775-4172-9c6f-b969031b4fc8"
        },
        "item": {
          "id": "aa10a41e-4d5a-4c35-9db1-1a2830d9b192",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "41772bea-0041-471e-8b05-9a21825eb88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a1a780-9117-4f2d-84d9-7d3bd65456cc",
        "cursor": {
          "ref": "964f04fb-3b39-4715-b8b5-67ba7be36066",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "56c8e446-c534-42ee-9e8f-1f99d0fe5799"
        },
        "item": {
          "id": "25a1a780-9117-4f2d-84d9-7d3bd65456cc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "97e0d897-6655-4ad9-a684-542548a138ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5a48f3-4933-4e22-91a6-5cd2fad90035",
        "cursor": {
          "ref": "2794118b-7109-45d3-87ca-d20912bfeb4c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7febf2cb-73bd-4873-898e-c8aa2c7d58dd"
        },
        "item": {
          "id": "bf5a48f3-4933-4e22-91a6-5cd2fad90035",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6e56e63e-2726-474e-b28a-cc7cfd27a15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d3616a-f975-4675-8606-098cd7b5732b",
        "cursor": {
          "ref": "c301b9f2-10df-44bc-99a2-ef28dd9c613b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cd324ad1-5dbf-4d55-9fab-db15955ffe47"
        },
        "item": {
          "id": "52d3616a-f975-4675-8606-098cd7b5732b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e59fe24a-c6e8-43d2-8927-87008d5c4268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810aec4d-6df4-432c-9e65-79dac5d0bfe6",
        "cursor": {
          "ref": "a5431bc9-9325-4161-905a-a5969e833a6d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6fa3bd27-35f7-432a-9e0e-f069c005845f"
        },
        "item": {
          "id": "810aec4d-6df4-432c-9e65-79dac5d0bfe6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f9e41c75-f847-4344-bd45-629ef982d554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c92172-a289-46e0-8be1-a1ddae20b4aa",
        "cursor": {
          "ref": "d899b76f-b32e-40f3-a6c0-297bc658b1ec",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "536ef1a6-59c3-4d09-b949-feb5f35dd946"
        },
        "item": {
          "id": "47c92172-a289-46e0-8be1-a1ddae20b4aa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dbded26d-89aa-46fa-b45a-40036d442301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993a6f6a-c8cf-4445-af48-dbdd71017aa2",
        "cursor": {
          "ref": "a0495700-4cb7-4c21-b5d6-729013bef2fe",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ad23f660-a2d2-423a-83b1-42ff7fb9ea81"
        },
        "item": {
          "id": "993a6f6a-c8cf-4445-af48-dbdd71017aa2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3602fa39-db35-439b-b7e8-92f1776a3034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d6b7ce-b0b6-4274-b479-3bfe921efbb5",
        "cursor": {
          "ref": "cb528b49-8d95-475a-950e-51a58b7eb11c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c1b58d75-f51e-40d9-9ab2-61c1efa6094b"
        },
        "item": {
          "id": "31d6b7ce-b0b6-4274-b479-3bfe921efbb5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2cfd0e72-c82d-4995-87ce-08c54d03c8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959cd386-96b9-4922-8c90-58030348d6b3",
        "cursor": {
          "ref": "aa3b2ac8-b2b3-4a44-b940-52531654a341",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "90810edb-4474-433a-8752-9f4cb6206a4f"
        },
        "item": {
          "id": "959cd386-96b9-4922-8c90-58030348d6b3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0a109fd7-0a56-4178-8be3-61d60c68899b",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "a4ed8115-518f-45b9-b8be-3f7e6bf4ea97",
        "cursor": {
          "ref": "2eee9be2-b2b3-4c07-b1d6-57c03eebd74a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "57c52d6e-abf6-41ed-86a7-73b298cfdcb2"
        },
        "item": {
          "id": "a4ed8115-518f-45b9-b8be-3f7e6bf4ea97",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5cedce7c-8d29-43ab-85f6-1e797ab17c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f3e776-0a23-4473-8f16-9b8d3dcda309",
        "cursor": {
          "ref": "1c7b9d3e-e42a-4e70-978b-0ecce82c548e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7356c288-312b-46a0-9b92-9b5036d4cbf5"
        },
        "item": {
          "id": "57f3e776-0a23-4473-8f16-9b8d3dcda309",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f4e89588-88ff-437f-a2a7-641a1e23e3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9899c637-14bd-42ca-880e-9191e2728786",
        "cursor": {
          "ref": "fc7300ff-29e3-4614-a852-5c606b8b088c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ee477a43-55e6-40a3-8b62-c258a8a5360a"
        },
        "item": {
          "id": "9899c637-14bd-42ca-880e-9191e2728786",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c95e9732-a406-4a73-affd-2b3414cb4fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e168fa99-286b-4322-95fc-b39a27b32a51",
        "cursor": {
          "ref": "97f00028-c350-4c8d-b878-c4b99923d701",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7e341e79-1564-4f78-b045-f9a9f21bd6c6"
        },
        "item": {
          "id": "e168fa99-286b-4322-95fc-b39a27b32a51",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "765f8f69-0ef9-4ed8-adee-323b734d83be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf6e3b5-51b2-424a-9013-4d7a3a64e990",
        "cursor": {
          "ref": "fd0516d3-6463-4dd0-98ef-37c942f60b3b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "41186b30-1961-48b3-ba5e-5ba703e6a522"
        },
        "item": {
          "id": "8bf6e3b5-51b2-424a-9013-4d7a3a64e990",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "04b03ce6-914e-400a-b2d3-de81c774e2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c88d925-3d9a-4c87-b34b-669635213c74",
        "cursor": {
          "ref": "b115d027-ca72-41e4-a92f-967e5488d492",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b181983f-3ec6-4988-94fc-912671723f49"
        },
        "item": {
          "id": "9c88d925-3d9a-4c87-b34b-669635213c74",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a3a9894e-7f1f-4b18-a122-04db61f4089e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cba5add-2b13-41a6-973e-ed8f1c5042ed",
        "cursor": {
          "ref": "272291ab-9035-4229-8226-42e78d53254d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "57de0752-5487-481c-978d-788d8a071372"
        },
        "item": {
          "id": "9cba5add-2b13-41a6-973e-ed8f1c5042ed",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "eb3152ce-1fd6-416d-8ff9-f14af368dc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db78386d-ecb2-4ddd-a24f-876d28702783",
        "cursor": {
          "ref": "70a9ab9a-351b-4308-ab12-13583e16b222",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8d3d7ad6-6c1f-4c2f-b4f6-f2f58c1abd28"
        },
        "item": {
          "id": "db78386d-ecb2-4ddd-a24f-876d28702783",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a2e4d264-1e2f-40dc-83e8-0a18e650f01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07760f1a-20eb-4846-8009-3d642c42e08c",
        "cursor": {
          "ref": "f88c30c3-4e98-4310-8c45-d96538d87d6b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5ed12039-2d63-4e69-87a5-3c111313919c"
        },
        "item": {
          "id": "07760f1a-20eb-4846-8009-3d642c42e08c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "163c2145-dcec-4910-bb3e-8fc940365139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a62557-0ba5-44e2-a39d-ea47ccacc3f6",
        "cursor": {
          "ref": "034b2406-b31a-4fc7-a8fd-bf77a580b942",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c937ac72-2780-4dd9-b124-b6b85ed18006"
        },
        "item": {
          "id": "a5a62557-0ba5-44e2-a39d-ea47ccacc3f6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "94bb7ff2-883b-48f7-bbc9-c84eb3c01aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c76e41-14be-4ff3-990f-92364490be3e",
        "cursor": {
          "ref": "e04f51f0-189c-456b-b9a5-be891c682157",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ee295c85-76c9-47f2-bc64-2348aaecb64a"
        },
        "item": {
          "id": "07c76e41-14be-4ff3-990f-92364490be3e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "45dca436-cb8b-454e-bf71-32f2d7e6144a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b64deb-b0c6-4aa2-8cfb-8d2c0aa5433b",
        "cursor": {
          "ref": "a6616f59-1a9e-41d6-9bab-4778f4635e52",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9cbd4cb5-5200-4181-8a2b-722ff490342d"
        },
        "item": {
          "id": "46b64deb-b0c6-4aa2-8cfb-8d2c0aa5433b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0b525da1-8320-4b24-bd21-5ba73f0737ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35456fd-9658-49d9-87b6-fb3e68ce03f3",
        "cursor": {
          "ref": "3a84e24a-6190-4cd6-bbe6-f6b966544508",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b837a18f-d6c1-470a-8d61-db6a43d8ee5d"
        },
        "item": {
          "id": "e35456fd-9658-49d9-87b6-fb3e68ce03f3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2225b85d-c063-41bb-9b2f-b41009540bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e264d0-2168-48fe-8f45-249a1684cd94",
        "cursor": {
          "ref": "866a83af-79ec-49a0-a998-ae818f05bae7",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e5b290dc-2803-4f9d-bfa1-d61d939ef3b8"
        },
        "item": {
          "id": "b5e264d0-2168-48fe-8f45-249a1684cd94",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dba9fe6a-a2a9-4651-a6a8-80f1624676b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4135efdc-b85d-435d-ab1c-afbe39d0e84a",
        "cursor": {
          "ref": "77c1e43a-2e47-4c69-91c6-98c81030153d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9c433f2f-bafd-469e-89c4-408492213e95"
        },
        "item": {
          "id": "4135efdc-b85d-435d-ab1c-afbe39d0e84a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "26587f75-7213-40c3-b029-347d8b495ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4198837b-4e1f-4998-8814-bb73e9c60642",
        "cursor": {
          "ref": "4a364fbb-7767-4c2b-a9ad-b248d79bdfa1",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ea1b64d2-e889-4323-94f7-30f20e365a33"
        },
        "item": {
          "id": "4198837b-4e1f-4998-8814-bb73e9c60642",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "934004a9-a5d6-4074-b756-7d73e503fc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498aca0b-1f28-463d-a8ed-1dfac33da36f",
        "cursor": {
          "ref": "73835ebf-7b69-4d0b-ac04-9493394e668d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8ec98cb7-d0d1-404c-bd5a-9c0ddd119621"
        },
        "item": {
          "id": "498aca0b-1f28-463d-a8ed-1dfac33da36f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "26151047-d15e-400d-a6ac-c3ddbec750f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7f7438-7b5c-4639-bb92-9caa5197744c",
        "cursor": {
          "ref": "f6fc4201-b9a6-42e9-a90f-724fe9c14945",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f98bfeba-da00-4484-af0d-541f7d973b7b"
        },
        "item": {
          "id": "1d7f7438-7b5c-4639-bb92-9caa5197744c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7beb9ce6-1e64-4bc7-8e54-f2a47eb8c56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eeb91b-f611-4197-b962-218204157f42",
        "cursor": {
          "ref": "44846953-b7b7-402c-9e62-8daa14f7528c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "400c2460-01b1-43c6-b316-8e7a3beb8303"
        },
        "item": {
          "id": "69eeb91b-f611-4197-b962-218204157f42",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "26e14758-6dc0-41ff-92b9-06cf57d7c170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41c291d-094d-4a80-996f-b8cfceff74cd",
        "cursor": {
          "ref": "a272145f-4d99-4540-840c-983cc8a7fe51",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "00e55a7e-a926-4ff5-ae30-03326b794b71"
        },
        "item": {
          "id": "a41c291d-094d-4a80-996f-b8cfceff74cd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "14189ae1-1eac-4be9-8fbf-7fb4559d250d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0c85a8-2652-4473-a206-97bd1e5afbdd",
        "cursor": {
          "ref": "61416322-e85d-478f-8449-bf1754f27518",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9e56c83d-d7ba-4ce6-9e57-2b89f0e56f19"
        },
        "item": {
          "id": "2c0c85a8-2652-4473-a206-97bd1e5afbdd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "60ca6202-7c7e-49fe-bc87-a6de6168128c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640e7a21-8799-4666-a4db-f43e433a8a90",
        "cursor": {
          "ref": "7253f644-b426-425b-b02e-44c275d116ab",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bd38778f-e863-49d3-91bf-76e62321b880"
        },
        "item": {
          "id": "640e7a21-8799-4666-a4db-f43e433a8a90",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3e653dba-36fc-4b3c-ae45-ecbc88fbb9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50712de7-a1e0-4270-8dad-c13cea0fe349",
        "cursor": {
          "ref": "91a396b4-b0f9-486a-806e-38910b60cc63",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9d2f1911-375c-44a1-8119-3314c3bd94af"
        },
        "item": {
          "id": "50712de7-a1e0-4270-8dad-c13cea0fe349",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6837aa37-9550-40e8-afbc-550d470a38b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5083011b-a9c5-43d0-b43c-36bec8c2282c",
        "cursor": {
          "ref": "3de97153-3a12-44f8-98a0-a8637fde73e2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "01cec7a3-2d82-4c57-bf3a-667933fabbf4"
        },
        "item": {
          "id": "5083011b-a9c5-43d0-b43c-36bec8c2282c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3c24a808-40a2-44c5-ac27-2ba384427eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcecbc1-61c3-45df-aa03-6e2b11d64a94",
        "cursor": {
          "ref": "a1ab73b4-0856-4682-943f-62bc180284e5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "08bb3f33-ac3b-496c-964c-c18d95cda4d3"
        },
        "item": {
          "id": "dbcecbc1-61c3-45df-aa03-6e2b11d64a94",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e8e4b42f-f251-4baf-a59c-78b0dd7154e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5409866a-72f8-42ee-890b-b83bed0d869e",
        "cursor": {
          "ref": "cb4505d7-81cf-43e9-beaf-fbb89849d6b3",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "86bb6c66-9bb5-4b81-ba1e-9146f93099ec"
        },
        "item": {
          "id": "5409866a-72f8-42ee-890b-b83bed0d869e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0890d44a-c96f-4d3e-8596-6967e72a18bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6be755-34fc-402e-bf34-3440f84c68d3",
        "cursor": {
          "ref": "8ccc635d-ca58-4db5-8af6-06ac4fbefb49",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2d836005-a3c0-45a2-bc42-f921b749c517"
        },
        "item": {
          "id": "fe6be755-34fc-402e-bf34-3440f84c68d3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "37edd191-5ffb-4e6c-8681-eaf8a5b52e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c497214-7c00-48ce-a96a-b5d5a84efc1a",
        "cursor": {
          "ref": "13dbf3c5-5e07-4230-96ea-327534d41b0b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6f6bd570-e93e-4c41-9e5a-110cbf7fd125"
        },
        "item": {
          "id": "4c497214-7c00-48ce-a96a-b5d5a84efc1a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f500a79e-aab4-4c4e-8731-a5f13af0967a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fb7ba4-c067-4345-b568-3d3e71b6f074",
        "cursor": {
          "ref": "168a8475-b744-4f01-b363-aa0d4be90835",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9a999f80-7aab-4fa5-9e48-12d589a64887"
        },
        "item": {
          "id": "64fb7ba4-c067-4345-b568-3d3e71b6f074",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9cebbf5b-4350-4d50-88d9-f7502a16c356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8269f81d-a66e-4dd1-b844-348a73f96239",
        "cursor": {
          "ref": "4f839849-dea3-4e63-b0a3-f97f5fb569bc",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c03dc520-1e4f-42f8-a984-879fb25ff3bb"
        },
        "item": {
          "id": "8269f81d-a66e-4dd1-b844-348a73f96239",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dd1ba5be-3bec-44e3-9bc8-04531424d9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce06e9c-3628-4ed3-8db9-7f416eefdb71",
        "cursor": {
          "ref": "e91cfa19-e764-45b9-8798-9267553dbafd",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5b8e4e9b-1368-4d52-85a4-a50da47321e1"
        },
        "item": {
          "id": "3ce06e9c-3628-4ed3-8db9-7f416eefdb71",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7580980a-d0e9-4dd7-8845-c88d29c3b9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71c5b50-3ce9-4194-a910-a591ef47454f",
        "cursor": {
          "ref": "264d0314-c853-44ef-a8a2-faf5a8cc6be6",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3dd56cb7-4fb5-455a-9b38-5dca07096d72"
        },
        "item": {
          "id": "c71c5b50-3ce9-4194-a910-a591ef47454f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "43806a0f-46eb-4800-9df4-22057189e08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a0e58d-fbad-49fc-b199-437ccf23dab1",
        "cursor": {
          "ref": "41dac1b3-2244-4996-b429-718a99948f50",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a2cc7bd5-87a6-48a9-8fe8-1a42e0a63113"
        },
        "item": {
          "id": "57a0e58d-fbad-49fc-b199-437ccf23dab1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "01f74ab6-6ea5-4a55-8105-da584766ef59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1591483-8517-40a2-9e8d-b3d585ac98d0",
        "cursor": {
          "ref": "42ac1ddc-50f8-4aed-b2b1-99bb58c440c1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d3f61e1c-35f3-4aff-95da-6d276fd2a2dc"
        },
        "item": {
          "id": "c1591483-8517-40a2-9e8d-b3d585ac98d0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d1788ae2-8a99-4476-997c-a9da5186ae1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be133bfc-da83-4c19-8f84-b00fd3090f84",
        "cursor": {
          "ref": "aa04012e-7871-46e2-87c1-ed096122d4e7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2de9015d-420b-4d38-a98f-7b59e2fa5442"
        },
        "item": {
          "id": "be133bfc-da83-4c19-8f84-b00fd3090f84",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a09f1926-76c5-4fba-93ad-18ad23bc35a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd06b47-ad6f-4933-806e-0ceb406db298",
        "cursor": {
          "ref": "d8f10649-2d70-4822-b2d7-de0575b0a991",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0f00c4d3-ee05-4ecc-b656-4a6c57e799c6"
        },
        "item": {
          "id": "7cd06b47-ad6f-4933-806e-0ceb406db298",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5dac3826-eed8-436c-82bd-6b9889fd5f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317999bf-b87d-4da8-a13d-109d0c03c464",
        "cursor": {
          "ref": "9a7fd366-4cb4-44a1-830b-e3401308057e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4811e1d0-0ff6-4ed8-9e99-6a5060320a8a"
        },
        "item": {
          "id": "317999bf-b87d-4da8-a13d-109d0c03c464",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1d83b20d-0a65-424c-816d-2868b2c6f801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f20d89-9af5-4b23-80a9-327e262a4480",
        "cursor": {
          "ref": "f3291587-0c44-4195-9ddb-22c4acb2856e",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dcd4004d-eca8-4d4b-89c5-3fa89c1ce2e5"
        },
        "item": {
          "id": "e6f20d89-9af5-4b23-80a9-327e262a4480",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9a05d207-5cf7-4422-9b8d-49f48e3786f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f22154-96a9-477e-b38e-a89b9124d2d9",
        "cursor": {
          "ref": "a26e06b3-c777-4a33-8db9-74fa71687370",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5737daa7-0908-4fe4-8736-5fb2c4e6acd5"
        },
        "item": {
          "id": "18f22154-96a9-477e-b38e-a89b9124d2d9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6388b7a3-7fe5-4b1c-98c1-74a6aca28e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cc0eb7-80e5-4e45-97b5-78c6137e8c2d",
        "cursor": {
          "ref": "2c8d3435-653d-48c7-a774-e30eb4f8e88d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "351c9d83-2a99-436f-9d4c-09e461b5561e"
        },
        "item": {
          "id": "37cc0eb7-80e5-4e45-97b5-78c6137e8c2d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cca63e5e-1482-444c-ae5a-c8a674a097b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeee2f76-3a99-4ec0-b927-dcefc9036cad",
        "cursor": {
          "ref": "f6265221-685e-49a8-b2ed-19f7f1b3a288",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c20db17b-643d-4f8e-9605-4463c66a985f"
        },
        "item": {
          "id": "aeee2f76-3a99-4ec0-b927-dcefc9036cad",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f780b175-d851-43f4-a29b-dbcf30ff15a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8512685-fd75-4598-ae28-efa3a0760155",
        "cursor": {
          "ref": "d1133943-9d42-4dcc-8415-b9f93ac7685f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ae0ce20c-acfc-4084-9840-08fcb37ff64f"
        },
        "item": {
          "id": "c8512685-fd75-4598-ae28-efa3a0760155",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c238afd2-4289-4658-a1e8-aeaed3cc2c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df80f576-5808-45f7-a283-f13e2053af4a",
        "cursor": {
          "ref": "a9e6abd1-50f9-4003-bbfe-b71fb47027b0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "58d722a1-f592-4da0-940a-bb379d0ff2a5"
        },
        "item": {
          "id": "df80f576-5808-45f7-a283-f13e2053af4a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "40ec32c2-ab81-4116-810b-cd096c048da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5403d49c-cc2a-40e6-801f-769b40f854a5",
        "cursor": {
          "ref": "de28c8f6-bc0c-44b2-ac9c-0699d3edb6b3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "938d5228-b4ba-4c8f-84c1-c5db83ed0c49"
        },
        "item": {
          "id": "5403d49c-cc2a-40e6-801f-769b40f854a5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b1db6c0e-c01b-4156-8f98-7c4825d797b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd75c03b-1898-40d5-b99b-65c9ae39be91",
        "cursor": {
          "ref": "63f0442e-d886-4bf1-94e6-57c8e7a1fb1d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "88e12463-b228-4aef-a500-05b37a048211"
        },
        "item": {
          "id": "cd75c03b-1898-40d5-b99b-65c9ae39be91",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b0173c5f-2a36-498a-94e6-3e4c1306835b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f389bb-bc09-4efc-b8ab-42a829a7239d",
        "cursor": {
          "ref": "5a902f41-c4c9-4ff5-9e56-07be31869b23",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5d4da3c5-8c57-4f35-8505-3340ed545aae"
        },
        "item": {
          "id": "a0f389bb-bc09-4efc-b8ab-42a829a7239d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7c780dbb-8665-4e2e-bed6-50662fff817b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cde444-1610-4ed2-88d9-6b91fc5ba87a",
        "cursor": {
          "ref": "099a51bb-c511-41cf-b5f1-93877345d6a9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5a8e3023-07c2-460b-a668-36392b31d1ba"
        },
        "item": {
          "id": "a6cde444-1610-4ed2-88d9-6b91fc5ba87a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a6a99f06-e62b-47d1-9203-7c4a6aa0076e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305447fb-fec3-47ac-8ad6-71b5f491a0ab",
        "cursor": {
          "ref": "9ccf0edd-f9eb-430b-b010-b3293290d1f0",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "76537d50-2c94-47be-b028-862395ed1c96"
        },
        "item": {
          "id": "305447fb-fec3-47ac-8ad6-71b5f491a0ab",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d7f7f1f7-54e4-4539-a089-a6f561f5a996",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e480fcdc-edee-4ba4-ac04-a80fde3ab9c7",
        "cursor": {
          "ref": "c5898a81-ce6c-4cd8-99ed-ad23be5d5c23",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6c911b7a-7a7f-47ab-967e-9c753f332c0a"
        },
        "item": {
          "id": "e480fcdc-edee-4ba4-ac04-a80fde3ab9c7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4cdb0ad5-d6ec-4832-b8fc-d333bebd6733",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "537d7e3f-7520-4999-a9bb-8d651ef8f34a",
        "cursor": {
          "ref": "43011fd8-ab8d-4cc3-bbc7-345314eaddf5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d89be0d0-ef21-4c7a-81a0-a6b65883d9e3"
        },
        "item": {
          "id": "537d7e3f-7520-4999-a9bb-8d651ef8f34a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6d1720e0-fcd2-4420-bf95-d97ab2fc603e",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abcf7b8-dc8f-42ab-9bec-d8469ba8edc6",
        "cursor": {
          "ref": "d71c6a24-555d-4b23-aa91-9ec6b6cc006b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9b506f0a-e410-41bf-989c-cb835acd08d9"
        },
        "item": {
          "id": "4abcf7b8-dc8f-42ab-9bec-d8469ba8edc6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e586162e-ca60-46c5-80fc-d1e630a489d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abcf7b8-dc8f-42ab-9bec-d8469ba8edc6",
        "cursor": {
          "ref": "d71c6a24-555d-4b23-aa91-9ec6b6cc006b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9b506f0a-e410-41bf-989c-cb835acd08d9"
        },
        "item": {
          "id": "4abcf7b8-dc8f-42ab-9bec-d8469ba8edc6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e586162e-ca60-46c5-80fc-d1e630a489d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380e07bb-5698-4347-9942-77552a53449c",
        "cursor": {
          "ref": "dd0e18f6-5392-47fa-a6ac-ded67f49eb06",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b445fac8-634e-4e77-bcbf-cdca1d3cbd04"
        },
        "item": {
          "id": "380e07bb-5698-4347-9942-77552a53449c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2867117b-1987-4127-bb34-fe1c8843a5ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9b2d5a-4f23-40b5-aba3-8247a0f03a20",
        "cursor": {
          "ref": "07b712f2-b781-4d84-9f06-de5842320896",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "22afba0d-b761-4bbb-b4ca-1132401502bb"
        },
        "item": {
          "id": "4b9b2d5a-4f23-40b5-aba3-8247a0f03a20",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c50587f6-ba66-4f71-a0e8-c1dd0bd61a6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}