{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "26897a25-9f2b-4fb5-9a31-a7077aafe60e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f58d4743-20f6-4dc9-be3d-240a2859ced1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f4cce8f-e03e-4563-b3f7-995a1b776649",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e26ef3fb-e5f5-4728-93f9-43b0f6ef352f"
                }
              }
            ]
          },
          {
            "id": "14d5c54c-dd1c-4590-942b-cca9c879abc4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73127b16-c4fd-4d05-afb9-5ab14940c116",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bb7026a1-59ee-4a64-93be-1fe7c2ddf583"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a9fc9458-cda4-4795-976d-22d321bd6fbd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4b289a58-31d5-479d-a216-99b0d8916a06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d78874c7-a349-4636-b7c5-d1ba3cd376a0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a817060d-1f61-4a3c-b98f-9a23305783f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba81a7bc-29b9-4ba1-af0f-39635daea74e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c8ec4af-888b-4ee6-81d5-bd49198f64ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e91d4c35-dcb3-4a46-bc32-db54da900591"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0379871c-4e88-4df5-8357-2a2680d629f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f7df9a6-a6c3-418a-b29f-dd2765ace799"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fe0db99-9873-4498-ad7c-a4ee32ac3b88",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3d2396f0-6530-4df1-8ca7-6e45113a88e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd797966-2470-4f91-a7f6-da5cf599d9de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a58c733-a9fe-4287-8dac-7f511fdbcb91"
            }
          }
        ]
      },
      {
        "id": "60bff01d-ba07-479c-9853-1f11029568a1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e1190773-6420-4bc0-8939-192f9e1eca20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2957905-1224-45b5-9b84-9b3c317987b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8973278f-50ad-4547-b382-a65cdb61fb51",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe637438-f046-4cc7-b2cf-e25c7d12c5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de164d34-0d39-4c3b-9c2f-570f9e6bec7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea557189-cb42-4338-ac9d-456efe2fce53",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39bab96-4c28-457e-8520-7dbf7aee7fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70c81656-829d-4217-9126-404637eb0f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f003598d-3080-4d32-8b3b-580fc9e41733",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb76e7d6-d39b-462b-8ada-a697a92e85c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7ac007b-7166-4d8d-ab05-dee73c173044"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ed6ec8d-df62-43d2-b31a-5870d7b75cab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36ae9a8a-8850-4cd1-97b4-3b5b1396ddf7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94831e94-f730-4911-9309-f72d01385bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ce90af3-2382-451f-962e-c7eadbc58674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739905c1-9408-4c42-b1d5-2625a5d8c877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ea100f-7c60-4a63-b7ea-d28b3aa10318"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d4ad59c3-453f-4aa5-abe7-58e07485f7bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "abaf9486-1af1-447d-af31-264bc90a79ec",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b0cfc79-1cdf-472f-9533-657552a5f559",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3661d871-60cf-450b-881d-10b0ae2acc26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5428a64e-50a6-4d2c-a334-dd096e53150c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7f22ecaa-62f4-4828-af8b-310fee433dc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b9dee30-2ce0-4354-86f5-c5ff881eb3e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b6cac2d-205a-40a0-b2a8-6e9a4d0a1ce1"
            }
          }
        ]
      },
      {
        "id": "b53b6a8e-38b0-4b3f-b33e-dcae25ebf79c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8e62e686-dd38-4dc0-be57-83f036fcaa1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed5e8fc6-30e4-450e-9093-9e85697f8a6d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4b29fc80-79b2-401f-b213-5500c01cb0a4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7e91dc-bcf0-4789-87be-9b5d2d46382f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ec4d4c-05f2-41fa-8c2a-75675c2bd51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05e6db1-4af9-4344-9ed9-e7f424b69958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf2d2bea-cc13-4575-a65d-8767f580ce8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9c4e5b-a698-47d5-ba22-059b5d8def13",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7e0cfa-2102-43ff-815c-3e957cc852e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccfbfb2-6f0d-4285-8d86-aa433dec1245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7433f07-dfcb-49a1-baab-facc55de68a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b5b7a14-cc46-43ec-aa90-d9b858195693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01458268-e10b-44fb-ae04-1c85e9a41cb7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c9c4ad-4472-4d48-a694-545e72d1bfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb197af-b095-4f3f-a018-1339358ea3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce6be2e-51d7-4b84-a3b9-17458562a09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f689f825-a2fa-476e-be7a-71d18241e20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1509d38f-4395-4701-9ac3-9beff2860d72",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6c7b90-2e96-413b-84b1-7a9ec2e70929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9d33a7-0e78-41b3-8a4a-f5ad9e52bfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb87671-d69c-4007-8fa0-070e05ada28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bb07c32-00b4-4400-8996-6cf2b09dd890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ffc4a0-13b1-4f43-a93a-c4a9eba242ea",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6247b5a-eede-4cc3-8fa0-251cf11087e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ca4ea8-42e1-45e9-b69a-027b2151a39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953928e6-e22a-41fd-b7c6-fee7a07d8736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbbb4969-9894-4c6c-aa8c-085a1a6e6827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde8199c-4e09-4391-8ea0-48e88024fb86",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95553a84-bc0d-43c2-b114-04dcd763a845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba4eac3-166a-4332-b843-1cb5ea07b682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a3af1a-322c-442a-8f83-abd84d54f899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7296c6e7-2430-4a0b-bc05-fc7131bc1542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b992f7fc-5132-4a21-abc9-266fc83cc1be",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cb8393-d738-4172-b241-3b579120747a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1a0358-c5b9-4bbd-8d89-e46ef04c081d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7797f582-2d60-419e-82ae-46d01bfe6da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e3ade02-e290-490e-997e-9a9ade2be595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d05597-8d42-496c-abb8-29ca6077768e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c528fc-0249-4d78-a3d8-5b13b060f2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bee6632-85bf-40d4-8bcb-67f114eb25ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dc1f4c-84fd-4b22-a95b-4cf8e86bc57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae067545-80f9-43f2-99b9-0ccbeae30df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f878225-09f6-4e45-8547-9aa233ddfdf2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d73c137-ab4e-4cf4-a045-34b90e398d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c58d16-4318-453b-9660-1a9a7b921536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d79370-eea7-403c-b019-e51b2ea37b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "306f165c-0c35-4d02-a4cc-21b66e7289f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938def5c-b857-43e8-a6d4-da516fdb337f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e510b1-0d01-4852-b1ea-db496b0cd023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a857156d-9611-4715-a5e9-798f7800fdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1d6dba-34de-42d9-a009-d11e773749fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2712426-7f3a-4ab2-bea6-7f71106877fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b88288c-822e-48b7-a225-5dbfb8346217",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a1c6e4-c96d-461a-b5f5-86f0fa264d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53764ba8-645e-4f57-8056-8ef2676c62c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f1be5e-fdb9-41cd-b8b2-3ca54661a620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e901c698-6984-4a35-9eef-dcd0df1ad0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3c45d0-523a-47ca-b2d1-dbef99b537a4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee8d77b-ee8b-4138-ac72-dc5afe2be7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3bbe6a-4baa-40db-9b79-093649a706eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c42cd8f-00d7-43c7-b6bc-a7a291d01ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba23a3f2-5202-41ba-a21d-eacefd13a93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19ad49b-a2c4-4e27-bf12-65a494ec9634",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973451cd-6ad7-4b96-8d1e-2d42497f8393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a3f3bf-d91a-4d13-b4c9-12d3fe8df9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1011b950-5aa2-4f79-b429-01798f09891f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91bde814-0e09-45c6-b725-df697604dd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddceb9cd-f407-4ea7-9420-928ea3a01dc3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cd27bd-4fcb-4ade-b7d1-4f80568eb724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9843f854-0f54-439c-9a32-47a03a0ebd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814bacd6-b35b-4c2b-b9c8-47c35c51ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbb4dd33-7199-489a-8a7b-6b5822724243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bb6c6e-3a4a-4a14-bf15-4e43c0ad4d1b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2c120e-62d3-435d-9bdc-72f457971680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfae749-2b6c-4f30-ae01-790b13d854f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ce88a5-56f3-481a-ad5a-0cd527559596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e62c51c-683e-43d9-81c7-e5c9420b7cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a0c3d3-de16-41f2-86a4-9ab0df18b18f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a40b97-bd03-473e-98a7-a7ca048393c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ae237c-35fa-48ff-bebb-2572e9ff1c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37541f4d-c5d7-46e1-9eb0-575a5b29caae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f918d453-af6b-4f25-b132-a08974ceb0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80efb737-deed-452a-ba7b-9c868b51469e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018e74ac-05f3-4c49-a917-999c2f1b18f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45976389-1114-4f81-8dff-6ce672141191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabc7db1-7443-49cc-bc53-6c03273ade44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be556338-f9c7-46d5-9ce0-512b47a13ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4630a0ad-b198-4ddd-9868-acffaec53a66",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316de3a3-0ef0-4313-b57e-d5e4a69fc6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a7cd2b-56f3-464a-bdac-cd51fae27bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b207b9-2f6b-4d7d-9af0-24daeaf10f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d807cc07-b03e-4fe4-8d94-34f704e4b222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d17598-65d0-4174-8d55-d64e5341c0ba",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4c70e8-9483-4cc2-822c-2b020319bc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c76ccb-162b-4f85-a66b-60c5d904478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d772e60c-88e9-4c6a-b0fd-14a9c3046c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67824ca0-2d05-40f6-9d24-974c394fa338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479b0e7b-f8fc-482a-a0ce-ad6f404d3ff0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a988207-5974-4805-890a-2ba5dd42fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47aeae99-5838-4b88-bd31-a78382181f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cd79e3-2248-443f-bc43-5e897639fe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75651254-45f1-4413-9e14-827458faa7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2f37fd-ca0c-4221-b34e-7b77b564a754",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09565c37-5b18-40ba-bbd1-36dbab42f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88acbd1d-65da-4e28-bb79-fa2644d6bd3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ff13ff-cc75-4791-8123-4602b4c87181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a806e37-28c4-42d7-87d8-66314c50a194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2cebb1-a567-4698-bece-dc471b5e3300",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7079f6d-8cf5-4e89-974d-a731acda2cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6f7bfe-8896-44e9-a831-a6c93f541833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d085406f-7fd8-4963-8eca-4a0e340393f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9caa5fb-a649-4009-95a5-209e5c473cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b735634-8c32-47d4-9610-32c310299624",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d49f32-7f37-4d48-b938-2992d166e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0a3d66-86af-4f95-9798-f3a8e2124e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d306ee-9ca7-4edb-9c94-ed79a6a80406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcb2df3-39da-47b0-81dc-d29d1e652987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdfbe66-7f95-4008-9559-8a62923f8b46",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1a07e0-6bb0-48c6-8e03-92739372772f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77960c7-daba-4706-b2e6-6bea9bd1774a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f8a20-4501-40f3-b511-af750c4c68c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d88e769f-bb4e-4f81-9c02-1d10ba9661af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e70753-2f0a-4ad0-bb06-73292de9b599",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c01e61-6654-49c1-8f35-67c48a166936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784f21c7-6a3d-4d2d-9f61-c6ad836b0062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adf5741-0683-4a7b-9e6f-34514b2a0de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c48cb5e5-2168-4968-bbda-5164f78ef969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ea8ddb-7734-45e1-b1ca-a34134d9fa12",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9c6b95-5cc9-40c4-9b7f-36960793ffd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d063a171-03ba-47db-8bc9-a0b584c43886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2d0730-aca0-44a5-a90b-370fe8bf9dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5979c8f4-2bac-493a-b5a0-8dfa0afc26b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe566134-1187-4271-906d-e7193b573bc2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422e6a31-afa6-4b88-9892-c40797158663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c37f4a7-bc78-4a2c-824d-29ed1b5ae82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26edb38-a31f-4050-9a3d-981baeef4139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8229cb59-d353-41c3-99a2-e1f9cb734506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c3586f-9bb4-4c01-a6f8-446fed2a8d8b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98160e0-6b7b-451c-b847-be1d5b5f1ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3dc083-8ca2-4feb-9f78-1903f6714fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a254c4b3-5f84-4627-81ef-1723bab0989a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c5f844-17e2-4674-bbb7-e716c254ae59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6710f136-054e-400c-bd05-d985eefc9dae",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0c9c41-8b59-4eea-9437-29729ee20979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4166f9-e7a4-4b42-92bd-ea2ed55fadd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df64fbac-bbba-4550-b971-b19d64b04532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4933e334-f23d-4ad8-9744-0c30dc91b5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc9a715-1903-47f8-b388-f669d488f06a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835c487b-d50f-4242-85ec-adf88b60527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be835dd2-6e58-4769-963b-afe7934b9525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b1a9e6-de80-4ff3-b0ea-5078453d9532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e889159a-3e1a-474e-87f0-66d353c9c0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f0db28-b2d9-4a08-8b8e-183263fb8e22",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae680f5-c9ac-47e5-ad76-8eaa5093b143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffad740-f390-4194-a079-744d7518b4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e1f48c-2fa2-48f4-b156-1c6383cae3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed74ed9-b5a8-4609-90c7-cf641ef713cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffced966-314d-4acc-aa00-bce2f9c4c3c2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f193731-38d4-4209-ab9e-c7d3a3c03691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b451e34-6adf-4c26-a604-92e4f39263d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e09599c-7ae5-495a-b07f-5927f5494f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b5041d-6070-4270-8f34-01d085a13e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125f4fe7-3f85-46c5-ba7c-f4b426d34afc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1150a37a-6345-42a5-b324-26ef71b8628b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873ed92f-1892-4c85-9b3b-ca908b955fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11763a7-6673-4645-a632-45ddd11d5baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee8e7c6-698a-40d0-b739-b55c01e99f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48980f7b-2657-495a-a7f9-be92b2adb09f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10738241-4da9-4fed-927c-152da26abff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ca2ce8-72cb-4c1f-ac3c-7bef30608ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab34ef9-7494-41c8-8ca8-691eeb8947b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d993fc-58f3-435a-b8b3-94aae26c2153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bf0cb5-828a-413f-92a7-0eca8c755e9b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ee9249-1e73-4568-91b5-ec93b020b86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11280590-c233-4b90-8aa8-a76380a260ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bd7d4b-1f50-468d-a673-533ae99834df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "195e69dc-8f85-46de-86ef-1a45cdc7260b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4434e3-1930-4492-83ae-07991a04b5d0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e94353c-f058-4813-80c4-c7e710e055ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79c3d55f-c117-417a-ac58-349f7c1594ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8ffb96-3138-421a-9f63-c9f442c93a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd760997-5045-46ce-a152-279456f2c555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eae4c7b-817a-4e7e-bd63-91381db61e83",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bbc519-5994-4bb9-92e9-9dddb1331089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a0ab4a-61fe-4639-a228-d653dcc2fa8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c778bd-f52b-4ec1-8d0c-1ce435ed4cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1143225d-7800-4e43-9478-3fe85ae4bc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9ba26c-0927-458b-9008-c84fe84bf2d2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b74919-3f3d-4a72-bbc5-80fac2ff1248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d841fcb-aaf9-4ce9-a03a-a07b84e19e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324686c2-250a-4901-baea-56f932c15c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "198b8b35-b6f9-4493-901d-6470cf850fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e48276d-71b8-4289-9d96-887c6b8682fa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73bcfcb-035a-4f66-8885-3d63cba93f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca0bbcd-5227-49ac-bd84-54ee2a03378c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5113d888-5b4b-4b37-bd19-d29cfc8ab93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7be6f829-831e-4d75-9bdc-17c7795082a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21563174-0c51-4863-821d-a812e1cc8da0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8584fb-a3d8-48c6-b401-c58506c94008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40a5dd7-5b65-48c9-83b8-565b72054541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2324764-e12c-4dcd-ac76-dc865c5e8946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8539dea5-84d2-47e2-9f70-2d614fbfc393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5278f3-5b78-4648-b175-2064ed219975",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8d2655-7269-4ba0-b51d-0efce4a8126a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de65e6d-d63d-433c-b3eb-9494b2ca74bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064334a1-bfa3-4697-ac01-1aff91db6964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "25a7ff65-7d3a-4bb6-8815-e671c9e00940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d71c40-e893-4d96-845c-fad72d154ab2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7894435a-b708-4df0-9974-0f8b06f09c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a327b150-af67-4293-be1e-e21f65084675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c15a7d-6ee3-4803-82fb-0137120e9e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a2b404-964a-4112-84b4-4b7dac59d416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e5c654-7b6f-4848-ab8c-663397589d26",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984bd421-b8e1-4ba0-83bd-856057e2fefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7e6235-51c9-4761-95b1-54a0131dd761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561e8dd6-1ae2-4275-b5ae-818957d054d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "835b1e93-c2d0-4c59-9da7-16b734cae35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4dbbeb-dda7-4d39-808f-5853631dfd3c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb47b86b-f0eb-4326-bdc6-7f95ea2c7921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df72d7b-a0dd-4fa7-aa80-4d6bb2463a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a781607-ca8d-4d04-8c33-4f98795c30ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b4ae0e-e182-47e4-9949-d06306d79252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dfbd83-63da-4640-8f3a-9cbd07eb1c76",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332ad6e0-8b33-4406-9075-0f9eb64b0274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e1fa81-279c-466c-b665-80a73b5deee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be6e80b-ca3f-4ec0-ab40-ee595c9d2347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0991ae-4137-497f-a253-518fc97fed65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166fc0e1-e135-4b51-9761-566f78cd85fa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e775e656-e0ae-4756-973b-701a45343c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d1bed3-0a60-4299-a98a-485275616dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822ec795-b952-48fd-a761-f4417378a0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9794f9-2dea-4404-b36a-45e026061372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5e12be-1f98-4898-b52c-e655b1aea204",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d9f68a-13a2-4657-bf2e-42728ce8c0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a242bd-f36a-48b0-8784-1e6f4a7b8e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbc6d74-76dd-46dd-9811-ea93a9bed7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6274c8-c121-482b-b0ff-f251020aeb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111a2966-8fcc-4628-afc4-72f943d7efbb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dd83b8-62a1-4314-9eff-094151f7f54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d917c0-8731-41b6-b08c-bdf0b1b033b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267eed06-7e31-4150-9c8a-cbd4ea097607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e7b999-956e-44b8-9395-522329e663a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5d101c-8863-41c4-a2d6-b501799752e1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735c0fd3-3f27-473f-acdd-0da4b2ac197f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980564be-9f6c-4c02-9fc5-5017d5f94dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95328b13-c668-4149-8526-395f048cb5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e542be05-beb2-4558-8e1f-9cb3957b0101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aa615c-4cb0-4e05-aef2-e6257c041862",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a59982-cb61-4fb7-83be-ad388770c345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e2b474-05f8-42b8-a380-f685069462b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ade8af2-f8b6-4c38-8f42-b5c70625a837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea98f40-b76a-45b2-a45a-5e37c5dae844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a01297a-9998-4438-bfd4-57fc5cebeefd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c827be-f13b-402d-a751-b68acc1ca4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2a17bf-c19a-4b1d-b0b1-620615ff140a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c89768-fbc8-4908-b5a3-e609087e131f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19996b4-00e9-4fb1-92cf-bb0e46b42a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71472873-5e29-4980-b3e6-276fedeb7cc9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10880812-e3e3-4765-8d78-ec9e9dab75d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07bbb1a-2b2f-47b1-b97c-b90edfa870ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e863c722-cd12-4c91-b2a4-22b5a6912858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3137472-4b1b-404b-9349-0ec6ee91dfea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17bf426-4f79-4b42-828b-76634ea9eb86",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1938228-1e50-4908-adfe-08b8c9b7cf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa9a976-fbc6-4ba0-bad3-a1a9e8932540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189b369b-dfe9-40b2-a9a8-ca8f35eb203c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfb9696-b2ee-4b12-b5f8-db72d01f8c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5e8c51-ddf0-4b7a-b6ce-468711301a10",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb47b3c-3f76-40dc-94e7-fce905cfb885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ce607b-fbd1-41e0-956f-acf59ecffff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedac3eb-2c77-4e16-8f75-9e5bd27a2df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49d5bde5-e4de-416c-a026-546fa4bbd646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f60f9e-f126-4a08-8411-fc1c5e23522f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e988aa-91bf-45a3-a3f4-47b7f195c36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51c9a10-18b9-4082-a198-d009f819ddcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea705f3-bd3d-43a4-9540-4ee1e981f52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a8abc8-abde-4f40-9fc3-6b1996fb3ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5e4749-6c56-444f-8537-6c0be8005650",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0160cd-8e3b-4054-8c5b-f5193e4dddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c197b82-00f0-467d-ae6c-b184b853fec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75fb9bb-bc5d-4782-ba9c-9563473ca6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bae472c5-8c17-47cf-ae4d-635631b0bd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47482501-6665-4f91-8a50-69b8031b1cec",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf11cba-0678-4ea9-9b59-acd4458ffcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933ce3e7-1ba8-45bf-907e-c6acb06b00cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0eaaba-8975-4962-aa3d-af965ad1d13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34965b99-6b60-4307-bc84-c8a33e750a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ea322c-3bad-4e94-b066-8fed22ab436b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1653b9b3-2bcb-4972-adac-fcb0976aa6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619a4290-744e-48a1-86dd-aea04858d7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bfddec-3d7c-4cca-abde-0511a8793852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb0890e-f03c-48db-a652-4b8e00c08b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4834ba38-efe0-4902-8f1f-21fcaedd4c26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab38329c-114e-41be-b12a-b2f895da55af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f03f5b-ae2f-4a88-8179-114f6273d1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39a2763-ccc1-497c-9432-91f7a1be146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7552e935-9016-4f21-ab18-46bd653e60f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df6c191-acc7-4e4d-a48b-087adea2242b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b998c6-f2fe-4852-9063-6d5691ab6951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7a319f-9f1e-4b4c-b328-8aef342f8159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23755c2d-3716-47cb-8edb-67dbebcfa5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0abb8cc4-39fb-42f1-816f-1b879ce736fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ed5f33-84a8-498a-96b2-a1055a2e7236",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e617d5a4-ea5e-4201-8922-34015eaccfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd4a71f-0d7e-490b-8315-91053552dfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb9f4a9-52dc-40af-938a-a62b624faf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c740d9ff-a404-480e-8e4d-1a29b6648270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fec51c-d786-43bf-b0b6-42ed8fc67981",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1872c7-73b5-475b-b619-565f6b665a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01400b01-8fcf-4cf1-951a-dff293c058f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc87f19f-cc72-4c8a-a843-37d3f1ef3634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df6082d-0300-495a-a5d0-c759d168646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d189776f-5f44-489b-8874-153dae46b9cd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8094de4f-415b-481a-8f17-bb4a17a0dde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d423525d-6362-4693-a30b-ffb914be0c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42c36de-bbe9-4fb3-9d3c-ae6b20277d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "99915b79-61b3-4116-9a2a-789f50236c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6839989-10f8-4105-a7ab-168ece946c72",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205b98a2-349c-4738-a349-ecd9c7a52168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10edd960-d4e5-4a82-9ac5-23e5c98051aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4908a545-799b-4de1-9261-9363dabcf675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "857de475-f7ef-446e-9a03-485d3c182c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75531b82-4b41-4bb8-a633-30e87d19489d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16cc99a-d5d1-44ac-bec3-e5c3e42885fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18dcaeb9-9b1e-49a1-a4dc-6c438e8a3948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cf5ec4-9708-417b-a225-282c83615cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa10d52-7a88-4b5e-8439-224efad29c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b91124-2b65-4903-bfe7-0a8a4eba93f7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ef43ef-5d14-43f4-bddf-acce8e489743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4910593a-e049-4a72-b9a4-400e33088b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93c56e7-fdb2-4263-8e7c-0b63f56a4b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d453836-938e-4b35-8638-f3ff5d6f5fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5c999f-e14b-4673-a39c-bf19066da59d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841d679a-3092-4465-9865-e855e01b4654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8012081-5c41-4ddb-a021-5d9f7d55aeed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dfe58a-46d7-41b5-85d7-d7ba247e35dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0e3c5e-3878-4765-a324-78ccbbea5072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42697ab-2b56-4958-8db0-da261f168423",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6193106-b228-4d5b-9a88-82efa77ed91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a98339-b9dc-4cf5-9098-6cacd536bcdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53001a62-e63e-4c4c-9e73-02b12f361c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba79367-9d95-4666-8fb9-f28abedf6a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5568309e-ecb7-4661-8bae-d88ed6c42d3d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04685aea-d13b-4ac4-968f-1833a30de391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94909739-4fbc-4da7-8b4d-e80349b522d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1760f0a0-c62c-4017-a98d-f1c41701eb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f81037a-b271-4195-8050-1611436b2514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6590ce52-1893-4e5b-a746-16b84f560592",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28ee108-ca7b-4027-9355-720cd08e6df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698e742a-7a55-4c24-9784-a553b7405353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098ca98d-5411-4fe9-86fc-e137bc72fd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57e12bee-5e5e-47a3-ae67-d7fab0d0cc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65fbfd6-0c5e-4e9e-9cdd-100e743019b3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be3c4a0-5033-4485-a852-e6988b907cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac94c1dd-0510-4ae8-a11c-b4fb12df5813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084d579a-caae-4777-ad6f-852b41c033bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1035eb2-1ecb-4232-8480-a90120ab917a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b975eb5-b874-4ce0-b554-ed88953e4017",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a0b6ca-19a0-4553-85cf-c0aef435548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0233e91-a201-4b6a-95cc-c640d70fcf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd77002-a3a2-413c-84e2-f50d94444cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeef7e73-b42b-4e29-993b-4323b2f64f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3268786a-06d7-408a-9b5b-dd28e54fa4c2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246ce162-5635-4912-9037-2a175f729969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6500341-ba3f-46ea-b264-0f4395ad53dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9aa227-2de5-4679-af72-4e5561675ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de900511-1a32-46b0-8e63-4f9869d571c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae07a0f7-83ff-43eb-aae5-29f65e62b3a4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500e7609-e7af-4767-921d-2b60ad8f3044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1169e7a9-6fe0-4c46-a894-4f79029b34c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35ddda4-90d3-47b9-9c85-6171e57f30ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36d7be78-8831-43fc-8636-3798de53cf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa12fc82-6813-4832-ab3d-647690df33d3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80bb5f1-6ca9-4fc4-b2b3-61be0be7cead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0224e3d8-b182-4866-ace5-e9d2bd4476a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2a555b-a533-4c6f-a16a-f34dfe742bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e787a9-8b05-4fe4-ab04-cdbbc9a4bc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652343bb-7610-4067-8401-aa84776e34e2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29eef653-46ea-4f98-8925-a8ad96152fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a994db-ce55-4169-805e-160b0c342f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1933bf83-d5a0-4135-8fd5-d26cc2ff64d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99ec7063-c362-4921-b60b-1160b85a49f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7c3940-29b2-4233-9a19-477f2ffbe90f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeaa40d-8c4f-464a-9c25-f5468ab690e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bc19e3-d39c-4da7-a962-d34df8c4a675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacdd54c-e568-48a9-83a4-3ab4f63fc29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff3286a-428a-4845-a8f8-a096f5b81f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a9c394-76f6-408f-9ebb-87002193123f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65543df6-bd36-4c07-a937-3b6805ac4580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adadba38-ccc9-497c-b075-8140790bea2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d08fd9-0167-4d6c-b806-8297e4306fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cef5fc32-66c5-43b5-ac68-f5ad7deff801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd60f00-ed94-4ea0-b29b-c2e1af003434",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67270b4-0700-4566-9f7c-79d7bea3c890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523a414c-4a51-4a76-a081-019984720a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e8ea8b-742a-44f3-9a43-8cc484b06cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71065d91-ada9-48a9-81fb-c6536e1e0f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b86ca5-0297-4528-a3ba-c3626acb1505",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a70b3bd-fcfe-45de-a445-a7ec79550d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3740c3d-5b99-4d62-b09b-8c9aa9016f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45faa0c-be91-4842-8f4a-09ead1fc086c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85493df3-5555-4d93-b1bb-32ce0e37f1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760e4fcb-ca32-482e-8467-0ad9fb7c4705",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6f8dc1-5221-493a-9367-f495dcc5c3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1a215f-f813-40bf-846d-6e69b5c39303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3168d101-04fc-49af-b498-a29cd4b7a9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "edbb74e4-3c28-4b19-92d0-4ace885bb265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84cb3f1-0d72-470c-89d9-afedb8226ea8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d5a07d-f988-4e11-a0bc-e8365236e803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fd266e-1197-495a-964e-60137f1991bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db98b7ab-2bf2-4c5b-93ea-dcc9a69ab199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "744886d3-2e26-48ea-aca4-6d018ffbadb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257c8d53-240a-49e1-aba9-aac9cc6c5822",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa5d148-77a3-4f1c-9bef-1aeb30f0df75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90577659-a6d3-4476-913b-a5d1ab84cd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbe5ea8-8fa3-4274-bf6f-d2cc0c1b3d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1544eef9-4a61-4d1d-8287-3f1b57432fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbe9f40-3aeb-4948-bc1d-8931bf6fb3de",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de806b26-d72a-4d10-aea6-49368957535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51794a3-8abf-45b1-8542-83b196cc3aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e933b66-2a05-4ec1-aa26-78a9fdbfd296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07cde4b9-9d0e-4a09-bde7-10b91d7b9218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a96919-015e-4a7e-bf24-78b2a54bc45d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287e91f6-c39e-4679-baac-090bb979ecde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93327db6-90f8-43ba-b394-56ad496c5269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f003bd0-6837-4b99-89be-a67763447340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44da0d66-b4a8-4945-bf1a-32c7ad055540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe62444-3518-4f24-ae6b-3bb1e10f4ffd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edd2ed7-5755-481a-b4ab-6810a2a13576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d2ee95-23bc-4f9e-bdb1-05ffa8f5a577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3657cb0-605f-481f-a5b7-dab9edada7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7fa344-ae53-4494-8ca8-1d523580522d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a63b96-7de2-4b15-b7ac-7850d5d7ab60",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f03ed2f-a5aa-44d2-b502-12ce535ba649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c163fb8f-7ce1-4840-8028-3fd0bf3fd5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4e8efc-4611-425d-8b9e-7d2f17ba7ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "343327d2-651b-4afa-9566-0ce6984597b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7a5083-7766-4ab7-a894-934aeb5110e6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926a6854-5fc1-46e6-83c1-8336c1143ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79017255-806a-43fa-a8b0-12256521b2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0196e26-b731-4013-8f32-8a3ebac7535b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67cc44e7-e25d-4c07-8a1e-9e81f15e7293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad71d88-f38a-477b-b4aa-557b91f291a8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b70f5bb-d2e9-4089-b093-26610d4a2877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada96b67-473f-406d-85b0-29976ae4fed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2ad96d-9b1b-4f1a-ae3b-8ec01784149b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a004d79-5c74-4abc-8fd6-1292e63b5d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa3fd20-c696-4d5f-bed0-6e4bbeb2dc72",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264d15be-9634-45aa-90d9-ac72a2c86e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55169397-9526-4eb0-9e41-8b61b45770ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6f0568-82ff-4d01-bc22-a3aa7bb9da1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4208cb7a-9bf4-474c-9cda-57745192092d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7006e35-f15c-4daf-894d-e78edb220e45",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd1a9b9-9239-4561-aa9b-03d0b339b539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b30345-be54-4c87-9f17-bd642e38cc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14962bf7-ad3d-49ee-a007-ec662f667e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3ced58-f243-48f2-a39d-182657c7d563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa921d33-2d63-4aa3-9696-629636196be6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0d6c92-5285-4241-963b-b7f84e9ab705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f7b3bbee-68b7-4071-8cba-5b2fe44fe8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358967c0-2d00-493c-b219-e626b95ebd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc122e8-c87a-48a7-af92-a77259534881"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af9ee8d4-a041-4244-9e3a-1e920ba9f8d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "125e218f-2f15-49d7-932f-908fcd07c4db",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4a7c23-1521-4e30-acda-b3e651254e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "783b2549-6644-46f7-8f5e-d959c179a390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042a799e-e417-495d-82ea-cbce38e6ffb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "393a994b-0dc7-4078-a3e7-425432910305"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "297eb72c-27a1-4b9d-9ea3-04af14a0495f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cf35661-a827-44ae-81f3-9ee6066d921b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eca13a9b-94f3-4efa-b5fe-79d494e7d32b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bba5bb28-6b2a-4b6a-a9c4-157ae47ab49a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a729175-9535-44c0-8977-ac6370f36965",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e85bcea2-0567-4efd-b179-ce5905a2a789"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f36a69af-f9b9-4196-8718-48ec210a842b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0cba509f-bc37-4c7b-806c-f42df82ab85d"
                }
              }
            ]
          },
          {
            "id": "5d703664-6954-4eb0-8b85-0db8d757a8b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae05190e-56e8-4a16-80bc-8ca0a2326031",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "58c1084b-315e-4c19-b8e6-157a8eb05460",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e87c059-c0aa-4a94-b19e-59c7925167b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ba46165-9eef-471c-a3d4-3be62c3963f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316a1a3f-c1bf-4603-b8ce-bdd54d7942b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d32d648-c269-482b-9f2c-a3830538fe70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b23063a8-45a7-41d4-a10c-0dbd61b93095",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3a0ef04-650b-465b-97d0-d285fbbec3f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9101e0ec-89bc-4413-a017-8205d14748dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29d9dc6b-eadc-4ce8-823c-1e7b97055db0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84d9fb2b-595b-4e34-8faf-37309c1074a1"
                    }
                  }
                ]
              },
              {
                "id": "3c98c31b-54b0-40fc-85cc-384910ac24f6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "751331f6-7299-409e-92ef-a9139189d074",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e902fee-4232-4353-bce0-ac377706d56a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35ea64eb-4179-429f-96b9-ddb3f41aecc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc685ce3-3ceb-4c78-98cc-98c038742cca"
                    }
                  }
                ]
              },
              {
                "id": "51be9aca-7b3f-40c6-b79f-61f830f4a8e5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "745b1ce3-a050-489a-823e-b13a081349f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f42bdb5-e336-4eda-988c-7edccbb86efc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82207d09-47b9-4965-893f-63a8b915d908",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e34714f6-7763-4229-9576-9efef43e97c0"
                    }
                  }
                ]
              },
              {
                "id": "ed8c089b-ff32-4e20-bee3-2347f7987d09",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88970279-1a42-4285-88ed-0f7c055a2535",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d1f13cb-ca3d-4906-82c8-eb8a9d1a4941"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "328d2c19-6bb1-4888-a898-26bf3db1d6c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "43cfe99f-794a-4c38-b7d1-96505fd8f2a4"
                    }
                  }
                ]
              },
              {
                "id": "623f9eec-b218-4bce-83fa-441b6ca0c168",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a210a9df-5f19-4722-a364-e695cd6b6228",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4bdba39-5bbb-46db-82f3-45a9897ad721"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7accf439-9fb8-415c-bfd6-e89c26ac1506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4f8317f5-38e4-445b-b643-14582b52ae09"
                    }
                  }
                ]
              },
              {
                "id": "c58a1d3c-a353-4039-b372-735e90cbb8c2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ad10cc1-269d-416d-b008-7ade9c824a3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b39714ae-5cc6-4076-92c6-7dae17a490e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6e69b54-9461-40aa-9e1d-2935bb7325bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a90df54b-e4e6-488e-b081-edb62b3029b0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "adb90ee2-ba60-401b-894f-772453837a53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61fa9850-cd7a-4816-b44a-0882bba85c89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "757629a6-ecab-45c8-8a28-316ff4109dac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af5d0f7c-0987-4feb-921a-631f5384ef55"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45637332-2de7-4399-b7e4-3419920f47f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9560b89e-d55d-4b1c-926e-b82a120c376d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef4c4bd3-4a1d-4440-a87f-b7d11f4f1339",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af767a45-ab80-47ca-a697-7679bc5f463b"
            }
          }
        ]
      },
      {
        "id": "0f84ddfd-6d6e-4b2d-940b-34f86e542495",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "44bf389e-3fb3-47c3-9d49-f66ca55a33f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "980d6c0f-f21d-44fb-af8a-6e46f9bc53d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "04fadbe3-d06d-42b8-8ee3-f904a48cbc9b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c80f793-6587-4c0c-baa6-21689175ecb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728fcbc0-034e-4018-8e2f-0edcdee6ea53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aeb3219-0c6a-46d3-8ee1-6a0f28398709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "905f8383-0a3c-493a-bee1-13ea14e18224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb1086e-0fb4-4dbe-8634-2ee867d0f69f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caecee1-78f8-4bea-9b79-2306bf04972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffc3e7c-e65a-4b97-9d7e-8bfdfeaa511d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f7fdba-f3b4-477e-805a-de7cf90f62b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55f0c0cb-64ee-4320-a6a8-961da3340a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02ac52d-b89b-477d-8775-449bbbaca9fb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e5483e-5703-43f5-b2bd-007e3c823108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5181a86c-43f4-4f33-bb6c-88cca9c2d2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a723a3c1-60cb-408e-994b-9133eccdacf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5f5c17-c221-4d91-a5b8-7ebf562f0760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dbea72-2e4d-4a2f-8f41-6cb5d1b67408",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208f8036-dc59-40b5-860a-3cbdde60816f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fa87c1-217d-4816-8e94-a764db74b519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9867cc15-0311-4d52-9e5f-2e0bb09a6cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b970a3b-1e30-45cf-aaf9-255b599fbe6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd660ad1-e175-4319-ac19-9b6f9fad7edd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1904f0-60c6-4a44-86c6-afb27cfd865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a55cd26-ffd9-405d-8d1b-8f25eacb3bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1396fc-2b8e-420c-b22d-3f62e74af96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87fe6a2e-d455-48d7-9ddf-9979256642e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230c6c33-8bf1-4d69-9f08-b8bb3eaa146b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f4084a-f05f-40b5-b405-c69be657b126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fcb416-d013-48af-9f9e-bc88f62c23dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53ef491-1745-4617-9886-31e46cf72f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84e7ea26-9daf-430c-a9ee-b110f3de008e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17e7bad-bf5f-4292-811a-69428aa4f72a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780b9faf-3678-4638-9a6d-f400396f9503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fad467-765c-4c18-bdbc-141076b7da9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aceea58-3f60-4262-aff5-b25d21d47520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc48452b-8df8-404d-98d8-feb234c06b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ee2267-137e-492f-8f8c-2810b47fd728",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa0cc81-b9d6-4c74-b181-c3da8ba2d012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea6c88f-6a0c-4b18-bd77-ee542038339d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713de7c9-1d04-4cc4-8ebd-5c03c7721d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4d4a15-5a44-48c0-94c5-950dce0fb1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cbf2a3-c95e-49b6-aeb6-6cee593e56fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f703ec-2bcd-4a18-8bee-59e866dba44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e307986-75bb-4766-8f51-effdeaed8034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20a8602-500b-4b2d-b378-36de4d118103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb997da6-a720-4508-b79b-afb61547ba12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bb2f27-f28b-49e3-8e6d-455b0e563e3e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edb5549-ca0e-4a35-9956-b0d086935735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3742c8-2d11-42c6-99e2-529aaf6b934b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff82477e-3849-4ceb-9d37-75d5f11f3c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "422b2d89-a4b3-433d-81bb-a8da674454d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c6e4ea-c907-4db2-a042-09b92d9e9685",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ae667a-32eb-4998-9946-6533c14149a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b274486c-b812-4496-b5c3-ed8203248093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c56b34f-f817-4898-bdc1-85a4383ed8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "62f7a07b-229b-4316-ac6f-9566763d1e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b34ef1-3ed8-490b-8ede-792b585ef7ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e50287-d0bd-4118-b121-160f72bb87d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55179e6-b12a-4c1a-9f60-bd7bb467b62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4887ad48-726c-4846-b1bf-2f65cc57e855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de1d0050-b311-4041-916c-c255151e3aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0606f12-c740-433f-bd16-a8084dd52fde",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a23d929-d959-4149-b766-4216f8ae54fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd91d82-4b14-4f15-aa9a-aca839dd4005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cef7f07-5148-40d1-8d6f-9785592ae8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ac67ff-9164-4437-a447-1ec1804b6127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87cdc0d-4a18-49dd-97a0-e252c690e882",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cb0a91-eaef-4f60-9a8b-542b7bb3bd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1deae03-3361-454c-9c0b-74b29d458baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06bf8b4-dcc7-4278-9177-326e4386dac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2948c949-f8c8-430c-bde8-eb666d670f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c548e7-66bd-42ec-9264-b34990fb74bd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3bfab0-1015-4083-98c1-611c05dd15b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a261fea-3920-42df-a556-a4ce99f1b4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747bca98-43ec-4af3-a21c-b69c88fe2c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c790e0a-2643-433a-b44c-f9adf2993210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a14dfb1-8ac6-4bf7-9b67-bcfc4c1f43cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe949ba7-ff23-43b7-a259-a6d0a96df168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8537f6-e1c9-47c7-82bc-7e1708144ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c5cb17-9010-48d3-a4d0-e55b09b7f5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "108c2c2a-fd48-4258-b2e0-8325ba56c217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fdb7d6-a486-4b8d-ade1-a870b46fd604",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85023d72-58cb-409e-aedd-8f7ed6bf13ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f281a319-f326-4cc8-bfe6-322018a47bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebd34fb-d47d-4b3d-929a-f94cc1eab0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b46108-2fa4-485d-a0ee-ef9af30d19ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8484aa-0eb1-4b43-bbb4-e2b1a9544619",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3023f8b-4cfc-4f32-86ff-f2c77d501091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e29f8c1-9ddb-4a86-bcf1-c5f82f837583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c16b0e6-64b9-4abc-9315-4f911c0da9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f2ab0a-6945-469a-b34e-924774f277da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8649e1-7065-4d78-97d6-5fd8cd3fc737",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2e7d57-dc46-4295-8fc4-817f6ef42368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2afaa7-692a-44f8-a2fc-fd9d4f16f0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d61297e-1f65-4f00-b092-43a0b0061a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02fcebb-f019-491b-8fd0-54ea6d00ec35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262eb20e-b9fb-472f-9e0c-5830939a90f0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a932a97-a5dd-4464-b9a2-20773b1ae10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d897f066-4c28-4cf9-9e4e-737392971253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ee7fa3-2711-498a-a21d-d852dd1101b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bed1f3-79d3-4816-bf1b-5b1e657cce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e35d01-d1a8-4a89-a877-668381aea480",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbbf0e0-bf64-4509-abd0-0dce856a2a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec9de4c-31f7-4843-b792-735d6c17c44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9b56f5-0d43-4f41-86b3-40f9c2d9e29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5649e3-3bff-43d9-82f0-8256edf19481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e26759-b5d4-4213-a5a4-d2d15eae8ed2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa46103-b532-4a70-8744-6d481b988010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c690534d-b25a-41d1-bc2d-11db47e4ad50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8aaa2ed-deae-4b5e-b738-99ea6732a4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d420cd46-3bf8-412e-9c41-ca67f17b0915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfa1504-84f6-435e-ac4b-2feb4046ffea",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1887089b-8083-40ac-a4f0-edf6a16b3a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b490ca50-6d19-444a-981d-9cca862ec5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488194ad-f163-4a10-97d8-f4763b605851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bd3543-ce8e-482f-98b5-fe640383c954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a771552-0326-4094-93b1-30b4a42be8fd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a189bda0-40a4-483e-8433-8851bdefa68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755be576-3fb9-4387-8af5-abf0a4097842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048d73d2-ea1d-4aa9-a9ab-20dd03d7bd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "523f2799-668a-4393-ac28-8c5c9f217c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654bf4e0-5834-4afc-8297-126109641f72",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc17d696-3cdb-40ce-abd6-f2ca46de9a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832e4121-845b-43b1-a494-e62afdb5594d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867654f4-8eab-449d-8ba8-f1de5594dfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdd6531-227b-46c5-a69b-6ce0e203dca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ffcd6c-99a3-4211-866b-7535de048c85",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c20af4f-3aac-4478-97af-9d4c2fcc159d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6918978b-f4ca-482b-8f96-c7c5b1fd83a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74e5ca7-c9db-4b24-a4f1-305cb689e5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1172571-873f-4527-b5b8-421ecc6cfd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5f4204-bb62-4d01-b878-cb0108ea4a60",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de25bd4-0aa4-4da3-8233-c48531d8cc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af21b709-ffca-45b3-8dc9-718e4f72dc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edabc0f4-a222-42ca-8970-6d83949f35ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cdf555e-39e3-4c78-9229-013ced8c2afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f5e0ce-c5f4-414c-980d-24567160c378",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbda876f-6b3a-453d-aea3-2f69deff35cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779c83e5-3bc4-41be-839f-905fb7e2bbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e4a1d3-3a9a-45ce-b9a3-318570ddbaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d3cc5a-3404-4fde-83c1-89467993734b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438d351a-ff71-4a29-bb2b-56fcf6c68154",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80fbae4-c8d9-4512-a29a-f351b5251cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf6af73-52cd-4e03-b42e-000c7a69f681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affbb84d-c4f2-4e51-9533-10d847541e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "621cfa85-6d0d-40b2-bc78-17eebca72593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ca3cd4-571c-4079-ae67-4e7378e401f7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24ea87f-7a60-4ff8-8c55-53a3ee95c630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a5ca70-a853-4d67-bec0-c4b7e726bd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df09b885-f059-4489-9ed0-04c4d5bae559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa27f8d-ed48-4b39-9222-6189a57d8ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787573a7-8fe6-457b-a6c1-ad1f117875e6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1ee709-1c86-4269-b994-5a261adb2170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950e1a08-f3c9-48d5-aa52-2bf40b04a9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0bb572-3aa0-4384-9efc-697eef1f48a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a00e59-683c-47d3-9033-46c31143b139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8e5941-bf07-4e3d-b56e-d2eda412bf80",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dcf3b7-9d27-4838-85f2-87df5cd9e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece82889-e2b5-4ab6-8518-51f0ec81f3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42667bf7-a5e1-4683-b8a0-45c0accc5000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bcff0ea-e496-4165-95b5-c97f8e02b6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c53d67-0a50-436f-8e8d-f5930717e1b9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4946496b-d51f-453a-ad6e-c74aa492283f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64331b56-28f5-4efd-a531-03e789f4d3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c695b9-9142-40be-8fe4-fc299d24dab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dadb8a04-68ba-4672-8ac0-a1cc1d97bfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9168a361-9bc3-4a09-9638-6b27804ab04f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e336504b-00fd-4f64-b9d2-f55ef4f66654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addc2e5f-37b6-4622-a83c-8479f8d90486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20314a08-1f3f-4d96-a355-2aaf5f0a70e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b8e96e-216e-40e1-bac5-3d77b2183162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5d3e92-8fb0-4178-992d-7ce30ce15411",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8014c2f-eb03-4ee6-85bf-b7ffc4472048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f168ab-dd8a-44b7-b368-d1376b48a622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041db543-f4cb-4ef8-893e-3aea3e44383c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04ad1f03-fdf1-4b42-8759-6efce585aa85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815282b5-d04a-46fe-b9df-50fd6511ec62",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f714a8-2f3a-427b-affc-5904ab1ae289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8da006-ed7b-43db-998e-0052ea8abe34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d203b9-aa7c-4912-a697-a1d0be33d64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2307b3e-a04c-435f-a702-204013675a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d04d955-2975-47cb-a99c-d33a74ffc81a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d61c897-213c-45cf-8aed-be74cbbff2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bc96ba-14e4-4a93-b247-62af26cc8705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e35e443-bfb7-42c2-9c5e-fd571632638d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bacb7728-cdac-4bcd-9923-d555658caa4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d29fa80-6cde-4869-8af4-f53bb65d79f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0abdda51-ed16-4cae-919f-2b40d3308b6f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cc6d5e-93bf-4059-bc81-933006779e71",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cef94d41-7458-458f-ba67-0b1fda782f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a492ef-ef4f-441f-b275-ca20c8c9aaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b5292fa-52c8-4f0b-89ea-066f176bb05d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbc585a8-3076-44cf-899e-f47b70ad67e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8f3d6cc-efb8-46e8-9504-33a6e34acfcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b5c6629-a4b3-46fd-8a1b-8ad5aaad09d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d690ba9-d469-4f70-9875-42b0bcfd213b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04e66347-d5c4-43d3-b6fc-e666ca3ccc51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "430a28dd-ac18-4244-aa10-9af4c18a4a76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30f879e4-660e-4797-a014-066772ab0d32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6a406d3-27ad-432e-957e-d98b0ebb35d6"
            }
          }
        ]
      },
      {
        "id": "2b92add8-7f85-46d7-b7d7-3a8c422c118b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd98889f-4247-42d3-adf1-b72a897d0515",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14cae18b-9fa5-402c-a06c-3170e4833baf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "182b7f85-379b-477e-b6d7-6563e99f9ab7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb88ac3c-c9b8-4300-9e84-ee40a6a323c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0be83f6-d9ae-4d9f-9d42-bbee391d6a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88506ffc-06c3-4c45-8390-f55f8b2a782a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b080b7-881f-484a-b40c-824a2f4ab8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a05e40-563a-4e2d-a8b7-b8c0a4673725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f7de5-544c-4e20-9072-0cf9f887535c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9e812e-50a7-4d6e-899c-a4a0deab1c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb022fed-e7c6-4ff2-95c5-42bdf399c050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87638ee5-bdd1-4057-a7d6-6fe73d957b23",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353a6ecf-ad37-48cf-97a8-e5ab8b9f30a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c05d0b-37e8-4222-804e-f3f91313c071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed026a2d-01c8-4f8d-abb5-528b930c3e98",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017e483e-b5b9-426f-a965-fa98247780a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e81a5d-7cec-453c-96be-39845f4a4658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c110856b-55bb-4bfe-81a1-89b2abaa1026",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34c49cb-8422-415c-9b52-b29cba4d4700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35440f86-46db-4538-9084-d9daab81a841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09254c9-7bfa-4143-9ba3-801a06b93ae1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148b38af-0106-4ea6-8540-528821d8645b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b279e97e-5748-4734-bfaa-dda984eddd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f42eb8f-acec-46e8-b0ad-5314716dd1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7febde5d-11f3-4974-b896-ea85c3393cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b631cc7a-119e-45ef-bcc4-0e5ab74680ca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bd4ebf-134e-446c-8a22-69c339bf211a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759e7514-110c-445a-900a-cd06943356a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525f6e03-0662-4147-912b-26cee5906008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96262dd3-de35-4890-99a1-10aa2124fbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237bc4ce-b263-459e-8cd7-341776c67711",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d036028-a5fe-4969-ae62-8031f2fb7c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64c8676e-0df0-4c7e-ac7d-f5b73179609e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a36eda-fa42-478e-9965-4ce1489afc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d7970a-94de-4651-a159-60b338967565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c242eec-30d3-43c1-be85-5789b9e95e9d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9130c12-27bb-45a0-89e2-a4a11d4c0cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebcb714c-e17d-4445-8db9-0b3cd5e5c15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b883fef-a9f3-437d-b2f2-8eafeaf3e2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15708af0-3631-48ea-8731-172394c8e684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f296b32-f0fc-4d60-8241-cea07c31e19d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4679c767-0bf7-44e6-8f6a-76d5d8dc4970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53eb18de-1e5f-44b6-9c12-4594e39f73f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0595c717-f3fe-4d55-a043-9d07868d79ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0503fe67-9eb8-4f47-afef-c4ce2b58b36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c73f82-3cbc-4dbc-afc4-46d1e1ee5793",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f315ea22-fc0e-432a-aeda-e5afbb277a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d37663-0e19-4d68-91be-beb81c12b9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6fc9dd-63fa-4e2d-94f7-1378e1e4c86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e38cff-8673-4934-904e-e499e334b87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843f2533-7517-434b-906c-80da9975fd3d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b4a3f5-6af3-419b-a534-1f2fc8696ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd0a92ae-1f47-4b5b-8617-3cf60d525a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b4a259-5ee9-4795-884a-5f2729947f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1541fbee-ac85-41b8-bcd0-e68ab850f49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3241986-75d5-4a7c-8426-924a74b30f77",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86afc5ad-7ee2-4126-a06b-bdd31beeb562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5e0df2-8805-4455-b1af-44359ffc409c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5973dd-46a6-40d9-95ee-8747f79b98ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a37bf5-d61a-4168-bcda-ce38702a04ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ba5445-a27c-48b1-a1cd-3c99ed370ed2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bb51bc-eeb0-4dcb-89f2-0a8bbc518d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fffbaf1-874b-4fc6-b23f-52d8a97c50aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01b7f68-2283-4596-b972-3b96bb108ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ec1b2c-0cbe-458d-8736-4d5365b0a4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00518f3-5883-4d10-904f-14e12b3418d1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd55beb-d5e1-4c8e-8b00-ae23a77db2dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75240587-34f4-447c-9aa7-473e01539a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a078ff-6510-4b39-9eae-41edcf415b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8496aa8-918b-4d39-802f-a2f8b286cefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f318e27d-7a59-4534-87dd-d3820d3f430b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b962c88-b1c1-416c-aaaf-4873d251b17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88740048-2aa7-48a7-95fa-baa273f89a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216e9e7e-7a82-420c-a1a5-72cacb035d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd3c367-66c4-4e6b-bbe9-50a64db55439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f577a8-7ed0-4e8d-8318-911aa1280f9e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a26a6b-f1f6-42c2-87e7-0cc354de9d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d636b9-d392-4010-8980-35cc18dd27e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dd59fe-17da-4349-8f1e-c6cf7db412f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d5eb15-6078-4f91-accd-d9db831e7f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22989bcb-6613-4bad-b1b7-f45e41a318d8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a6018a-a598-4f83-865f-839a67a4f6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a7ab87-0dde-4ff6-bd3c-27047bb9c939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfbc20a-2cfc-4b78-8aa5-c934863db9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdc8a15-ae21-4552-9c6a-95c12c0d0a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d5876c-d35d-4ddc-9898-eff81a4ae9c4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab93700f-8b68-44a8-aba6-de41b8f72f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dd9186-d07f-4864-a4c4-13326c78ea9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b34be4-17f0-4f22-a9e5-1afdd50decd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e97a042-f0d0-4ff1-a360-88f03f171ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852ee0f6-73de-423a-a63b-37e3012e4b05",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6908a12a-3150-442c-a981-9132f06fe813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c3535f-5c42-4b7a-aaf5-b8c923bee73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9225db-3a4d-42bb-ac5e-3d17c47bbb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40feae5-37af-4fe8-bc8e-2cd09df84dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e238051-ebf3-4663-ae3a-bb044f668ca0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704aebb6-50ea-4989-b924-469a077aeed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adf3ffa-526e-448e-a1f3-c34cc8fd9204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd64b7bb-fbdf-4622-887d-ecd6c660132a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655c26c4-16d8-440e-8b42-34a6c12e9256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba46f055-994c-465d-abb0-b78526a54248",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9694e324-9773-4d8f-a423-a7a791cfe0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a8c71f-7a30-4b63-ba95-a4cf2c1305b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf09e68-95bc-4313-8b06-177237026479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f455ef-25b6-4026-8834-1e291dda7686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b96c249-b17e-4b81-818c-ab0905707cf0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fe29f7-3b44-41c0-bd4a-24c0796e583f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0e26d5-f3e6-4f66-92a8-697faf505ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9ccb0d-62a7-4234-9127-6cd8799b2377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb913b0d-f016-4ac3-9893-3bab7e424ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676541d7-31be-4736-a376-4ec9325742f5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cd43d5-5d70-4cc2-9d70-c6019e22995b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c6462b-6e0a-414c-960a-e3e5cb50a3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f27e74-7002-425d-b531-a2a9846a5707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fe6bbf-a6c7-4fda-a474-da6567f0d0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b127d4d3-cfcd-4c43-9b82-5ef8b9238a24",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6b5556-46c8-44e3-aa23-0aac1303f658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa209051-25c8-44b9-8aa1-61b9f6a93133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bd9bcd-dfe9-4e1e-87b1-a993d889288d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae17614-fe39-48d3-ac7c-551d500af4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39001d1f-2731-4ef9-ac71-0e9bc33584a5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2b0e56-42b0-4485-95aa-16a33ac253f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66c0516-b09b-46a4-81a5-bcbb44ebdfe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a29e25c-8ad0-4c7b-8bb8-c355303d082d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3596c62f-1cfe-4185-bbf7-87b7bcd934d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb784b4-65a9-499c-8daf-641c9dce1b3b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e041ed63-984a-4bd2-b561-1d3d8e43fd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a23627-e5c1-428e-926c-b77770111960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307e82db-7d7f-4019-a71d-12e19404a6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d232b86-fb77-407f-9236-db64c622dec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12582f19-b423-41ce-9baa-32eaefa86f1c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146c6eb3-e0a9-4324-a1ac-196b27f0ec1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efac1377-97dd-4b09-9bf2-f248ff86dd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e93ee7-6d8a-4b2e-8061-35cfb32f6509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ccf094-a87d-4660-86eb-861b2e2a3361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd3b578-560f-4719-893e-43fcd52e4924",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f3c263-d420-42ea-997e-7be54527b77e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebe2aaf-4747-4f1e-8613-99772ced1b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd98b1a2-f2e1-4e1b-a691-3e7f185e5bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b307540d-58da-4625-81ba-52a54e2d4eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f81c907-3f1a-43b7-aa59-77877f2c56c3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cc46e6-aa12-470b-90ea-607e93d3a417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb018639-7a69-46fe-b4bf-f639a8eb3eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c73bd5-b0ad-4a29-8314-bc59cd3f6440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b252894d-630f-4765-b5a1-6805ba2aa5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf4e2f9-636e-47c4-8bcc-9c43093c1104",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fbc73a-7da6-417b-a481-50717fbb8d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603d178b-c399-424d-afdc-f4adb1b2c3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45608355-83ea-4f84-b45c-a2815945830f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345dcfa1-23ca-498b-b54e-05212e973046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd6cf63-6b7d-4b26-a814-b05b0d877523",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901739b9-a221-4152-a815-2277fc789515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83bc9946-1c44-4744-8d76-dc0662b47679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8388cda0-a659-4f52-b901-2e33a3dd9ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c044cf8a-cd67-45d5-b02f-fc255cd526a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55ec94a-d67a-4389-99a8-b13fdc53e938",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a9db68-3a5b-4cf4-b647-2a19d31988f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd91c751-bfdb-4198-984c-9f99a4e8daf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b00f4a-8cdd-4916-9dad-e7634b4086aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61acc9b6-6a33-483a-91bf-3eeaaa18ae49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b0407a-063e-4ff9-94f5-20a908cfadc0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff409ef6-aaa0-4245-b410-35b90dfe2156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccce39c-921f-4777-a1b0-3b4793c2159c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22917cb0-c432-47f6-a9c8-926dd18c18ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ef64f5-f849-46c0-bcee-e92493a78f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de479a4-1896-4e83-b51e-241042e33702",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5112c8-a3ef-45ae-9696-9f10f463e01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac856be9-c396-4d45-b055-0ebdcc12aa66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a0fa21-f76d-41b4-97dc-d298b1950881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4d3f13-dfe4-4d7f-819f-58fd549e74a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f98dd4-0baf-4ff0-961f-7880f9bcdc15",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98c4b27-1fc1-4262-a7a1-0516a5018a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bbe812-362e-467e-98dd-581a6ef1f623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd71790-44e9-4b36-a76e-ae024c2f2c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60bebf5-50c4-43a7-846d-41f052fb7946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cbaf5d-b002-48e2-9920-13a2da2eb99c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4439dd94-dd87-44a3-845a-d46362d437ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f0cab7-3645-41bc-a3bf-379291aca359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0bd95a-413e-4759-8a2c-bdf824418d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9f1342-4cba-4f9c-931d-3665a0d21505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e01297-90ff-4370-aee5-7981e3c5b4b5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9f681f-5cfd-41e6-bb29-695a2a48d7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d2511c-cfa3-4a93-a6fc-d5ecb4a7cbf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30da1913-9642-4b04-8e55-7aaba9f4b42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0d67ac-cfeb-4e69-a4a6-de86b73d9b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091704cb-3894-4d22-8f55-fff0ef32452d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4330e19c-a603-4cfc-bf2b-417e8fe7e267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6333fe50-49bf-4e30-a27c-32dc4be95860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82654fe3-9300-49a6-b8e4-494b40266410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0906d820-8cfa-433c-b0c5-b8b5ec617ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dff1983-2bb0-4665-8f01-e97d1a948f18",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3871b2-8ef0-426d-91db-b9a5e792871c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4079aa5-a3d6-4e52-bb12-3d3b988ef919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69aa26c1-b99f-4b20-8a82-56c78e3b98dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94aced92-ce19-4662-91c1-7f2b369bfb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416b0f3d-d20f-4b51-a607-3c311f03abb6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d623478e-326e-41bb-bbed-1689a80f90cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3e05e2-2750-4da9-b98e-c604c828196b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05672feb-9e1d-4730-af82-29b51792ba21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62671f66-ac19-43f2-9d96-7ed336d7a69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fe5b4a-cf0f-4433-a01f-bb1b92c571d1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab29b2eb-0330-4483-a067-d728cc8fb02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a344df50-6d89-46ba-80d8-5ef82288c6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa4576f-62da-46e8-bf03-3014bd9329fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ad452c-6c9f-4690-86e2-4fe898f9cf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f925ec-c0c2-4eee-a6c1-3bf0ad4ed6e6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfbeff7-7f5b-437e-9fc3-0d4fcf746581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c9ca71-0dcb-4067-9a23-0245dce10c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ac476c-d74e-4088-8134-9aa61e132f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3bbfaa-066e-476b-ad76-08bf2ff1dbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdee5e08-076a-41f3-a75a-4c8e64253e2e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14d3371-f031-4fd9-b947-e3d07fb64e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab091f97-2169-4244-8b5e-d502a2f98dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c8fa6b-740c-4ab3-80bd-7ef83900cfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6871de42-713a-4e45-bf89-e27b61b894e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd15cdda-ff5f-4caa-9737-c331a1e8865b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d581c30-e529-4798-8d58-dd3e1e28870e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae697087-0b7a-47ed-b0c5-cbbf4b8a3453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7019c47d-bbf8-44af-bb4f-76ee03c34d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbaa3f81-ab97-4cb5-8588-3467a82f671b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b32bb1-2b4c-4e2b-b755-fc5aa3401a34",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c880680d-8987-4074-a292-c2eb8af81c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ce3f9d-3e20-45ee-bec2-094875512032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fe797d-325a-42e1-9537-e98054491464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7240e947-533f-463d-88d0-2d6ba7c5e4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501aa606-33c4-4480-9bde-0326ea9cdb67",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b570b6c4-942b-4633-aab2-0a7437ac25d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c467512-88a7-436e-b71e-0089505e4c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933ae075-b63c-44fb-b0ba-c6ad27ed427e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dfc29f-26d6-4443-a214-83ffc8624139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778b28c8-b7b2-4aa8-92e5-487da6ea9cff",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb27832-e6d4-43f6-b183-2f104c502b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc82c39c-4cfe-473c-bed1-a5465746bb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e421d65-d09c-40f2-b0dd-699793f13851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fd2174-a29f-4869-94e7-aeed437a011e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e65c10-fb21-4897-ac11-1e95090cfad3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c51f19-6feb-4c39-afba-8819b8c13545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb993d0-307b-433e-ae76-4ccd29cc3c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8376ab8e-ebf4-4eff-bdc9-09975a403a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd821477-23f2-4345-9b73-00dff28e2a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d411211f-f0b5-41cc-a373-11fdc93b8df8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d0a711-e1a7-4626-875a-e5e3a535d614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4ca4a3-6126-4bf2-b4b1-84fbcbfc7022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5c6963-6a33-4bed-be99-7fc4cadff6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4a0d35-1749-466f-a41e-68a935e4a209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acccbad2-04a7-4168-9003-2575f104a3b9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fed72a-0aba-4299-836b-3da1bda53c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acf92ce-5bf6-4f1d-b37b-6133fe93896a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca81bdbd-633d-46f6-a42e-08a0fcee1d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d61e366-b3e3-46d9-8c8b-e239e083b9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebd5a71-c0bb-43bb-bcf4-391361078c28",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379211b6-015a-490b-aaaf-3d777e0c83d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ec4ddd-4959-4bb3-82c0-be7b2690d770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055ef967-262c-4fdb-96d4-e426739e0d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eed68f-106f-48ba-b0d2-929ce36462a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ee7b62-1723-4b32-ae02-c4ef89430b9e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323572dc-6db2-436f-8c24-a295c8cde721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b086238-ec01-4b70-b70f-275f0cdddf3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7d2739-8abf-4060-8705-aceceaebeba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58cdc09-be61-49a4-931f-62313160e804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abeaafb-1504-44b1-8ed3-ff255f496793",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812c3b5b-1573-4e5f-b6b4-b7dd8de5e3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c45e8ff-79b1-419f-b253-764a73c501de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d201e2b-1a0b-410d-9000-aece2fabb55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a6a1c8-1b7d-4fdd-88ac-2a5e2d10d95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dec5c6-de9c-49bf-b405-507294038a64",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a1abd6-fd66-41f3-9c33-b5a48a7f658e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858f1dec-ae80-450a-aafb-610b411338c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60085914-3da0-4498-9910-150583efdc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f55133d-2c38-4dcb-9cf9-51fbf9fa6e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc78f088-2627-4624-88bf-d16169a1cbfb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7167e7a0-51f6-4851-a6f7-41fa1677fe4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5dc07d2-9605-4b56-bcd2-528b0cadc0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a0edbb-8b98-4cc6-b295-c3ab25958beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117d19e2-a328-41b0-9637-f3593176fa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6248ef-344a-4998-a1c3-9e6b1c37973c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc3a457-7adc-4aa4-a68d-5be5d5015d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30cce1f-e37b-4cf1-877c-cf768b531165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d09f73a-ee2b-4fe8-b5bc-b6099fa20c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be73bfa3-cd82-45bf-84e4-09d647d48fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df313e24-fc2b-40b9-afe4-270b7ce568a0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8aa588-6e98-42d9-8b1d-c2a0b4988ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b81fac-4eea-4492-96c9-523f2d1a976c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dabb743-1039-4821-8381-c993af2e5aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd006c5-859d-4248-8738-7d33a8aa3fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ada082f-37be-4b8a-a885-37cbe895dff2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37594392-f505-410b-af58-753308e29d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0b4fae-dfc3-4d0e-91fe-6c923f9cadff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bb80a0-a4e7-448c-b57d-ca9a1f325d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1042d4-2afb-400a-aaeb-0a33a34526c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b3cabc-ba0b-4ae9-85c2-293566b21adf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7211ad-6074-48e4-99cd-54d36fe06fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a5583e-9420-42f5-8584-f4474a4224ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa40edd8-575a-466c-bf97-aa5068b1deae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33705ffc-7507-4c0c-baf6-9ee9727041a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33934ec2-92fe-4067-b4a3-83992ac98a60",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0697b37-a08a-4a24-8940-8b078e2cbdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30de84b-cab1-44dc-89ff-5d5e5f8851ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b1c7aa-c477-4be8-b5e3-c35dfae298e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7431b2-3e2e-4a5d-a532-2d62aa0bd972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad7eea4-7a32-4844-b9f0-65cab8970a9f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1ad087-fc6a-423d-9b29-d1a42701b6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f309a6e-ac41-448c-844d-874e505074e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562d5a65-99b9-41be-87d1-663c302ef45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dec19f-6bcd-4117-a2ad-52eb9fbfea85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291cf1b1-1299-4077-a61a-7183058bd54b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f771bf4-242d-40d8-87b9-0a79214d4ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3f171e-e007-4e40-a769-2b76d0a10ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "babd6447-de20-4db8-8cab-8f289974f40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec84b556-c101-460e-949c-0eb39414c4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e418d28a-a3e9-4e7d-bee3-7e9a55ac8ac7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5fbc5e-5fd5-42fc-bc73-7067722da5aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c29073d6-f3e9-4fde-9f80-f4632e2660b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3550308d-6f1f-4b75-bb88-8bd91ac8737a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e430bc7-df3b-48e1-b7a3-ff7953bcee9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f8259e-11c9-4efd-901e-6d97571a3905",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38add1-5459-4ef8-a257-29e19f5ef895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8e9e22-37d4-4189-8298-f3ba9befe37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86ff53b-a884-479a-890d-265351610157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2803f296-7380-499f-8a6b-4b30b7f4d278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adc514d-c6c8-4f6e-b8f0-ced181f5b5e2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b532df75-551d-4f9e-a040-02a54d4d6388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a259dd2-a8fb-4b2e-81a1-6855e4db417a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8203e62c-8a83-4b2b-8a7a-f2f4320916a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b62c25d-2e7f-46b1-b52a-1f1b6fd147ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e210bf-e7a1-4b2f-88bc-ca2fc8bd7e01",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd80a9ba-8dce-4c0e-869a-7b8e5c3ab6f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d775ece4-22e6-4dc7-ae37-4e875a0dd82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae3fa17-08cf-4e92-8cf6-bec4f3e6ed9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8bd0e7-74dc-4cf1-a486-4dea2600f832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c30ade-b0d3-4d82-99eb-84c5aeeddbc5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17e4846-84b5-4586-b52d-4438852f3fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97afec4e-4630-470d-ba45-5e87c73c55bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cb77af-d163-4f96-a7c5-3a24c2fcd742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005de4bb-0ab9-463d-86d2-5cf78131285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb45d22d-07ca-4174-aaa4-9878dc8dc607",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6213be83-6fe5-45f4-be32-6a0b5650698c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492fac33-26a7-4efc-980c-2d2201db323f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a844276-b3a1-42b8-a598-eb85db8d8e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8451953b-03da-44f7-af8d-d1512b029c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae693eb6-4fa8-4880-8c6d-775f695928ef",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7230827-f52f-46bd-845f-e2723a1885a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95d8d356-3372-46c7-bd38-546434079ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad778b71-3306-4fe0-8505-7078765b7aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a59dd5-8faf-41ab-aad5-a33fdc892ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02387849-5d2a-4247-b79e-966a7796b41c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae1ec3c-da2b-40a4-a5c2-673f03899a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3369d3c-f672-486c-aa3e-5fdb100c5082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76dd086-ee4d-40f5-b29d-816dbd7e567e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24562ab-f185-4963-8a6f-d7b5f42ee8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d407b9-d8e2-43af-b938-27ee410d89f7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5e0dea-e7be-4a06-835a-9b7dc3a94f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16523d09-aa2e-4c95-be9d-f04c7dc8e080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e239a9fe-8b55-4ab0-9657-d06132d73ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b32399-3187-4d04-98e6-d6cdcab67564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f32101-8e01-4ef7-a819-8d4ca0474257",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540c50af-ebd8-4110-a392-6450d9ccfc9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eafd1434-2f9e-44e2-854d-bf74fd20f048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6488fa-ec31-431b-9dba-a0b6ecb07c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdf0c40-f9d3-42ef-b95e-e072972269cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1e131f-919f-48b6-b2c1-360261530d0c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b76af04-9f97-4476-b604-330bec649092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d3eb076-7158-404e-992a-4da7a8e80cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de114e7b-751e-438c-9508-9e235f24e759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d5bc13-a48c-489a-839b-0eb61432d0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc37f60-301f-49e3-8d69-19f364e92333",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e1ea29-ca8d-4254-a05d-243b4f187fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deef1957-3a6b-4623-993a-36e203389ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec327af-c4a6-4e2d-8e7f-36addf1160d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8873ef07-8662-4e9e-9d9d-fc33f4aabb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63c4329-9a20-4f14-8f58-2567a1c42d6f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9577a0-89d5-4f8b-8198-3910b3196be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948c0877-6d5f-409f-aeb0-719a76d584de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad2e74b-62ef-4042-a260-0d34fb10204c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58843e9c-ca48-47e7-94e5-0e8a461f2cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502beb58-9303-4057-adac-37e240e5daad",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabaf4b0-92bb-4342-b446-e5b048e006a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90714920-5ce8-47ad-9a4b-cc614e4472b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f0b7b0-0c70-452a-ba02-b857d5c54c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829c6e3c-e13e-4929-8caf-850626d19da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e7a152-9489-4006-b003-562465657fb0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201bd4ab-2575-48ee-a3b1-402a6c04e47f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33578a73-dd5a-4fd7-b5c5-367994368d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2dfda0-7ab2-46d1-b6ef-6dc81f68adde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc803a7-74be-473c-92db-33980d68da3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79ce968-712e-456c-9282-7dfaae0e1404",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6838dd78-6ff2-47a5-8657-8082dbabc7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f2df83-3a88-421f-8427-0af711ddf89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cbdf93-9330-478c-8945-42c83a43f58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709b4b71-1c2f-40fe-98d0-555c0334e5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d481b2-8e29-4e61-ad6b-86a1d793636e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e41b5b-a090-44d6-93fa-7db58035aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c64d0173-3822-4bef-8434-6f0ab8c3d35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981ad28d-56d7-4455-acf1-10dd39fd263f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927b2725-c96b-4ed9-855b-47c7d0c14ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4c0f74-edef-4e89-8c69-be14aa6f64c9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0489f3f-bf58-4706-b3e4-f5a0dd7e3853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56af745a-c373-43d1-abf0-eb8a779df75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166fc7a0-ac32-48f4-a527-b764b546c5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5045fd9-162b-49d3-93ad-2097cb68d601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34ecf38-ba82-4613-b7d2-6b616bd4ed72",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92da9ac3-1e00-4464-a041-c6c3181213cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4576c70d-f935-4c94-9991-4d5a8b840398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fca141a-579f-429e-99c5-196637831a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa615d1-93c2-422a-9970-76d9ddda0d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce5cdfa-230f-4d81-b42a-b2d992bc994e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f101ceb-fbf8-4fe5-8f7e-2313e5eb844f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24969c72-a464-4b6b-b4f2-42fddbeee0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb0b285-7f75-4d50-9646-20a8a30d57af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1734844-764e-471d-917a-9de58c747730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce7b149-2fbb-4635-a10d-67577fa7b62d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5013a466-69ca-473c-a0fd-bbd3fe7399d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ff2ff7-0cee-4641-80b3-eb600895326a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9383f328-0ac0-4130-b4be-1a280ddc14f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b838f8-f896-43f0-964c-f52aefb9ba3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ea2547-072c-4f50-a6e5-1cb40265b33a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145bd5fb-d569-462c-b1ac-8435620a6f0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9fbaba-4a6b-4479-8f15-31418025944a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd3a1d3-f718-42b6-bcb5-b1abdd4ac45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593fe9bc-3e3b-45a9-ba1e-d286c0c7081f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1109f18-48f0-4391-90ce-bf22b732c5e4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6980b57-6967-4402-a67b-a1440d0e93a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76910b49-e1cd-412a-a772-b34419cd4c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da859f38-f518-439e-ad2d-ff923398f1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d92cbc4-e31a-4a77-85e9-80497149b68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4affe6df-75e4-4462-81b0-eee84a1868f2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a62ee1-4c97-466b-8298-b45190ece7ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a8790b-ad9a-4ca1-bb2d-c346b6211246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51945fc1-5889-4327-a368-e41b97fc5753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49829fd2-c5c0-4105-a6c5-ca59a54c3e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baba465d-8499-4112-b356-235e24356cbc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea3f61b-ba14-463b-8590-490c39e71b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b1ae8da-85f6-4e96-bf08-87a5bea47083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06b2e5a-37dd-4565-9509-5dbcd2e3a53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cd7b0e-e0dc-4151-a6cf-6b05667629ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b00a357-0c95-4abb-bba7-1a668fb74a23",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b44dda-06c9-45e9-820c-3e1291e44112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fc1193f-8c74-46c3-9997-01fe5b889af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1574992c-f25f-4e42-8911-2b599a5bacfe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5555f21-e396-4a0b-ac48-d1f2c2765637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d54503-f9db-4464-80b3-d604a859276d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1814e29f-7445-45e0-9d2c-f7b8faae11d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec15668b-8a33-42e7-aea5-54ac41175e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03188adf-8112-4562-9533-e8a453412db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7243ca49-e110-4976-889c-47f5d1ed8baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa63b54-ab89-4a3d-9198-557dd97a24b5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc93669-fefb-42ed-a80d-63d0c129c4d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff481ba7-9ee8-4066-8108-92bc76c7e819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadca18a-6d31-417a-9b64-eae8cbee7dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cbd187-675a-4163-b584-c67e08f3f7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3175e1-755c-47b2-b33f-9da8a28e24c9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9b3812-425c-4995-b267-23b61856afea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b3badd-e382-4b33-b481-898f667314c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f29b17f-ff63-42e1-b4a6-57b7d148b567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0ef255-1b79-40c4-8ae9-365122c2371a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a089202d-1b16-430d-92e1-767c2761145d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddb7ce9-d2be-47fc-9392-f1c0806fc37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa853283-600a-4753-9eea-b17f24726f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e48e3f4-f803-4be2-a02c-de0d65f70e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d9c640-2ba9-44e1-9f83-94fc2cb4ff56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4864f824-361e-4657-b206-d8885d998ec9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276eb116-054c-4486-ba58-134dd127d125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07500c1c-37a4-40b6-821c-5755cac76c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c800530f-9335-43eb-a02b-097cd55642be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f98dd9-70dd-4559-bcf4-545c2bf78fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a25670-9db9-49d3-ab36-7ed744402be9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df36a114-0e9e-4e60-a104-029789f2e8e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca1683e9-fea4-4c68-aeef-89d7eadce3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f172f8-e0e7-40aa-aabb-90035fd0d490",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d5818b-2752-43ab-83e9-0d8feca50c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fa1b09-66ed-43eb-810f-e06c73621f3a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592eb756-c9a1-48e5-9aff-9b4899342109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b78422f5-22e4-4d19-afd5-ab5925b3b8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31d6c34-0e66-4fc1-9116-e354517cf6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1422a5dc-2c7a-4ebc-8ac0-b855f954d9bc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bf5f5d7-083f-4a62-8620-3f21b3069ff9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c5d8b7f-0a9b-4241-968a-64c9994c6aea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3c3a3f5-ef86-4005-846b-1696e763d735",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "590a6c83-8821-4b35-9797-bffd9137316c"
                    }
                  }
                ]
              },
              {
                "id": "5e45b696-e00d-4273-8a5b-60a73e498976",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fc501a5-70ee-4735-b2a4-44b98e726682",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf08846e-92b8-4a42-bc18-71b63c025afc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eebc5a6f-0222-4570-ab13-c981f7726f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e8c020-48ca-4a81-b6f9-9ad2a16e3b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c6777f0-9665-490d-8fdc-dfdec958f971"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88eee4ab-0bbc-45f3-bfec-d0af946ee4e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "218944b8-3720-4c88-b821-46341c3c0894"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0f91229-88ae-40d7-9eae-c02a6dee74df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85af3db2-2c2c-4a1e-8fa8-44f7131a93a6"
                    }
                  }
                ]
              },
              {
                "id": "8e31aada-316b-4eb6-b185-e8b3ab1d65e5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "20b67887-38c7-45c0-a766-0756cc775ba0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d4217e-528c-4343-88a5-3c64cc49d451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6b0dc842-080b-436c-bf4d-63a33662476a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c0c701-68c4-44df-add8-dc859974f0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3d376a-2a42-4eaa-a99c-f2cb8238c09b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ee219f9-63ae-460d-83d8-a303bd5bafa7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69cf7e84-aace-44dc-9d8b-b12ddcc80b1f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10e00b0b-6a2b-44d9-a83a-344c88450c21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "76775255-8772-4416-b87e-2d70e0d0c78f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c3b0b32-788e-4f7a-940a-ce3011fd2a78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0e1311a-1c9b-4473-8b08-1ec029aa57d2"
                    }
                  }
                ]
              },
              {
                "id": "0efb4c95-237e-4920-b5cf-c1abe8fdc1e0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f276def-dfe4-4a9b-9445-0aab7258c481",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b8b5a4b4-18f8-429f-ab34-34f556c1da6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ccf9c29-c943-4643-8163-f469859ff0dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "824fea63-9724-4030-b1de-a84494c29d15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cca8f18c-c9e6-4a78-9f07-a6c00d47e09f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c14b86dd-345a-4dff-b78a-89609b27e495"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3242e262-eaf5-4bde-91f7-0df90a33cfb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e018eb8-b4eb-4726-a20c-756572e4af82"
            }
          }
        ]
      },
      {
        "id": "14687548-13f8-4646-9862-85208f3aeba0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "62140eec-261c-4c8a-bdac-823438e51f79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c753aebd-4f62-4eec-9134-4daab9aa1590",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6865a5a-6598-43c2-aadd-7b871bee51c2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514db282-f485-45ad-a000-2e252b455398",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "655392cf-c319-4562-b6de-d932ed04376a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6078d1-a758-43ea-9563-ca58fe29e4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dc202be-1217-4be6-b703-260988faaedc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cd0b4e5-b72f-4493-91d3-0dbb6c88e56e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe3db51a-bc2c-44e5-b772-2dcab6ada04b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0db4c3e2-e782-43a1-baf1-b0b08b0af972",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fd5b1f7-e0af-4dee-8902-156266f996a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19ac54f0-7808-449e-90e3-2d7cf3aa8d5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6522bedb-ff40-440f-91d1-a9b80f325635"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53accdb2-da65-49ed-8f23-234988009f4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fe771f1-ff70-4d1e-9c19-014a0e3b6fe9"
            }
          }
        ]
      },
      {
        "id": "8209b684-d9b0-4b03-a67c-baf2da1c0759",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e61bc1a3-fac2-4134-a082-f150a3ef95d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f071b6b-c905-4c82-b79d-942410f15f9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "537cf60f-2549-4e1d-a758-1276ded6cc94",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344ee5ee-cdc7-4177-9eeb-7daa555b7161",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54b4a450-595a-4b74-a3a8-a0a8efe0105e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f16f87-72bf-45ca-95a6-0316126ab047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50752854-245b-42a0-adbc-2ac4204b6109"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c17f9077-33f6-407a-8c24-0dd0ef549c74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ab4352b-9efb-49fe-9ef3-cebaff60be9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dba9e511-9d73-494c-842e-45c0f2b50e8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00f2b721-0485-4d67-8115-bf572b8f8dfa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f38f79ec-425c-4d20-8fa7-24fb26e7fc8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c07f768-286c-4ea8-98c8-bbd488794dd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aad5f230-d493-46ab-83e3-b2ee18bb0623",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89d07b9e-bc1a-4796-ba3e-c8917eb2bc55"
            }
          }
        ]
      },
      {
        "id": "2315739b-9145-42d7-9259-245927c1af22",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c3e05f21-8911-4ecc-bff5-b9888184cde0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f39eb36d-0b7f-48f8-9148-c59b634f4e50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e148b9bb-ff40-4176-bc72-795a4fe82bbf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c56e1d7-717e-4124-a504-1b0ea136995f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63e4dacf-d464-41bc-b3cc-766dcc704752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a841bb9-77f2-4e7f-9625-ce8b892a0c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33ffe898-ff1c-4010-9cf0-a00a05a749b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1c076ae-9275-4be8-86ab-201ad3b3a340",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74d7de92-29b5-44c5-a5f3-b9b7b935c498"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb885b6b-9b55-423c-b14f-4abfd89a4945",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dadb3784-0342-4e01-af03-5e0ac12c1f19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "803f2df1-b912-4352-b78b-7096ec016d6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "84131ace-0f59-4080-9df4-35937971cb1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1783be01-aab5-40b7-84b3-c757d2409bad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ceff904-57f6-4f2e-9878-bf6f728df4d5"
            }
          }
        ]
      },
      {
        "id": "095d89ac-0063-4e77-9084-e3e3816c3abf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e70e4e4-9756-487a-a7e3-1744adc0357f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cc61af2-d8fa-46d1-84cf-ca4e0aa1b927",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a273b2d7-435a-4fde-ad0e-a9c80f4e41c7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a0fcad3-6390-4380-bdd2-0b7bdb3d42f6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9af94883-c06d-481e-a5d0-8b80c361fe89",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 153.24206349206332,
      "responseMin": 21,
      "responseMax": 8230,
      "responseSd": 645.9755825958341,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724459985609,
      "completed": 1724460032591
    },
    "executions": [
      {
        "id": "f58d4743-20f6-4dc9-be3d-240a2859ced1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9c8dcc04-c657-49e7-922c-b62e655aab76",
          "httpRequestId": "5a8973a7-2c6e-4cf0-acf8-44a5d7f81ca7"
        },
        "item": {
          "id": "f58d4743-20f6-4dc9-be3d-240a2859ced1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6569d0d4-d1ff-4207-b421-24c5162957e9",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "14d5c54c-dd1c-4590-942b-cca9c879abc4",
        "cursor": {
          "ref": "f8d38f12-6e26-4b1a-ba7a-49c67ba8a133",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4d323a44-77bd-4dbf-82b9-bd851eb43ed5"
        },
        "item": {
          "id": "14d5c54c-dd1c-4590-942b-cca9c879abc4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "179162e8-f67c-4d1a-8b8d-147662dd4dfd",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "d78874c7-a349-4636-b7c5-d1ba3cd376a0",
        "cursor": {
          "ref": "88419e1b-2d02-41e3-8351-9d8e4bac3825",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "38c65b3a-ed2f-4b86-8e24-4273a2130510"
        },
        "item": {
          "id": "d78874c7-a349-4636-b7c5-d1ba3cd376a0",
          "name": "did_json"
        },
        "response": {
          "id": "9ad357b2-16a7-4154-a334-2313eaec0ca1",
          "status": "OK",
          "code": 200,
          "responseTime": 494,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8973278f-50ad-4547-b382-a65cdb61fb51",
        "cursor": {
          "ref": "267fcd5d-5a0a-4255-aea2-9d26d77777b1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a24c7ceb-f6d3-4c0c-b4d0-224fdb13e8a4"
        },
        "item": {
          "id": "8973278f-50ad-4547-b382-a65cdb61fb51",
          "name": "did:invalid"
        },
        "response": {
          "id": "19dd51ca-cc8a-4078-989a-2bcd8f1436ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 590,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8973278f-50ad-4547-b382-a65cdb61fb51",
        "cursor": {
          "ref": "267fcd5d-5a0a-4255-aea2-9d26d77777b1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a24c7ceb-f6d3-4c0c-b4d0-224fdb13e8a4"
        },
        "item": {
          "id": "8973278f-50ad-4547-b382-a65cdb61fb51",
          "name": "did:invalid"
        },
        "response": {
          "id": "19dd51ca-cc8a-4078-989a-2bcd8f1436ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 590,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea557189-cb42-4338-ac9d-456efe2fce53",
        "cursor": {
          "ref": "b8495ebd-d482-4d34-a77d-df33e6f52d6f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c2dde4e0-9d4a-4859-95a5-af93cf19edde"
        },
        "item": {
          "id": "ea557189-cb42-4338-ac9d-456efe2fce53",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "52ee3332-6b6b-4276-bd0d-a11246fd9daf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f003598d-3080-4d32-8b3b-580fc9e41733",
        "cursor": {
          "ref": "9611997c-976d-4768-ae39-4a563a8f9ea3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0095a63d-b0c7-4b8a-a963-c09b53f9c275"
        },
        "item": {
          "id": "f003598d-3080-4d32-8b3b-580fc9e41733",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "89d87657-fed3-4ee4-b3ac-0eb95e0b86f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ae9a8a-8850-4cd1-97b4-3b5b1396ddf7",
        "cursor": {
          "ref": "b3a8d799-4233-4308-8e56-d8ec87340e17",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9caa4eab-d416-4c3c-88b7-18d6dafd0ab3"
        },
        "item": {
          "id": "36ae9a8a-8850-4cd1-97b4-3b5b1396ddf7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "aa1b14c1-e849-441b-9c7a-e8981bd933de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaf9486-1af1-447d-af31-264bc90a79ec",
        "cursor": {
          "ref": "554242f0-696e-494f-8dbd-41321c38219a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9dcb040f-ec16-435a-a3f4-b8d1d24c9a3a"
        },
        "item": {
          "id": "abaf9486-1af1-447d-af31-264bc90a79ec",
          "name": "identifiers"
        },
        "response": {
          "id": "879c727c-cff6-4668-a0eb-1cbeeb10610f",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b29fc80-79b2-401f-b213-5500c01cb0a4",
        "cursor": {
          "ref": "43d15263-48d4-4e88-93de-12624c9f6c23",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6a40b90c-73d8-498e-99a2-af8283c3ac6c"
        },
        "item": {
          "id": "4b29fc80-79b2-401f-b213-5500c01cb0a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c2dc55a-16eb-4dd6-a3e4-38f5ba04d89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9c4e5b-a698-47d5-ba22-059b5d8def13",
        "cursor": {
          "ref": "2572d611-591a-4b7a-a597-30b06c9a4bff",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5483a8e4-afa6-420a-92a5-c74610b68547"
        },
        "item": {
          "id": "7e9c4e5b-a698-47d5-ba22-059b5d8def13",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bd898ff6-c68d-4892-9313-0bce7d253c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01458268-e10b-44fb-ae04-1c85e9a41cb7",
        "cursor": {
          "ref": "dfe2f868-0e70-4c23-a9df-88a4cbbc2766",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "44a5807d-955d-4a70-b102-a31c35830cd4"
        },
        "item": {
          "id": "01458268-e10b-44fb-ae04-1c85e9a41cb7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fe83293b-1db6-4d1a-b972-d8456a3453af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1509d38f-4395-4701-9ac3-9beff2860d72",
        "cursor": {
          "ref": "19d0bed2-11eb-4b6e-ba99-575f6121f34d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0d762417-c172-4782-9e54-43d2ed10c7bc"
        },
        "item": {
          "id": "1509d38f-4395-4701-9ac3-9beff2860d72",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c55d8dcf-944a-43f3-8db0-1b53d1522822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ffc4a0-13b1-4f43-a93a-c4a9eba242ea",
        "cursor": {
          "ref": "a3b33137-2b2f-4cd5-9a94-3a12f470a96e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d14ec0f5-1fec-45ed-b754-cc9d3f6814f7"
        },
        "item": {
          "id": "14ffc4a0-13b1-4f43-a93a-c4a9eba242ea",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9f00cead-cb17-4bc0-9e5d-b4a296d74746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde8199c-4e09-4391-8ea0-48e88024fb86",
        "cursor": {
          "ref": "6e953163-1bcd-4fea-8c71-e2a11da3e9b0",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b7792fa6-9e1a-4a16-85a8-f0c364e36348"
        },
        "item": {
          "id": "bde8199c-4e09-4391-8ea0-48e88024fb86",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0922e888-0e82-4e56-95d5-f29bfb81361b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b992f7fc-5132-4a21-abc9-266fc83cc1be",
        "cursor": {
          "ref": "aabdc13a-2ade-45e5-8483-d5d600414490",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fc15e210-5913-465f-9e09-2f5c16fad60e"
        },
        "item": {
          "id": "b992f7fc-5132-4a21-abc9-266fc83cc1be",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "53ea9b8f-1e1b-4057-ad38-d3c800eb13ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d05597-8d42-496c-abb8-29ca6077768e",
        "cursor": {
          "ref": "03dd0034-3b60-4b83-b72d-937e315e1ac6",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c4fb9b53-192a-4d55-941c-d9addfdbbcd6"
        },
        "item": {
          "id": "89d05597-8d42-496c-abb8-29ca6077768e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5a7b1c9d-8d65-46e3-9c8c-b3c07b46e52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f878225-09f6-4e45-8547-9aa233ddfdf2",
        "cursor": {
          "ref": "0eb6c3d1-b53c-4377-a570-80627b202b97",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "70f7fb8c-ec4c-412c-8e2d-a266e1392bae"
        },
        "item": {
          "id": "9f878225-09f6-4e45-8547-9aa233ddfdf2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1e0e1d66-6866-447d-9723-5b555bad79e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938def5c-b857-43e8-a6d4-da516fdb337f",
        "cursor": {
          "ref": "1a98a289-ff82-48ec-8c41-56bc2662db05",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "589265c1-3464-4652-a3ff-360d68c2dc2c"
        },
        "item": {
          "id": "938def5c-b857-43e8-a6d4-da516fdb337f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3043dab1-f64a-4f11-9586-e2d85a2f1564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b88288c-822e-48b7-a225-5dbfb8346217",
        "cursor": {
          "ref": "aa55699a-3c27-48ef-956f-3c7b6c90d26e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0b7dd1cf-3e61-4724-ade7-eb834ea9aa0e"
        },
        "item": {
          "id": "5b88288c-822e-48b7-a225-5dbfb8346217",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7749aae3-b40f-4538-9351-791ff7eb711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3c45d0-523a-47ca-b2d1-dbef99b537a4",
        "cursor": {
          "ref": "f8418e5c-7750-416b-be69-11b29178f1a7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f264bec8-b262-4ef7-81a4-d37f29804bca"
        },
        "item": {
          "id": "cf3c45d0-523a-47ca-b2d1-dbef99b537a4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a68169a8-f1c9-4724-8825-a16b71834d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19ad49b-a2c4-4e27-bf12-65a494ec9634",
        "cursor": {
          "ref": "add61baf-b52e-481a-b567-94d7631d6c82",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "351e6637-5332-48cc-81df-098cf97e2665"
        },
        "item": {
          "id": "a19ad49b-a2c4-4e27-bf12-65a494ec9634",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "15858f76-19f7-435e-a381-36e3ff4683c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddceb9cd-f407-4ea7-9420-928ea3a01dc3",
        "cursor": {
          "ref": "74c2b789-c115-4c39-b9b9-73fe3e179f9e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1726cea7-3517-40de-b6c5-9df7869984b9"
        },
        "item": {
          "id": "ddceb9cd-f407-4ea7-9420-928ea3a01dc3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "736a02e4-f6dd-462f-ac05-24075b27e67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bb6c6e-3a4a-4a14-bf15-4e43c0ad4d1b",
        "cursor": {
          "ref": "d5f1db0d-c3f1-4b70-8b30-73661efa3a76",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3ff6177c-743f-4ec9-9921-4792683ef5c5"
        },
        "item": {
          "id": "86bb6c6e-3a4a-4a14-bf15-4e43c0ad4d1b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5ac60cf9-3fd2-4149-be7e-e5cdd85ae162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a0c3d3-de16-41f2-86a4-9ab0df18b18f",
        "cursor": {
          "ref": "15893bb1-d4a5-466d-ba14-766aea663da9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bb448119-0ae8-4840-a5ef-a93866a695cb"
        },
        "item": {
          "id": "07a0c3d3-de16-41f2-86a4-9ab0df18b18f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "19558bfb-8510-4000-8fe7-dbbe556964bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80efb737-deed-452a-ba7b-9c868b51469e",
        "cursor": {
          "ref": "1e6808b4-394c-41ac-91e9-2d025923e536",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4874e813-56ec-4a4e-ae64-6b3c0e32ebf6"
        },
        "item": {
          "id": "80efb737-deed-452a-ba7b-9c868b51469e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a69f8987-b36d-47ef-b137-2e51b6579df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4630a0ad-b198-4ddd-9868-acffaec53a66",
        "cursor": {
          "ref": "50ea8ce8-7459-4cae-8889-10520dfff6b8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b00ce56f-6cc5-4a9b-a7ce-d5a4464aff2f"
        },
        "item": {
          "id": "4630a0ad-b198-4ddd-9868-acffaec53a66",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d1b62e07-ba6f-473e-b3eb-8ddff7de8fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d17598-65d0-4174-8d55-d64e5341c0ba",
        "cursor": {
          "ref": "9ed93813-0a7e-4b4a-bb41-c1f0e57c389a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8d1e454d-6ee5-4966-ad72-c695315a94ce"
        },
        "item": {
          "id": "c3d17598-65d0-4174-8d55-d64e5341c0ba",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ac456105-3115-4214-938b-6bdefe936027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479b0e7b-f8fc-482a-a0ce-ad6f404d3ff0",
        "cursor": {
          "ref": "7f3d173e-5a1e-44c8-a454-196aca830ee3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bbb8ed8a-e7f8-4ec5-a0a7-ef9a601e8066"
        },
        "item": {
          "id": "479b0e7b-f8fc-482a-a0ce-ad6f404d3ff0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e331e89b-afd3-4264-9ac6-682c83697af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2f37fd-ca0c-4221-b34e-7b77b564a754",
        "cursor": {
          "ref": "2ce8de93-c7da-42be-b7bd-26336d51d1be",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "365c6a09-d620-4d22-b68d-b5234cfea76c"
        },
        "item": {
          "id": "9b2f37fd-ca0c-4221-b34e-7b77b564a754",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bc578ac5-7632-4ce4-8f91-70414f15964d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2cebb1-a567-4698-bece-dc471b5e3300",
        "cursor": {
          "ref": "a995f312-d474-4f05-9061-aa028eaccc12",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "77aa1d3f-59ee-43e5-8cbb-5551f755a261"
        },
        "item": {
          "id": "8b2cebb1-a567-4698-bece-dc471b5e3300",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2c2944eb-a1ff-4350-88db-2d7a6bdb0be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b735634-8c32-47d4-9610-32c310299624",
        "cursor": {
          "ref": "8cc9ff27-4bbd-4421-ac6f-623abb858b26",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "566b989b-d3ee-4e0b-a444-05ad809bdecd"
        },
        "item": {
          "id": "6b735634-8c32-47d4-9610-32c310299624",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9b7dcf83-3119-4ee9-9d57-9c384d5d7299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdfbe66-7f95-4008-9559-8a62923f8b46",
        "cursor": {
          "ref": "6a9b44a1-834d-4568-a227-c27af43441e5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9d1dc4fb-d966-42e3-9e22-b362141137f1"
        },
        "item": {
          "id": "1fdfbe66-7f95-4008-9559-8a62923f8b46",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5f5ec574-b3b0-4240-a8cf-4af8b3594722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e70753-2f0a-4ad0-bb06-73292de9b599",
        "cursor": {
          "ref": "6dfdaf14-6bb9-4414-804d-67637b2cdd30",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7eb1ebf1-ddc0-4470-8915-5e6047d96576"
        },
        "item": {
          "id": "c5e70753-2f0a-4ad0-bb06-73292de9b599",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e51fb36c-7fca-4a58-b40b-ab073c4d1076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ea8ddb-7734-45e1-b1ca-a34134d9fa12",
        "cursor": {
          "ref": "4d7bb27f-fd3c-4a32-8ced-b0e5f24c2d50",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e98525cf-f871-449a-9976-f567bd9c614d"
        },
        "item": {
          "id": "14ea8ddb-7734-45e1-b1ca-a34134d9fa12",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "771bd81a-0818-459d-a222-c411d0d8578e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe566134-1187-4271-906d-e7193b573bc2",
        "cursor": {
          "ref": "0c320a39-7af7-482c-824d-6ce5ae6e7ade",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "51bb3d5d-3d97-453e-9a9a-962ade8dd05e"
        },
        "item": {
          "id": "fe566134-1187-4271-906d-e7193b573bc2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "61ff5471-fca7-46f8-96ce-005839e9139b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c3586f-9bb4-4c01-a6f8-446fed2a8d8b",
        "cursor": {
          "ref": "fc9e1b3c-af83-4d33-a76a-463f762db748",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "de9ba2bd-91ed-4d78-8f5d-59119e99eef1"
        },
        "item": {
          "id": "43c3586f-9bb4-4c01-a6f8-446fed2a8d8b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "26fe21b2-e5e6-4c66-acac-a06f1650327c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6710f136-054e-400c-bd05-d985eefc9dae",
        "cursor": {
          "ref": "49f0a9da-2a31-47d1-8716-77fa86d696e1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "aaf45922-2ab2-4a35-87e6-7fe574421d20"
        },
        "item": {
          "id": "6710f136-054e-400c-bd05-d985eefc9dae",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6d0c8441-4819-4205-8022-3b5a24f7e94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc9a715-1903-47f8-b388-f669d488f06a",
        "cursor": {
          "ref": "7810ee73-1697-4768-94e5-def60bf669c3",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "336da3ee-8c35-4083-b4ca-49ff4c34b595"
        },
        "item": {
          "id": "3fc9a715-1903-47f8-b388-f669d488f06a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5086a4f6-725a-4309-a88a-59b4ff095062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f0db28-b2d9-4a08-8b8e-183263fb8e22",
        "cursor": {
          "ref": "297d87a0-a94c-46cf-9c3b-6fef29dc5c32",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5c9de8ce-f522-4165-b0f2-f0c0f9c90471"
        },
        "item": {
          "id": "44f0db28-b2d9-4a08-8b8e-183263fb8e22",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9ce5c662-1c89-4886-91fe-0190c217e86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffced966-314d-4acc-aa00-bce2f9c4c3c2",
        "cursor": {
          "ref": "2204fd4a-19d1-4ec8-b082-c49524b93fad",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "646805be-87d9-4d58-8776-5b0ede9738c8"
        },
        "item": {
          "id": "ffced966-314d-4acc-aa00-bce2f9c4c3c2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6041b3cf-ba3f-4a49-b4bd-ab6656319ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125f4fe7-3f85-46c5-ba7c-f4b426d34afc",
        "cursor": {
          "ref": "b595a796-5d2b-43fc-a6cd-9396bc4e3099",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "df9e4bdb-b681-4bec-a43c-cf283b9a0599"
        },
        "item": {
          "id": "125f4fe7-3f85-46c5-ba7c-f4b426d34afc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c5ee0a2e-1637-4ef2-a701-fde1674a68ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48980f7b-2657-495a-a7f9-be92b2adb09f",
        "cursor": {
          "ref": "dfa8bfd4-ea5e-4fd5-95f1-4fe8f4c50606",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b833d429-e280-4392-a7c5-cb90a307becd"
        },
        "item": {
          "id": "48980f7b-2657-495a-a7f9-be92b2adb09f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "06ec0a09-5039-420b-9088-bb070af4e4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bf0cb5-828a-413f-92a7-0eca8c755e9b",
        "cursor": {
          "ref": "1fa85fc4-a603-4a56-b697-1816e2b2fc89",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "49cc5bd2-0fce-4b85-bafe-c99648a88601"
        },
        "item": {
          "id": "c5bf0cb5-828a-413f-92a7-0eca8c755e9b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5678d50c-4c61-425f-ab37-b72b8ce4fc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4434e3-1930-4492-83ae-07991a04b5d0",
        "cursor": {
          "ref": "b285913c-be97-45b8-b55c-d63a8cb8436a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8acecd3a-0f81-4484-aec6-453cf6502d19"
        },
        "item": {
          "id": "5d4434e3-1930-4492-83ae-07991a04b5d0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "986d0f3f-741e-415f-a669-19cd7e94136d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eae4c7b-817a-4e7e-bd63-91381db61e83",
        "cursor": {
          "ref": "19187547-d833-4c35-85a1-f0c4c4241b0f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "43353827-c470-440d-a1b5-76982e43a960"
        },
        "item": {
          "id": "8eae4c7b-817a-4e7e-bd63-91381db61e83",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "49557bf3-fb5e-4ee8-8133-208c9e002edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9ba26c-0927-458b-9008-c84fe84bf2d2",
        "cursor": {
          "ref": "935c1079-e2c9-4a1b-83cd-faaa1195b902",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "35bb1dd5-5dc0-482e-9944-ee412ed1eb20"
        },
        "item": {
          "id": "7e9ba26c-0927-458b-9008-c84fe84bf2d2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "afbdd56c-7bb8-4850-932c-ae0825950750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e48276d-71b8-4289-9d96-887c6b8682fa",
        "cursor": {
          "ref": "cdf8665a-2823-4185-ab49-8912b828fce2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e0971386-1e9d-4e64-af06-0330861e742a"
        },
        "item": {
          "id": "5e48276d-71b8-4289-9d96-887c6b8682fa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "304a5514-7d4c-454c-843a-d18e2c323b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21563174-0c51-4863-821d-a812e1cc8da0",
        "cursor": {
          "ref": "622f5f44-c1d4-42ea-a818-b20e106f49d9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "84e2b7dd-106e-4b88-acca-d021155cbeac"
        },
        "item": {
          "id": "21563174-0c51-4863-821d-a812e1cc8da0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b6b41be2-c0e2-4d49-b9c8-e0c6602d7668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5278f3-5b78-4648-b175-2064ed219975",
        "cursor": {
          "ref": "7409b881-b932-4797-b298-e8fbb6742667",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8a16737d-32bb-4ef1-b42b-20a581c26b53"
        },
        "item": {
          "id": "4c5278f3-5b78-4648-b175-2064ed219975",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "90608c32-5cd1-4790-abd6-ffa2a3972cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d71c40-e893-4d96-845c-fad72d154ab2",
        "cursor": {
          "ref": "8f3b5664-c3cc-438c-a1e1-2470db9ae2db",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dcc9baa0-97f8-4008-8b5c-b375cdfad581"
        },
        "item": {
          "id": "40d71c40-e893-4d96-845c-fad72d154ab2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "09ac31a7-087a-410f-b0fa-1f59d8b2d6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e5c654-7b6f-4848-ab8c-663397589d26",
        "cursor": {
          "ref": "eccf386d-f9ba-4ed6-b3e5-223b59be2738",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0d76a4a5-ece9-4b03-bc81-08724d6d1d32"
        },
        "item": {
          "id": "81e5c654-7b6f-4848-ab8c-663397589d26",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "263c0c7a-ae5e-4436-aeb8-93a33a24f5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4dbbeb-dda7-4d39-808f-5853631dfd3c",
        "cursor": {
          "ref": "0bee7c33-2c77-46e5-9290-5544e61f1e7c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a00cdffb-f5cd-4e87-a5cd-2553373ae6a2"
        },
        "item": {
          "id": "6a4dbbeb-dda7-4d39-808f-5853631dfd3c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "619624fc-9be4-44b1-8af8-ad1763319128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dfbd83-63da-4640-8f3a-9cbd07eb1c76",
        "cursor": {
          "ref": "084a96ae-fb03-415e-968b-dfd662f7f190",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7e8dec35-2732-445e-b36d-a7adb598e3c2"
        },
        "item": {
          "id": "a8dfbd83-63da-4640-8f3a-9cbd07eb1c76",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d4af6145-ef67-4ff9-96f1-88ef5e386ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166fc0e1-e135-4b51-9761-566f78cd85fa",
        "cursor": {
          "ref": "84957d74-a778-4ac0-b90f-5b0f7f161e0e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e71c4dd7-5a58-48de-938a-357f5ca681da"
        },
        "item": {
          "id": "166fc0e1-e135-4b51-9761-566f78cd85fa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f92aac85-cccd-4e0d-b085-ab1e301005de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5e12be-1f98-4898-b52c-e655b1aea204",
        "cursor": {
          "ref": "399b6d9c-e3f7-4c4c-bb23-84e8e56dad47",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b294cb60-bb21-4005-b100-b06dc0474fa7"
        },
        "item": {
          "id": "1f5e12be-1f98-4898-b52c-e655b1aea204",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "41162565-031b-4b5c-b760-82d9233b24c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111a2966-8fcc-4628-afc4-72f943d7efbb",
        "cursor": {
          "ref": "c6cedc4e-9a85-4b62-bd39-72e8b09f7a1c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c0635f8f-bba8-4563-92fe-8beb7a798918"
        },
        "item": {
          "id": "111a2966-8fcc-4628-afc4-72f943d7efbb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "673163c1-c281-4b81-bcbd-35e7b28afb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5d101c-8863-41c4-a2d6-b501799752e1",
        "cursor": {
          "ref": "19c2bb6b-82b9-4f6b-aef3-ffbcf441649a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "617c2395-3841-47a6-9bad-79f4ba095abf"
        },
        "item": {
          "id": "5d5d101c-8863-41c4-a2d6-b501799752e1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f2b32633-13f7-4df6-a52e-98d3c3c41f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aa615c-4cb0-4e05-aef2-e6257c041862",
        "cursor": {
          "ref": "781942a8-93c2-4e42-a6b1-7fd9c2314c82",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ee43ac6b-ab48-4319-9b8f-92fe96457d17"
        },
        "item": {
          "id": "f4aa615c-4cb0-4e05-aef2-e6257c041862",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bf83a491-6050-495a-a7c8-087a482aea6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a01297a-9998-4438-bfd4-57fc5cebeefd",
        "cursor": {
          "ref": "a6c818df-ef49-420a-ab71-c3138f37cad0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "708ec37a-0bc6-4e6f-a099-2771666288e9"
        },
        "item": {
          "id": "0a01297a-9998-4438-bfd4-57fc5cebeefd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "661f6f02-1092-4b9d-9765-89a4919e237a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71472873-5e29-4980-b3e6-276fedeb7cc9",
        "cursor": {
          "ref": "3027b3b2-cf17-415e-b775-6eb5f6a74131",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b7d6b91e-766f-45b7-afe5-03ec6b963358"
        },
        "item": {
          "id": "71472873-5e29-4980-b3e6-276fedeb7cc9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dd025430-78a6-4e06-bd30-a5f6dcc7b7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17bf426-4f79-4b42-828b-76634ea9eb86",
        "cursor": {
          "ref": "6cf8f3b9-6944-44b2-b21b-7d80578a72ed",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d290bb21-93da-4ffa-866b-e5819221115a"
        },
        "item": {
          "id": "d17bf426-4f79-4b42-828b-76634ea9eb86",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6b12747b-252e-4a87-9a43-85388aec7ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5e8c51-ddf0-4b7a-b6ce-468711301a10",
        "cursor": {
          "ref": "ce8332c0-97d4-425b-a598-d58356ac793f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "acb88014-8f45-4a43-8fd4-fbf0c8d0b91b"
        },
        "item": {
          "id": "fc5e8c51-ddf0-4b7a-b6ce-468711301a10",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7754b372-3b44-4e2c-8137-ca034b01c6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f60f9e-f126-4a08-8411-fc1c5e23522f",
        "cursor": {
          "ref": "c3ee18e9-8b32-406c-bc6e-6f3d2c7f2d2f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3ef48289-3066-4c37-b0dc-0dd72de3a845"
        },
        "item": {
          "id": "d5f60f9e-f126-4a08-8411-fc1c5e23522f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d98e3ca5-40d0-4314-81d8-76a1ab390edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5e4749-6c56-444f-8537-6c0be8005650",
        "cursor": {
          "ref": "c4fb249a-970e-4abe-bad7-3105bd142d6e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c6864c9f-2ac9-40ee-8daf-ace77584c933"
        },
        "item": {
          "id": "0e5e4749-6c56-444f-8537-6c0be8005650",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5fb2c36c-a0a6-4e97-a7de-3f297c42d725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47482501-6665-4f91-8a50-69b8031b1cec",
        "cursor": {
          "ref": "1fb90ae8-6771-4d07-8c53-b743fb09af9f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c8836cb0-d98b-4afd-926f-96d7d0662331"
        },
        "item": {
          "id": "47482501-6665-4f91-8a50-69b8031b1cec",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7a9331a7-4232-4303-bc66-ea26c3d43c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ea322c-3bad-4e94-b066-8fed22ab436b",
        "cursor": {
          "ref": "8afdced0-ce5d-46f9-a2e2-55ba989c6541",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "71f1432a-998f-4ff8-a2fb-a9c7913b9b64"
        },
        "item": {
          "id": "43ea322c-3bad-4e94-b066-8fed22ab436b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0c8ffb06-4655-4cb5-a368-e57df5343fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4834ba38-efe0-4902-8f1f-21fcaedd4c26",
        "cursor": {
          "ref": "782b73fe-cc03-4e14-a2b4-2d7b8f6e8741",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "57ba1d03-71ed-4f32-a5e5-b207f572ba7e"
        },
        "item": {
          "id": "4834ba38-efe0-4902-8f1f-21fcaedd4c26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3cc5a558-d4b9-4827-be28-48c62c6ce8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df6c191-acc7-4e4d-a48b-087adea2242b",
        "cursor": {
          "ref": "b33fd9e4-77db-4422-9d37-21cbb87cc0ed",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2d95cb33-240c-49c3-a4d0-f9b4283f7b32"
        },
        "item": {
          "id": "4df6c191-acc7-4e4d-a48b-087adea2242b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a582ad6c-8880-48a1-863b-a922d204a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ed5f33-84a8-498a-96b2-a1055a2e7236",
        "cursor": {
          "ref": "3f1ed277-8395-4eec-9149-9080f7ad96c4",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0b3ecd63-61c9-439a-aa7c-71f1eb851b79"
        },
        "item": {
          "id": "77ed5f33-84a8-498a-96b2-a1055a2e7236",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "04090316-977a-4ad5-bbf4-acc669567252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fec51c-d786-43bf-b0b6-42ed8fc67981",
        "cursor": {
          "ref": "89effb87-7771-4e90-af04-e29601bccacc",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5a68f2fc-85ca-44e1-b686-6df4bb684da0"
        },
        "item": {
          "id": "76fec51c-d786-43bf-b0b6-42ed8fc67981",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0d17c91c-5151-4775-87ae-f1601dd97921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d189776f-5f44-489b-8874-153dae46b9cd",
        "cursor": {
          "ref": "56a85f6e-df47-4407-acc4-1a47ce592e55",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ffcfd7fb-846e-49b0-bc1f-4ed331b146bc"
        },
        "item": {
          "id": "d189776f-5f44-489b-8874-153dae46b9cd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c8921452-8eae-495c-b8b1-e4fc812719d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6839989-10f8-4105-a7ab-168ece946c72",
        "cursor": {
          "ref": "17e463d4-e334-4fcf-a27b-eeae03a6e2ce",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8b0a67b0-1452-4dd7-a346-bd5ca514d9a9"
        },
        "item": {
          "id": "c6839989-10f8-4105-a7ab-168ece946c72",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "99385da6-7746-4e17-a3f0-a1875f3b67cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75531b82-4b41-4bb8-a633-30e87d19489d",
        "cursor": {
          "ref": "7734a200-c264-41a2-ad69-53b7f2baa7a7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fd7fbea5-8526-40f9-a85b-ec6452481130"
        },
        "item": {
          "id": "75531b82-4b41-4bb8-a633-30e87d19489d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "897bcf7e-088e-42f9-a614-b2f673d304de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b91124-2b65-4903-bfe7-0a8a4eba93f7",
        "cursor": {
          "ref": "7532201b-b967-466b-9de9-d402f715456a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ac018dfa-15a8-4e32-ac8b-ca7620a8bf2a"
        },
        "item": {
          "id": "13b91124-2b65-4903-bfe7-0a8a4eba93f7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e783e08c-2e0a-49ac-a340-a234a1857be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5c999f-e14b-4673-a39c-bf19066da59d",
        "cursor": {
          "ref": "5bf7795a-bab6-4076-a9ac-ef5fe719adfa",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "288e32a8-8796-4a45-b72e-daaf8b624c7a"
        },
        "item": {
          "id": "0f5c999f-e14b-4673-a39c-bf19066da59d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6773ccea-270a-4c5e-b59e-558cfc614be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42697ab-2b56-4958-8db0-da261f168423",
        "cursor": {
          "ref": "26e3f931-6dc0-45f8-b976-6ab18162dc8d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "31090fbe-526f-4d12-a710-9678472d7e1f"
        },
        "item": {
          "id": "d42697ab-2b56-4958-8db0-da261f168423",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ea147ec9-1ec8-47b0-ab81-0db49c8edd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5568309e-ecb7-4661-8bae-d88ed6c42d3d",
        "cursor": {
          "ref": "8fdeae49-54e6-455a-a938-6ec53e7d923b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "858094ae-1d78-4bee-ad00-41633990b44d"
        },
        "item": {
          "id": "5568309e-ecb7-4661-8bae-d88ed6c42d3d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0e089efb-2c33-4fa3-8b49-06be2af5bfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6590ce52-1893-4e5b-a746-16b84f560592",
        "cursor": {
          "ref": "bedd2ae8-d444-4398-8175-826f95fddcc3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bff8958f-daa8-424a-bed0-849657bdf8ce"
        },
        "item": {
          "id": "6590ce52-1893-4e5b-a746-16b84f560592",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e44c45c4-6a14-4690-8431-3184bf8801f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65fbfd6-0c5e-4e9e-9cdd-100e743019b3",
        "cursor": {
          "ref": "367e9f8f-c9b3-48ad-82e9-a6ad34b2b0b3",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "62b8b6a1-019b-468e-8bf1-150ee22a0919"
        },
        "item": {
          "id": "b65fbfd6-0c5e-4e9e-9cdd-100e743019b3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8a5093b5-1c55-4d5c-865c-59753b8eb66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b975eb5-b874-4ce0-b554-ed88953e4017",
        "cursor": {
          "ref": "70bed42e-f0ac-4ace-b9d6-a3ce66a72d2e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "204e9598-2667-4e24-b2fa-bc1bb2c9ec8e"
        },
        "item": {
          "id": "8b975eb5-b874-4ce0-b554-ed88953e4017",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "336148d9-b5ba-4792-9a48-ed584a0d4418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3268786a-06d7-408a-9b5b-dd28e54fa4c2",
        "cursor": {
          "ref": "aa7a22d0-6055-43a0-8f98-73fd5c1458d0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "976fa31d-725d-4ed8-996e-e034a005f149"
        },
        "item": {
          "id": "3268786a-06d7-408a-9b5b-dd28e54fa4c2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "98118eee-a4a5-4c79-9558-bbf47e092ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae07a0f7-83ff-43eb-aae5-29f65e62b3a4",
        "cursor": {
          "ref": "99db728e-6ef2-4227-b8d0-8468feef4f63",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3922276d-1476-4105-b490-8f15fb8727e6"
        },
        "item": {
          "id": "ae07a0f7-83ff-43eb-aae5-29f65e62b3a4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9b72b915-15fb-4dba-95f8-1fce0d184aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa12fc82-6813-4832-ab3d-647690df33d3",
        "cursor": {
          "ref": "0f8ab74e-38f5-4e3d-8bab-385bdc7aee7e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "40c442d7-b294-4046-b788-84a7ac04296f"
        },
        "item": {
          "id": "fa12fc82-6813-4832-ab3d-647690df33d3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f0a23689-aee6-444e-ae76-4724c849e2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652343bb-7610-4067-8401-aa84776e34e2",
        "cursor": {
          "ref": "eeadda4e-92aa-4bb8-8fb0-3fb43785ecab",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bbfd79c0-9aec-4927-8916-1b5f6434bf29"
        },
        "item": {
          "id": "652343bb-7610-4067-8401-aa84776e34e2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ce774e66-8730-4f3c-b6a6-447515831e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7c3940-29b2-4233-9a19-477f2ffbe90f",
        "cursor": {
          "ref": "1d3416c3-b989-4493-a8e1-3149223407c1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "30c7fee0-babd-4095-b53b-7007a4e80c02"
        },
        "item": {
          "id": "0c7c3940-29b2-4233-9a19-477f2ffbe90f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9f90ab04-60d4-4d15-aaaf-b9a449c16d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a9c394-76f6-408f-9ebb-87002193123f",
        "cursor": {
          "ref": "38c4d5f1-e104-47e4-9b81-6998791ca479",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "60cdf2dc-a821-4a3f-8747-e68542b4c876"
        },
        "item": {
          "id": "50a9c394-76f6-408f-9ebb-87002193123f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "61b37363-f9fb-46c3-9646-2945fd508b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd60f00-ed94-4ea0-b29b-c2e1af003434",
        "cursor": {
          "ref": "87169d39-f3ce-4592-afc4-da1e0c36a271",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3eb33851-fc7e-4308-855f-26397682d466"
        },
        "item": {
          "id": "2fd60f00-ed94-4ea0-b29b-c2e1af003434",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "51a7758f-6184-41b1-9a9d-0187b97a1764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b86ca5-0297-4528-a3ba-c3626acb1505",
        "cursor": {
          "ref": "430aac7c-b881-4ed5-90b9-f5be05d3514b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6efc2781-2aa9-40d4-be9f-86d27b1f5070"
        },
        "item": {
          "id": "d1b86ca5-0297-4528-a3ba-c3626acb1505",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c093caba-5212-49ff-a0e8-54be7f6fc8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760e4fcb-ca32-482e-8467-0ad9fb7c4705",
        "cursor": {
          "ref": "a3f34864-42ca-48dc-94b2-c0ce849b89a7",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4f19f854-8c4f-4570-b68d-8e58021836b9"
        },
        "item": {
          "id": "760e4fcb-ca32-482e-8467-0ad9fb7c4705",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "688d3abd-bf3c-4e00-b28e-7ad61f2c7c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84cb3f1-0d72-470c-89d9-afedb8226ea8",
        "cursor": {
          "ref": "51d19c8c-4758-421b-ba9e-e9e2bbec2360",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2299b410-0913-4076-a8ab-0a7a22eda264"
        },
        "item": {
          "id": "a84cb3f1-0d72-470c-89d9-afedb8226ea8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7e808f1a-fe11-4bfd-a073-40943a5af64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257c8d53-240a-49e1-aba9-aac9cc6c5822",
        "cursor": {
          "ref": "664f6d26-e02c-4af2-a25b-8a2b0ae01431",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "882be133-1c8a-4b1f-b3e9-32e990e3d118"
        },
        "item": {
          "id": "257c8d53-240a-49e1-aba9-aac9cc6c5822",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "af13a024-9271-4629-9b25-2648efae062e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbe9f40-3aeb-4948-bc1d-8931bf6fb3de",
        "cursor": {
          "ref": "a8c9b3f9-133e-4b03-aec0-f59c799f3353",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5c5ab3aa-fa08-4030-b377-62f78d34a699"
        },
        "item": {
          "id": "3cbe9f40-3aeb-4948-bc1d-8931bf6fb3de",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4eebcebe-5d61-4141-b2c0-3c4b7d49541f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a96919-015e-4a7e-bf24-78b2a54bc45d",
        "cursor": {
          "ref": "1b690964-0c5b-4451-a906-2f7ad7361b32",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4f1e1a0c-3138-4b32-befa-6b28fd57118e"
        },
        "item": {
          "id": "17a96919-015e-4a7e-bf24-78b2a54bc45d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "04774625-7b69-454a-a763-6baac8c39b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe62444-3518-4f24-ae6b-3bb1e10f4ffd",
        "cursor": {
          "ref": "4793e727-c18f-4147-aa62-2b64fb0c337a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0c8ae8f5-d01b-4b3d-a495-feaf66bf44fc"
        },
        "item": {
          "id": "3fe62444-3518-4f24-ae6b-3bb1e10f4ffd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "03361e14-0cf7-4561-989d-08ffcaa6c486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a63b96-7de2-4b15-b7ac-7850d5d7ab60",
        "cursor": {
          "ref": "112cf838-c88f-4418-b61b-19ee58ef3f4e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "581c297b-daf3-439f-ac1b-d5508fbc232d"
        },
        "item": {
          "id": "c1a63b96-7de2-4b15-b7ac-7850d5d7ab60",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "64ed6d7b-0580-4f28-b33b-331c8ead5acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7a5083-7766-4ab7-a894-934aeb5110e6",
        "cursor": {
          "ref": "c1ae8906-cc6b-4a02-9a96-9cdbc0eb44a0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "db51c2c0-7a92-423c-9357-12468d032706"
        },
        "item": {
          "id": "cf7a5083-7766-4ab7-a894-934aeb5110e6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e530b614-a07c-4452-93c6-6bbc1cc51b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad71d88-f38a-477b-b4aa-557b91f291a8",
        "cursor": {
          "ref": "daae02b5-e0e7-46cc-bfdd-9e1348c29473",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ebad6975-bfa1-4ff6-a1c9-ce52b7aeed4c"
        },
        "item": {
          "id": "aad71d88-f38a-477b-b4aa-557b91f291a8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "06ef3dba-31e9-419b-97d2-afae5aa67c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa3fd20-c696-4d5f-bed0-6e4bbeb2dc72",
        "cursor": {
          "ref": "53dae9ed-0e13-4e24-8bdb-600617d97933",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6fa2a3b3-0a11-4525-aa94-d321a2dd496e"
        },
        "item": {
          "id": "0aa3fd20-c696-4d5f-bed0-6e4bbeb2dc72",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5f302e96-dcc3-4b5a-a447-bd0e7ea0e602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7006e35-f15c-4daf-894d-e78edb220e45",
        "cursor": {
          "ref": "2bccb363-b007-4b38-8d04-77d52266721d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "411c5c71-4e41-403e-9245-01da86b8c530"
        },
        "item": {
          "id": "f7006e35-f15c-4daf-894d-e78edb220e45",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5661d20e-b62a-4b9a-9604-a8a67e75a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa921d33-2d63-4aa3-9696-629636196be6",
        "cursor": {
          "ref": "9973a8f0-58c6-4d3a-8207-6db1d8b88814",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "382d0b13-853d-457a-9a42-a2faa611d9ba"
        },
        "item": {
          "id": "aa921d33-2d63-4aa3-9696-629636196be6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "26f96c5d-3c4f-432a-aae8-06b2dbb3489b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125e218f-2f15-49d7-932f-908fcd07c4db",
        "cursor": {
          "ref": "9478495d-81eb-4445-b6c2-c13e90ee1022",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fe04c526-e299-4baf-9f73-a1faa3f90a6a"
        },
        "item": {
          "id": "125e218f-2f15-49d7-932f-908fcd07c4db",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d24f2fd6-6140-424b-93c2-03e59c473f51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c1084b-315e-4c19-b8e6-157a8eb05460",
        "cursor": {
          "ref": "c5b9abb8-fcdb-4221-a84d-74e045dd6d66",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6c0f139d-4471-40b0-8a8a-c8d16127af20"
        },
        "item": {
          "id": "58c1084b-315e-4c19-b8e6-157a8eb05460",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "67302c5a-cfa2-4324-b438-4b615ec9c021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b23063a8-45a7-41d4-a10c-0dbd61b93095",
        "cursor": {
          "ref": "773b2aea-0bda-475e-aa2f-39171057423e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "91aafbb8-7083-4cd3-ad3b-e6b53c94e487"
        },
        "item": {
          "id": "b23063a8-45a7-41d4-a10c-0dbd61b93095",
          "name": "credentials_issue"
        },
        "response": {
          "id": "335f2e8b-0f89-4a35-8989-9d1bad1be530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3c98c31b-54b0-40fc-85cc-384910ac24f6",
        "cursor": {
          "ref": "c2be3330-90bf-43a9-beb5-bd1d628cb191",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ea6f181d-d70f-4d8f-b44d-0b2ea1c7f78e"
        },
        "item": {
          "id": "3c98c31b-54b0-40fc-85cc-384910ac24f6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "578bd6e7-53e7-45de-a20c-6e75f387fd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "51be9aca-7b3f-40c6-b79f-61f830f4a8e5",
        "cursor": {
          "ref": "b62764e2-bc2d-4158-8c4e-e4d32acccaf9",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a315ecbb-081f-42b7-a1e0-654ed6617e47"
        },
        "item": {
          "id": "51be9aca-7b3f-40c6-b79f-61f830f4a8e5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "98f83dd6-76a2-404b-bd56-a094e8b23853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ed8c089b-ff32-4e20-bee3-2347f7987d09",
        "cursor": {
          "ref": "2221eafd-e34c-422a-8256-6b123820454f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "82e5ef6a-9d79-47a1-851c-cc2b0e791e2a"
        },
        "item": {
          "id": "ed8c089b-ff32-4e20-bee3-2347f7987d09",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1c18b0cd-8dc9-46d5-a993-baec5b264574",
          "status": "Created",
          "code": 201,
          "responseTime": 8230,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "623f9eec-b218-4bce-83fa-441b6ca0c168",
        "cursor": {
          "ref": "9a50118e-b557-4755-862b-2dabbbce8114",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "542add6b-e544-4bec-922c-9dadb1887776"
        },
        "item": {
          "id": "623f9eec-b218-4bce-83fa-441b6ca0c168",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "215af3af-4220-4453-8f26-97fd251b79b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c58a1d3c-a353-4039-b372-735e90cbb8c2",
        "cursor": {
          "ref": "af2a5d9f-9ad3-408d-9756-48bbe759f4b3",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d59f7627-4e69-43c9-839a-b4e9273e980d"
        },
        "item": {
          "id": "c58a1d3c-a353-4039-b372-735e90cbb8c2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2138b210-b33b-4afb-bf34-7549549fcda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "04fadbe3-d06d-42b8-8ee3-f904a48cbc9b",
        "cursor": {
          "ref": "4138120f-3ff9-4be8-b8e1-452cf00ff4b4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "94601970-5152-4090-9fd8-0a0aa573f741"
        },
        "item": {
          "id": "04fadbe3-d06d-42b8-8ee3-f904a48cbc9b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cda85129-9fe4-44ce-9adf-c55e96a98060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb1086e-0fb4-4dbe-8634-2ee867d0f69f",
        "cursor": {
          "ref": "6fc5f2f4-2e3c-41cd-9717-623343a69c15",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a8c67270-2658-45b6-a284-77fc5f1ceed7"
        },
        "item": {
          "id": "afb1086e-0fb4-4dbe-8634-2ee867d0f69f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "199d55ef-8d74-47c3-87d3-996352fe05b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02ac52d-b89b-477d-8775-449bbbaca9fb",
        "cursor": {
          "ref": "3d8b8ccc-960d-446a-9bd3-7a9363acd352",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "adefb60d-c197-4cc5-913e-33c6d67dc5e3"
        },
        "item": {
          "id": "b02ac52d-b89b-477d-8775-449bbbaca9fb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3ddc92b8-7e9e-4209-82e3-f631018483b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dbea72-2e4d-4a2f-8f41-6cb5d1b67408",
        "cursor": {
          "ref": "84d5c89e-9be1-40ed-9b8d-10ac763321dd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "164cfa4f-1398-49d7-abb0-991753032cc7"
        },
        "item": {
          "id": "35dbea72-2e4d-4a2f-8f41-6cb5d1b67408",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "917c9959-efef-4e57-966c-ab26951a0304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd660ad1-e175-4319-ac19-9b6f9fad7edd",
        "cursor": {
          "ref": "df857781-1344-4fc2-bfb5-3f87f579cab8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "60d4d23b-8289-4000-ba77-cdad9a13c6df"
        },
        "item": {
          "id": "bd660ad1-e175-4319-ac19-9b6f9fad7edd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "db71e590-77f3-4883-99b1-acda52da1e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230c6c33-8bf1-4d69-9f08-b8bb3eaa146b",
        "cursor": {
          "ref": "5a7434c3-4216-49e3-aa8a-ac26af2bf297",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e1c542f0-aa81-4caa-a746-345a19b38a14"
        },
        "item": {
          "id": "230c6c33-8bf1-4d69-9f08-b8bb3eaa146b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "451d9bf4-177c-4de4-9c02-7c5b07fafbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17e7bad-bf5f-4292-811a-69428aa4f72a",
        "cursor": {
          "ref": "adcc9a78-bc07-4cb6-a289-2b289899937c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cb6905ed-0193-4fc5-9139-e772a073186f"
        },
        "item": {
          "id": "a17e7bad-bf5f-4292-811a-69428aa4f72a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "81b97ad9-acb2-4318-82e0-f3953e04b7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ee2267-137e-492f-8f8c-2810b47fd728",
        "cursor": {
          "ref": "58b79afe-911a-4551-a8e4-ce1441471dbc",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6112fdd4-4fd5-433a-b245-86e19fe78fce"
        },
        "item": {
          "id": "14ee2267-137e-492f-8f8c-2810b47fd728",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1dd2d739-628c-4d20-b0a3-5fc2fc0d86c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cbf2a3-c95e-49b6-aeb6-6cee593e56fc",
        "cursor": {
          "ref": "7ed1df2e-1465-4e47-b685-e6d904e80974",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6290f893-f244-4098-92ff-a08aeff66eb4"
        },
        "item": {
          "id": "79cbf2a3-c95e-49b6-aeb6-6cee593e56fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ac17732e-4178-4eec-b450-4c13693940ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bb2f27-f28b-49e3-8e6d-455b0e563e3e",
        "cursor": {
          "ref": "f79dfd92-fd4d-48e2-bacd-abc765619e97",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fc6fd8a0-d76f-40bf-880f-8e5f01b2383f"
        },
        "item": {
          "id": "b2bb2f27-f28b-49e3-8e6d-455b0e563e3e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5216be12-593f-43f4-a6a3-5d0615c129bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c6e4ea-c907-4db2-a042-09b92d9e9685",
        "cursor": {
          "ref": "c5439238-0a8c-44b0-8fa1-09df77c3dedc",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4983307b-8e7b-432c-bc3a-30978fe48270"
        },
        "item": {
          "id": "c2c6e4ea-c907-4db2-a042-09b92d9e9685",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e7bc961-46e4-4275-86e7-10e824de3780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b34ef1-3ed8-490b-8ede-792b585ef7ff",
        "cursor": {
          "ref": "6789c58e-c9cf-41f8-8bad-14a136cb97b0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "084b5f2e-2b2e-4665-9c7a-e0c9fff0db8a"
        },
        "item": {
          "id": "51b34ef1-3ed8-490b-8ede-792b585ef7ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b886439d-d499-490a-985f-29178c9725aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0606f12-c740-433f-bd16-a8084dd52fde",
        "cursor": {
          "ref": "8f374fee-289f-4bdb-989e-6c9becaa67d4",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8d4983b0-9744-4e10-940d-8caa5a41cfa1"
        },
        "item": {
          "id": "e0606f12-c740-433f-bd16-a8084dd52fde",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5bcf0a54-7739-4687-a32c-b73fb7b00307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87cdc0d-4a18-49dd-97a0-e252c690e882",
        "cursor": {
          "ref": "28c95ef9-fd2c-4cae-a7c4-bf1072f8c755",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dc6b2ecd-fb00-46af-b72e-e9184ac2b378"
        },
        "item": {
          "id": "e87cdc0d-4a18-49dd-97a0-e252c690e882",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "26835569-4d67-4f73-bacd-be5f86658e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c548e7-66bd-42ec-9264-b34990fb74bd",
        "cursor": {
          "ref": "295be74f-c4cb-41a7-845a-ad0a25ff9320",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3654cf12-244c-4e51-b4f6-3376cbfea525"
        },
        "item": {
          "id": "16c548e7-66bd-42ec-9264-b34990fb74bd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fae3bc2b-faf8-48b7-a7fe-df58ddf80ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a14dfb1-8ac6-4bf7-9b67-bcfc4c1f43cf",
        "cursor": {
          "ref": "b151b640-4448-4017-b4c9-0044beac23f1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c55c263b-1711-40f3-a701-374c961f99f7"
        },
        "item": {
          "id": "5a14dfb1-8ac6-4bf7-9b67-bcfc4c1f43cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "af3652cb-41e9-4f9e-95e8-bb09c182a1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fdb7d6-a486-4b8d-ade1-a870b46fd604",
        "cursor": {
          "ref": "e22c6770-9032-4351-9fe3-dc7d6ee5c4f7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "87a6bd3d-eda1-4caf-b70a-26b59b588c80"
        },
        "item": {
          "id": "31fdb7d6-a486-4b8d-ade1-a870b46fd604",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "744eb279-261d-4971-ace5-b9b3bea7f01d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8d8484aa-0eb1-4b43-bbb4-e2b1a9544619",
        "cursor": {
          "ref": "cbee8254-1ec1-4052-93ea-17675349235a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "825da053-8589-4b5c-aeeb-5edefa522f21"
        },
        "item": {
          "id": "8d8484aa-0eb1-4b43-bbb4-e2b1a9544619",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6eeb1d8-7633-4b83-a1fc-2b01e8d12f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8649e1-7065-4d78-97d6-5fd8cd3fc737",
        "cursor": {
          "ref": "b5c193b9-e6e5-44bf-ab01-d3572905d525",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "96a54fe5-c1fb-48e3-abe8-c90c2dc3c408"
        },
        "item": {
          "id": "2a8649e1-7065-4d78-97d6-5fd8cd3fc737",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bbabddfc-e1d4-4b71-9e11-6349ed88a833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262eb20e-b9fb-472f-9e0c-5830939a90f0",
        "cursor": {
          "ref": "3bf6b80d-6c3d-4d60-b0d1-bc77cc24b08a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6b819272-667e-4588-82c5-126980185abb"
        },
        "item": {
          "id": "262eb20e-b9fb-472f-9e0c-5830939a90f0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4c4c60f0-6923-4f79-a6ac-8334ffa1a4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e35d01-d1a8-4a89-a877-668381aea480",
        "cursor": {
          "ref": "39be0e3c-ae52-4233-b59b-c43646c35164",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "546daa28-c1ca-4cc5-b400-68d3e0d1bb13"
        },
        "item": {
          "id": "d3e35d01-d1a8-4a89-a877-668381aea480",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b2f5920a-ac2a-47af-8990-e6c54865cd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e26759-b5d4-4213-a5a4-d2d15eae8ed2",
        "cursor": {
          "ref": "ec94388c-c80f-4307-b8ea-9e52347262c8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "54973d72-793c-411f-a513-365502ed1051"
        },
        "item": {
          "id": "d3e26759-b5d4-4213-a5a4-d2d15eae8ed2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a2a48a0f-9bbf-4b18-b2d3-214c295ef420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfa1504-84f6-435e-ac4b-2feb4046ffea",
        "cursor": {
          "ref": "81a34a7c-5c95-4de4-bfd4-e45255eaf30a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "46db28cc-86be-4e5b-a90b-ad5931eae3fd"
        },
        "item": {
          "id": "7cfa1504-84f6-435e-ac4b-2feb4046ffea",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7dc3fe23-eed3-4a1f-afb0-f2dc1c13e1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a771552-0326-4094-93b1-30b4a42be8fd",
        "cursor": {
          "ref": "c4fbfd3d-491f-4d0c-b19d-a9266272d730",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "14885528-8b81-452e-a1f6-e4ecbc2b2226"
        },
        "item": {
          "id": "0a771552-0326-4094-93b1-30b4a42be8fd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f6b9f561-7ed9-4ad4-9a18-b3426ecf645f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654bf4e0-5834-4afc-8297-126109641f72",
        "cursor": {
          "ref": "11fad051-012c-4121-b8d5-4123f00e4614",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b8b0927b-70d9-4e9b-b38b-b4cefefce43b"
        },
        "item": {
          "id": "654bf4e0-5834-4afc-8297-126109641f72",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "57d46ab8-d80f-430b-be18-075ad23a2101",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a0ffcd6c-99a3-4211-866b-7535de048c85",
        "cursor": {
          "ref": "7295c7df-a57c-4a62-b679-8fe999502474",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "58ec1d19-e9c7-49ba-9d2b-ad76a690af7e"
        },
        "item": {
          "id": "a0ffcd6c-99a3-4211-866b-7535de048c85",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5cc22bb6-e10e-439e-a9b7-80ecd177273a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5f4204-bb62-4d01-b878-cb0108ea4a60",
        "cursor": {
          "ref": "91a68dda-5217-4f20-b798-9b68e00991a3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9931c3e7-9b51-45ad-91b5-f92cfdf6cad5"
        },
        "item": {
          "id": "ec5f4204-bb62-4d01-b878-cb0108ea4a60",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "66eb5dd2-5025-46e7-ae1e-26c3ed36836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f5e0ce-c5f4-414c-980d-24567160c378",
        "cursor": {
          "ref": "89f90d3d-a68a-43fa-88d4-e3de03e04131",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "90de604f-f133-4966-979b-03f917492229"
        },
        "item": {
          "id": "57f5e0ce-c5f4-414c-980d-24567160c378",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "08c7cd4c-67dd-4070-b22d-1b8718101549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438d351a-ff71-4a29-bb2b-56fcf6c68154",
        "cursor": {
          "ref": "b2230400-dcec-4d45-b902-74572ed3e5a1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cc7c7c4a-3c72-43ad-bf9a-a20218c96f23"
        },
        "item": {
          "id": "438d351a-ff71-4a29-bb2b-56fcf6c68154",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "272766cf-f68c-4c7f-96e1-4f6a0d3bbf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ca3cd4-571c-4079-ae67-4e7378e401f7",
        "cursor": {
          "ref": "72cc6a37-4824-42e9-ae3e-91369ff11f0b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eaf149ff-e64d-48d7-998f-77f12f24c3bb"
        },
        "item": {
          "id": "a2ca3cd4-571c-4079-ae67-4e7378e401f7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cb39a11a-8f02-4935-8091-4abad935f219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787573a7-8fe6-457b-a6c1-ad1f117875e6",
        "cursor": {
          "ref": "824c5bde-447e-442e-b011-a005933a696a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "53bab0c4-4342-43bc-a221-2d164e817829"
        },
        "item": {
          "id": "787573a7-8fe6-457b-a6c1-ad1f117875e6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31976e93-9e18-4bb5-823d-f03036fd51a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8e5941-bf07-4e3d-b56e-d2eda412bf80",
        "cursor": {
          "ref": "82762aed-0433-4702-a7f1-d809982bc68f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c44214ac-e6e1-467f-a846-4c90bcb96eb1"
        },
        "item": {
          "id": "9d8e5941-bf07-4e3d-b56e-d2eda412bf80",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5dd210b0-6002-494f-b4ab-eec27ea9ebe6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "d3c53d67-0a50-436f-8e8d-f5930717e1b9",
        "cursor": {
          "ref": "914ba9f9-681f-4076-b151-0a8518f6cf7e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bcbbdc3a-2a37-4849-b0d4-1d694b210827"
        },
        "item": {
          "id": "d3c53d67-0a50-436f-8e8d-f5930717e1b9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e0ed7fa5-004b-4b0f-ad1b-7974171dd75b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "9168a361-9bc3-4a09-9638-6b27804ab04f",
        "cursor": {
          "ref": "bc0ac56a-ce9d-4332-ac8b-d00e4fc9f1b8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0032aa5b-14cb-49d6-951e-794dedfb017e"
        },
        "item": {
          "id": "9168a361-9bc3-4a09-9638-6b27804ab04f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f1e344a9-b78e-4c99-82fa-1f3379777590",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "4c5d3e92-8fb0-4178-992d-7ce30ce15411",
        "cursor": {
          "ref": "6940590b-57de-4531-a4aa-52de77c9e14f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bb8eedd0-edea-4767-b816-dde9e0299cae"
        },
        "item": {
          "id": "4c5d3e92-8fb0-4178-992d-7ce30ce15411",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3a249353-3d9b-40ca-8a9f-ec7abfff615c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "815282b5-d04a-46fe-b9df-50fd6511ec62",
        "cursor": {
          "ref": "846bb120-e484-4e0e-9e86-f02cf13441aa",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "730d3173-fee6-42fe-b22b-0654f5a0c191"
        },
        "item": {
          "id": "815282b5-d04a-46fe-b9df-50fd6511ec62",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "775e6424-6711-4ab1-b3a3-1e18a11c20ae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 158,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "3d04d955-2975-47cb-a99c-d33a74ffc81a",
        "cursor": {
          "ref": "8f8cef20-54aa-4267-876c-251fb57f3a31",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ee4c22fc-8328-44af-9719-64fbcaf66e7e"
        },
        "item": {
          "id": "3d04d955-2975-47cb-a99c-d33a74ffc81a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "876223fa-2add-4f51-9de2-f1b4f0029e69",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 129,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "0abdda51-ed16-4cae-919f-2b40d3308b6f",
        "cursor": {
          "ref": "4850f548-3479-4120-ab80-95bbf48ca64a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "90e9f899-8577-4fbd-8fea-86135d6d6585"
        },
        "item": {
          "id": "0abdda51-ed16-4cae-919f-2b40d3308b6f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "88f78fab-c83b-46b2-8c66-cde4024b030f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 142,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182b7f85-379b-477e-b6d7-6563e99f9ab7",
        "cursor": {
          "ref": "aa357e6e-502d-4e03-8f6b-0a6845a96156",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7e343de9-4f2f-499b-b17c-a26001174ee1"
        },
        "item": {
          "id": "182b7f85-379b-477e-b6d7-6563e99f9ab7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b5b80452-41e6-4aaa-8dac-304bd733c4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88506ffc-06c3-4c45-8390-f55f8b2a782a",
        "cursor": {
          "ref": "4e758908-d115-48c2-98aa-caebef8bf5c6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "36b1de2f-c39b-41a7-8d7f-741f2240407a"
        },
        "item": {
          "id": "88506ffc-06c3-4c45-8390-f55f8b2a782a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "54f90f28-b8f2-4eec-a568-460ecb53c324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f7de5-544c-4e20-9072-0cf9f887535c",
        "cursor": {
          "ref": "8df79315-5e96-4f13-a00f-8695b898c678",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bb80aed9-0900-4b3e-b034-3780816a1d57"
        },
        "item": {
          "id": "bb7f7de5-544c-4e20-9072-0cf9f887535c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4a92892c-30da-454a-ad46-5a5bbfa4e34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87638ee5-bdd1-4057-a7d6-6fe73d957b23",
        "cursor": {
          "ref": "c5de6158-84a8-4bfa-a4c7-ee338e5dc701",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3d70c376-b6a1-41e7-8caa-483025628adb"
        },
        "item": {
          "id": "87638ee5-bdd1-4057-a7d6-6fe73d957b23",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2234f163-7b98-493a-a0b2-bd2ad5d4e8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed026a2d-01c8-4f8d-abb5-528b930c3e98",
        "cursor": {
          "ref": "d84bb11f-72cd-449f-9ce1-4423cf9db52a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "aa961e10-c449-4308-a63c-ce620df9ae40"
        },
        "item": {
          "id": "ed026a2d-01c8-4f8d-abb5-528b930c3e98",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a094ae6-2cb0-4a61-832b-3ba1419da5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c110856b-55bb-4bfe-81a1-89b2abaa1026",
        "cursor": {
          "ref": "226712d6-29f6-4cf0-af0c-953b1b6d6763",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "14885f41-b234-4139-b240-2c14a509aa09"
        },
        "item": {
          "id": "c110856b-55bb-4bfe-81a1-89b2abaa1026",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3848b7bf-d65f-488f-88be-dbdc53dcb713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09254c9-7bfa-4143-9ba3-801a06b93ae1",
        "cursor": {
          "ref": "2fd6dd09-df04-40c0-a247-9378f233c35e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f99e52ba-8147-4296-927a-df146ea12f3a"
        },
        "item": {
          "id": "d09254c9-7bfa-4143-9ba3-801a06b93ae1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ab0d1ca1-680c-46ff-a021-76f95605caa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b631cc7a-119e-45ef-bcc4-0e5ab74680ca",
        "cursor": {
          "ref": "fe4d80ed-fcef-4bb1-a891-300161f96141",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b7eaecc9-9fdf-4e10-b329-55bcebf721d4"
        },
        "item": {
          "id": "b631cc7a-119e-45ef-bcc4-0e5ab74680ca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b985f305-1974-464b-b080-39052459c856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237bc4ce-b263-459e-8cd7-341776c67711",
        "cursor": {
          "ref": "9c2195f3-168b-4d5d-b787-229ec307906e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0e1553c3-3f22-40d0-a56e-4b18d33975c0"
        },
        "item": {
          "id": "237bc4ce-b263-459e-8cd7-341776c67711",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "57b519b3-f076-490d-803c-92870993023c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c242eec-30d3-43c1-be85-5789b9e95e9d",
        "cursor": {
          "ref": "54ab7ad9-e613-4dae-8cb9-28dd7e00728f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5518101a-5f24-4b63-bfe1-284ffb7e0bd8"
        },
        "item": {
          "id": "2c242eec-30d3-43c1-be85-5789b9e95e9d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fc939e71-73c8-4ada-b791-16cdc3ab6462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f296b32-f0fc-4d60-8241-cea07c31e19d",
        "cursor": {
          "ref": "4d963486-dcba-415e-8e83-513e7622addb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7af964cc-965f-40c3-910c-05658be5c73e"
        },
        "item": {
          "id": "0f296b32-f0fc-4d60-8241-cea07c31e19d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5ca10cfe-6dcf-40e2-9828-c280c05c4180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c73f82-3cbc-4dbc-afc4-46d1e1ee5793",
        "cursor": {
          "ref": "4ea90f90-9188-47eb-a8de-b174aa7f7191",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0de8e27e-2b28-4d25-9ba6-6114bfde6e50"
        },
        "item": {
          "id": "13c73f82-3cbc-4dbc-afc4-46d1e1ee5793",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2e11eef2-b4b2-427b-9498-ddaeb9a4c2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843f2533-7517-434b-906c-80da9975fd3d",
        "cursor": {
          "ref": "e89ce17c-9504-4488-94d9-037cf0015b18",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0ec989fa-b6ed-4725-8868-fe2c357b726e"
        },
        "item": {
          "id": "843f2533-7517-434b-906c-80da9975fd3d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e380717e-8af7-4714-9883-ef45ef0180a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3241986-75d5-4a7c-8426-924a74b30f77",
        "cursor": {
          "ref": "95bddc56-77f6-4058-8c9b-08b0f0c7004b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cc9a3405-92b2-49ea-82b9-4b62635bb539"
        },
        "item": {
          "id": "d3241986-75d5-4a7c-8426-924a74b30f77",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c04d6d0e-6fe3-4a17-afd4-567043626a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ba5445-a27c-48b1-a1cd-3c99ed370ed2",
        "cursor": {
          "ref": "d4115f10-dbd6-41f0-88ae-08a6e12e1f22",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "22339cf1-1d30-446c-8e40-dfde43a47d15"
        },
        "item": {
          "id": "92ba5445-a27c-48b1-a1cd-3c99ed370ed2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9d490238-9e22-4492-8b38-e05123c3966e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00518f3-5883-4d10-904f-14e12b3418d1",
        "cursor": {
          "ref": "6ec2ab56-9afa-4765-b504-c92ea6fddb70",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5a5d3679-4d8b-44a9-8d1b-7d8795f6a649"
        },
        "item": {
          "id": "a00518f3-5883-4d10-904f-14e12b3418d1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "64e55d08-17fb-4edf-afb7-6f85c7c43283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f318e27d-7a59-4534-87dd-d3820d3f430b",
        "cursor": {
          "ref": "56d722a6-9dec-4359-b362-a0e34755336c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4b22d151-c116-4a9e-b2d2-07f0808d8b71"
        },
        "item": {
          "id": "f318e27d-7a59-4534-87dd-d3820d3f430b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e995b15c-1f8f-4e75-a0fc-395f1e843e79",
          "status": "OK",
          "code": 200,
          "responseTime": 180,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "51f577a8-7ed0-4e8d-8318-911aa1280f9e",
        "cursor": {
          "ref": "81a04229-7a40-4073-95ab-edd3a9b5ba49",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3dc77ae7-fbb9-4721-b524-24263ec10f10"
        },
        "item": {
          "id": "51f577a8-7ed0-4e8d-8318-911aa1280f9e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5677c6fc-bb2b-4121-b554-84cf07b16352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22989bcb-6613-4bad-b1b7-f45e41a318d8",
        "cursor": {
          "ref": "6cbd644b-9375-4fb9-aabe-68438eb1ae9f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "53fcaaee-d9f7-42ed-ba30-4e2da8ab887c"
        },
        "item": {
          "id": "22989bcb-6613-4bad-b1b7-f45e41a318d8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5ca8649d-ae67-419a-b26f-8e5ee7fa9f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d5876c-d35d-4ddc-9898-eff81a4ae9c4",
        "cursor": {
          "ref": "5275eea7-5993-457d-80fb-6dc91d124fd4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b1dd3a68-80ef-44ce-a8e2-9cadba2ce450"
        },
        "item": {
          "id": "86d5876c-d35d-4ddc-9898-eff81a4ae9c4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4a7390f8-fc1c-491f-8d68-621d598c858b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852ee0f6-73de-423a-a63b-37e3012e4b05",
        "cursor": {
          "ref": "2cc3d723-196e-4a5e-a679-38ef6b8270ae",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1aac7ab3-bf3e-4b66-b6c9-e3d8b6c92380"
        },
        "item": {
          "id": "852ee0f6-73de-423a-a63b-37e3012e4b05",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5ea82850-e704-4d6c-a492-a00e368a95fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e238051-ebf3-4663-ae3a-bb044f668ca0",
        "cursor": {
          "ref": "280b6fab-5a22-4f61-ba36-3716d9405419",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "67c376c4-a489-4554-9b63-f42c86697b3f"
        },
        "item": {
          "id": "6e238051-ebf3-4663-ae3a-bb044f668ca0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7b89981e-9be8-4b46-8bec-cbe919e8b595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba46f055-994c-465d-abb0-b78526a54248",
        "cursor": {
          "ref": "ddd2f69e-4e65-49f1-a438-4598746c25dd",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b6c568c0-a037-4fee-b932-a0fa0f309723"
        },
        "item": {
          "id": "ba46f055-994c-465d-abb0-b78526a54248",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "36216c60-b84c-4813-9ec6-b865adf65938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b96c249-b17e-4b81-818c-ab0905707cf0",
        "cursor": {
          "ref": "75cc6734-512b-4a88-a8e2-a48135428b21",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "079ab8ed-9189-4d89-8326-c02c279ba578"
        },
        "item": {
          "id": "1b96c249-b17e-4b81-818c-ab0905707cf0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "210e3271-f5a4-408e-9b36-6dc3345ad41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676541d7-31be-4736-a376-4ec9325742f5",
        "cursor": {
          "ref": "ae16ff76-00ba-4bb5-bbb8-193dcacbacca",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9a7a1e67-dbd8-4ee4-8a42-1be539395267"
        },
        "item": {
          "id": "676541d7-31be-4736-a376-4ec9325742f5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b112d573-7df9-4b31-928e-922211248f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b127d4d3-cfcd-4c43-9b82-5ef8b9238a24",
        "cursor": {
          "ref": "a83ddd0b-f4d1-4e37-83d0-45070c15b24a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "258b9987-3123-454e-9b97-c213f1e20eb4"
        },
        "item": {
          "id": "b127d4d3-cfcd-4c43-9b82-5ef8b9238a24",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a7e40018-5726-49b9-81c3-5f538cf59b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39001d1f-2731-4ef9-ac71-0e9bc33584a5",
        "cursor": {
          "ref": "c8c4a39f-f757-45f9-a5af-0f514f18699a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e44bbf7b-9736-4e8d-ae68-eb0a06724da0"
        },
        "item": {
          "id": "39001d1f-2731-4ef9-ac71-0e9bc33584a5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f0defd7a-a281-4803-82b8-b258e9a559f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb784b4-65a9-499c-8daf-641c9dce1b3b",
        "cursor": {
          "ref": "1be88581-4db2-4013-b2a1-9a9eef7d364e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c4f694ae-a9bc-4755-aab4-d86da8f7d11d"
        },
        "item": {
          "id": "6fb784b4-65a9-499c-8daf-641c9dce1b3b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "700a139d-b311-4960-b390-82162aa2e803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12582f19-b423-41ce-9baa-32eaefa86f1c",
        "cursor": {
          "ref": "9f2bb199-4e28-4313-a658-46999123957c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bd0a6ece-caf4-499b-868d-f2476392f06d"
        },
        "item": {
          "id": "12582f19-b423-41ce-9baa-32eaefa86f1c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f98147b3-5314-43c9-8f37-376af22bc144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd3b578-560f-4719-893e-43fcd52e4924",
        "cursor": {
          "ref": "f8062f61-5ffe-40af-8c4f-3f273ac5bd75",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9e886bd2-20d1-4e1a-b58d-11b98d75021e"
        },
        "item": {
          "id": "4bd3b578-560f-4719-893e-43fcd52e4924",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "63f462df-605c-4c71-8602-02585254d958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f81c907-3f1a-43b7-aa59-77877f2c56c3",
        "cursor": {
          "ref": "b02a2bd1-db2c-477e-b5e5-72700a0ba824",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0e5e87bf-9e69-4602-a166-4ebc8b100903"
        },
        "item": {
          "id": "1f81c907-3f1a-43b7-aa59-77877f2c56c3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a9fc07c8-f07b-4f9a-bec0-bffb1efade34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf4e2f9-636e-47c4-8bcc-9c43093c1104",
        "cursor": {
          "ref": "e272e341-e574-4a3f-a421-6726231e6624",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "28595e4f-0412-4321-a02f-f86e8dc4b7eb"
        },
        "item": {
          "id": "ebf4e2f9-636e-47c4-8bcc-9c43093c1104",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "34e49ebe-e302-4b5f-988a-7054feab4254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd6cf63-6b7d-4b26-a814-b05b0d877523",
        "cursor": {
          "ref": "aefa3f71-9995-4463-bf71-9c6fbcbc3090",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8ba9d4a0-2b20-4761-9941-73514268b4ec"
        },
        "item": {
          "id": "1fd6cf63-6b7d-4b26-a814-b05b0d877523",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3c77c515-c25b-4f7e-ae4c-b9a1cadc3880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55ec94a-d67a-4389-99a8-b13fdc53e938",
        "cursor": {
          "ref": "91da3a1a-1779-4fff-bb19-bfd1fa74b913",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "074e7fb2-9833-4fb1-bb59-d56c61fd3256"
        },
        "item": {
          "id": "a55ec94a-d67a-4389-99a8-b13fdc53e938",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e437605d-90cd-4c42-b96b-c8aad10d31f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b0407a-063e-4ff9-94f5-20a908cfadc0",
        "cursor": {
          "ref": "9a0acf08-4a4a-4496-95ce-aad399a6ff9f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "73bc8b53-8681-49f7-99ec-7e8401e14c9d"
        },
        "item": {
          "id": "03b0407a-063e-4ff9-94f5-20a908cfadc0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f6695f04-c57d-4c21-b654-b9e60e3b2e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de479a4-1896-4e83-b51e-241042e33702",
        "cursor": {
          "ref": "35810214-a349-48d8-bd83-0ae858936016",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "03a0d2cd-1a5e-4df5-b632-0f22e3271707"
        },
        "item": {
          "id": "2de479a4-1896-4e83-b51e-241042e33702",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "babc520e-4386-4648-81da-a885d6b43e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f98dd4-0baf-4ff0-961f-7880f9bcdc15",
        "cursor": {
          "ref": "9adc2455-38e6-4744-bfd8-82fbb416d113",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4e858207-831d-4dda-af16-db80fb5e61e5"
        },
        "item": {
          "id": "e6f98dd4-0baf-4ff0-961f-7880f9bcdc15",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ec8a2549-718b-4b1a-9138-dbab90c0f51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cbaf5d-b002-48e2-9920-13a2da2eb99c",
        "cursor": {
          "ref": "1fa5387f-6d7b-4fc3-9c78-c646543c6ff2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "feabfaba-3732-4181-8bc4-03ba44ba22ea"
        },
        "item": {
          "id": "03cbaf5d-b002-48e2-9920-13a2da2eb99c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "aeb314e3-03de-47ce-a87e-f34ff2690ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e01297-90ff-4370-aee5-7981e3c5b4b5",
        "cursor": {
          "ref": "12346d5f-4952-4828-b478-5632200e8ecc",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "eef7ba08-ac82-4adc-a361-473a02cfa78d"
        },
        "item": {
          "id": "e9e01297-90ff-4370-aee5-7981e3c5b4b5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bca74370-bf79-4c85-a90f-b4f720201506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091704cb-3894-4d22-8f55-fff0ef32452d",
        "cursor": {
          "ref": "10e7ef67-9f0f-4c5e-9089-033f1589b063",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8828b95f-28bf-4a69-ae05-5a8f947edb62"
        },
        "item": {
          "id": "091704cb-3894-4d22-8f55-fff0ef32452d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5db61e04-885b-4665-bb4f-c610894dd897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dff1983-2bb0-4665-8f01-e97d1a948f18",
        "cursor": {
          "ref": "9cf5b651-c471-4f82-983f-0091909ecf40",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4f15f67e-7025-48b5-97db-5a786bb843ef"
        },
        "item": {
          "id": "4dff1983-2bb0-4665-8f01-e97d1a948f18",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a517d801-daae-45e2-9fdb-51d25f741b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416b0f3d-d20f-4b51-a607-3c311f03abb6",
        "cursor": {
          "ref": "5ef8efa9-3a84-4633-88cf-a0d695ceb250",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bc227fa9-393d-489d-98fe-8bf354977875"
        },
        "item": {
          "id": "416b0f3d-d20f-4b51-a607-3c311f03abb6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a58c6637-dec6-490b-8b4f-c765968b72e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fe5b4a-cf0f-4433-a01f-bb1b92c571d1",
        "cursor": {
          "ref": "850f3f50-912a-449a-93cf-a10d83f48e2f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "df188004-dd44-4fdd-b299-d438080c3514"
        },
        "item": {
          "id": "e7fe5b4a-cf0f-4433-a01f-bb1b92c571d1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bc43b1d8-a370-4ca7-8abe-83b36159c214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f925ec-c0c2-4eee-a6c1-3bf0ad4ed6e6",
        "cursor": {
          "ref": "bcca85f4-8cc4-435c-a223-b613bb64e982",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1d18c17e-10ae-4d46-8a79-66a9ea04e2fa"
        },
        "item": {
          "id": "a8f925ec-c0c2-4eee-a6c1-3bf0ad4ed6e6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "34c31d85-a5b4-4cdb-8a11-5a36a689616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdee5e08-076a-41f3-a75a-4c8e64253e2e",
        "cursor": {
          "ref": "082abadb-5d71-4d38-bba7-4218841b73eb",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3089a263-f788-4a98-b8ee-f14095502cb4"
        },
        "item": {
          "id": "fdee5e08-076a-41f3-a75a-4c8e64253e2e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d6f4f6b3-fe6d-4469-96e1-c986f30f8e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd15cdda-ff5f-4caa-9737-c331a1e8865b",
        "cursor": {
          "ref": "1ecf5426-b905-45a6-bb03-8a9d328d38fc",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bed4c954-c246-4997-b6bc-914174d3ce87"
        },
        "item": {
          "id": "cd15cdda-ff5f-4caa-9737-c331a1e8865b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1b850a23-f0ad-43b3-abda-c5f8318430c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b32bb1-2b4c-4e2b-b755-fc5aa3401a34",
        "cursor": {
          "ref": "8f669590-56ef-4ab5-8eb3-811abdbe5124",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6c703520-5146-4c75-a89b-6b27f33e19ba"
        },
        "item": {
          "id": "f0b32bb1-2b4c-4e2b-b755-fc5aa3401a34",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "72b726c0-3026-43a7-a9ba-a49b582d12a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501aa606-33c4-4480-9bde-0326ea9cdb67",
        "cursor": {
          "ref": "1297a25c-9a84-4a57-ad14-a529507542b2",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "edf4e46d-1a99-4eb6-900a-955f5a088d96"
        },
        "item": {
          "id": "501aa606-33c4-4480-9bde-0326ea9cdb67",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4e7f0184-604d-445c-861b-da21edaaa415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778b28c8-b7b2-4aa8-92e5-487da6ea9cff",
        "cursor": {
          "ref": "6eaf13f2-203c-4594-840c-17a21aa6e216",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "31955628-65e6-4cbe-aaf9-43327aa1c1cb"
        },
        "item": {
          "id": "778b28c8-b7b2-4aa8-92e5-487da6ea9cff",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "008f4fec-af0b-49a6-9c5c-7baeaef54aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e65c10-fb21-4897-ac11-1e95090cfad3",
        "cursor": {
          "ref": "0e39c3e6-b3eb-4b2e-a35c-f50dcd116085",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7c9d6a35-b7c9-41bf-bbd5-20672c40b332"
        },
        "item": {
          "id": "a5e65c10-fb21-4897-ac11-1e95090cfad3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b7af1ef7-ead0-44d6-87e7-e25ca96017ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d411211f-f0b5-41cc-a373-11fdc93b8df8",
        "cursor": {
          "ref": "9d935621-4785-4097-81c3-0b3a89b04d09",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "78de282f-9f0e-49bd-a8fc-2388c3d04fd2"
        },
        "item": {
          "id": "d411211f-f0b5-41cc-a373-11fdc93b8df8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "16bc9bda-ae8d-4c97-9687-5f21c9e849b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acccbad2-04a7-4168-9003-2575f104a3b9",
        "cursor": {
          "ref": "60fbb78f-56ff-40fc-9eba-9f5243b1a29b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "be228e97-fef2-49c0-b6a9-c23b0eb57d2c"
        },
        "item": {
          "id": "acccbad2-04a7-4168-9003-2575f104a3b9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "45be7131-d1ab-4e0f-a294-b278513118fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebd5a71-c0bb-43bb-bcf4-391361078c28",
        "cursor": {
          "ref": "a6815621-f843-4013-8526-22d34f47ae5c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "994016d1-3f63-4855-9eee-9f3148c996f6"
        },
        "item": {
          "id": "6ebd5a71-c0bb-43bb-bcf4-391361078c28",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "50bfa28e-201f-49ce-8ce6-d70315946fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ee7b62-1723-4b32-ae02-c4ef89430b9e",
        "cursor": {
          "ref": "cc01b14d-6de3-4b78-910d-125224bec772",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d40d2b2d-0fbd-46c8-9866-676ff85641b4"
        },
        "item": {
          "id": "a6ee7b62-1723-4b32-ae02-c4ef89430b9e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1267cb45-735d-4908-b340-13ff4e0dfdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abeaafb-1504-44b1-8ed3-ff255f496793",
        "cursor": {
          "ref": "63b65d14-4407-4979-ae26-b6dab712ce64",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "977067cc-549b-4e6c-838d-4833d8a87e7b"
        },
        "item": {
          "id": "2abeaafb-1504-44b1-8ed3-ff255f496793",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5ae80ffe-75ff-41c7-a881-5ef59aa1ed17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dec5c6-de9c-49bf-b405-507294038a64",
        "cursor": {
          "ref": "79b60d7b-7e89-43c8-a23f-8db30fecfdd6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "625981e5-f437-4e24-b294-334017634593"
        },
        "item": {
          "id": "36dec5c6-de9c-49bf-b405-507294038a64",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d48a02dc-f567-4eb1-8f1e-fabcd4f8ed66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc78f088-2627-4624-88bf-d16169a1cbfb",
        "cursor": {
          "ref": "e1e135f6-0643-4f48-950f-962efa08c52e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ba1f5672-b6ec-425b-be68-2a0c5eae1fe2"
        },
        "item": {
          "id": "bc78f088-2627-4624-88bf-d16169a1cbfb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3663bbbf-81d8-46b7-ba64-1db6eb784007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6248ef-344a-4998-a1c3-9e6b1c37973c",
        "cursor": {
          "ref": "0d5ad750-0107-4ae4-ae4e-a7666a2b0c90",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "05e92f89-deb0-4603-b8cc-a41ac2497647"
        },
        "item": {
          "id": "7a6248ef-344a-4998-a1c3-9e6b1c37973c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c609cc25-e174-4dab-9632-12b859f9f29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df313e24-fc2b-40b9-afe4-270b7ce568a0",
        "cursor": {
          "ref": "eb22f07f-be99-4214-bbda-011e19a1008d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a4afebd1-5e43-4280-b41c-07b69c0d4a11"
        },
        "item": {
          "id": "df313e24-fc2b-40b9-afe4-270b7ce568a0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b04d1e6c-24ba-4a54-8507-44321e7f6b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ada082f-37be-4b8a-a885-37cbe895dff2",
        "cursor": {
          "ref": "ce9df348-43a5-412e-995b-f51d9eef5056",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6fcf53e8-67df-4f8e-8aa9-00befdce51f2"
        },
        "item": {
          "id": "1ada082f-37be-4b8a-a885-37cbe895dff2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e2573129-735a-4d85-a630-63b2fa2c6f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b3cabc-ba0b-4ae9-85c2-293566b21adf",
        "cursor": {
          "ref": "f2b86e0a-7747-4221-a6fd-c7313cc5a2dc",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "17eb59d4-bd52-4898-afda-3169585a4463"
        },
        "item": {
          "id": "59b3cabc-ba0b-4ae9-85c2-293566b21adf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f95504af-eb30-46b9-8d30-e4f37f931eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33934ec2-92fe-4067-b4a3-83992ac98a60",
        "cursor": {
          "ref": "e4dc5c05-ac78-4616-9ea3-b013f116caad",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c13fef23-9e3e-484e-9302-a9e9e4c43c79"
        },
        "item": {
          "id": "33934ec2-92fe-4067-b4a3-83992ac98a60",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "23aa555f-4a13-4be5-95be-a587b164f192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad7eea4-7a32-4844-b9f0-65cab8970a9f",
        "cursor": {
          "ref": "4b7d6611-60c7-41c5-abd6-1c07b2f5a3a1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6a97de29-d4bc-4307-a665-4bb985d9a51d"
        },
        "item": {
          "id": "fad7eea4-7a32-4844-b9f0-65cab8970a9f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bb21adee-683a-4f6f-93ba-c1c0a8888d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291cf1b1-1299-4077-a61a-7183058bd54b",
        "cursor": {
          "ref": "914e3040-15ee-47e7-9e27-b0fbf0f8801a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "91ecb82c-ed1c-40c7-bf88-60f01f428e2d"
        },
        "item": {
          "id": "291cf1b1-1299-4077-a61a-7183058bd54b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "86ba9004-65fd-444d-856d-54c093de361a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e418d28a-a3e9-4e7d-bee3-7e9a55ac8ac7",
        "cursor": {
          "ref": "22071229-c70f-4250-b0de-bd8227b9a622",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "62c9142a-db71-4767-a552-9462619faa0a"
        },
        "item": {
          "id": "e418d28a-a3e9-4e7d-bee3-7e9a55ac8ac7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dac24113-bb3d-4059-8eaf-84613fb82981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f8259e-11c9-4efd-901e-6d97571a3905",
        "cursor": {
          "ref": "f33c848b-4703-4dd9-a149-b9f324bbb7be",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e53430dd-5cbe-44c1-a2c5-3f1dc204cf83"
        },
        "item": {
          "id": "72f8259e-11c9-4efd-901e-6d97571a3905",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b767fadc-5897-4839-891c-c5b05a827e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adc514d-c6c8-4f6e-b8f0-ced181f5b5e2",
        "cursor": {
          "ref": "8174a63e-0842-4ecc-b37e-1ab3869cab4d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ed305a84-91e2-409b-a303-1239eb10249b"
        },
        "item": {
          "id": "4adc514d-c6c8-4f6e-b8f0-ced181f5b5e2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3a5f12c9-6baa-4fc7-b4e0-430a44e4abe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e210bf-e7a1-4b2f-88bc-ca2fc8bd7e01",
        "cursor": {
          "ref": "474b6bb6-4c77-456f-b825-8b2951f1ebbe",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "986a34a1-cdf2-427c-bd53-55297dc825b8"
        },
        "item": {
          "id": "87e210bf-e7a1-4b2f-88bc-ca2fc8bd7e01",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2baa04e0-a72b-4b71-bf67-ae6929fdd846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c30ade-b0d3-4d82-99eb-84c5aeeddbc5",
        "cursor": {
          "ref": "cfe18aa0-13d2-4cee-9a3e-01594f3d3f16",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "034cc3ba-5076-42f7-9c8d-7689d6c67393"
        },
        "item": {
          "id": "64c30ade-b0d3-4d82-99eb-84c5aeeddbc5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "68c91820-d1d2-4d46-8dc1-f2464ed962d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb45d22d-07ca-4174-aaa4-9878dc8dc607",
        "cursor": {
          "ref": "fbcc4dc0-5fcb-4689-a6fe-3298a5682a80",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8b324cf4-1a64-403f-9a18-f91140217b8c"
        },
        "item": {
          "id": "cb45d22d-07ca-4174-aaa4-9878dc8dc607",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "928dc276-6e78-4fd7-8346-7ee47e61a41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae693eb6-4fa8-4880-8c6d-775f695928ef",
        "cursor": {
          "ref": "d31de659-f7b5-4047-9b42-2a2c2cd078e6",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8844c0b8-e7e8-40c2-ac89-f6fb11626c6e"
        },
        "item": {
          "id": "ae693eb6-4fa8-4880-8c6d-775f695928ef",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f04d090b-8ca1-4f33-bbe4-3fd954f35e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02387849-5d2a-4247-b79e-966a7796b41c",
        "cursor": {
          "ref": "14b4a673-f6ce-4a47-a0bc-ebd12f495be2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0d06836b-4e04-4a81-b4aa-6a357654a8a0"
        },
        "item": {
          "id": "02387849-5d2a-4247-b79e-966a7796b41c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "88925c5b-f030-44d1-bbf0-8789df46b292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d407b9-d8e2-43af-b938-27ee410d89f7",
        "cursor": {
          "ref": "4d964263-ae27-49b5-b983-d4a8b8a63059",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "85190ded-9b76-4fe3-92b6-e19308bfeef6"
        },
        "item": {
          "id": "01d407b9-d8e2-43af-b938-27ee410d89f7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "25934f57-05b0-4a07-a229-b252f3321254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f32101-8e01-4ef7-a819-8d4ca0474257",
        "cursor": {
          "ref": "77579e62-ee17-4636-ad49-98af4661322c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0f3eed84-c3c9-4090-9ee1-186304b132c5"
        },
        "item": {
          "id": "25f32101-8e01-4ef7-a819-8d4ca0474257",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1b4c5cd0-f19c-49b9-b2f8-95d70561c499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1e131f-919f-48b6-b2c1-360261530d0c",
        "cursor": {
          "ref": "4299c9a7-16c0-4a01-935c-d3f5d60bac69",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2d4d1b93-eb25-4400-97a1-2ef451b642a1"
        },
        "item": {
          "id": "1c1e131f-919f-48b6-b2c1-360261530d0c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9f8eeac2-dce0-44be-8d68-106ecb0ace73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc37f60-301f-49e3-8d69-19f364e92333",
        "cursor": {
          "ref": "e6512f99-5fef-4c35-9b46-3cc188684cd2",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cbb87939-ea29-4065-ab3b-bfcc59e869ab"
        },
        "item": {
          "id": "8dc37f60-301f-49e3-8d69-19f364e92333",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "744be960-7a26-4ef8-b623-2e97a1cbf858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63c4329-9a20-4f14-8f58-2567a1c42d6f",
        "cursor": {
          "ref": "e0d943dd-785e-4e1c-a0cf-0bf4c1a68def",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2f365608-2f5b-4a01-bd94-b798a0ecf71c"
        },
        "item": {
          "id": "a63c4329-9a20-4f14-8f58-2567a1c42d6f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "351f6b3e-b606-4fa8-a51c-8d2c836fa1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502beb58-9303-4057-adac-37e240e5daad",
        "cursor": {
          "ref": "9d177427-275b-4d15-82ef-76d0dd377dd7",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d999eefe-33a9-4f0f-b713-fa32bb9614e5"
        },
        "item": {
          "id": "502beb58-9303-4057-adac-37e240e5daad",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bd7e53e6-2706-49c9-94af-8356886fe0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e7a152-9489-4006-b003-562465657fb0",
        "cursor": {
          "ref": "71be5a79-6453-495c-b8db-2795fe49a110",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "020bedf9-f7aa-4a1c-b216-de97b0613b25"
        },
        "item": {
          "id": "e1e7a152-9489-4006-b003-562465657fb0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5a7017c3-1ef5-48ca-9be7-147ead270b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79ce968-712e-456c-9282-7dfaae0e1404",
        "cursor": {
          "ref": "7ddeef45-3af8-4a9f-bd52-0f34a2dffa44",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7cd32c84-ab10-4a43-a040-8bf48f45305e"
        },
        "item": {
          "id": "d79ce968-712e-456c-9282-7dfaae0e1404",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "74803306-fc49-4c89-8a2f-f7de32f66f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d481b2-8e29-4e61-ad6b-86a1d793636e",
        "cursor": {
          "ref": "2a8a69f4-c323-4054-92eb-75f8ba2b6e8f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0dcd91ab-59ad-4312-88e6-eef6d8a71043"
        },
        "item": {
          "id": "c5d481b2-8e29-4e61-ad6b-86a1d793636e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9fa03464-af53-4e56-8b11-94e35bf77db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4c0f74-edef-4e89-8c69-be14aa6f64c9",
        "cursor": {
          "ref": "e8f5919c-e2c9-4e31-95e3-5a5d2fc2d709",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "25ca35d5-6bca-4edc-96e5-e9343b427068"
        },
        "item": {
          "id": "8b4c0f74-edef-4e89-8c69-be14aa6f64c9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "662fa2f6-7d03-4d5f-8f6e-925e878640d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34ecf38-ba82-4613-b7d2-6b616bd4ed72",
        "cursor": {
          "ref": "cc90b642-7044-4078-b80c-95c468c39619",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f9ad988c-1c68-40ef-8d59-897e38f2808f"
        },
        "item": {
          "id": "b34ecf38-ba82-4613-b7d2-6b616bd4ed72",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "38f87b4a-46cb-484c-be15-97c8560ec919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce5cdfa-230f-4d81-b42a-b2d992bc994e",
        "cursor": {
          "ref": "11df2223-a602-465f-a6e1-dedc029cfc57",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a7333cb5-d47a-48ac-a262-f4524b31a489"
        },
        "item": {
          "id": "fce5cdfa-230f-4d81-b42a-b2d992bc994e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "78127208-c131-451d-b0c2-28398bf0fdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce7b149-2fbb-4635-a10d-67577fa7b62d",
        "cursor": {
          "ref": "25a686a6-65bc-48b8-ba5b-1f643e3487fe",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8d926685-e24e-4a6b-bc5a-9e95557a51b6"
        },
        "item": {
          "id": "1ce7b149-2fbb-4635-a10d-67577fa7b62d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4db71afa-1cbd-4e2e-ba52-5ba3c85daac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ea2547-072c-4f50-a6e5-1cb40265b33a",
        "cursor": {
          "ref": "b190f813-6086-484b-a1ad-d623aa89902b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6aad17a7-45ea-4168-9dcd-b1a9c109dd24"
        },
        "item": {
          "id": "c6ea2547-072c-4f50-a6e5-1cb40265b33a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "acac133e-31f0-4232-ae91-23203c9cfb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1109f18-48f0-4391-90ce-bf22b732c5e4",
        "cursor": {
          "ref": "b5864e2b-ae2b-443e-9ef9-bab10fa46e74",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1edbf817-aeb4-42d6-a53b-1857b768fc48"
        },
        "item": {
          "id": "d1109f18-48f0-4391-90ce-bf22b732c5e4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a6750edb-7da8-4189-8729-c1e1d4960289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4affe6df-75e4-4462-81b0-eee84a1868f2",
        "cursor": {
          "ref": "9be61447-0d36-41dc-b071-ce1c141ba77b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b8d74af6-7735-4bfe-b1b6-8cee1c34bc8e"
        },
        "item": {
          "id": "4affe6df-75e4-4462-81b0-eee84a1868f2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8655a3e4-c170-4a85-be08-a7179ee57c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baba465d-8499-4112-b356-235e24356cbc",
        "cursor": {
          "ref": "6004933f-4f3c-4079-97a2-f35ef2d4f881",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b281f2ef-08cf-4e60-8fd3-ac9ed5406aac"
        },
        "item": {
          "id": "baba465d-8499-4112-b356-235e24356cbc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4127b4be-c613-4ce0-85d3-92a22aef3ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b00a357-0c95-4abb-bba7-1a668fb74a23",
        "cursor": {
          "ref": "0d0d6b40-1a20-4e21-9341-c8e40e53699b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "54057b79-1662-4926-9c62-49782d8c8cb1"
        },
        "item": {
          "id": "7b00a357-0c95-4abb-bba7-1a668fb74a23",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2a31565a-77d3-472f-9498-9bed6fd28aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d54503-f9db-4464-80b3-d604a859276d",
        "cursor": {
          "ref": "1603411d-4aa2-4d09-9eee-0a8564468145",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "843711d4-1670-4cb3-b3d8-5ccbd99c4bc2"
        },
        "item": {
          "id": "32d54503-f9db-4464-80b3-d604a859276d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2ce13604-78f4-4cab-8ba4-fb7ded556b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa63b54-ab89-4a3d-9198-557dd97a24b5",
        "cursor": {
          "ref": "b6b5df01-68f6-414a-90d1-c7d0f740627c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "25b2b0b7-2265-4653-a425-2a7e5d85c35e"
        },
        "item": {
          "id": "faa63b54-ab89-4a3d-9198-557dd97a24b5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cb604326-c115-4671-b97b-dfcafc205c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3175e1-755c-47b2-b33f-9da8a28e24c9",
        "cursor": {
          "ref": "78e263f2-be20-44a9-bf16-ef32e35f153b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "29b0be7e-20ac-450c-a187-b37ab179547f"
        },
        "item": {
          "id": "2c3175e1-755c-47b2-b33f-9da8a28e24c9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c4719cbb-2795-4619-8d5c-687d831e86b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a089202d-1b16-430d-92e1-767c2761145d",
        "cursor": {
          "ref": "f319b6f3-4600-4f6b-b529-3c44b14bb940",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9758b0f4-bc1a-44d6-9a56-0f341a035b49"
        },
        "item": {
          "id": "a089202d-1b16-430d-92e1-767c2761145d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "167bb040-6396-49c6-9f70-b127867a0b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4864f824-361e-4657-b206-d8885d998ec9",
        "cursor": {
          "ref": "66a64fc5-2c38-4ef2-926c-22a8d3052897",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ab19e3db-7334-4d7d-a733-80afaab68014"
        },
        "item": {
          "id": "4864f824-361e-4657-b206-d8885d998ec9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c6d27102-d9f8-449d-8d6c-db2f10465f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a25670-9db9-49d3-ab36-7ed744402be9",
        "cursor": {
          "ref": "d2bfb049-e20f-497e-851f-d96142e64c91",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "45709912-578f-45a0-a46f-d42321303cf2"
        },
        "item": {
          "id": "42a25670-9db9-49d3-ab36-7ed744402be9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e7bbf1d2-7c99-4684-bc7a-c252386cf75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fa1b09-66ed-43eb-810f-e06c73621f3a",
        "cursor": {
          "ref": "fa264b6f-506d-4516-b7b6-dca42257ec64",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0699f727-7ddd-4679-bb5c-e068a37f2103"
        },
        "item": {
          "id": "f2fa1b09-66ed-43eb-810f-e06c73621f3a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4b17945a-3ccc-41ab-a628-33972b702be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc501a5-70ee-4735-b2a4-44b98e726682",
        "cursor": {
          "ref": "ca301d00-1342-4083-93eb-0f7ff8943d9b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bcb2422b-9fc1-437d-8e44-af08b90d95e6"
        },
        "item": {
          "id": "9fc501a5-70ee-4735-b2a4-44b98e726682",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d4f2411a-f6f4-4142-8783-138ffe6f91a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b67887-38c7-45c0-a766-0756cc775ba0",
        "cursor": {
          "ref": "1b2d7103-a75f-49e1-9d7c-68db98c83840",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ac195a76-8a97-4fe8-9f9d-9138485e6444"
        },
        "item": {
          "id": "20b67887-38c7-45c0-a766-0756cc775ba0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cad2af9b-c686-4a0f-aa83-1fd2352f405a",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cf7e84-aace-44dc-9d8b-b12ddcc80b1f",
        "cursor": {
          "ref": "e0f78c8c-bcf7-49a8-8a0d-bb566a5da1c3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2ab5c84-43df-4648-9323-ba7f80b69723"
        },
        "item": {
          "id": "69cf7e84-aace-44dc-9d8b-b12ddcc80b1f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9d1e7e5b-5983-4933-ae72-96206b9a4453",
          "status": "OK",
          "code": 200,
          "responseTime": 3735,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efb4c95-237e-4920-b5cf-c1abe8fdc1e0",
        "cursor": {
          "ref": "627a4cc9-dc0d-4846-a8bb-e2e10200aa77",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9c7d9a60-35a0-4f4f-b89b-df2140a4bd2c"
        },
        "item": {
          "id": "0efb4c95-237e-4920-b5cf-c1abe8fdc1e0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fe080ac3-77ae-434f-8a28-92a4ba3203b2",
          "status": "OK",
          "code": 200,
          "responseTime": 3380,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6865a5a-6598-43c2-aadd-7b871bee51c2",
        "cursor": {
          "ref": "5a0af747-3fde-46d6-b1f2-f42808cc071d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "94bf1636-2338-460b-bd98-f37b262dd063"
        },
        "item": {
          "id": "c6865a5a-6598-43c2-aadd-7b871bee51c2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e633921c-a0c5-4da8-994b-82ab495a7c94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6865a5a-6598-43c2-aadd-7b871bee51c2",
        "cursor": {
          "ref": "5a0af747-3fde-46d6-b1f2-f42808cc071d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "94bf1636-2338-460b-bd98-f37b262dd063"
        },
        "item": {
          "id": "c6865a5a-6598-43c2-aadd-7b871bee51c2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e633921c-a0c5-4da8-994b-82ab495a7c94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537cf60f-2549-4e1d-a758-1276ded6cc94",
        "cursor": {
          "ref": "d2bd0c60-495b-4863-bd84-ee3c6e9075c4",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fed51d92-4e0f-4f4a-9243-b179d55b41af"
        },
        "item": {
          "id": "537cf60f-2549-4e1d-a758-1276ded6cc94",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9ecd7ffe-b810-49e0-8801-8663e318cb89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e148b9bb-ff40-4176-bc72-795a4fe82bbf",
        "cursor": {
          "ref": "b60060c3-5b76-444f-a893-1727d9da1561",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "36fc216a-5d10-4459-b4ce-0b877d9b6692"
        },
        "item": {
          "id": "e148b9bb-ff40-4176-bc72-795a4fe82bbf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cc13ced4-3f4e-403e-a58f-9214e46f5df8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}