{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b823ba84-9ea9-4cbb-899e-1b0c78071be0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9e73b27d-196a-4d48-b926-4a7b9e2d6cb2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b0bfcfd-33c9-48ac-af33-11fbab779cf9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e279180-b148-4767-a152-b09e3d988085"
                }
              }
            ]
          },
          {
            "id": "41c04ef7-744f-4f1a-a07d-12bc9bffabea",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec81f821-14bc-4b23-8fe6-b0e74a604372",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40376dad-9ad7-480e-bec2-b5bef17b224c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9e8337df-0c11-4ad5-ac75-7719c262c984",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3a057d87-62bb-4b70-ade5-8a5f040f10ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2aef6f78-03e8-425a-ad8f-9d755eea3e8c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7674155d-b222-455e-8bc5-8cda71eeec52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41c3b17c-f037-4e3a-bee3-ee9fa6a12e07"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c1f3157-4c6e-4b55-838d-e42c05e1dff8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ec42ba3-9b04-4c08-ab12-20f919f5d428"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23e3f9e7-7f95-4930-a4f8-0240792e078d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e941192-ef43-46f5-b557-82d8f9641856"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b214eec1-1e04-42c4-8f46-6c63d8fc8699",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "744545e4-35bb-47ff-beca-dd56bfd5b284"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3995e11a-cbbc-425a-9ad4-8bb7074aa3b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f242e731-d2a0-4471-8d46-675b248f9861"
            }
          }
        ]
      },
      {
        "id": "093a8371-de6c-4ed7-b58e-04cd0b9b4663",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "26e4e1ad-c79a-498f-9d1e-b3ca69d36902",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c78a8eef-b15d-4924-a9e0-e1e2df006696",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dbb0bda-ae46-43b5-821c-8f559942ee95",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc2030c-3d37-4cf9-a191-7bed7e3d6138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a02eb933-8246-4ec7-8496-3956f8d6af81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1efdab-8ec4-42b6-aa5d-47bf33bf31d8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1005f5ac-3fa5-4f31-8f64-4baf109caf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2432d68-052d-4492-a9ae-4403ed91dc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae05ad4-8a2e-41a5-92aa-6a06db59ccd9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d807b6-8b7e-4880-9201-74813dd579d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41c7fd21-9c7b-4226-a903-82ac9db501e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "517c29c4-ab0c-435d-a812-7a2bb337de88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1651959-7334-4b1d-87ae-078710beb3f0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ae23a8-9815-405c-8107-e72124d1eba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32b4bcf1-4489-44cc-98f0-63f0483662cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bddf10-5761-43cd-8943-22350fdaf2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7d5a9a-8ed5-4a79-a740-3e0c02f111a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6df688b4-a765-4fff-9b05-0f63ae4595c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9cbd789-150e-47df-b438-737d3eb5c0f5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78cf628f-b002-471f-937e-924100ee5075",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "84657649-3f38-444f-b7ba-e7efc1d2fc38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3da6ea24-50c8-4274-ba73-745ac369763c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "09e2b0c7-14f5-4339-83c1-b7abbeff65fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a6dc4d0-c839-49bf-a9d1-4aeb15773c93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90521bde-5caf-4e2a-9ee8-d084d0b64daf"
            }
          }
        ]
      },
      {
        "id": "898bb66b-2107-4630-a7cf-fe1e757fd991",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1f3de59e-0b2a-49b7-9c64-57be07c7bb48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87989d64-70d1-49d0-bee6-ad0757cbf2f5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4bc60bb2-3e52-46a5-95b9-0731fe32eb56",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df673d1d-9f1a-43d8-bb94-0b70417456e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74491321-d68a-4587-828e-5d26bdb4a015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc46bb1-df54-47d4-8759-bdac3e14207c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "396ff601-0c01-4f50-b88f-d68dda9f4e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60eb5cd-7596-479b-b2fb-6bac38b77e16",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b9aad8-6111-4004-8e00-33b014bd104b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92385123-e253-4492-ba60-7730c768c5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fba0782-6289-4ceb-b51c-54af9bac9df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64b7a078-9172-4cf1-ab84-97e7fd0083e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178bf5c8-dc6f-4d72-b652-6c1b4af5c582",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4f5589-0856-4f8e-9214-7c3837090cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451afb9c-f4bb-4f77-b57d-e1441ddc528c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf54d78-8205-46cf-8a36-de772d6b3e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbaf7bf7-3a72-4fa6-89fc-026bdfb6a3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45257b37-d4e5-4bf9-b737-b435509586c4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464767bc-6f8a-4471-8c60-84b505a5c707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8925451-1907-4895-8bde-1bf44343b17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7232c99e-94df-4144-b1a9-e523d8ddcb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1215f282-e71d-4bc9-81ac-9e8bc3e0df51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce6182c-6d07-45b0-9231-050ee3ec3c7f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ac12f5-0f92-4a29-9c41-bf8836491ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467c9b24-da4b-4491-aca7-686b0dc203b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed476f40-462e-449a-897a-59bdbf48ac99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8542891c-4043-400b-ba43-3018f9c2dd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0865a3-4487-4162-91a1-a4171048364f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f715dd3-7f7a-49e3-a74d-bdff3f6b59d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffac562-14d1-479b-a5b2-5623863cf5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fca76a-cf0f-4874-b7dc-6cf38cc306cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d214dad-52ee-4f86-ac6d-32476e9e6601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c27f4c-1f25-4d07-8f5d-e5a87903917f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd671d0f-3631-493c-b2f5-ea378326ab29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fb6336-1db0-4d45-a227-4a11d237601f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a34af7-f597-4238-b1c6-847bdbb39ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5224df94-7515-4399-aa5e-403c61e6c630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2563cd31-7607-4c0f-9528-b9beb89da426",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8805569-b363-4dea-a058-d8417a66d071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d981cee-4106-424c-abb2-3139494e0ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf99019-1224-4097-b5c5-4365e86869a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f65cc656-3bb7-4834-909c-37b324b23ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1942d618-28d8-4838-8574-334bd24d8273",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d88fb60-af59-403c-b41d-ccb02d11aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ed1287-6f48-4e9d-b156-ddd3528ad9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91ba380-a153-4efc-98a1-6f862ed41f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bade7c17-274a-4a7d-9369-bb8e5ad28581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5586d550-d4cf-4e7f-b5d3-0ed37719b6af",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35173820-f4f1-49ff-9d18-4ecb14b94c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3c9fab-cec6-4aa7-9a7f-a704ec992606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41eea6a-5f71-41b4-8bfd-f36510c98932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4064d68a-d7c4-4bb2-8406-1984e5b92ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aad4a5-5d5c-4f84-a575-19494a4f4bee",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b1aec4-89e1-49a4-b882-f82f20596957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9babf6-6a1a-4718-ad36-9a07d8136c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c346f89-a51b-499d-bf88-bf5032fd7ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "606830e2-f704-4c5e-a359-c7f34612aac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac4ea42-9a85-4976-94e5-4995340b2eb6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0ba8ea-4a51-4245-9959-595c27403bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9c8d2a-9dd2-4686-9c02-ad841c7c0f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc2de87-e764-4e77-bac2-03f9eff93c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4396208-6628-49f5-b748-6d361f60d824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a55f70-cdc8-47bf-87e9-8096f542f2a6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7206e7ea-0366-401c-8fb6-ca54aef7e9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f71ea42-868f-4ee5-8bce-ef90738a25e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60d576a-8812-4ffa-b0bf-ee8a52ef5e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c6cab79-f023-4a27-86e4-34a738dd24f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871bcae5-669c-4ccc-afb2-9515db3b454f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f3b40e-81ee-46a3-b338-e772f0f06198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0383562c-a2ea-422b-8965-7c6018be625d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0333609a-26cb-481c-bdd8-06173745ee89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4991328c-5366-4bdd-9953-f508e7d4c453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3166ff-2160-4f72-85b7-bcf8d26491ef",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8166aae2-75a7-4832-a0d6-c449c06e3e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea39c5af-8beb-4cdb-ab7a-8abd0d8f37f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcd2afd-4ecc-4658-9a4c-667d60d09478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9606789-bbad-43a0-9e18-dec187287cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad7f5eb-2152-423f-8ba0-385f6de9bc30",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9f14e4-91d1-4d31-b763-4e2f328e71c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7040b383-a5ab-494c-af73-4159dcb3b259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1899387-6fa2-4ea6-8178-522ed20b823d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f971da75-a593-4399-ad40-5691ea889eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b05cd6-6eb8-4315-abd4-00c9f54643d3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f3d314-1151-4c67-9268-8cbb53673463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357e6352-11c9-4561-9af4-cadf117e751c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fa7afc-f37e-4a9b-b8f2-97f99bf83d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cce2d8ea-322a-4e4c-a89e-90613fffba17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24073a13-14fa-456c-9066-113535b24dca",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73d698c-28af-43d3-88df-8f43157383ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c68ff34-da81-488b-bc52-065f105a8246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b13b245-4463-40fe-835f-2dd9bb67142e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c62137-b066-4ff0-83ca-e9ada21ba83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188eed80-0bdb-415f-8975-b12e9257ddc2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cfca55-55fa-4538-b7fc-b5623dd5f6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61943c4e-ecf5-42be-9407-84d29e59547c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809793dd-e542-4c73-9801-f237025ecdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cf004c-5dfc-4ae7-8fd5-6661a9472b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33f9e82-161c-44d4-8613-3e87402a42cf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b91d3e-9db4-4624-b076-c47e5bbbcda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e267849b-0214-4aa8-aa0b-dfe24f2fe7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2831a6-ecaf-4cf5-8f98-a19c6739b9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d3d916-cc1e-4f0a-96d1-4a3867efb8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f321457f-61d2-4316-ac3e-e89bbb016a23",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17804f1c-59e5-4e82-bd3e-4fc615b95a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b25d05c-0de6-42a7-a28e-360f9fd4be6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a576e6-7b25-403c-90bb-8fd7e22e59fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edfe8c7a-e915-4774-b2ba-decfc653b10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381888d4-44d3-4cfa-abf4-54e917ec9d20",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0255c398-1e63-4f25-a3e2-fe5e8d4d3b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8db59cc-44df-4126-83c0-38dd17262593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df707d59-a602-403b-b85d-504c305ddfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17620b51-e69a-453a-9028-a9e30ae8e598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f4beb1-1588-4493-ac89-799c2e0a5ce7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0eac80-8f35-4b1f-b86a-b5f040e92b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc07acee-a1e0-44ba-a858-c5c0f1809954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd7343c-ec77-4345-9aef-86085f9a615b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2020196-1b68-44a8-8089-54a3410e3f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a233a240-2d1d-4fe0-9b34-247ea7714052",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4828d01d-bcee-46da-b0f0-e39cfdd21967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce26ed38-937a-43d4-9de8-71cc8d68184b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1407a9fd-4e86-4c7f-8945-15bdc0190b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "012de7a9-4826-45e2-98d4-99341b65dfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b410d9f6-7b53-4678-94cd-ce37948885de",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eae4c5-ab82-43c3-a027-0542659cbfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee465af-09e2-4cd2-8950-5b5558ba3320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2349159-4ed7-4a7b-ad5d-6c121e2037fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efae36cf-2174-4fea-b921-2cab30f2c22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cb65e9-c8f4-4f8a-8670-ab97ebe8016b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2871122-34ca-4ff6-84ec-82f4126be276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cdf713-5ea8-4862-a085-a87035df704f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9d6783-6f35-4e10-8979-e60764ed6d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0b4b77-baa9-4fa8-a06e-7c82a02b327b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f82eb9-ab4b-47fc-8873-7456ebf1fa99",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1c8a63-cba0-4a69-82fe-3d25a268fb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4eaeb39-f464-46c0-956c-33f2f2aa59d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85254066-0f1a-4562-a7a8-fdfbb6380e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf4cb22-fadf-4076-8a80-04b898b4fa12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acc5e3a-5051-4621-8603-63c82536f51f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9a6bb6-b407-490f-80b9-e5c986ceba3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa92b203-0975-47c2-a6b1-0b58da04b2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beab980-c251-4637-be03-7fbda0301419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24456fd3-855e-4041-9399-8224a2ed2331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53b8ba5-24ff-4750-aa22-7a10e5d372c2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd421468-c8f5-4037-9442-af97c12bfcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30350d88-988c-4e42-b711-29f7f941cf5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791b8f02-1cb9-415f-87b7-631990fd853e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "493f9bab-0358-4082-ba72-fddbf6708adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe375ec-6211-4a1d-8cad-36dea9a77374",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9fc1c3-f02b-4fbc-8c62-253ad87c5fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3747f70-3357-4223-8cfb-2eebf90e073b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cb442f-26d9-4580-abe6-a46e80f9a05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5281b1b-beb0-43c2-99d4-84952603244a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219250a3-fec1-413f-b8bb-8ca1a5de2a5c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305a0ba1-01a2-4bf6-9577-70221ae55e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5d2723-50e2-4636-bf21-433e5b829846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c16fca-cb1f-491b-ae35-3481655cc50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73e71b5d-ec7c-4a7c-9fe0-8adee1b438d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189124fe-d9d6-438f-9e52-383d6b1cf0e0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f664fe8-4ad9-4122-801d-cc6609cb3076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb58705-814b-4a02-84b7-e70ad7a96dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe523961-cdec-448b-a995-d8d3445cdeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0596fda2-0c11-4bc8-b128-ca78a61fe0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd61cd1f-ba7f-4c02-bf18-a7dfa6fd8e2b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c786e6e-556b-45a6-a43c-dcf48db2fe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b055a26c-cb1b-475a-84ba-de0744022bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2893bf6b-a72b-4637-b9f7-031c6bb138c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "884298aa-e2eb-4ae6-9426-002848857fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4b508f-1fb3-4a58-9a10-21d0e33b28a9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8171af6d-5d08-450d-9f41-a162b418a6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53eea27f-2b8e-420c-a8ce-c39174cff17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdef7c7-86c4-4e59-a444-1262967aa456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3f75df-6599-43aa-978e-23488c87732e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0d370f-3f93-4eb1-91fa-ee38a275b6b1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adf31a9-b9cf-4daf-9807-747ec3db4d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a546b2-94d0-49c6-ace5-dbbe7ef00ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a75957-3f9f-4b9d-964e-767c99b50a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4c94612a-509f-40e7-99bb-28bc14ddf5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99263cac-524f-4cd7-9cfd-e4e7a730c9b6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae452af-4095-4706-99eb-8c9ad7cd0260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc9ad042-d384-41fc-ac88-d0915c77ff33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ba0df3-2c61-49a9-9b9f-f664d517e030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd13146-3170-4879-b64d-f2da44a51ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c7fa9a-f940-4b8e-86df-e32292723f08",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95fbce5-c728-44c4-b809-2352fa4f1d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2429e0f-238f-49ef-956a-3b34d79ff658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a14465-f245-4a6d-821a-3d3140e64fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e582130c-39f0-4941-9f8c-d4051284a426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c0f95d-2c39-4173-bd30-b5e03e2e0b60",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1186aa4a-51f1-45bb-8135-51c4b90f3799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9863c44-9822-4206-bda5-01fb66fd1860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b86369-4c94-4388-9551-a95592afe77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac37d55a-5397-492d-a8bf-fb3f1eb13ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149adc82-846f-445f-b328-c56ee03ab5f1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7468c6f1-d26f-441f-974e-26da78023d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a129a9b-a88c-4555-b3bb-0e257ac27681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55ce8e8-f29c-470c-bab6-ce222f207dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed85a50-63a0-40fe-af37-e66e2a7fd272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ca911a-2854-4762-8fee-4792c6966842",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42591e36-46f0-4630-a02b-7cc26c9305c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ecbfdb-cd33-4f97-961f-abb561cdd556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727a9379-f1a8-4662-b28a-cc5a54dff40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca61a8c-9306-4091-83a5-d17138c27667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa4e854-5d74-4f35-aba5-24da50c33cf3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523720ea-ca78-4979-9480-bb0adc2ee7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91adfe2-c973-4943-a720-45953e408e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8605b5-fa05-4338-9400-34cc3d8005b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cadd2de-65c3-43d0-9e8c-57904448088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243181c4-1b7f-4b17-b96e-e0aa073d643e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4e7578-cb18-4bf1-96ef-6b07362ab52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6575a1f2-a518-4d6b-b1f7-d9d31b94667d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5697498-ba36-4e41-b12b-e94edbed68cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "63da12d6-a05b-499f-a233-8cbc720d5c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6255a529-b8f3-4196-9646-8f2f9ea5b8c5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42e8bc2-44d1-4bd1-be93-5a4b046ad14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf961dd-a6de-4f39-b1f2-6531760fe4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8140f6d2-c305-4a54-97bc-db116dbda09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f120c509-29a3-4ab4-a9ad-79820b4df3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fc67ee-21de-4333-a3c5-21ef56215837",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322beb2e-d46a-4b06-8bfc-e768f86e7584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66b013c-81b6-4bc2-8b0d-88d70790aacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5598ca7c-99f0-4d3f-9a50-ac77d6a14dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab068e8-2b58-4913-a088-7b31e96e0f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b79510-9fae-4e0c-bf2a-1e50b3a1c7b5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c146685-ce24-4dd8-80f7-f7a7f72fc119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9941b8-23e3-4bf0-bb20-9a35bbe783ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928e26ef-8c8f-451b-a48d-c87a6e70ff5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4271aa-4fd2-423f-8415-d19db00a654e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b494c0e-128c-4401-9921-b1b05a4e460c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed3dfd9-49b9-46eb-b803-f2132e61d95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755eb7e0-eab8-422c-a499-bcf472e28ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5f0492-cfc9-46e6-b0ac-99721e291d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d14b3e4-badf-428f-8fdf-6b13de5433e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f80745-5a38-4887-aace-d3b918ab9947",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d6fdc6-7356-40e3-adbe-27dee04dbf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed4a661-0a14-4856-b070-e9962cb104a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2f33a7-303c-4b1a-942c-bf18c27bf405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1af2a8-05bd-48fe-9899-63de8589e8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c683bab-bdd1-49fd-a7ee-ff79b7fe5583",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778695c4-9740-4c44-a3bb-6311ac1acaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c77cf74-164e-4daa-9431-af474699a52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6310e590-c8eb-443c-ace9-a2bf8a2aa0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "378a7f78-aae4-48ce-8a3c-a0203657988e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67e3179-b113-4962-b2aa-ae121d5569b7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b8a972-1abd-4670-9a63-9c40b4797182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c0aaae-028a-49f2-8f25-4b14ae627c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429a53f8-f822-47ac-911f-553975ae17df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c4a137-9305-4e73-8cd8-0d4b9a7b070b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c0d6f5-0b21-4373-ba44-e8f72fea213f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3296aaa-29fe-4389-87c0-bb1ab3eba93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82992dc-241c-4dad-ae8e-172dbb54eb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0999962b-1cc7-48d2-bd22-2d8835141d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4ba45b-1b80-4340-99c0-2a4220e1af0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e44268-7101-4a0c-9cb0-3e5f73785a28",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c76c53d-be1c-4ca3-8300-deef747acacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4755bd-d2a8-4268-8d0d-3d32ab1981bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd763b9-a408-4143-81f0-1af6935d45de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e2b1c3-41a9-495b-a8c8-72bc03c25158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa6d65e-2553-4c30-be5a-f15ee3b81a1c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8daee9-72bd-460a-8e18-0b8e80b56590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3464d9f-e717-444f-b7b7-23a2b0e528a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a45fb0a-016f-47ba-b900-20555d5d061c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b90d0dbd-c001-41c9-8474-956e072e78b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60be5a68-9b8c-429b-b041-ab6dd68f5de3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c1bfcd-177e-4170-9409-02fc40c2d25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4da1bb3-2e94-479f-8f7d-42f06e6299af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901ef172-4949-423c-a018-931dc7796dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21494480-2f14-4364-b6c7-59c7209fcb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c269301-8d0f-4bff-bf52-0aefe18fa1c3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735897ac-ee18-4ed7-b676-cf71c2ec5699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95114423-539c-48fa-9b1c-b0ee88117335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4954668a-3d0f-4787-a10e-64919a89ce29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c3da97-9e2a-4c86-a749-0d2f53d50f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0e7c43-8b14-4d9f-8807-dbfa2d36cfb0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fe3550-d583-4240-b890-2038911a613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce521884-e996-494c-a148-b8677774093c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b70fdb-80cf-4f0f-ac69-4f5dd5c417e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf90e68e-0e32-4be9-a17e-00334c393092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b53b6d-3d61-43c7-84b6-96500fa137b8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ccfddf-7c63-47a8-98cf-24758c87e222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106532e8-33ee-4313-8f46-1b57daedb179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc12110-7874-46db-a176-86dd1b525297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "45879978-94ee-414f-98bd-b9af537324e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b975cc-2064-4423-ad0f-87aa790a04dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a845ca4e-e965-46d4-a6c8-29f58fddb47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af224d56-b33f-4fd9-975f-c5a4eee4f652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee357e0-5b26-40a8-a30d-1634745cd379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06015582-6f65-4b89-92ac-fc9becc51f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca95f8b-d68c-4143-ba12-cd629632a83d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06627d07-e77c-4d64-a9b8-28078cecc950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00888f9c-e96f-45d4-8341-c55903d709ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013d518d-cb80-4912-bcd5-5a4782390a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1186fb8a-2ca4-4f83-a3ac-96f617a8186a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a0d5e2-0eab-4eec-a227-22d0ffaf5851",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6be880e-dd1a-423c-b9ca-0ccacecd2c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffd2338-ed5e-4105-a346-e3dafaec938b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a4ede4-aa86-4479-a4aa-d8fc0f83243a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c99527b8-517f-4e8e-84aa-b9cd5911201a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cf3da6-963f-4129-beeb-5423dd9da870",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0648a0c4-e1a7-4b78-bc62-bfcf65d4c771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39681dcc-e140-478e-87e6-c556e55f693b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca661ee9-3575-44e0-93b0-86355c345e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ce735e-45c1-440b-a100-8d440d9f8bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33264188-8793-4331-a7aa-477f4caa0aaa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5bd630-5d50-4ba5-a990-c59e1cb8fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f9c1c6-3a2c-45a0-abf9-30fbdf22b87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120ec3e2-6387-41e8-9965-1e9a6aee3880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "acb10fc8-6873-4108-94fb-e69599119e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db70dc6d-b598-4f33-b85e-db8ddcc733ee",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c5b2c7-e1f6-4f20-946a-368663df280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f373d4d9-16af-4a6e-8cc2-a15084d622ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e80f28-cb9b-4bcf-8486-d09d0a8428b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb86bf4f-bd0d-4e22-a7d7-a0240cb28a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b2ff62-d3e0-4bfc-9b72-08c1b519d90e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b030b260-1ef2-4efc-b1a7-97a7e3200e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d15b7e-3945-4671-a0a4-17804cb67959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c1b7a4-f83d-43ab-8e95-213e7f852c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd6baab-d8dd-4371-9d01-3ec99c01f1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958865cc-5226-4d7a-846b-80ffd1f79bb7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fffd741-ea2d-4ecb-95cb-349837aaf860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17465b17-b52c-45e0-a89c-625951387e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9b1b59-bc37-4684-b8c4-420bc64ea3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "875abe1e-0171-4af7-8e32-ca34bcbde191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f90d347-cfa0-4df7-9832-c0f2a92e11ab",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9752d8-1c6d-40c1-96d7-430e4ca2e3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a1561e-df77-4754-b354-3bacc4be1f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e972a9bd-7517-4c52-ba74-e06b9db1bd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56fd126b-793b-4945-afad-c40abfaca30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bf04d6-976b-41f7-99af-23010a79a534",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353612e-e3b0-4777-b289-9f97d42688d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f257f078-5a86-4f4f-8ece-a9ae0b21ffcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0d5645-1600-49a4-8b25-5a61083daa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2580e803-75f8-460d-a8d6-3bc4e05deecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7b7875-1b25-4a7a-8288-3fbcec0fa375",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ec6d99-6bb8-41a8-8e94-4bd87849b7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efa3cba-1abe-4573-b16a-16af14daafd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ec1dcb-e141-4d7e-92d8-8cc91189653d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8db466-1d0c-494e-8a2d-13d940a7d014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60aa4fb1-41b0-4447-a8d2-13aeea0ad3bd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c74fcbc-309a-4097-8a9b-69c56d2e1e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c93eed6-2c4e-42cb-aed4-44484e4246da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f9cf46-0d2b-45dd-822b-9e34dd4d4da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fab2f7-cb9b-4ed8-beee-83ca9af2cc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb367b2-da00-4bc1-be34-8c8f2fecba95",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce6df8c-60c2-4780-900f-a7ba8e7cd5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf4a172-d164-4096-b2bc-55b1f8d85bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70d4a5d-3b5d-4d26-af34-9dc6967340c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de3eddfd-7bd1-4412-8067-fb8a3da3f04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba7068d-9fb1-4aff-b82c-9847e9a7114d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ca86a9-915a-4623-b3ba-ed2f164ed262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b9165f-4220-4245-a055-7eed3fb20563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b439870c-4ebe-4074-bbc5-58d5a9bae9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77fa265c-eef0-4aed-8946-bf4be0363a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a406dc-4ee2-4c54-a751-98ec271e94b4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff81737a-b1d0-4af8-a8ba-ba30fa29834c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3b41aa-c76c-4ea3-a96c-74d001239524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d125aeb0-d543-40a1-a15b-a63e9098982b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ac89d2-18a3-4624-b905-00df35257dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a600b7-5b71-4ff2-bd73-a8918f30bfbd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d427e311-2020-4d4f-a520-43e9081fd2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7179ef31-b921-441c-9175-b1591b3a7bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9fd9b4-127b-453e-8124-974d7fad2429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1740751-ed25-466f-9283-b4753c1cc9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddee03a5-4a09-4c10-ae85-78099cc91825",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aacf04f-0470-46ad-a992-55ab73e02bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85054f6e-eb92-4542-a9fe-cfb2f8633cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae90a92-c4fa-444a-849b-b922625a8715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88104713-799c-4756-a61f-c20e9932d828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f684aeba-2331-4d13-90ef-4de83e535600",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e18bfda-01e0-437b-8114-0fc86bf42553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfde5ce-4117-4174-9fc4-765bc62900ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c74f8b-dd2a-49e0-a52a-27a649b1660d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c7b827-069a-4f28-acaf-791aad7ba8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8fa042-df03-4339-a6cf-4d1170a45605",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f533f44-44e2-4a5e-94cb-c968cc1c9277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e402cc8-4926-4b71-ad87-f32e74278403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d4c844-c509-4a64-8767-809cd687045b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c13221a-6d0b-4da5-b0ba-56ed169703a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0a463a-b480-4127-85df-0bb3af50d5c0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd1bdc7-c08a-4b26-9a68-b6cd120ab9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bb47f7-15a2-4848-bfff-806ae36e373c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2576aa-6f39-4e72-bc4b-4c1308ba8885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e04f1071-4663-46ff-b860-8c74401ea6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193108a4-cb9a-4982-8436-feb236f0863d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc272c40-c0da-455c-9655-d93288de18a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87eb9029-689b-4262-aabb-dab5bc76d5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b206280b-6f0d-48b4-a238-47b9b3e9c03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c195f5-4abd-419d-8408-a1ab1044ba09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfa512d-2e37-4f5a-b77e-f9605728a631",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fef4090-470f-4b43-88dd-92d8b00664fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf1db66-7b6e-4a11-b07b-35faf4b9c132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925d7ffe-3b3f-4b3d-9520-0bbebea9a824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e03f81c-ea22-4bd4-a4bd-1189803186fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f22857-b6ab-46d9-abf1-dc0deebaf204",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae27e42-e4e4-442a-8b16-7b006b17b811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e0448e-5003-42e3-9d6d-99d59e449f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76edc8f-fa38-4e63-9a12-8d67cb468397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63d9143f-6c1e-42ec-8922-cb036e36b50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da41bbe-3eee-4c0b-a831-b8226498a25c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b4ae17-ca05-42dd-8fa9-fde2b069c3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f43696e-8e57-4c6e-a7a9-8d2cb2646e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e378138-c990-40c6-b169-0a9ca310eef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa6acc9-99df-48eb-8706-041f216dcb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ba3402-a788-4a94-849f-92e2694f26f7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8330bc-4238-4f66-ba14-928d9434c696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac9c534-b768-481f-a495-512feaf51033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1d507e-2b7e-412c-bf46-b14f776d1e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4f8478-f711-4540-a5db-29323bcf12d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763e938f-d08d-4390-9c7c-c914836f4e86",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfab8b5-d41f-4c36-b92f-10317325382e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ce2246-8c3d-4ac8-ac27-4f8dd7235713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c13de6-924b-44ed-a9c1-2a365b8e6c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c3720c-48cc-4db7-aee7-33b42c53db8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9078ca3-f47f-442e-a0ba-bfb7deeefb21",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fa3e0a-2ccc-4781-bc8d-31e88f14c92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2a73f6-a365-43e7-be9d-735486f1b8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ac8ab7-62ae-4ebb-8065-a3ad714ce536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8df70b5-f160-470c-8bf0-dfd4d6543d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc17cbd-bf41-48e1-bc96-1e76d1d46721",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5913e435-596d-405c-82a0-3dbc76fabd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8ae89d-30fa-4a8c-a9e8-d4b61572b398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19808d60-5e74-4d33-a519-1cd49fc3336f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51c16ef1-df49-450e-9533-e41ed7e0ff1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c126f3f-11be-408b-be4c-a3ff1b0ded6f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9f04e3-873a-4dc5-b4ee-ff28143e7187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af6cf99-57db-43cb-952d-ec9fb9abe38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e64f01-6abb-4033-bfe7-fd799d2116c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52587db7-a990-4c31-beca-b97cb4f37ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2031c9-0968-4d49-8df4-00bd0f86e90a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefae991-22ed-4e87-9a5b-07ff94640673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b11fc41-c582-4022-b8d9-a57bcc910737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4235057-296d-4ce2-b44b-450654219a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38b7d779-1287-44c1-a3c6-382b2dc7cf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04427ea0-345d-48a0-9424-57da0e600d8a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8551610d-e81e-45ad-abbd-922d273fb128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e23fc9-a0e1-4d64-a5b8-fca418c48cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901a6e56-d91f-43ab-bb5f-3eef1962bdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4575a2c0-d2b7-4672-823f-2895b9438935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b78494-6ae6-4190-93d8-d067e5b38dd9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fdd15e-704e-42ce-8454-701f7199493b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef344551-14ba-4bab-a804-1ceb641f95b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdfce33-7cea-4b45-a21e-9cbb132d3044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df0c1ccc-881f-422e-9023-da79d28ff6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b157e33-7f2d-49b2-a031-2907ed8f25d3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed5691-2da5-42ca-8fa5-d0e9829419d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c607909-dab0-450d-88a4-5d56d42b03bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f69ece-7e4b-4e7c-9233-e2cfa8742ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "34dafe88-6b61-4b3e-9786-93e074058dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9827b3-da71-451f-bc7b-165dead4f59c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c950ce5-62d6-41d4-ba5f-be2a96c0987b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e49d0d-edd4-43bf-82ad-b2ed4acee1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc242f2b-3dd9-41a2-99d9-85f5a3be2b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2d4b3e-9e89-439e-a97f-6f2adf24ddf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5d02b7-0890-48be-bac9-f183cf6dbb2e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84a39a6-71a0-4679-88dd-3bd2d4543a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438ae10d-d1f1-461e-997c-d9b4ac34d98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c30ed5b-fcc8-4918-9099-4f62bedff506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2da1f3-c932-4ce2-a571-770784397135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d02a01-0039-45ce-b86c-2d3a586cea4c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de774106-dba0-46fe-bde3-1a162aa7059c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c95e0537-4c7d-426d-924f-9d91ba506f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff0b2dd-54d1-48ea-a80e-20878210d1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "631cb0da-3037-452f-9003-d1e5d38b757e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6534f4c-dbf9-4b73-86c5-0fb67e6cd7e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd2a72d1-88c1-44bc-afd4-6c3f5542c6bb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf30c5f-2807-44e4-8b89-ede742228278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8eb35160-60fa-48d4-b36c-6a94f9679a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f672a9f8-2678-4b40-995f-c33a489d7d59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "975050ef-d38e-4b64-84ee-e913f429fe04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1121b1cd-2861-436e-9836-806e904bd5a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f06fb89d-3383-44ed-ab13-f795d62c24af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "664a8ed6-96b0-4510-b830-bccc7c8b3a9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa2ace57-87a2-4160-b545-0fe84b86c754"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bdc63d63-28ea-4f4f-8856-1f71e8e29ed7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "019763d1-bc5c-4089-bc99-f61ec4cc9407"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60cfa47f-cfa6-44ab-a89c-32a842315045",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04fe1038-e6e1-42e5-89bc-b0db7020e9ad"
                }
              }
            ]
          },
          {
            "id": "0569b9e7-0e47-4c68-a726-9b5d13e6318b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55fc2191-7a3f-4fd3-974d-e5d6d8dd3313",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4d5d01b7-9b9b-452e-a22a-b99662163e97",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80be483a-70a0-4c5c-9732-67dcb3d66c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b4a3b721-2e9c-4b8a-a5bd-ca0340bdbefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340183b7-4c8f-4ce3-8bc9-fe7e8f14b531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c6bfaa-0f93-4c78-888b-78bcc905cc09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0bba72d2-1c96-4a80-8149-0e0e4b6284d4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a161be51-4891-44d7-9ba4-e05bce274e59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07171262-ac69-495f-8f3e-5f20971d6ee4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de7b4158-30ff-4b93-b390-5c3de94ee4de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e4d35b75-bad2-4dd1-b608-1b994329f063"
                    }
                  }
                ]
              },
              {
                "id": "5c781ec8-111e-4a1c-8af9-75c217c14139",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22281b55-17db-4cae-af19-e49b71cfb686",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03df99ce-b3fa-404a-9556-26a09f5aa022"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e46c02ac-ff5a-4e20-86f3-a1dcf88fe1d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc613a6e-a1f6-4df5-89b6-d0d66275d8bd"
                    }
                  }
                ]
              },
              {
                "id": "80187fde-d7d7-40c2-a88c-2d0ac9cca55c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0673e698-50b5-47cb-bcba-b9cd9f77d96c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86033e9e-0247-4280-bc28-40dc3aef7490"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9de0619a-c97c-4611-ba5e-3bb6e96c38c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9d6be75-0f1f-4cf7-a0a9-ed5ca5018943"
                    }
                  }
                ]
              },
              {
                "id": "5b33335f-35ba-477d-92b1-781269d5715f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6162c864-9e9e-4337-b965-c322f5c7daa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49d47438-4308-407d-a9bb-e2ea949d0ea0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25ada4a6-a9a9-47b2-999a-a0a74ca8eccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2f82f1a1-4aac-4164-b60b-fbaab9074ed8"
                    }
                  }
                ]
              },
              {
                "id": "a3a1ef02-0664-4eea-a707-dc64617b0baa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb499218-6706-4986-ab76-f4fbfb2302f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fe74136-a702-49f9-8ed0-0202dfaef8b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee0e7a31-0376-4800-9884-7be0ea1c3848",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bf8a1183-4b8c-4374-9694-7e6c4ffd43cb"
                    }
                  }
                ]
              },
              {
                "id": "d6cb9eab-4df4-4739-b767-06066ea54994",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f9cd8ed-598e-4ed3-a74a-eb37f8582f8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdca6d7c-9580-4a63-8360-2846bd403bdb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b4a25eb-6317-4e1a-b5be-da174b1de558",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b3325cd8-678d-4259-bd12-5a19dfc5b7d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8227e824-f2bb-4c1f-adf7-32da0959595d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "313b5a94-28cd-46f4-b099-dfe08e732ee5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7fe3acf-b1f2-479f-9e82-bddb1031209c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af658bbd-9439-4776-b518-8f2ee9bb7292"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62e79865-24c0-422e-99c1-a50c032e2ce4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "37c4dde8-98b2-4de5-936d-fa77c7c8a9b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adb73c16-ca60-49be-ae00-76f3d282a79c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74fd9cdd-89cd-46a9-bf64-2d8688762eb4"
            }
          }
        ]
      },
      {
        "id": "90d7f0f8-afd3-4709-9b33-52a397d8b89a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2f2b4d3f-ba41-4c6b-96e9-299aae173936",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc3db49a-76d6-45a3-9c92-4eab9b07448a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ff7cbd3-b5c4-40ac-be7e-b035aeee65af",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c1e5c5-2fb5-40e4-9b99-09e6b22ff2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386ebdbf-ceef-42df-a273-394233b73a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e50c0f-0a05-4491-9cd4-05092e1ed18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7898bb-4a4f-4162-bb25-0f6745929cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd560ff0-44d2-4a17-8fcf-699ff076f27e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c9cff9-965c-40c9-991d-d27b52478ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dd3fe0-6c4c-49c8-a21e-57143d8b855f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a716816e-6190-424e-8cc8-dc6262244a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5cc309c-7e34-4693-a83b-c1fe7dcbebcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e4df41-b0dc-4b04-9d4a-726ce3d481fe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1c2494-cb36-439d-9be5-ef90a5a7fb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecabe599-44ba-46f8-8de3-9b297c5fbdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a926cbdb-da37-43c4-a6a4-80c4b99b274c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "879b9805-956d-4495-bf1a-edae0634d235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049286aa-d40e-495b-a891-12d09cc1148b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fbd6d8-cc9c-4254-aa47-75077b25f363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ca0b39-7301-484b-a616-399604f5520d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c22952-a488-46bf-b0a5-99d02bd7c5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36602048-f685-4c04-ba39-559f7c3baaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b564d5-ca77-4763-b095-e18960494aae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437ebe9c-b697-454f-99e8-24795ec7dc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6be1a62-f9ac-4d62-a16a-3157fec36b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924411aa-f5f9-4f5f-8438-7e18c0efaaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb918c28-8b23-4e67-a6ed-7a710b78f920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d435ccd1-313d-4c85-b9eb-b26ed3a8e96d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab918fb-ebe7-4df0-b7d4-a933824426a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358ba48f-7616-429d-a74f-ba3fd2332ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cb5d26-a0b4-483e-9ca6-90bb6b3f888a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7600bd1-2525-4849-9e87-8aded48d12fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd0ec05-e6ce-4326-96f4-f1ed99b870f5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd70f14-6bdb-426b-89ea-c21215da64b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d413ba3b-8e9e-4d2c-9c63-afcc001f0d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1ba8c3-a8b8-4963-9ed5-aee0713ba27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5118190-3bb0-4013-911f-1255ca37db5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec31b7d-bb68-4cf9-a510-0119ab476b27",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a520d7-bfa0-4836-b910-1ef97c1462f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4a4c24-5a8e-4271-bb4b-f40913023882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5664c559-f227-43d0-8caa-4dbab57bab30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26fb0163-b120-4bf8-80a6-207996d04a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde9ee31-5d7a-4bfd-8291-8ce4be83c5e9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23999cd-8dc3-466b-97e0-d975ab7a0074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba3fc28-02ee-470e-8168-c219691a9348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf47d543-1c24-4d98-928d-824cace935ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aff575a-4178-42a8-aa9a-6e1c28a3f22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa92d1d-d473-488f-9ef1-6c02b621055e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c5fe31-2b52-4ddf-a1f0-9daf94bdb9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f98825-9722-4499-994a-fcf2b8cceec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54561f51-5cac-4390-84d3-3951212e6815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "619fde25-659b-4a02-974f-5f2aff0a2e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8967bbe-8f2b-4ddb-823d-6f7d08aaa2d3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a95151-4a2e-43e8-8bde-6308be674b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ab8419-e078-4322-a680-b44cebf5cd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae15a3f-72e0-4857-9222-0c0077b4a9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f21ac61c-1d0f-4a3d-be4f-a5924259ac32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e4b14c-69c5-4726-9508-9ea542e652a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ee671f-c1d1-4802-993e-315278387dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1168b579-712f-4a81-99ff-3a82c951b994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db56883-5b60-4880-92ae-45c04346f27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8543c1dc-7fa4-4749-8510-b821c2458d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f57361b-8d32-4610-878f-2d07762076c0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fcf674-602c-4d15-922e-5cc8eac10d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a45512-4910-46a4-a422-86f538382172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1dc86f-2a21-4c3b-84f0-63e49b419fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17648bc4-6cbd-45fa-87b6-a5d3f966dac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f251811-d48f-4b5c-bb7e-675afc0c03e9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd54e694-9435-4bf9-9297-b0dbeda0e5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b602df23-adb7-4dde-80f8-36f5366a3fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f84272-bc7b-4da3-97bc-0d8bd8427e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5e8773-ab85-4362-b0ee-bd9e2292b4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11c8db5-43c9-4fd5-af5b-a442c0e8dee2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5bd5e5-7c77-4cc5-a7ed-2df75c5692e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2a3342-a546-4f01-8906-7b763f874237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81aa2115-563b-406c-8965-928a2debf728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5a9d87-95e4-4248-ba51-45e28717b7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539cae71-9ce1-44c7-8dff-9a648c6d2f4a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1464390a-8176-4b74-90ae-4c3af82b8539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4af375-727c-4a41-8ce2-1b19060b9852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f7dc37-862e-4558-a86d-7cd18b8a7b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ca4485-0b3e-49e0-a784-aeb08195483f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13a6ec8-a7bd-4e4e-b43e-4eef8fe0a395",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1ddc19-21c4-4a4d-81b4-983bc2c264f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3727dc-c4bb-47ba-a710-b48fa9fb85e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ded4bbb-7e14-4fcd-beca-59b0aa2d894d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "db81e238-e0c7-4c67-8f00-a2391c826f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482db0f3-d81b-478f-a6d7-87db21814f8a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edd418c-baa6-4861-af8a-b8d07b892853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17446c61-93c8-4582-bfc7-676769084b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e33a97-ef39-4572-a8d9-c8fb71657f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c439602-0c8d-4d20-9223-e9195748e49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc76362-27c6-4738-bfba-af3e3b4f7738",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e5b8f4-8383-488a-b6f9-0f1cdd2d013d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2854df-12b5-4bf1-b883-f6cc3e0f654a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe54c05-f976-4cb5-817c-fc466d880497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6431ee-9beb-44e7-97db-acba7dbc3967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fb67ec-9b00-4098-8678-903b56014d93",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0f3e5a-d581-4d13-9592-ea28579b9fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86f247f-93af-40d1-8b9e-79f51482a18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aa3c8f-e36c-49aa-a25f-14c360c74819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad5844e-e66e-450c-9970-a0e3a4581cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06549916-3084-43e8-ac61-b7f86cdcc5a8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e4d483-8073-454c-a3a1-58399634db33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145a322c-698a-4ee7-83c8-396df76375b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6548d4-a551-4ea7-906b-47e4d83a3a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71ea077a-33a0-4d95-90c5-faeabda63824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c82cc26-5826-4d14-8263-7c2f27be8793",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57455e76-e77b-408c-bda4-36deb5d49dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf019de-dba7-4ac5-84f8-26cc651996e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94acc78b-5049-4017-834f-40606cb2c969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ee9b38-3734-438f-b23d-e4f0d867392b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54198ed-ca18-4284-ab64-c26e0c422f1b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3042e38-df43-40b7-b5c4-adf2561a8a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3730c422-13f2-4ab0-9e07-88e21b5cad63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5616bf64-04a4-4c20-8ac1-d1b01aae22be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52423d9a-01b4-4320-8daf-866b7b8f91f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6dbdce-4c64-4dde-9b82-50e806868bcf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8bbc75-e00f-4d5f-9f47-1ad3c39fed8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1af2766-ce7f-4636-98f2-240e459c2dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f39118-47ed-406c-aa40-a965b9589eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "723533ca-bb84-454e-aa6a-5f1b38299b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afdc760-a527-4346-87f9-f92130003a0b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4f923d-1b11-4ce7-99bd-c45bc4dda3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867113a2-9497-415e-a4e0-0e19a1269c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617d6ac3-e641-4df7-9653-15cbe70ebf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07c8f4c5-ec03-4518-ad89-32cccdaec631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1bae54-fbee-4509-957d-983e8824a2e4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2cba00-e097-4c76-af4e-8241c27fb42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bebddc-15e7-401e-883d-e22e028aa10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788f543b-03a2-49bc-a057-ccc0dae9e804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e59c5d-c331-4ff0-a131-3cb7fc92277e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b200d918-7c58-4d0f-9146-fd0a6b5c36e4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e87f12c-68dc-4854-a3a4-c8e3f10e246c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da560e8e-2ad6-43d1-9377-cd2e204d24e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e20ebf1-06c2-43f6-aaaa-685f371f45e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c295e3a-9ea1-4921-b3af-1a1baccfc9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bc5c1d-04e3-400e-891d-2de2971f7478",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ffe532-2397-4d03-bf58-4ad4281a0a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd041dc-541e-47b6-931c-c2c33237af5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b905a8-2695-406a-aacb-52b766c2dbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ed16ab-94cd-493a-81b4-16b26f3e4018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39d54d6-92b9-44ad-9878-357e201d0c16",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b1b58a-c19c-446f-9fe9-f2f26f19d27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e91d75d-fc7b-4a81-8b8d-f90885ad7ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bce64c8-a3f0-4db7-b7b0-3eced23667e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff57a248-4e5e-4852-b303-fbf3f01aa856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35105762-a7ff-423b-8748-d4f2c916dbc4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e063a5-6b69-45b8-9023-043367e3eb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e8e86c-c42a-4586-8792-4da8209d69ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7ad8be-4f29-4223-8a23-4207fa1b4611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f357a3-fc66-46eb-b2d9-e3c758ea0043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673608b3-44da-4ca9-87d9-616c580bd49b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe429361-87f0-41e7-93a4-381a69be085a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3d7acc-cd92-4151-9a63-bbeb0440ffe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cbf715-ea93-4610-88bb-dfbbc5b36c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44386e19-d579-4f37-865f-da484d9674bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d3aa97-0697-4a04-bef9-bdb7a68dd500",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8d6117-f553-4bde-8989-630b0d182600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1084f0-2aa3-4629-a7eb-25c509206821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34cacd2-9382-434c-a9f6-875f281a541d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d48b58-1c27-463a-9004-275d391eaecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418d59a5-dc19-4791-9b7a-95f93b48097a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474e82e1-6469-4d5e-a87a-dad97a9067a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7f5291-78d2-435a-9703-26e4ad63e161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f0a2c4-257c-4a6d-b0b1-de226c713efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c12ce56-77bb-4f12-8357-ce6a2db2de33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb31b3f-0903-45f0-869e-f3dcf1e46253",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2259e1-a88a-41a4-aa35-51f41bec024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd7d878-f469-440e-8051-5e000178a324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d0174e-c497-4816-a18a-b4ae0baae9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c612f2d2-3303-4a35-8e42-1c24edc4027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3cbba4-501e-437c-8ad5-e6b651daf7c9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7202f3f0-757f-40d7-b9ef-29368fb38d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272f6410-533a-446e-9094-67e0b70bfc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9070d6de-5a75-49de-96fe-b182c00265ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d46771-3a45-4052-baf8-3b1a1d2c7b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbf22cd-cc04-444f-8d29-4d5febaf2757",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6dd0e6-d1fd-431f-a45a-4b9a4b751e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34594858-7d0d-4b0a-9751-a1fb73183126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ab010-fe15-47b0-8441-43968b2f2167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0ad993-2ea8-4856-bfca-3710b3f81211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d154a15-763c-411a-bcd7-42f608a92ec9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925379c9-39b2-4ad9-a144-b28f890024ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c7e22c-d9ad-4ee2-8f0e-916393b6b8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386aae27-3841-4da9-9fca-5abfd26a447c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6811a405-5b5f-4367-816b-2aa96ac08ef5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a991f86f-31c2-4df7-89a5-9ae6f1ac73d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71c8e637-3a0f-4022-8201-fab8dad18597",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5472b8a0-3e50-43d3-9dc7-f6e9f2bf77cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "38b985e4-64e1-4fbd-87ec-a1ef99d0f1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a96a06-4629-43af-82ab-58c5e95a5f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6f5383f-d268-4787-9564-b8a380200ed0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e5c2cbe-4d41-4286-8de8-e1f8c17fd516",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54aa2780-6c37-4aa8-8b3c-4b114919cb89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12936e47-d167-4860-b678-3348df067e69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5be9b5d-103e-4aa3-9500-5953af789857"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac1f782e-bf0e-4ef1-b2a4-e4eada490f10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "48bbd39b-bf72-49c2-8266-283f2e25e4cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ce48b8e-9394-4afd-ae46-39e0f705f745",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1f3ed4e-8433-41bc-9feb-3f2669bf4294"
            }
          }
        ]
      },
      {
        "id": "25e18f9b-f709-4c93-88f8-a2ef799c38fd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7b37ea6f-a058-4eca-8aeb-30bdc212ebba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed30247b-9a50-4fc0-8192-de8dc33c18b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80936f2e-a865-4271-b298-3afbce64f36a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d4d6aa-e1fa-4797-8e7b-639c89be0f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2baffd2-0de8-4cce-b815-a54f9b0e25d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cdfa58-8f5a-482c-ab7a-d268ac6304b8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a672db-bbe3-4d02-a0d4-617709e4bd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489becdd-22ce-444e-b310-e2ccaead1ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f3828b-1156-49c0-b227-cd48b3427fc0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b91a64e-528e-4cfe-b54a-19de40aa1b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e035104-d563-4e5a-a848-cd8bba2b08b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425315ba-9c73-4586-8e43-1b046f4ebf63",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786b51af-ad16-4c49-a5e8-1170fcd4dfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e850601-ab75-459f-a602-bef4c20f9e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3c15a6-8034-4d91-b4f1-aa1a958a01b7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ba6655-a1de-4c17-8769-105b4f70347d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29134c87-2147-4bd6-9c4e-8f85fa6abe8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcbb33d-1748-49da-bdd5-325b14aa4a67",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf272cdb-42ce-43c5-acd3-efbc642718b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c136a36d-56aa-4440-bbe5-75780d177709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c7d8ff-43e8-4b91-8b8c-a103bef75936",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66976a65-0f75-4551-ba9b-e55d2a8cf4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69914dc2-7b93-4709-822e-fc91868c2953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf198f84-f14c-4abd-b7fa-36ade299f317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb00b758-55d3-44dd-bd87-dafa70d43c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87fb20e-c62d-434b-91cd-c80ba0bee6ae",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8a71fc-5975-4d7d-8996-2568979361d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "355e00d4-fac7-4551-8440-520274bcca5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4df379-231d-49ef-bf4a-3aa5e8350acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afb33f1-108d-4445-9611-e65c08e41129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43c0003-f008-448f-bb81-2734de83cf1f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078cccc7-4ef1-47a7-9b9c-261a767ae361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3d7ddc-2f6e-4814-9704-50e81a1b1db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eae48a-2863-48c0-bcba-dae7e21ed86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0b55d5-d106-4c51-9e34-40868005bb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac73f5e-1c84-4740-82f8-679908107097",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710f0907-3d43-41e4-b1a0-b3db7a9ac5eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d0c680-edf7-4212-a9e1-afa5ddbbbd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7428a7f-f845-4513-9c44-5312dffabacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99605cf-4e56-493b-aed7-0f5e4a0ecc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c07ab8-a348-435d-87d6-e6b12b6d952b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb01485-d4f4-4ff1-94af-ff60bd3a0090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8773aa7b-b0b0-45fb-805d-7dbfb093074e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65abe102-8534-44c6-bb87-b6e7c6be9c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4249ef2d-0dd7-4e97-b495-8001dc3b9e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0a083d-ea75-4042-a1cb-34e3f81c3833",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae36621-9a46-4456-a157-e92cd316c7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2b9f5b-2a34-4a3a-9adf-b4caf12c914f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a374dd0-8bd9-4766-98d4-66caaf13ec29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83ac320-3fdb-4459-86f6-e66c2e6ae7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14c6360-13bc-40e6-b35d-589a25208c97",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ef66cb-130e-4bab-81c4-434e4a1032b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd089fa-b6d9-483b-96e9-f1002b2ff1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3e63b3-5ebb-4e98-986f-72bdbec90ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40400509-518d-4761-8d57-4932e6ccd5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fc3818-c9db-408c-b5f0-4c9de4cb26a7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8b490e-706b-4904-81b5-6371d9197889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351a2e67-6822-44cc-ac09-98729bd8a42a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76124093-4bd2-444b-a74f-c253989891a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72eaa979-fc69-4da6-b9c4-30a9cdcc0d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4e245a-7f12-45e7-b950-a8c817903354",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b36d73-1bf9-49d4-89e8-12713b6512bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "685f506f-e013-428b-b167-029b930ff162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872a0fb8-ef8f-46f6-887c-08b837716b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51987dff-b5ef-4233-a5df-86848ab4e611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455399d6-31c8-4f1b-ae19-801c63e3e0ab",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef4663e-fdb2-4ea1-8d33-d57c0557bdc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3069f535-38be-4e86-94aa-ea6991be3228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c3cad0-c3a4-4acb-8191-c53c807a5ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05da56ce-8a22-4e9a-a9dd-6404d30ebb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8770d015-10f0-4298-9d8d-b4a47042fbac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c324c9-53b4-4cf3-bb31-a2f28ee48864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f84c1b6-b9e8-4183-911e-4e08012afb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2840a8f-fcfe-4f52-9d83-9a94e8b59bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a3b991-c154-4603-8595-7a64ebb6c5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce00868-56a5-4921-8f8c-9651eb034933",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a15579-eea4-4f61-ada4-91a01886fa24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825d030a-4034-4a0f-a4f1-c2ad9f51fe0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4cd8aa-231b-4720-83f8-66c2aad73f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89766744-2d6a-4025-a535-e44beb03376b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da55b06-1506-4de7-9932-2afb6fb9e9dd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f215ae7-b209-47a4-ab8f-d8adae46b4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4938da-e158-4297-ac31-9ba7c36933e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265995d1-fb24-4708-8b35-2282b22650e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e6fbe8-60df-466b-a98b-b61ff97f22d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a66f3d5-e0c8-47f8-9e8e-6cf261048be0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd6a3d6-57e6-4d37-a9b7-53ff125ebbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8c6996-3e19-4297-b1ac-c573b47b3aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8360161c-8729-457d-aeb7-88f47a658b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80f9f4e-ffd0-480c-84d0-3ac2b6c70d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cd7ade-aba5-4fc0-8b71-ef2e8f4b0fcf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52db700-c031-43de-963f-adbb699cbdf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ab451a-2ee9-4f4f-a334-5ee8806009ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48eaea71-2946-4149-843b-ad6e7abb25ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8b96af-6120-489f-87e5-36b00532f130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a67c61e-73d3-4703-afdb-85473ad54177",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c475641c-c204-446f-86c8-bfea7e985564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18455b28-125f-4a90-9372-923e66389ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be75729-ffbe-4bda-be98-5f6a34a389f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7996f93c-c947-49ce-bff4-28f8853c59aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196e4413-ceb7-43d0-a498-6444302fe5ef",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d258bffd-f652-4c0a-857a-428d555323a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3dffe9-8df7-452d-969f-eadb4586abc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd98c4c0-1cbf-4a2c-ac1c-b53de2a5cf35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4a2c7c-ff7b-4628-99fe-863187d3a8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecbdb12-a21b-4e37-926d-0991a8de35ad",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5413571b-5d4d-432a-9235-abecb42f9292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d61eec9-1e51-49f7-8a4d-b68713f79234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff08b547-fc3c-44fe-8459-134246f26843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d810977b-739b-4f74-aaea-50a0d9584b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8158daca-4913-470a-9fd2-78b76efc3b83",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e81403-eea2-4e6f-a974-3e7d43b56133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbaf2ff2-dc1c-40ec-81cb-1bea38609058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ef5565-2ca7-49f4-a217-ffd7a955b94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740fce7c-df57-450a-913c-acf38c364e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad74464-f82c-4c2b-aa37-961c81adac14",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72b5e8e-983a-4adb-aa87-3c3877bc8a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10782871-8e99-4360-b213-eef425d5c8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cf29f1-ae16-4dc4-a60f-7c9ade524506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7286a796-13a8-46b7-b5b2-4241356d6a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa330424-4cc6-4ca7-983f-e507c130d97d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd52fb24-f21f-43ad-9c83-fee03a8f7e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbc0996d-f7da-415d-920e-a5bfba0ea849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d467ae6b-8646-4f73-ab4c-8b53684a364c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271465e4-fbfd-42b9-a299-cc49c6fcc900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689c3b15-61d7-4d7b-bab0-7e98f84e9f6a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8adc44-22b5-4dad-8303-5f661edef208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed778af-d70f-404a-8398-9937f28cc1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0713ee32-0b9d-4266-af18-b6f7e428069e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efa7238-d8d1-491c-9461-4777477078fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d839a6-a9a8-41ba-a901-70be06797ea2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70032c80-a826-46f5-abca-511f7890434c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a3ab29-5c52-4630-910f-194c648705f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57725711-fa44-4a2f-bca6-1fcae61ddb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8d2ced-32a5-4250-a287-cec859b4f15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ba5c0e-677a-4a5e-a1be-96973b4d7616",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0928dab3-fe67-436c-9bc4-4133eb15b6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47abe1f1-65c3-4ee7-8b6b-d6d33b9c3865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf12083e-dff0-4d55-a747-814a436c72bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a70516e-2c4b-42ba-a187-6ae9643b9e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f583d1-05b1-49ca-a8f0-1261ede91ca0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8bd033-e494-4581-bce5-91d2ecab2104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "575f04ac-4579-4367-979f-c53cc2a086dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd0b7a8-1adb-466c-8d16-c07333ae7f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48cbdef-5dc2-4f42-9121-f07815dbaacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cee3310-66b0-48d9-8fb6-5668fd489ccb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a21a40a-7aae-4635-836a-822c1b27f428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ded5e3-189c-4a6c-ac05-ecb7f40721f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cbfde9-e3dd-44fd-8002-8262e6c2fe20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed11fed-3469-4bd2-b46b-48847de8537e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce994f4-03b5-425f-802c-03eddf306fa7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4843f6-f6f1-40e6-b57c-2f13684fe5f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e49acf-a190-4508-8c62-fa0c136da6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ff530d-d135-4726-936f-f9efd3bdc6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea205dc3-52b1-4190-b9ae-9c33945133a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77793263-730c-4a93-a2a9-c95909bb7ffe",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05eca6d2-2d39-405b-b63e-86ff610b4164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80be3f41-8b54-4c94-9972-d2c740bed409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c2c97-b12d-4d64-a7bd-1100f4de6153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cef0c3e-4335-47f9-aaa9-16915bae2469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a108df-cce8-410f-8efd-0e7ec7fc7e42",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b414f8-59ea-48ef-b67a-84774895b37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f67ad0-17b6-4fe4-898b-0a82d6007fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832845c0-d153-4796-8d5d-b7dec1afddd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e089961-4a49-4b6d-b2f7-30da656f5c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35291b8-8c96-4432-a726-d09e4816bfea",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7847a302-1ce1-4734-a73b-7df01725d838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91db10b-e931-4a3e-9a86-ddf952a5a378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfaccce-3722-4b15-809b-a724128e1bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d9e03e-c3b0-4a74-8508-de9755c2a88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b75b46-d234-4975-b7a4-f6f7e976b4a0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85162f83-5e23-4b7d-90e6-d14c179390b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bdddd9-278d-4133-820c-ae1627476f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6890577f-bf20-4b31-a02b-9182de2dc3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0a4800-2cfe-4e31-bad4-a76eeddb55a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0789d49-a577-45b6-a1b9-947ed82f47b4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6affb649-1f4a-4b5e-a415-f774f40baee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebd583a-69c0-47df-8880-641926691ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240c2e3f-0003-475b-85db-223874d21659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9e27e0-7c06-441c-a008-2d8ccc7c39e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8b8f73-629b-4b53-9c4c-a118965cf63f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6531a23-680e-42c1-9699-dc814889b3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3fc570-55f9-4aed-a174-9282ad92424b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85bd6ec-7934-40fd-8f87-f0fdb5a7cf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ac5c39-3e43-4484-8066-713f9b28efce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb70d7a-2148-4ef9-a7bd-e8f3cc4cedbd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c65f988-6024-4a8e-bc93-b9e15bef2091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3518a8-7c26-4657-a223-4b278b2efc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91aa5b9c-eb94-412a-a214-6db211d6899f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d200a2e-5eba-4e98-8c7d-514415e22b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd82d5b5-18cb-49cb-b45d-a0b094887834",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de163ce4-022c-43c8-bd2e-1be8148cfe40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22f7f45-38a1-4fef-b270-6f7ec4fde11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b536e092-7031-4042-b48d-663832ccb0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adda242-61df-4381-a948-dd5e38f157c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d636da51-1ec9-438d-856f-537e9ab5b7c4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b97deab-176a-456a-8c0a-46bb4ee9c487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5e5852-f016-494e-b68e-cdd8b81d5c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1437a1-9887-43c9-b06c-0b534b6a055a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9d55bc-655a-4a0f-bd3a-abdf880ff2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93fe163-317d-4bd9-a5a0-ce92416184e6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231cb2b1-7b12-4c59-8ece-07135e8c0630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ff9762-dcf9-4b04-9912-fe6817e81bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2624e5-ebc8-41b1-b3c5-113cfa200139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0614586c-7d9b-43e4-80c5-f96985569aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feebe88f-91ea-4f0f-b000-db26e6ca4292",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73036ead-2f97-4cf9-ad36-df1877f07046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa60d7d2-b371-4a99-bd12-e17ca6b999fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ca33fe-bc7a-4d3a-a9a7-4dbbf8bbdb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5e7205-2dcc-48ba-940a-95bbcb6be82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f688d059-adc0-4298-9d10-12aafdef4a68",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f43ce3-7fc5-4992-b9be-707960033329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c363c49e-b655-4164-b031-6a8691a5f6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d95a910-59d3-429d-abbf-9d7459c4bd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbcc966-82b4-4aa8-9117-dd83aa35b38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178d7bf9-007d-4969-9dc1-7d7e5e51bbf5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db76455-b253-44ec-9c3b-c673a7b107c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6e40b1-fa81-429a-9ae5-aecfec440693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49670d44-4e2a-467f-b262-55576da17fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c0fb4e-c411-46ac-ae81-bebfc65749fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97197c38-7e89-4b14-9ac3-5214e5368c97",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089580d4-602e-4c27-87c9-293c700e1969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bac3c34-3c12-4db6-a71c-0092a25b833d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ec6fd6-9787-4988-a09e-5bc6683c67e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb8d4d0-39ec-4a19-a454-0b812b881ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f781334-8681-4b1c-a413-a7cd9eb277ac",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d53c639-0c0d-4c6d-9856-f98628648713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45799d5e-412f-4b25-a295-4c29e449ce72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf51454-a2af-408d-8662-4a87b559eaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6d8892-7233-4588-b2fd-ec85c748b42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a63fc3-eddf-4960-a45b-49ed4199dea9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e69221-83a0-4b73-8387-ee20fa0d56af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ade536-9981-4285-96b0-7eadd6159eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ff10a7-8b46-46dc-837d-0908df5ab291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d2d5b4-b8dd-4a64-8769-52d9a7c99594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5615f2e8-6e6f-4c83-a52c-eeff2faf8c4d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c53b665-8d27-4c4e-a00c-baea4c0f8bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cf3051-f98b-4d67-ac6e-5b9854862243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112871c6-fede-46d2-a4e4-bc5b505d5422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c69a4b1-259b-4466-97c0-6dce2dc4d60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb44660-250a-46df-b189-16d0c2ef4e4e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a98a872-524b-47d8-b181-050db58bd5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4e2724-7d31-4233-8f15-ec5fc6013000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa7cf44-164f-402a-a6f5-31046dc0b058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be43e4a-56e9-44bc-b5d1-292c7f0a8f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d244ce3f-3ccc-4ea1-9559-8fbc922412b4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92d6435-5d46-433d-83bf-acae07c92041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ba32c8-6cd7-4c38-8d77-7574568cf070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bb8ed5-7f5c-4925-b51f-8efbe8fbbb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c3f5ce-f309-4e9c-b427-58bae0d8127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d70e0a-5f25-4064-81d5-dd72bf52ee51",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99aae22d-1ea6-4256-88df-2524da065fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17448487-ea86-48b4-acfa-ca64e6358bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b450a42-08ba-4295-a020-28447386daf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1736457f-7ba5-4e86-a7f4-2f0c62ebeeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071cafa2-ac0e-478f-a3c9-02d482e2ccef",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7817de1-51ed-4156-9806-aa379ad0dc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb265d9-ba12-46ae-8b29-c90fcef5c3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02adf597-e98a-41ed-9d5d-2d7c7baa3ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546dedcc-aa78-47c5-8f2e-bc7b155ed4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd275552-5773-4ce2-9a83-a91554103a2e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a343000-7941-49f9-b92a-d6b42e32907b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786806c4-e1af-421f-bb07-6d11126919ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cedcc18-1a76-4665-b2c1-3ce709892087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c79489e-a06f-438c-b022-3150c68b159d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364c0729-0604-4e6f-8473-d2846dfd8e4b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9af196a-5f69-463c-a73f-e4d5ee0a00c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aec99b7-f02b-4a3d-9afc-5ae1fc2fbd9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53fcec2-7bf2-4a5b-b729-092e1b972abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce3ba57-5796-49e1-83b0-9ad96802a0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf9dce0-b1cc-4fa1-ad43-0f9a0bc97e9d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6219932f-e275-4f90-b0fc-d79c213be512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a669b869-8ac7-47ec-bb10-330eaeebfb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e927f48-7b16-4809-81b3-7c12d6be3b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f103934-7948-4935-af73-a143d6b16bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a548e-eda7-4588-aa8f-54f83f4fde3b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c3b545-263a-4e51-91ab-1fd9feda8650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593f5cdd-706a-4b32-87ba-18432af3836d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e3877e-f80c-4497-bc7c-1716a7495d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c808506b-21f0-4bf1-b7fe-7e1be3a825b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41b4956-33f1-48fc-8bf4-79ecefd2855f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401fd7eb-a1db-4eba-9480-4211397f74c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf517e0-10fd-4f99-b6f0-d637ec104d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beb0101-0f08-4ce5-bcb5-5a3e8d431eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707a8f8a-1d58-49fa-a220-3627f7f97be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d054ee97-7607-47fc-887c-b7285b9fff0c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb21d53-8a6f-47b4-95fb-be39e6cd387f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db91eb8-6ef0-43b2-a884-e79398fa57d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6122a23b-507b-46fc-9feb-8ff321162cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa772c9-865d-4bad-a0a2-a86804852c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc27e84-d7c5-43db-b1bf-60d770070076",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc80684-3042-42c9-bdf9-5fdd13e2aee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a9fd58-987d-45c8-8956-b49392dfc861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daa2549-fb73-478e-b56e-52c941fb3963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a26f89-5994-4766-bb50-5b252cc52f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a75858-2688-483a-bf69-15bc5ec646a2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca523fe1-2cf9-4054-a029-72fa4b0834c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265d00e7-a546-471e-98ae-b1814f011f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f983b1c9-7ab4-4b62-bc80-49093a36ff39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b740e1-9a1f-4493-8af2-8c41c5303fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4b8ddb-625b-4006-ba2c-7e04c4ba1098",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410ce78f-1ca5-43bb-bd86-645702eaab90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a40dbe-2aa9-4552-85b3-29d4fe986831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1671754d-91b4-483f-80c7-e1bcbfd69b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614f8898-2761-46f4-9c02-0f848264587d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b607f5e7-4b04-4721-acb0-7602cbc6cb86",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78db6149-1de1-4862-9087-113b89dde3b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d275de5b-a4bc-46d3-9c87-0b5a4dbcc5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fada267-12c4-42bd-9178-983b1150bb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d21dac-c9ef-4b4d-bd33-b296384e9fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cb6566-bfe1-4163-9415-75cb688c3192",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5248bb4f-da9a-4810-b9d3-80894e5a4e98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532162ac-d990-4c61-bcc9-fdfe16dda639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d27315-4dee-4792-b348-fa329d14b922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f41f543-31be-46ea-9904-beee031d3af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc383a7-70a8-40a0-8ea6-b59ad69f41a9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3716b09-e451-482e-a097-0d07daa3f5d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0673d12c-f0a9-4b9b-a46c-6bdcb67c527e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67904c00-df71-4a40-a69e-7f3d25deabe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98979bf-7e5c-4753-8c1c-75fbbd632738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1364b008-26fb-4c32-b832-c252d1742beb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da250d8-0467-4f51-a63a-e9722233efbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9abf941c-cc8e-491d-888c-c3d3c288c570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bd0896-c387-4dba-a2a8-02171ebc7e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77ccac6-b5fe-4620-9199-a4349475b893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eabc0d7-92a6-4acf-9cf1-5a6b74560b21",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0ec419-bede-4e02-b415-a4a2c81995b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e1b8bf-6a39-4a3b-a64a-1b8f56f4bd87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d67f7d-dffb-4560-8a29-127f5409b07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2bc819-224e-4b12-bfd1-9a1729757bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d422a042-6416-4cb1-bdc6-d9ed61164da4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c3116b-e333-4164-8a38-d34cce6c983b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d2df31-81e8-4c7e-ba41-b0af9563d840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0901d406-f3e9-4687-81c9-bc453d8fe2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea45742f-9186-4d2e-800a-1c12a2c77425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8a76ea-91d8-40f6-aabc-7fd0053bec5f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22add653-60e2-4b2e-9e6d-7a82bea9d7c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa37bb17-25aa-4b83-9715-80315dfcf745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd0b1ec-99fa-4cbf-9bc3-f17140c87a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e770581-5cb0-4e80-a116-c4b1e453ac7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38395a01-fe1c-4523-bfd1-d2e22489c01d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dcf8c7-18b2-4e3b-84e0-d17dd988007a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14216c02-c5ed-4a1b-bfd6-4b1f4622900f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8136385f-715e-429b-ad6c-96ff025ba72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f65cd01-03e0-4ceb-a17a-43931d4b3f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545a8d7f-fecd-4f8c-bd1a-b3f4773ec549",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fcf897-c7d6-411c-822b-f486ab47a51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d28e6c-5a10-4545-beaa-6619c5d25368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5031de0-229a-437e-b926-b9593da5070e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e641fc88-dbf8-4dcc-ad86-7141f607c13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1448b757-41fc-47c4-9955-b18db725442a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14f8671-dcd6-4706-91c4-b68175dc1538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba3a6ab-03a6-45df-8834-83bac4b389d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae62e24-2d19-49a9-8752-453564284aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3190bdf0-cadb-47dd-b928-8fcee85c5325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b83618-1896-4850-8d4f-8f55a98dfbfa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982c3f88-d158-4564-9ad6-db00403cb7e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd0d0f13-21fd-4022-9438-626c003e1570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2885c2-f9d1-486b-a68b-e936dd5d4780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9470cbf3-ccac-4e88-a520-595135789d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53b01bd-78bf-4ba9-b4aa-9f2f30d17e0c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9de3ade-b5fe-49e5-9ffa-4f816da335ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d46e8ad-9843-4201-bced-27450b16d892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13eef95-ed04-4214-b038-7a836c90ea0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5da1e4-272a-440e-91ab-eddfdfba1136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1d8a21-83c3-4c51-8e6b-a04ee477539a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dddeb9-f6fb-42c4-b7e3-7543f15c6534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3fb800-a119-451a-ac71-57f03604e715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de73223c-3e80-45c5-b4d7-dabae6283bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc734771-ca2c-468a-88a3-fb2375f668ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03387c45-44cf-4fd3-b244-a2d0ad469280",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0aedb6f-a4fa-43e1-a0cd-722af39e6f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a348278-57c7-42f4-b8c7-38f3af20454c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd90732-1d02-4438-9fcc-ef39178735f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e96908a-31de-43cb-82ba-d2fe524c4939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5949b4-bb95-44fc-bacc-0257b7abb415",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2493d38-cd42-4b46-a787-fa464ca2256e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18eb21f-7249-4278-8c16-6de4b9807c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab1ed3a-c5c8-436d-a8b4-7dc39a098266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f394c47-fcc1-435d-b4da-f3b1b0b6329d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33f6527-6bfb-4f46-b470-a5c9ed26fc66",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6afa5e2-c77d-4206-94e0-d859ecd63878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7b66f13-335c-4fe2-949c-d6898a79925b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a391e78e-b0ea-422e-bbb4-263ba76f6c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb69543-4fe5-4081-a9ee-d2912611d632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205802e9-b9b1-4c6d-bbd4-23e521caa98c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44472b9-1944-41ec-abe5-ae363e2a4df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90407ad6-3912-4173-aa52-158e0ccfba90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa8687e-a36d-4120-a70c-bd475b9d91de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0762a1ad-abe1-4099-aa0c-a8ed67edae27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec53756-6916-4ea8-9edd-4cbc5d8ba4c9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303744e2-5aba-4912-a4a2-c7e23138a187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acff867a-4f2e-402a-84f9-c8f08408c6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5233b890-c876-4f3a-a665-2bc7fc1431a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8d29a7-3e12-4e4d-a6cd-727cf2b3dc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc04233-c247-4662-82d7-c0b7a4edfa88",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943b1085-55e6-4476-8023-eca9d235e71e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c4b723-0913-4c7c-a7c8-b2aa42e3dda5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52623e3-6900-4d76-9943-c8eb38d821d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb96287-9261-468c-9599-eb837d3c9c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8a24ed-7b1c-4042-9360-7b3f367aa3fc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4e1bc3-1fda-4946-b8a1-9833f7bc9234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf08c1c4-5fb9-4749-9eb9-802c1151a945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6383d537-9185-4df3-90e7-c4c15311ebbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad37b37e-182f-4340-8980-def30b5f3b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cfa15d-537f-49a0-8250-36496f511880",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e585d8d-1e12-47ce-9b49-d980e75187dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dcf48ab-146a-4f9f-a48c-f30101ef0947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3603d4a4-6cd0-4cbb-9bd0-3b048581d31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b795786-05ad-4899-8856-55c690207ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc24acd-1ecd-4b1b-b6f9-03b8e2ba57f2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a30624c-82b0-478c-a559-548c28ec6a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa526ec-74f3-46c0-b30b-f19151da8814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be71b49d-af38-425f-b7b1-01bc142191da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f00b18f-b514-41c7-a8ea-c7c923818b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8616bcfb-2fed-47c6-b0f1-292861731393",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d260ab7d-fb35-47df-bf34-d192141d0c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f9310f-6b6e-4de7-95cb-8f243a5ee39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33be3d70-dbe3-4491-9dcd-bd08dd5a8684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6686456d-fa0d-4f75-a964-7680ad9b51a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5658b6-8fd8-4276-82de-fa2303dcfff9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f0f2e9-dae2-4c54-9ade-4df212f461fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9227f9-6427-4615-ac4e-c731556c61ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207a93d3-1fea-4dfb-8dbd-d24925e67b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a384161c-e8d9-405d-964d-b70a6de9aeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3dccde-33a6-4f35-ac55-8b56b7b96ce3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59738bcd-fb13-4cda-adc0-c08f4eb6dae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c32f81-eb11-4c35-bf59-0685ea3a7974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d607afd5-17df-46a7-b1e9-8a039768f80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8779c82d-0555-468b-9e24-1d14155277fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e633de-2465-4f79-9a4f-04e879422597",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0122f1e-bdc0-485f-b334-9b98f490ccd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d9f0e1-269b-4c0a-bd85-771cf6240c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7278b846-f86b-441b-8942-6deb62403c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2235bef2-650e-4fa9-9b46-0b72580210f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225d3e7d-d766-4b74-88a8-21015f095b17",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd9b3b7-2bbc-4fb6-aeac-c1b316d71b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1415c3b9-c596-440c-a993-e068f291db58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8154c27e-7cef-486d-b6ad-83df8c2d7893",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed69198-080c-4ab0-b2b0-ca11dcd2fb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b80012-18f8-430f-8b01-47e9f9018af2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d08c4e-b104-4007-89a8-24289e9d3a40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b563df10-cfc5-4b8e-ae36-542714e3b991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bb37df-6a03-4b2d-8dc5-01311ec6da75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088b838b-c2e9-450d-8114-9d1cc52063e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942a7fd5-b268-432a-bcc4-ffb322814eb4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb9851b-2f33-4653-a487-50a16b5515be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "067e0538-94fc-448f-981a-be0cab85464d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9ebfea-1b6d-4716-b067-9930965c1f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154a75ca-72b0-4eb5-bf39-6f6695a18984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d77950-3d2d-4c30-8b50-bebcce88343f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331a31aa-2a2b-4838-bfed-cc6820c596a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69694e6-d4cb-432f-8ce5-8104e4c81d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5d2814-badf-456d-8e81-ff0e754dde69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b6f076-3b89-44dd-8492-9725dbf38f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b26a36-891e-48ec-83a5-d89fdc3e3f4e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003df317-e211-4f23-b55c-f579214c9ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "452d4414-e09a-48f8-96fb-2df9c971712e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e86add-d68c-4878-a150-925cceb4d373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4e4c2a-ad3c-454f-83fd-89fb92190256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181cbc32-73d0-4af6-bb7f-894669c769e1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f139dd94-bd1d-4922-a0d5-2246b72d4f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c844ed-eac9-420e-8268-989cd441c609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5507da47-a29d-4e93-86ef-ae8f96a71bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a6d4e2-5c8a-4336-9a5e-ae44c31f864a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56cfbf8-0417-4689-ac2b-91e5fe723237",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c84b3c-f325-42bb-b4f1-b7c7db530315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29c0720-b094-4d49-afe4-2633b16724a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d39562-cc90-40f5-9dbd-10fd32008260",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbe92c4-a0a2-4a59-a85c-743909207d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbbfb4b-6895-4676-9ed2-10ea6dc35c14",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7a7c56-1e2e-418d-8efb-0a24e1d477f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac3122d-dc34-406d-9b39-ad4ed3d2901f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f606c3bc-0a75-4484-af29-2cbd2c24c660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f6e4c0-9651-41a8-8040-396898d7143a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a654266-e835-4a93-b0a7-4b59d5a6f26d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0b16b52-0ec9-4590-8931-c81fcd16e507"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7674dda7-a4f6-4495-b79d-597074289640",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9338c9d5-8ca8-4b46-a59a-a514b79c0d90"
                    }
                  }
                ]
              },
              {
                "id": "c22908be-96a6-4366-8b9c-5472e3cd9fc9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7405a85-357e-4ef3-ae00-57cd96e18e24",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c721c868-a3a0-4cd3-bd3c-54c5b955e23c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "67aef0d9-772b-45c5-98ca-f54e2b6b6206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e317bd32-adea-45d4-9c48-71fb3fedd90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f81ff3d7-3f34-48b2-aefa-db66bcae24c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfc54c81-3c14-4c82-a8ec-9dfc2fb7509d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31def706-b569-47e9-903b-24d5ab33246c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1873372f-11d2-4390-8dc7-878791b14d49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "643843dd-010e-4e16-a9c8-0ce2fb55773b"
                    }
                  }
                ]
              },
              {
                "id": "3933f27b-d4ed-46b8-ac3e-288614678a40",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "08498a2a-e921-4877-984e-3ab8d8a488b2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1ee1c1-916d-4258-8c1c-da0e1e3253c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fa002dbe-b4da-4e8d-b5e7-741d4dfb6369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75e5f2b-1069-449f-856a-4670c9f7d293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d336a95a-dbf8-40d6-9f20-3e93ab831bc8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fcf38135-979b-4136-97fa-554f463169d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aefa402-6bbb-4ded-bc32-2938880c9abd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e68492-fd64-4fc5-a9a6-bbed6c443f90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "de65ac4e-b875-45f9-8f6b-f68adb232560"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31746708-9509-4583-8a79-404c2c6848ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dac7676e-30ba-4e57-8677-2bffbb6376b9"
                    }
                  }
                ]
              },
              {
                "id": "f85bb2e6-4d12-4fcf-af4c-26c79a15cbb6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "450eaaca-1b8b-403b-aaf7-f6a673a3174e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e9de2e6a-707c-44db-931f-12445cd59824"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11f615df-e2d1-4279-b4fd-0181e3f57e5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e31a8308-f156-4c71-be3b-5688d5c62d39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd2f628e-a3b8-440e-be79-263291ec54d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3ff7b925-a495-4568-9915-2002690f5ae2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b950372-3de6-406c-8f88-2e347cd08a79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d3578ca-b7f9-4a23-86e2-cb72dde7115d"
            }
          }
        ]
      },
      {
        "id": "23449de0-b6d8-4866-99c6-9cdc18b8d987",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9f1ab9ce-4769-4f12-a85f-38091bd88a66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "727ac953-4639-46ed-99b2-7b53188f6148",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "353c42f3-7fb6-4505-8bc3-c5acf68a5b6a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2aa62c-d520-4ef2-86d5-87f884876090",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e93d94be-fdc2-41b8-8573-8a940e45ac12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a838a764-f80f-4192-badb-6cea3094eb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d3db482-4f95-40f5-9609-883c124776c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88f53026-6fe3-414a-9017-02d8612ea26b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4d7dae8-e8c4-4c83-bab2-511ddaf7ce6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21d5dd97-e017-48c0-9b0f-a001b163463d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b00d1960-934b-4f2a-ab7c-0e9992cb0378"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81d2b064-9b50-4567-b980-485f30924b9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ed2c11b0-94ec-447e-b92b-3e8f368f99ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79d074d2-7954-4814-9996-5b1cb916809a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6107eb29-e09c-4fe7-840b-a7aea44f8a80"
            }
          }
        ]
      },
      {
        "id": "e9286377-5b22-49fd-acc9-35b78eda1b57",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "45d46f19-3aab-4dc1-9f43-116787633784",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b251bd0-b498-45e3-ada9-c3267f06f2e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae60b7d1-dec5-40f9-8882-7ffcad2c11c0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169f1e68-8564-4770-be86-e3b060f542e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f9bd5e3-7eae-4c83-b851-741e2124fc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8f5387-a935-4adf-b287-e9cdf5d30f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34364667-9cdd-4bcc-aceb-dc90125e9e2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6dd5395-5657-4bd3-9c46-f4679e371a88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d359a420-ff32-4309-a47a-549fd1acb040"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ad562e9-256a-4e9e-b864-5678e8f85223",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a888ca3-00dc-48a9-ad53-00ae1bea0b2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cfa4632-274c-4201-b051-558cdeb5a3f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58fc2fbf-c1f9-4905-b65f-746784ef0ebf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea9b3b6f-39cc-4aa1-a803-b48e5afedbf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51f11dc5-d09a-4bc2-a539-db8b0953d84c"
            }
          }
        ]
      },
      {
        "id": "9167d524-cfd1-49d9-80a1-7b0e943cfd18",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6a3eb3ba-a835-4090-95fc-c3e09f997296",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa901c83-1b35-447e-9274-92f2823dfab9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4612b44c-4b93-4e9c-b3b9-f864244daebd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceb8b18-a74a-4b6a-ac33-05684fa3b430",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bc2bbd0-3a8f-48d3-934c-10a07c90d78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6283123f-1ed3-4a4d-8385-1f6f35a9aaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6d1aedf-2039-4d71-9105-2b488b881da0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "117c420b-fa50-49ec-8df7-a4598e50b3e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27842d7c-da78-4160-ae29-71940f6788c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54dd0dd1-0c78-4b5e-b538-2cf2d121762c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85c52c5c-4271-4e9f-bf36-a317a4ab5a66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d53a8a68-e9e4-48c9-8d18-721600e8a41b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3635b744-06b5-4b84-93aa-454984df1166"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05355fcb-8862-4ef3-a641-4eeabd187f84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88f94051-8cfc-4928-adf3-6a5b022093bb"
            }
          }
        ]
      },
      {
        "id": "a0678f07-61e1-4a7f-bd9d-cf18e7f220a1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf7407f9-a37f-46ca-8349-3e7ed3fd7a13",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9beffe4-33b3-4816-9e6b-f40d27bce3e9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e870563b-04ed-48df-851c-1c5ea3718308",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99b1d63f-fa51-4b9e-8108-783342326869",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "330ab885-8bcd-4c9c-9d8f-e4fe0b44cf9b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.178571428571425,
      "responseMin": 2,
      "responseMax": 691,
      "responseSd": 47.310648667337716,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728089083733,
      "completed": 1728089093940
    },
    "executions": [
      {
        "id": "9e73b27d-196a-4d48-b926-4a7b9e2d6cb2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "29893261-9e6e-4ba0-a693-175f9441df60",
          "httpRequestId": "aba98d97-bb88-402d-a403-f575ab2ea696"
        },
        "item": {
          "id": "9e73b27d-196a-4d48-b926-4a7b9e2d6cb2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d3d89094-9257-41fc-843e-ef2c70f45182",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "41c04ef7-744f-4f1a-a07d-12bc9bffabea",
        "cursor": {
          "ref": "c570341b-9b15-4376-9373-5b5f2f642c9e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c282187a-1112-4ffc-9225-95bbae81e37d"
        },
        "item": {
          "id": "41c04ef7-744f-4f1a-a07d-12bc9bffabea",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "065e62c9-0517-415f-a7f8-4ed1aef58a58",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "2aef6f78-03e8-425a-ad8f-9d755eea3e8c",
        "cursor": {
          "ref": "c88cb467-5411-48ef-8711-9d0005469c6e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8400cf09-2855-41d3-8589-375051e4c453"
        },
        "item": {
          "id": "2aef6f78-03e8-425a-ad8f-9d755eea3e8c",
          "name": "did_json"
        },
        "response": {
          "id": "b23b7e14-d43d-483f-991e-088c357a484a",
          "status": "OK",
          "code": 200,
          "responseTime": 210,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbb0bda-ae46-43b5-821c-8f559942ee95",
        "cursor": {
          "ref": "13a69b38-3023-4340-9cb2-eb5cc795a5d4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fbda653a-f872-4728-906f-8c46723b3d8a"
        },
        "item": {
          "id": "1dbb0bda-ae46-43b5-821c-8f559942ee95",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b97c0f4-9fa2-4715-b57c-21747c34d798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbb0bda-ae46-43b5-821c-8f559942ee95",
        "cursor": {
          "ref": "13a69b38-3023-4340-9cb2-eb5cc795a5d4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fbda653a-f872-4728-906f-8c46723b3d8a"
        },
        "item": {
          "id": "1dbb0bda-ae46-43b5-821c-8f559942ee95",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b97c0f4-9fa2-4715-b57c-21747c34d798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1efdab-8ec4-42b6-aa5d-47bf33bf31d8",
        "cursor": {
          "ref": "91502d43-e1ba-477a-a19c-82c9d2f4fc96",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1015ba03-1b77-4b0c-92b6-ba608072c1ec"
        },
        "item": {
          "id": "7c1efdab-8ec4-42b6-aa5d-47bf33bf31d8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cde5cbc1-a4f3-4a89-965d-677d3d313bca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae05ad4-8a2e-41a5-92aa-6a06db59ccd9",
        "cursor": {
          "ref": "9944d702-a674-4abf-8fd4-01754d8e852f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c91ec675-7227-4571-9ce6-8373ff258dfa"
        },
        "item": {
          "id": "dae05ad4-8a2e-41a5-92aa-6a06db59ccd9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f8db9eea-de75-4878-9f75-798e9da30c9f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1651959-7334-4b1d-87ae-078710beb3f0",
        "cursor": {
          "ref": "c2f5ec3d-26b6-4d21-a210-02c100ab76d8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "234e08e7-ebc6-40e6-b22d-74ac24b1ad9d"
        },
        "item": {
          "id": "b1651959-7334-4b1d-87ae-078710beb3f0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "108de1ac-0e3c-4a49-a314-ea1e9d2a2344",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cbd789-150e-47df-b438-737d3eb5c0f5",
        "cursor": {
          "ref": "61a66936-63cc-418e-9cc3-b9a8c8e8c064",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f5bcc38b-9cce-47e0-99be-d672c2f05731"
        },
        "item": {
          "id": "c9cbd789-150e-47df-b438-737d3eb5c0f5",
          "name": "identifiers"
        },
        "response": {
          "id": "c64ce299-21b1-4c72-bee3-f22a9cef6c28",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc60bb2-3e52-46a5-95b9-0731fe32eb56",
        "cursor": {
          "ref": "66df7daa-a944-420f-b1cf-ea2c4056e5a5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a210b31e-8bd0-4e60-918e-057dc3397920"
        },
        "item": {
          "id": "4bc60bb2-3e52-46a5-95b9-0731fe32eb56",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4da9ff05-72e5-4f8f-8382-028eb0c7a9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60eb5cd-7596-479b-b2fb-6bac38b77e16",
        "cursor": {
          "ref": "05c48220-6d4f-453d-8974-23468aad3a05",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3dc69168-cb55-44de-8e1e-323d1ce64983"
        },
        "item": {
          "id": "b60eb5cd-7596-479b-b2fb-6bac38b77e16",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d76a5a37-4049-4669-9240-7af9b040fbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178bf5c8-dc6f-4d72-b652-6c1b4af5c582",
        "cursor": {
          "ref": "f5cae551-57a4-4616-a7d6-2f80e8bda445",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bc521b4e-e584-4a56-afa4-eb800423ce8e"
        },
        "item": {
          "id": "178bf5c8-dc6f-4d72-b652-6c1b4af5c582",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0f74d511-0b85-4f0f-a3c5-89a0d0749d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45257b37-d4e5-4bf9-b737-b435509586c4",
        "cursor": {
          "ref": "55801088-f772-4141-8168-38ac2fb835a6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8d224e20-c0a5-43ab-a659-dbf628d98c0e"
        },
        "item": {
          "id": "45257b37-d4e5-4bf9-b737-b435509586c4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f8bc9a7b-4a99-47af-bfb6-3dfd357ab1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce6182c-6d07-45b0-9231-050ee3ec3c7f",
        "cursor": {
          "ref": "5900d92f-9742-4c0d-ab78-e169cd06fd8e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "da80acd4-c632-4974-8e48-425cdf70a750"
        },
        "item": {
          "id": "6ce6182c-6d07-45b0-9231-050ee3ec3c7f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1b5d37ff-52d2-4efb-ac79-db74acc4c10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0865a3-4487-4162-91a1-a4171048364f",
        "cursor": {
          "ref": "5a23c3d5-696d-4cb6-b695-a7c49332ef0f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "faaddd48-98f9-4ba6-b37f-3877e63d749f"
        },
        "item": {
          "id": "dc0865a3-4487-4162-91a1-a4171048364f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a796a016-d0f7-411a-b6f1-ae952be47ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c27f4c-1f25-4d07-8f5d-e5a87903917f",
        "cursor": {
          "ref": "f54f95f6-a109-4e3d-b75b-30ed9493c712",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c8e04f53-230e-46f6-98e7-3b8593dc5c7b"
        },
        "item": {
          "id": "e0c27f4c-1f25-4d07-8f5d-e5a87903917f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "90a829e0-064d-401e-b49a-25a0194f72f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2563cd31-7607-4c0f-9528-b9beb89da426",
        "cursor": {
          "ref": "367b7977-41ec-4165-83ce-bd4c11ed8e79",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "83542af0-48c4-4c8f-b0d0-2d2993fecf3e"
        },
        "item": {
          "id": "2563cd31-7607-4c0f-9528-b9beb89da426",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b3864b27-1d79-4309-bd45-4d84495f4bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1942d618-28d8-4838-8574-334bd24d8273",
        "cursor": {
          "ref": "e4d876c5-8775-4bbc-9c6a-8125bec30e21",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2fa4dd77-20ac-4e6b-90aa-0c611864dd6f"
        },
        "item": {
          "id": "1942d618-28d8-4838-8574-334bd24d8273",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b1d49701-b210-4d32-aec2-d8e8824a9144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5586d550-d4cf-4e7f-b5d3-0ed37719b6af",
        "cursor": {
          "ref": "aa99933f-cfa3-4195-ad4e-69b7afbaf1b4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5ddfd77e-b69a-4314-991f-cc536c20922b"
        },
        "item": {
          "id": "5586d550-d4cf-4e7f-b5d3-0ed37719b6af",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e8e5bebc-9426-40a7-a396-5cddebb4333a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aad4a5-5d5c-4f84-a575-19494a4f4bee",
        "cursor": {
          "ref": "bf1fcb66-6974-45f2-a38c-d5ca983818aa",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "89a742c2-efe1-4f93-ba8f-bfbe0d507cd6"
        },
        "item": {
          "id": "10aad4a5-5d5c-4f84-a575-19494a4f4bee",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "34eb09c9-b85f-4cd9-83ef-447c3bda9d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac4ea42-9a85-4976-94e5-4995340b2eb6",
        "cursor": {
          "ref": "d2b779b4-1c09-462b-9a6d-bb351bf92d54",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fae13dda-1bde-4b51-8858-1d73ed8f73ec"
        },
        "item": {
          "id": "dac4ea42-9a85-4976-94e5-4995340b2eb6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e68a07d6-c2bf-4d73-9cc4-2997d8577af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a55f70-cdc8-47bf-87e9-8096f542f2a6",
        "cursor": {
          "ref": "af09f394-f476-4a1c-9276-fa78709ec5fb",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "db6245e3-b836-4bad-bac1-2032a164896e"
        },
        "item": {
          "id": "e5a55f70-cdc8-47bf-87e9-8096f542f2a6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2ef6e01d-5536-4bee-8292-a999fa182c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871bcae5-669c-4ccc-afb2-9515db3b454f",
        "cursor": {
          "ref": "4202d50e-38f5-44d8-96e1-ac88dfac2e0e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7b6725f8-e97e-47ea-888c-f4822510326f"
        },
        "item": {
          "id": "871bcae5-669c-4ccc-afb2-9515db3b454f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c347c6aa-bd59-4986-a21e-9203967f3996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3166ff-2160-4f72-85b7-bcf8d26491ef",
        "cursor": {
          "ref": "acf0c0b1-8bc7-4f58-9401-575beda3d10f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6e86324a-c4d3-4d47-8948-8d617f278d7e"
        },
        "item": {
          "id": "bb3166ff-2160-4f72-85b7-bcf8d26491ef",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f3afffac-71fa-45e3-ba9b-6418ec10db57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad7f5eb-2152-423f-8ba0-385f6de9bc30",
        "cursor": {
          "ref": "5e99acd4-21a9-4345-a2dc-46c0755a437a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d3584d0c-7ac9-4650-8e63-cbe2ffb4f0d9"
        },
        "item": {
          "id": "8ad7f5eb-2152-423f-8ba0-385f6de9bc30",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e77842e7-2fd1-4dff-9a9c-04f341d5594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b05cd6-6eb8-4315-abd4-00c9f54643d3",
        "cursor": {
          "ref": "d50d3184-d5ab-4688-ad9a-43afaeb182dd",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8afe34d7-bfd8-4aa9-8c77-4e90fabf9c99"
        },
        "item": {
          "id": "48b05cd6-6eb8-4315-abd4-00c9f54643d3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6802075d-b215-4970-94fe-9931e8cf5529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24073a13-14fa-456c-9066-113535b24dca",
        "cursor": {
          "ref": "899400bb-2ea8-4200-b654-78f31307ab4e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3c8995f4-3b59-4474-b729-a5343989a49c"
        },
        "item": {
          "id": "24073a13-14fa-456c-9066-113535b24dca",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "05c57792-4561-4ddb-9fa4-d7b855c578b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188eed80-0bdb-415f-8975-b12e9257ddc2",
        "cursor": {
          "ref": "0d2d27ae-af1b-48cf-b01c-0495ab073a6b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5e2f0969-ac95-4275-994e-289e62f7fbb2"
        },
        "item": {
          "id": "188eed80-0bdb-415f-8975-b12e9257ddc2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2ea33595-a345-4d3d-8f6e-0c0329f82452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33f9e82-161c-44d4-8613-3e87402a42cf",
        "cursor": {
          "ref": "1197ff3f-7914-4136-bee5-044071738050",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c90ef3b1-5180-4f5e-9695-bf9231045f51"
        },
        "item": {
          "id": "e33f9e82-161c-44d4-8613-3e87402a42cf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6b1d7991-2a4e-45a1-9eb3-18dddfd69308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f321457f-61d2-4316-ac3e-e89bbb016a23",
        "cursor": {
          "ref": "e9522e32-f848-42f7-bbca-9bfc4436e0c4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5f1775b9-1523-4b40-9ca6-9fb4f6333b82"
        },
        "item": {
          "id": "f321457f-61d2-4316-ac3e-e89bbb016a23",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9e75ab5b-1e70-42a3-95fc-e3c35be97737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381888d4-44d3-4cfa-abf4-54e917ec9d20",
        "cursor": {
          "ref": "3122d7b3-bcd4-4150-9ed7-1a6930e44c70",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a0f6174d-9768-43ea-b7cc-f5f3c8439bf8"
        },
        "item": {
          "id": "381888d4-44d3-4cfa-abf4-54e917ec9d20",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "82999d22-3e32-48fe-8d83-59e11df5fda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f4beb1-1588-4493-ac89-799c2e0a5ce7",
        "cursor": {
          "ref": "d56d13f2-8cad-4068-9423-79ab571b7015",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f45ebe9d-2ecf-4156-a3f5-dcb84c6288ed"
        },
        "item": {
          "id": "f7f4beb1-1588-4493-ac89-799c2e0a5ce7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3773550f-b2ce-4ec3-8323-c2b69176b4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a233a240-2d1d-4fe0-9b34-247ea7714052",
        "cursor": {
          "ref": "a7452d05-d4cc-4aa7-8ed0-3b38888c6c36",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6ee8bc5d-ec2a-4ac2-af20-b073dd007634"
        },
        "item": {
          "id": "a233a240-2d1d-4fe0-9b34-247ea7714052",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5dad7c6f-0f98-48c3-b038-939ef21aa2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b410d9f6-7b53-4678-94cd-ce37948885de",
        "cursor": {
          "ref": "fdd8f7d2-1c1a-4742-8449-0c93d18fc96f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "679efd91-b5ac-4bdb-b7fb-bbb3948c0f9f"
        },
        "item": {
          "id": "b410d9f6-7b53-4678-94cd-ce37948885de",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "298e63d1-d582-4e1a-9116-95880ac8c971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cb65e9-c8f4-4f8a-8670-ab97ebe8016b",
        "cursor": {
          "ref": "977f0457-60e7-4f31-83e3-636d84eb2829",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b4f87e24-1fe2-4438-ab68-1f6c66b2c966"
        },
        "item": {
          "id": "59cb65e9-c8f4-4f8a-8670-ab97ebe8016b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d889efb4-21cb-460e-b4eb-8ffb3ab16154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f82eb9-ab4b-47fc-8873-7456ebf1fa99",
        "cursor": {
          "ref": "5b5ff909-4e04-4f61-a74e-de333b7646ab",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "069429a1-218a-43dc-a14b-dc8dfb10c212"
        },
        "item": {
          "id": "69f82eb9-ab4b-47fc-8873-7456ebf1fa99",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "41cdf941-8f8d-4021-b488-9018a46e5f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acc5e3a-5051-4621-8603-63c82536f51f",
        "cursor": {
          "ref": "2b63d5cd-851a-46f2-9407-a000c2865b17",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ceb94055-036d-45f8-b7f5-6f61e5ca0679"
        },
        "item": {
          "id": "7acc5e3a-5051-4621-8603-63c82536f51f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7d80d885-4e97-42b2-8aca-43ab75a54bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53b8ba5-24ff-4750-aa22-7a10e5d372c2",
        "cursor": {
          "ref": "05bf248c-905c-4c1d-95c3-eb6177563957",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "581ca527-2de5-42b9-a586-a887ea23b941"
        },
        "item": {
          "id": "e53b8ba5-24ff-4750-aa22-7a10e5d372c2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1f6f7183-32b4-47d5-8ed2-683c70f600fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe375ec-6211-4a1d-8cad-36dea9a77374",
        "cursor": {
          "ref": "67a0cbd4-aabe-4e56-a08c-7aa994ac0ade",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b2553526-38a8-4699-854f-3bf82c2639d8"
        },
        "item": {
          "id": "4fe375ec-6211-4a1d-8cad-36dea9a77374",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "48fb7143-8c28-440d-810d-41c437ae57d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219250a3-fec1-413f-b8bb-8ca1a5de2a5c",
        "cursor": {
          "ref": "5355f849-37c2-4eef-968a-0810e4a42211",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b904cc91-ae82-46db-9726-34dacc848e8b"
        },
        "item": {
          "id": "219250a3-fec1-413f-b8bb-8ca1a5de2a5c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "89b3fda2-8cd0-4c50-970d-850c17fe41ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189124fe-d9d6-438f-9e52-383d6b1cf0e0",
        "cursor": {
          "ref": "44126ac3-c19c-40bf-9905-046451fb9245",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2ad6c49f-facd-462a-9a05-2829327a6621"
        },
        "item": {
          "id": "189124fe-d9d6-438f-9e52-383d6b1cf0e0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "94b2b640-b71c-457b-995f-beced38562a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd61cd1f-ba7f-4c02-bf18-a7dfa6fd8e2b",
        "cursor": {
          "ref": "cd457e77-b736-4f28-8c03-d0468fdb0728",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7c39cf12-f820-48f8-9ea1-d467d9bfa6ce"
        },
        "item": {
          "id": "fd61cd1f-ba7f-4c02-bf18-a7dfa6fd8e2b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bde508f6-9894-4a71-9fdb-225591c454a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4b508f-1fb3-4a58-9a10-21d0e33b28a9",
        "cursor": {
          "ref": "b9101d16-5195-4322-be9b-f0013e44d6a3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b7b3cc88-4688-4f1b-a6a2-d43695e8ba8e"
        },
        "item": {
          "id": "7c4b508f-1fb3-4a58-9a10-21d0e33b28a9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5824e8d6-2282-4ad9-bc64-42ae6b1b5b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0d370f-3f93-4eb1-91fa-ee38a275b6b1",
        "cursor": {
          "ref": "1a8666dd-cb92-4909-bd72-18eca9ca85ed",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "95cc8926-6cd5-484a-9999-1ef18cb926ff"
        },
        "item": {
          "id": "6c0d370f-3f93-4eb1-91fa-ee38a275b6b1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "843f456e-06f4-4dac-b1c6-07031b1c542d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99263cac-524f-4cd7-9cfd-e4e7a730c9b6",
        "cursor": {
          "ref": "fb59da83-1857-454e-9cdd-86d3e951565a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7160d759-bc55-47a6-953e-b2f4ed31f71b"
        },
        "item": {
          "id": "99263cac-524f-4cd7-9cfd-e4e7a730c9b6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3de6b7bd-b186-4b70-9d2f-808b2b06d75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c7fa9a-f940-4b8e-86df-e32292723f08",
        "cursor": {
          "ref": "4af396cb-0ad2-4cda-b11b-8ac6ee6431c8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3e28186c-19b9-4248-b443-ffbd70ddd4f9"
        },
        "item": {
          "id": "63c7fa9a-f940-4b8e-86df-e32292723f08",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a1548a11-1b71-48b3-b357-ff2b9219b4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c0f95d-2c39-4173-bd30-b5e03e2e0b60",
        "cursor": {
          "ref": "3b25b8dd-35ed-4aab-8182-49311c791c5d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3f56e425-3fb3-489b-b4e4-b4e8edc7046c"
        },
        "item": {
          "id": "b9c0f95d-2c39-4173-bd30-b5e03e2e0b60",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "63433a48-e90f-4631-8aa6-30fdf92f722b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149adc82-846f-445f-b328-c56ee03ab5f1",
        "cursor": {
          "ref": "19597ce7-1abe-491d-8231-b9b0152e0ef4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "18829b22-bc30-4f34-bf6c-128a0af318e5"
        },
        "item": {
          "id": "149adc82-846f-445f-b328-c56ee03ab5f1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b383771d-7906-4d46-b6b1-176e487bb089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ca911a-2854-4762-8fee-4792c6966842",
        "cursor": {
          "ref": "8ca3aa53-c5d6-4dfe-ba9a-a26e42df5da4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "22b9853c-8122-4da9-b4d5-7ceb0081f712"
        },
        "item": {
          "id": "19ca911a-2854-4762-8fee-4792c6966842",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8b8f186f-2f2a-4f4e-8576-4d560d700f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa4e854-5d74-4f35-aba5-24da50c33cf3",
        "cursor": {
          "ref": "4aa2f1ef-1b3f-4ddb-9367-820c72db1dcc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7f1f45dc-0610-48c0-920e-a76a1abc3ae0"
        },
        "item": {
          "id": "2fa4e854-5d74-4f35-aba5-24da50c33cf3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "60601fd2-57b9-4695-9b68-b24baa47cceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243181c4-1b7f-4b17-b96e-e0aa073d643e",
        "cursor": {
          "ref": "1095aff2-5230-4841-9c30-b8988bc55184",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4a706e3d-d55b-4e74-901a-02d5e8bfb414"
        },
        "item": {
          "id": "243181c4-1b7f-4b17-b96e-e0aa073d643e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6ec64457-7472-42c1-9442-3c1da57fd3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6255a529-b8f3-4196-9646-8f2f9ea5b8c5",
        "cursor": {
          "ref": "e865bc30-5b46-4e3a-9fce-c8c4007155cb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a6ee9e44-da33-40e4-a876-3c7d87c58f09"
        },
        "item": {
          "id": "6255a529-b8f3-4196-9646-8f2f9ea5b8c5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d32d3623-8758-4752-8406-701dec529c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fc67ee-21de-4333-a3c5-21ef56215837",
        "cursor": {
          "ref": "a3be92c9-299c-499a-b2d2-1150e59bbbb5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5198ef9c-7391-49df-b96d-103b9a8a8849"
        },
        "item": {
          "id": "17fc67ee-21de-4333-a3c5-21ef56215837",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f86882c8-35e9-474d-bc3a-744a7425f710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b79510-9fae-4e0c-bf2a-1e50b3a1c7b5",
        "cursor": {
          "ref": "95efc294-ef0a-4732-9ff3-d73d47f47e76",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "df93cd1c-73a5-4526-9a50-4824194fc2bc"
        },
        "item": {
          "id": "c8b79510-9fae-4e0c-bf2a-1e50b3a1c7b5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "460ff64d-0b72-4f1f-9b30-e0cbefe512f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b494c0e-128c-4401-9921-b1b05a4e460c",
        "cursor": {
          "ref": "d6610d4d-4be4-4b48-a5ce-df2501440ddf",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3f88a2f5-a415-4ad8-bbd8-eaef6aec802b"
        },
        "item": {
          "id": "1b494c0e-128c-4401-9921-b1b05a4e460c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0f709481-108d-4abf-8f55-e25bc24c6c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f80745-5a38-4887-aace-d3b918ab9947",
        "cursor": {
          "ref": "f9539529-4a52-4bce-b229-b6dc2946498a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4683a456-229d-45e9-8a1b-68fa4c62ba3d"
        },
        "item": {
          "id": "68f80745-5a38-4887-aace-d3b918ab9947",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4553cbe0-d3df-4238-a5bd-00cd518b9fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c683bab-bdd1-49fd-a7ee-ff79b7fe5583",
        "cursor": {
          "ref": "d43b50ab-9fde-447f-98e8-bc0b887898af",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "849624d9-4260-485f-854e-c612cd3fa625"
        },
        "item": {
          "id": "6c683bab-bdd1-49fd-a7ee-ff79b7fe5583",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e405d535-5f0a-412e-98ad-cff04d62282a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67e3179-b113-4962-b2aa-ae121d5569b7",
        "cursor": {
          "ref": "ea208cf2-e9b6-40b8-b844-422acc930635",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7264d254-29fc-42fa-8d1b-8d4d86c5142b"
        },
        "item": {
          "id": "a67e3179-b113-4962-b2aa-ae121d5569b7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2be8f52f-85fc-4593-9680-24395bed8096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c0d6f5-0b21-4373-ba44-e8f72fea213f",
        "cursor": {
          "ref": "e3f6c31f-6bd1-48a7-adc1-06bb8dbab57e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ed203bab-5273-4484-80f8-2acb512bbf0a"
        },
        "item": {
          "id": "91c0d6f5-0b21-4373-ba44-e8f72fea213f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9ad43517-1875-4907-bc67-81bd11e2ee50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e44268-7101-4a0c-9cb0-3e5f73785a28",
        "cursor": {
          "ref": "8e42193c-0b80-4222-a6f2-4eaf589447e1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "067d169c-acb8-4ee8-89ca-37b985c74ff0"
        },
        "item": {
          "id": "44e44268-7101-4a0c-9cb0-3e5f73785a28",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e0d36785-6f15-424b-a8f8-849ddefaca80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa6d65e-2553-4c30-be5a-f15ee3b81a1c",
        "cursor": {
          "ref": "7665eb09-d76d-4047-8c14-20211d604e94",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9c7b8601-6811-4053-8d50-5f96a045b5f7"
        },
        "item": {
          "id": "afa6d65e-2553-4c30-be5a-f15ee3b81a1c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "24b0edb4-a94a-4e0a-940b-7f5cdb1d155f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60be5a68-9b8c-429b-b041-ab6dd68f5de3",
        "cursor": {
          "ref": "d8896e86-fa33-4474-ab1d-c091208e5055",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "74e4b82c-ea75-4ea4-8c29-235417353dcb"
        },
        "item": {
          "id": "60be5a68-9b8c-429b-b041-ab6dd68f5de3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f35d9758-51c9-4bee-b60d-d3433822dd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c269301-8d0f-4bff-bf52-0aefe18fa1c3",
        "cursor": {
          "ref": "c8585272-f448-4451-ad23-10c12a0e1d1f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3f9bb422-bd96-4975-acd4-aa023faede2b"
        },
        "item": {
          "id": "1c269301-8d0f-4bff-bf52-0aefe18fa1c3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "20767ad3-916c-48dd-934d-ad76ef6f0cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0e7c43-8b14-4d9f-8807-dbfa2d36cfb0",
        "cursor": {
          "ref": "46bbb59f-5afe-4eb2-86ce-4a266e5d870e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0bed95ee-6c07-4822-bfd9-d8272c17bf22"
        },
        "item": {
          "id": "be0e7c43-8b14-4d9f-8807-dbfa2d36cfb0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5e7bd0ff-d2d9-4f25-9520-c652a36e6a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b53b6d-3d61-43c7-84b6-96500fa137b8",
        "cursor": {
          "ref": "e3308727-248d-4ecc-a5dd-9b95fe33bd11",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8f91a25f-fa23-4e73-864b-ed79bec73d58"
        },
        "item": {
          "id": "87b53b6d-3d61-43c7-84b6-96500fa137b8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ddff5fd5-6883-49c2-a257-9937ea842a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b975cc-2064-4423-ad0f-87aa790a04dc",
        "cursor": {
          "ref": "1131b05f-21cd-4a9f-b40d-7c5367557f41",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b7aba996-584e-494f-b640-1dd2695ab520"
        },
        "item": {
          "id": "05b975cc-2064-4423-ad0f-87aa790a04dc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "48bf962f-727c-4ba8-adf4-2319474c4236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca95f8b-d68c-4143-ba12-cd629632a83d",
        "cursor": {
          "ref": "1c0b4569-6420-4e4f-ac24-fd135d9087f9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "225f2ae6-677e-4f00-8683-3fc10bff9777"
        },
        "item": {
          "id": "bca95f8b-d68c-4143-ba12-cd629632a83d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e88eaa71-7da1-4e88-841e-0c525ab5ca36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a0d5e2-0eab-4eec-a227-22d0ffaf5851",
        "cursor": {
          "ref": "c10d421a-f039-4cc0-88cb-8a9089eb9848",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f0ed211c-7bf5-42c8-920f-e5e7775b399b"
        },
        "item": {
          "id": "e0a0d5e2-0eab-4eec-a227-22d0ffaf5851",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "859190bd-7397-478c-a695-96a0804b7a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cf3da6-963f-4129-beeb-5423dd9da870",
        "cursor": {
          "ref": "f5a4ba78-d02d-4b25-860d-99134ba4d98a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "003718d0-6d84-405b-aab2-24690c2e36ba"
        },
        "item": {
          "id": "d5cf3da6-963f-4129-beeb-5423dd9da870",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "45951783-7efa-48b9-8d80-cf88d4a30611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33264188-8793-4331-a7aa-477f4caa0aaa",
        "cursor": {
          "ref": "4c467a6d-e60f-4468-8b28-7afcb8c88876",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3b503c6a-517e-40c8-9c49-e1ac67cb2222"
        },
        "item": {
          "id": "33264188-8793-4331-a7aa-477f4caa0aaa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "03d54dfb-e14f-4f1d-acd5-1dbe5055b4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db70dc6d-b598-4f33-b85e-db8ddcc733ee",
        "cursor": {
          "ref": "89f7a951-d7d4-4bd0-b892-79fa0ef3c054",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "57121feb-f759-483d-88dd-29059a4bbe25"
        },
        "item": {
          "id": "db70dc6d-b598-4f33-b85e-db8ddcc733ee",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "20a3121f-076d-47a5-9a49-868efe96499e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b2ff62-d3e0-4bfc-9b72-08c1b519d90e",
        "cursor": {
          "ref": "3301dc05-7042-4915-b681-aa1ac7d5f68e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b9ab1ba4-2788-4182-9009-f1c3aa615be1"
        },
        "item": {
          "id": "05b2ff62-d3e0-4bfc-9b72-08c1b519d90e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b4c9df4b-42e6-4cae-90d8-db3c39b2e1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958865cc-5226-4d7a-846b-80ffd1f79bb7",
        "cursor": {
          "ref": "062e4360-40f1-4e3a-8960-ad6f95ade3e7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6807f7a7-7af4-4766-aa47-b66a43460cde"
        },
        "item": {
          "id": "958865cc-5226-4d7a-846b-80ffd1f79bb7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d947ae6f-f25e-4927-af9f-152b92a02783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f90d347-cfa0-4df7-9832-c0f2a92e11ab",
        "cursor": {
          "ref": "f27df2b8-2065-4322-abd9-73324db89605",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a6fb7fa8-50e5-4993-8796-afe32f46234f"
        },
        "item": {
          "id": "5f90d347-cfa0-4df7-9832-c0f2a92e11ab",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aa0886d4-c624-41ce-9367-b6cc7da15db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bf04d6-976b-41f7-99af-23010a79a534",
        "cursor": {
          "ref": "16a02e09-4f10-48e3-825f-5e9d1328282a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ad64b6a3-9b0c-4595-849f-36d3666d1f21"
        },
        "item": {
          "id": "c1bf04d6-976b-41f7-99af-23010a79a534",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "34d6c902-1090-444a-863d-4f76de6f6f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7b7875-1b25-4a7a-8288-3fbcec0fa375",
        "cursor": {
          "ref": "c2d140d3-e990-4987-b79d-2d34c36bc589",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7242fa8a-cce4-4e4b-a2ca-fb02ae4f569a"
        },
        "item": {
          "id": "da7b7875-1b25-4a7a-8288-3fbcec0fa375",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3a0543b7-f18c-4cda-9643-ad6e75b328ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60aa4fb1-41b0-4447-a8d2-13aeea0ad3bd",
        "cursor": {
          "ref": "f4719126-49f7-4144-8480-d4b85639cd3d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "db5a97d3-3cdc-42cd-875a-e359df968702"
        },
        "item": {
          "id": "60aa4fb1-41b0-4447-a8d2-13aeea0ad3bd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "685f3b1a-cec3-45c7-865c-15f37b080fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb367b2-da00-4bc1-be34-8c8f2fecba95",
        "cursor": {
          "ref": "93c4638a-7db0-43c1-a2cf-657390ab312f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "235cda0f-127e-46ec-8aa7-2ca09b7a0b94"
        },
        "item": {
          "id": "4eb367b2-da00-4bc1-be34-8c8f2fecba95",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "46c4aaa9-fc45-4544-aa54-390853342faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba7068d-9fb1-4aff-b82c-9847e9a7114d",
        "cursor": {
          "ref": "fbff6064-7731-46f5-bcfd-4fe902d050d1",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "128c5022-5999-4cd7-b3df-03c4085d1c3d"
        },
        "item": {
          "id": "5ba7068d-9fb1-4aff-b82c-9847e9a7114d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "75c8ee9e-e910-4502-a2b5-fa70a9b0082e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a406dc-4ee2-4c54-a751-98ec271e94b4",
        "cursor": {
          "ref": "e6596299-71ae-4e35-92d4-2bd20fe9f6bf",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d6f97034-33b1-4328-95b0-a494a991dd44"
        },
        "item": {
          "id": "80a406dc-4ee2-4c54-a751-98ec271e94b4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e2e6fd45-53e2-422f-aab5-401b55fa1691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a600b7-5b71-4ff2-bd73-a8918f30bfbd",
        "cursor": {
          "ref": "3215cd3c-b8b4-487f-918a-b3cf5d76610f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "817cd367-e563-4f4b-b68c-fbaa0a5d028c"
        },
        "item": {
          "id": "16a600b7-5b71-4ff2-bd73-a8918f30bfbd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1403fabc-1eca-4e99-be8e-97bc994ffa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddee03a5-4a09-4c10-ae85-78099cc91825",
        "cursor": {
          "ref": "ef56bacb-e6c4-4ea5-9abd-7ee9f0fc4295",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1c9809c6-b177-4d8f-aad0-dd1f48e30966"
        },
        "item": {
          "id": "ddee03a5-4a09-4c10-ae85-78099cc91825",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "38c4c059-07b3-4b3e-8a91-5b46fd14b5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f684aeba-2331-4d13-90ef-4de83e535600",
        "cursor": {
          "ref": "8a0c1f6b-8302-4a70-a5da-c0d6c775f422",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4426df61-9889-4f81-90eb-a707d80582ad"
        },
        "item": {
          "id": "f684aeba-2331-4d13-90ef-4de83e535600",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0ac25697-79ec-4b44-becd-1d5a1cae940b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8fa042-df03-4339-a6cf-4d1170a45605",
        "cursor": {
          "ref": "4e7d4ee1-6d39-4c3f-aa85-c2f33e29bc70",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8a8ec3fb-a16d-4610-afa8-3d23d2dbdc87"
        },
        "item": {
          "id": "bd8fa042-df03-4339-a6cf-4d1170a45605",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "611188d2-4c54-4bc9-892b-b93db34bcce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a463a-b480-4127-85df-0bb3af50d5c0",
        "cursor": {
          "ref": "9e9e5764-b60c-4084-ab86-756925b8e902",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "781588a1-6b2f-43d9-9ccc-2e8dd378cca6"
        },
        "item": {
          "id": "ea0a463a-b480-4127-85df-0bb3af50d5c0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2fc675ce-25d8-4ce7-823b-e42216da368d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193108a4-cb9a-4982-8436-feb236f0863d",
        "cursor": {
          "ref": "b09f83c6-f5cf-476d-8167-f9c7de1e605b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fe6b0159-395b-4cc4-887e-e7cf8387a977"
        },
        "item": {
          "id": "193108a4-cb9a-4982-8436-feb236f0863d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "90287655-274a-4d54-842e-27ffb158cacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfa512d-2e37-4f5a-b77e-f9605728a631",
        "cursor": {
          "ref": "064f7cc9-5c6d-48be-891b-7ab3468e56e7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "75010e4e-ecea-4086-b534-80548c6ea447"
        },
        "item": {
          "id": "4cfa512d-2e37-4f5a-b77e-f9605728a631",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "490a57c9-3ada-4107-aeeb-ea32db4d7d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f22857-b6ab-46d9-abf1-dc0deebaf204",
        "cursor": {
          "ref": "cb66b3c7-d7af-48cc-aa73-6c3574b9a862",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "21edc49e-21a0-4db6-93a4-df3520663bf5"
        },
        "item": {
          "id": "32f22857-b6ab-46d9-abf1-dc0deebaf204",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dac87339-3105-4afb-83df-89d02c10c768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da41bbe-3eee-4c0b-a831-b8226498a25c",
        "cursor": {
          "ref": "be89a466-be95-452f-8e54-89ed23e7d130",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fa583084-73e6-49b8-9a4e-c8d8c6a1dac0"
        },
        "item": {
          "id": "1da41bbe-3eee-4c0b-a831-b8226498a25c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ab38f6ce-099f-45bc-bad8-f2db1bc8daab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ba3402-a788-4a94-849f-92e2694f26f7",
        "cursor": {
          "ref": "2d0683e5-dde9-42d7-84e3-6f37f926c6b8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6378a28a-3fb3-49f5-9cf8-1cd69d6f87d8"
        },
        "item": {
          "id": "06ba3402-a788-4a94-849f-92e2694f26f7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1e2beded-b22f-4a66-a245-b0305be77399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763e938f-d08d-4390-9c7c-c914836f4e86",
        "cursor": {
          "ref": "9f712a71-cfb5-4ac6-90ae-8982ed6c8098",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3d872057-17e9-4ede-90aa-e1bec738ca65"
        },
        "item": {
          "id": "763e938f-d08d-4390-9c7c-c914836f4e86",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1fcf287f-ffae-4955-8dc4-71f80cee8823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9078ca3-f47f-442e-a0ba-bfb7deeefb21",
        "cursor": {
          "ref": "fb02d6c8-e8c5-4d53-bed5-f6a71e41ba70",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0b1ec82f-729f-4f87-b874-72a011b11bff"
        },
        "item": {
          "id": "e9078ca3-f47f-442e-a0ba-bfb7deeefb21",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "32fcfc46-d86d-473a-afae-5f896f264615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc17cbd-bf41-48e1-bc96-1e76d1d46721",
        "cursor": {
          "ref": "b0650069-6e90-40a1-8e0a-23adf0f74fc6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "611d314d-d531-4da2-87d6-e0885d50e509"
        },
        "item": {
          "id": "0bc17cbd-bf41-48e1-bc96-1e76d1d46721",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f58517f3-8f49-40e3-8d40-a435aa987567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c126f3f-11be-408b-be4c-a3ff1b0ded6f",
        "cursor": {
          "ref": "040bfd7b-4eef-492d-aeb7-ef7d601a3feb",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a50b29f0-086e-47cd-9ed2-514552ceb176"
        },
        "item": {
          "id": "5c126f3f-11be-408b-be4c-a3ff1b0ded6f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3c727af9-989a-4ebf-9605-d517dc5e73d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2031c9-0968-4d49-8df4-00bd0f86e90a",
        "cursor": {
          "ref": "d3fbfa92-e852-4004-b4e2-94f556265b7f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "12884fe8-a9ef-4e65-895f-a6ec875c1a63"
        },
        "item": {
          "id": "5b2031c9-0968-4d49-8df4-00bd0f86e90a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "16862b52-c408-4f3b-b7df-54abf720b06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04427ea0-345d-48a0-9424-57da0e600d8a",
        "cursor": {
          "ref": "0d06ed9f-ad56-4fe2-92b7-c338533241eb",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7915e49c-9156-4bfd-a2a1-a21e91cce8b7"
        },
        "item": {
          "id": "04427ea0-345d-48a0-9424-57da0e600d8a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "828b16db-cbb5-4f11-935c-60ffb5fbd035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b78494-6ae6-4190-93d8-d067e5b38dd9",
        "cursor": {
          "ref": "11f03277-9a5f-4b3a-80e7-71892e01f150",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "13df1052-9dad-4027-b91f-1426be06965b"
        },
        "item": {
          "id": "e4b78494-6ae6-4190-93d8-d067e5b38dd9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "33810544-c1bf-47d4-8819-54eb8d2ff05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b157e33-7f2d-49b2-a031-2907ed8f25d3",
        "cursor": {
          "ref": "37e4e2d6-fdc1-4651-b3d3-7285ab7d55e8",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0125bfd0-5055-4d07-96fb-c53f9c51da26"
        },
        "item": {
          "id": "0b157e33-7f2d-49b2-a031-2907ed8f25d3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dcb8a101-0466-4146-aa23-4f36aba5982f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9827b3-da71-451f-bc7b-165dead4f59c",
        "cursor": {
          "ref": "ba1d6cc1-3bdf-46d3-928b-5a992031dd81",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5bd1ca15-6c0e-4f3b-9ac4-8c79b37b1893"
        },
        "item": {
          "id": "ef9827b3-da71-451f-bc7b-165dead4f59c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "24b2473a-db9a-4e23-85a9-d290254741f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5d02b7-0890-48be-bac9-f183cf6dbb2e",
        "cursor": {
          "ref": "059ecfe6-a10a-442a-9add-63d548addad1",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3357ecf3-e002-4044-b1bf-02481a0d4016"
        },
        "item": {
          "id": "2b5d02b7-0890-48be-bac9-f183cf6dbb2e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5b41fc92-3c03-4e9a-8b74-ffe398767875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d02a01-0039-45ce-b86c-2d3a586cea4c",
        "cursor": {
          "ref": "2c7fef4f-feee-4d6e-8ddb-234e5a545ebb",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "15e1b161-cc4f-4e81-8fdc-7556dc0d7c7b"
        },
        "item": {
          "id": "16d02a01-0039-45ce-b86c-2d3a586cea4c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "09459b66-5ee0-4fc9-9ff9-3017287637b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2a72d1-88c1-44bc-afd4-6c3f5542c6bb",
        "cursor": {
          "ref": "e0fa268e-daae-40fc-8b4f-31480b6a2546",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5b0ee0a8-7e4d-4f4a-b913-a38df557e013"
        },
        "item": {
          "id": "cd2a72d1-88c1-44bc-afd4-6c3f5542c6bb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "37a0a896-57ef-49c4-a302-b1591beef623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5d01b7-9b9b-452e-a22a-b99662163e97",
        "cursor": {
          "ref": "fe47b8a4-5bc3-48c9-b06c-18e9782daa2c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4ab4fe3a-3246-477a-8597-72a749f43b42"
        },
        "item": {
          "id": "4d5d01b7-9b9b-452e-a22a-b99662163e97",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bf395d0b-9ae0-4862-a6ef-0bd7cf298157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0bba72d2-1c96-4a80-8149-0e0e4b6284d4",
        "cursor": {
          "ref": "15ef4564-dd20-43f7-b8ff-d9c5d35fe2a9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9ffb8e92-db18-4df6-86c7-bbb8e518b9b6"
        },
        "item": {
          "id": "0bba72d2-1c96-4a80-8149-0e0e4b6284d4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "991404aa-b861-4e29-b44f-9b5edd3f9b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5c781ec8-111e-4a1c-8af9-75c217c14139",
        "cursor": {
          "ref": "3758929d-1e94-425f-abca-822976a79017",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2f47f54d-cda5-46f7-a57d-91e5cfc84363"
        },
        "item": {
          "id": "5c781ec8-111e-4a1c-8af9-75c217c14139",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eee294f1-d332-4129-a7e7-54fa820ffb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "80187fde-d7d7-40c2-a88c-2d0ac9cca55c",
        "cursor": {
          "ref": "b63da725-d920-44e3-aae2-c9bc0619b0e6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c4713f86-ae89-4157-b5a7-66a14b423dc6"
        },
        "item": {
          "id": "80187fde-d7d7-40c2-a88c-2d0ac9cca55c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "33ad41b9-ea0a-4c53-b09c-903d885e3747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5b33335f-35ba-477d-92b1-781269d5715f",
        "cursor": {
          "ref": "a879fdbd-20b1-43f5-97aa-36bad1355e6a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "93d65403-efa7-4068-b276-43f4843f2f3b"
        },
        "item": {
          "id": "5b33335f-35ba-477d-92b1-781269d5715f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ccfeeda0-d92a-4b00-aef8-d6ceb5126c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a3a1ef02-0664-4eea-a707-dc64617b0baa",
        "cursor": {
          "ref": "0e729f37-4340-4cde-b963-c9577c88ef76",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "98bfaeb4-0a08-4128-9276-59f58360d6a7"
        },
        "item": {
          "id": "a3a1ef02-0664-4eea-a707-dc64617b0baa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0f6ae158-b075-46ce-b447-f852eac435a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d6cb9eab-4df4-4739-b767-06066ea54994",
        "cursor": {
          "ref": "5aea2e14-dbce-403b-b62f-088de7e69fda",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f38ed963-5b8a-430f-826a-a393a3ca5ba6"
        },
        "item": {
          "id": "d6cb9eab-4df4-4739-b767-06066ea54994",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "252cc003-9306-4dbe-abb1-e08f4251c686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4ff7cbd3-b5c4-40ac-be7e-b035aeee65af",
        "cursor": {
          "ref": "7dacceb4-8b3a-4a0b-9313-c69a3c19b892",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a30e4765-ffb9-463e-a234-b1502cca9871"
        },
        "item": {
          "id": "4ff7cbd3-b5c4-40ac-be7e-b035aeee65af",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1c4a7028-0cc4-4019-971a-658cb60e5520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd560ff0-44d2-4a17-8fcf-699ff076f27e",
        "cursor": {
          "ref": "8894db4e-689e-4fa3-b708-c0e6cb129d84",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fb1248e4-678d-4190-b7b6-ea4de9fdb102"
        },
        "item": {
          "id": "cd560ff0-44d2-4a17-8fcf-699ff076f27e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "20ada7c1-c4c1-42f0-b686-c73cf49d6a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e4df41-b0dc-4b04-9d4a-726ce3d481fe",
        "cursor": {
          "ref": "1d8ab072-771c-4833-b876-9e92fba3fb23",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2a4a4cb5-b9fb-4c64-8679-c535193096da"
        },
        "item": {
          "id": "b2e4df41-b0dc-4b04-9d4a-726ce3d481fe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b63c0384-4809-4ef1-9b53-ee37d2342fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049286aa-d40e-495b-a891-12d09cc1148b",
        "cursor": {
          "ref": "41be6f5d-9ab5-4d7e-96d2-fd547da9b27a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ba17d73e-f5db-4071-a175-1dda9ceac1e4"
        },
        "item": {
          "id": "049286aa-d40e-495b-a891-12d09cc1148b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b416ec8-d12c-4962-a62e-b7aa33f44a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b564d5-ca77-4763-b095-e18960494aae",
        "cursor": {
          "ref": "c14316e7-c8c1-4144-9074-f50fd92466e6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "96657776-ac40-4b0c-be8f-e6058a5e7c8f"
        },
        "item": {
          "id": "02b564d5-ca77-4763-b095-e18960494aae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "76aa0fe5-9139-46b0-a69d-f6fcf771d5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d435ccd1-313d-4c85-b9eb-b26ed3a8e96d",
        "cursor": {
          "ref": "b8337e7d-3f51-4e40-8873-37713e3c3a68",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "35bc2dcf-f158-4f8e-9717-3cdbb349b201"
        },
        "item": {
          "id": "d435ccd1-313d-4c85-b9eb-b26ed3a8e96d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6af50aa1-3a13-4716-a8f4-1069fbcd57ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd0ec05-e6ce-4326-96f4-f1ed99b870f5",
        "cursor": {
          "ref": "2be8a8db-a548-4a5f-9a6e-831021dff42e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6ba943f8-882e-4684-aee7-54cc63bfa41f"
        },
        "item": {
          "id": "ffd0ec05-e6ce-4326-96f4-f1ed99b870f5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4b20d0c9-21d1-4ed1-95f0-30081538a3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec31b7d-bb68-4cf9-a510-0119ab476b27",
        "cursor": {
          "ref": "418cdbc4-bd34-43a9-bd27-9bc48aad0762",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "672887e1-9409-49f2-9c05-27312aed012c"
        },
        "item": {
          "id": "1ec31b7d-bb68-4cf9-a510-0119ab476b27",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b2d6c1d6-9503-411e-97be-3087f802795d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde9ee31-5d7a-4bfd-8291-8ce4be83c5e9",
        "cursor": {
          "ref": "4172941c-d260-4df7-81b3-e535b02e310d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c89cd4d0-e872-460c-8277-802a9b4feddc"
        },
        "item": {
          "id": "bde9ee31-5d7a-4bfd-8291-8ce4be83c5e9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f2a44da-9ada-4c09-ba9e-d787d0f7082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa92d1d-d473-488f-9ef1-6c02b621055e",
        "cursor": {
          "ref": "90c61cd8-8181-4e93-a729-f22bbf9d7e77",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "72320a75-c832-4a7f-a860-99cee276d307"
        },
        "item": {
          "id": "6fa92d1d-d473-488f-9ef1-6c02b621055e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "76129353-0281-49ae-8290-58dc5a16d6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8967bbe-8f2b-4ddb-823d-6f7d08aaa2d3",
        "cursor": {
          "ref": "751a92e6-62f5-4acf-aaf0-f6deefd4060b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a3577add-a116-43cd-be1a-33f8784ca3b5"
        },
        "item": {
          "id": "f8967bbe-8f2b-4ddb-823d-6f7d08aaa2d3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ca9c967b-0dfc-4202-b129-5abd23e1edb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e4b14c-69c5-4726-9508-9ea542e652a4",
        "cursor": {
          "ref": "408e8b6c-38c7-40a5-8680-0ac8cc8bd586",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "98ec742f-f8af-4f31-9f97-4f6a885bf7ad"
        },
        "item": {
          "id": "44e4b14c-69c5-4726-9508-9ea542e652a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "46203e78-0e8b-49dc-8853-22b5da2dd555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f57361b-8d32-4610-878f-2d07762076c0",
        "cursor": {
          "ref": "dc56ef3e-983d-417d-89f2-9f270b4ea335",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "04b1ca3d-3dfd-400d-9fd9-581b01b6b248"
        },
        "item": {
          "id": "1f57361b-8d32-4610-878f-2d07762076c0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9877dba5-da55-469e-88a8-bb15e5e73420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f251811-d48f-4b5c-bb7e-675afc0c03e9",
        "cursor": {
          "ref": "bf5df389-dcab-42e7-9d17-b963d0589e1e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0487ff05-9136-4ee3-938e-73958d77faa9"
        },
        "item": {
          "id": "4f251811-d48f-4b5c-bb7e-675afc0c03e9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "10493543-b22c-4518-92b4-1d63242f3879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11c8db5-43c9-4fd5-af5b-a442c0e8dee2",
        "cursor": {
          "ref": "9d53a7e7-57fc-4a09-847b-9b395794d1a4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "01334d6d-d290-48ba-a7ff-138e0ecdd8c7"
        },
        "item": {
          "id": "f11c8db5-43c9-4fd5-af5b-a442c0e8dee2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3f0edc46-1cd6-40db-a669-b6c347c56c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539cae71-9ce1-44c7-8dff-9a648c6d2f4a",
        "cursor": {
          "ref": "e0bd507e-7c68-4f17-8208-57424788d920",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b4b6f8ad-82ed-427d-9c8f-af3465f10236"
        },
        "item": {
          "id": "539cae71-9ce1-44c7-8dff-9a648c6d2f4a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d614c35d-835b-4e89-8dbb-bfd21438e1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13a6ec8-a7bd-4e4e-b43e-4eef8fe0a395",
        "cursor": {
          "ref": "0a09ba84-83fb-4df8-a62e-401b021ac7fb",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8a432e96-6951-49f7-8fc4-885c270d81a8"
        },
        "item": {
          "id": "e13a6ec8-a7bd-4e4e-b43e-4eef8fe0a395",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f3921081-42d6-4d91-86c3-4ed428692ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482db0f3-d81b-478f-a6d7-87db21814f8a",
        "cursor": {
          "ref": "ecfd3c5d-5248-4860-b457-74e4d17b4809",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7ac9b233-0a1e-41f0-ad58-beaa79e2b3d9"
        },
        "item": {
          "id": "482db0f3-d81b-478f-a6d7-87db21814f8a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "964b255b-f97e-46dd-8069-dcac9df599a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc76362-27c6-4738-bfba-af3e3b4f7738",
        "cursor": {
          "ref": "4dce2deb-3e85-47aa-800b-bfd5cc8a7044",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "75a82782-aafd-4450-a7c0-3c80b54f515e"
        },
        "item": {
          "id": "8fc76362-27c6-4738-bfba-af3e3b4f7738",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "95ec0132-25b4-4d64-a11b-5a174c881c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fb67ec-9b00-4098-8678-903b56014d93",
        "cursor": {
          "ref": "a0dce4ce-31bb-4af7-94d6-bf9ac9252b67",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "85ee9045-6347-48cd-b31f-307375165e1c"
        },
        "item": {
          "id": "42fb67ec-9b00-4098-8678-903b56014d93",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "822f7dfd-96b8-4597-8df8-aeef2f596a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06549916-3084-43e8-ac61-b7f86cdcc5a8",
        "cursor": {
          "ref": "dc234617-8085-4ee6-90e7-ddd9280d8715",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b2d70d6b-3453-4e47-951e-98e62e107613"
        },
        "item": {
          "id": "06549916-3084-43e8-ac61-b7f86cdcc5a8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2abcf082-889e-4a64-abfb-5f8922ee2ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c82cc26-5826-4d14-8263-7c2f27be8793",
        "cursor": {
          "ref": "502fd809-cbda-4f8b-8eb6-536a1bfee782",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8ba8e5dd-2b14-4f1d-947c-4ff8b1dd3eed"
        },
        "item": {
          "id": "3c82cc26-5826-4d14-8263-7c2f27be8793",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d55fb03a-d47d-415f-b9a2-2a546544632d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54198ed-ca18-4284-ab64-c26e0c422f1b",
        "cursor": {
          "ref": "58f2eea6-7ba2-449f-94fc-81cc833e6e5a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bf427b97-6398-44d6-86a8-c8a01b41c1fe"
        },
        "item": {
          "id": "f54198ed-ca18-4284-ab64-c26e0c422f1b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c3ddba14-f4e7-4dda-add0-78059e3f2a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6dbdce-4c64-4dde-9b82-50e806868bcf",
        "cursor": {
          "ref": "14223a0c-02e6-47fe-bb8e-e0f3212dc366",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b8385246-f560-47be-bbb9-ef120be1d9ce"
        },
        "item": {
          "id": "ac6dbdce-4c64-4dde-9b82-50e806868bcf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9e2b5c33-a471-4d21-bb9b-1c1989981fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afdc760-a527-4346-87f9-f92130003a0b",
        "cursor": {
          "ref": "bb9c5788-3153-4fa1-9290-50306a67c7e0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "146a2f3a-3814-4bec-9ed9-425ab6322f50"
        },
        "item": {
          "id": "7afdc760-a527-4346-87f9-f92130003a0b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2998aec2-7a01-41ef-8865-ebe2d536292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1bae54-fbee-4509-957d-983e8824a2e4",
        "cursor": {
          "ref": "88c9beef-215c-4d5b-bd29-c695f7b69625",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "217d30f7-3dec-4204-919d-61a70422bcb2"
        },
        "item": {
          "id": "cd1bae54-fbee-4509-957d-983e8824a2e4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "07019fab-3885-45c4-b851-947673375e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b200d918-7c58-4d0f-9146-fd0a6b5c36e4",
        "cursor": {
          "ref": "9d404812-1829-4bad-b0c1-b4febe4bb086",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "69fae5c8-0265-4fda-b7e1-a24cbafc8ad3"
        },
        "item": {
          "id": "b200d918-7c58-4d0f-9146-fd0a6b5c36e4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d011dca1-d377-44e1-93af-2ac4868ef3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bc5c1d-04e3-400e-891d-2de2971f7478",
        "cursor": {
          "ref": "e2cb8b8f-f102-427e-8255-be417ee491f7",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9a106121-d579-4418-bd0a-653902c3aac7"
        },
        "item": {
          "id": "30bc5c1d-04e3-400e-891d-2de2971f7478",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e5245dcc-da94-4160-9d97-1ab78a2bbce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39d54d6-92b9-44ad-9878-357e201d0c16",
        "cursor": {
          "ref": "a0c74d11-3924-4484-b079-06091bf576e7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "87fd1d72-e04f-4b48-a0e4-ed0a9ba803fe"
        },
        "item": {
          "id": "b39d54d6-92b9-44ad-9878-357e201d0c16",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bddbca56-a156-4c78-a6b8-1897d61ed938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35105762-a7ff-423b-8748-d4f2c916dbc4",
        "cursor": {
          "ref": "def3db26-16b2-474b-aaab-af5ea68a6462",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2bc860a0-3565-4f7a-9005-c51a380736e2"
        },
        "item": {
          "id": "35105762-a7ff-423b-8748-d4f2c916dbc4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e040c94-d367-4ead-9957-0bdfba22844f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673608b3-44da-4ca9-87d9-616c580bd49b",
        "cursor": {
          "ref": "27646ae7-9bd8-4415-83b2-f0b67ef0f7fc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "05cef0e5-0aaa-4ff4-8882-c4a91b01c0ab"
        },
        "item": {
          "id": "673608b3-44da-4ca9-87d9-616c580bd49b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ac16e81b-156c-4f8f-8914-409b883afbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d3aa97-0697-4a04-bef9-bdb7a68dd500",
        "cursor": {
          "ref": "e47fe257-4702-4ccb-8263-b6bbbad36174",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6a00e31d-4010-486a-987a-7e670b7404bc"
        },
        "item": {
          "id": "f8d3aa97-0697-4a04-bef9-bdb7a68dd500",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "72c6f565-04fd-46f6-8ece-77b2cb283fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418d59a5-dc19-4791-9b7a-95f93b48097a",
        "cursor": {
          "ref": "6930ec74-7bef-48c7-a741-df6db721f6d8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bea80b80-3ff8-4911-8339-36b58553468c"
        },
        "item": {
          "id": "418d59a5-dc19-4791-9b7a-95f93b48097a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "86fb1134-aa02-4894-a230-d737e3dca055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb31b3f-0903-45f0-869e-f3dcf1e46253",
        "cursor": {
          "ref": "cdf43322-9c8e-4112-adcc-684d25a0ac27",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0f278256-2449-471a-a98b-2bbe0a7d2260"
        },
        "item": {
          "id": "0bb31b3f-0903-45f0-869e-f3dcf1e46253",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d7b7fe0c-9577-408b-a0b0-856efc63bbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3cbba4-501e-437c-8ad5-e6b651daf7c9",
        "cursor": {
          "ref": "370981f5-9610-4675-a449-33c9f27e4182",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1659adc7-ef14-4b89-a17e-128efc4416e7"
        },
        "item": {
          "id": "5c3cbba4-501e-437c-8ad5-e6b651daf7c9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b5953981-bcb1-4ae0-8a5e-5e35314a7f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbf22cd-cc04-444f-8d29-4d5febaf2757",
        "cursor": {
          "ref": "6fa43620-e77e-4ab2-a3f0-d0ff8e93788f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7ed5f096-79d6-4dee-900f-7de9f21daab2"
        },
        "item": {
          "id": "dbbf22cd-cc04-444f-8d29-4d5febaf2757",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "efaaab56-d526-468c-801f-6677551c8a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d154a15-763c-411a-bcd7-42f608a92ec9",
        "cursor": {
          "ref": "2f0cb8dd-f587-4e32-a9d6-1c0391604ed0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a299c50c-3bad-4392-8e92-c9422c5d5983"
        },
        "item": {
          "id": "9d154a15-763c-411a-bcd7-42f608a92ec9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "771ff452-8ca8-4f00-81e8-556866f2cc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c8e637-3a0f-4022-8201-fab8dad18597",
        "cursor": {
          "ref": "8a68f508-4841-4517-a6fb-215885378936",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "11b9f34f-d35e-449d-844c-24be46a76dae"
        },
        "item": {
          "id": "71c8e637-3a0f-4022-8201-fab8dad18597",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "655c57f0-1093-4d7c-babf-d7ee2cfbe46c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80936f2e-a865-4271-b298-3afbce64f36a",
        "cursor": {
          "ref": "d983faea-82a4-48cf-aa89-5aca9dbb37de",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "82d5c0d8-0270-4c34-b1e3-3e374ebf3dcb"
        },
        "item": {
          "id": "80936f2e-a865-4271-b298-3afbce64f36a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "518f564b-2f8e-406a-8bb9-3553f139bc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cdfa58-8f5a-482c-ab7a-d268ac6304b8",
        "cursor": {
          "ref": "73824c41-8dc0-4a26-9b9c-d9c0cba67bf1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "707de53d-be85-4048-bc8d-2179b126e5bc"
        },
        "item": {
          "id": "59cdfa58-8f5a-482c-ab7a-d268ac6304b8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "db40ce9d-5fce-4678-bbe0-bb3350937120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f3828b-1156-49c0-b227-cd48b3427fc0",
        "cursor": {
          "ref": "0e3f68f7-cd49-4891-b55a-76f2958674c2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6aea8cc1-9782-4ada-bcc9-af8bb8f394c0"
        },
        "item": {
          "id": "37f3828b-1156-49c0-b227-cd48b3427fc0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "812c50cd-ba3e-4a06-bc38-d116139829e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425315ba-9c73-4586-8e43-1b046f4ebf63",
        "cursor": {
          "ref": "1199dbb3-f815-45c6-880c-84edc89e24d9",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9bf6c0bc-08c8-4775-b081-093e0a02789a"
        },
        "item": {
          "id": "425315ba-9c73-4586-8e43-1b046f4ebf63",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "35a82bde-394e-4b5f-bce9-d54a9d157adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3c15a6-8034-4d91-b4f1-aa1a958a01b7",
        "cursor": {
          "ref": "ba07757b-8710-4cea-89b1-b977d9889cd9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dc3377db-2570-4fb5-99e1-1cba1bc01eb9"
        },
        "item": {
          "id": "de3c15a6-8034-4d91-b4f1-aa1a958a01b7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6c5ed5b6-ec81-4573-9509-59ac4157d833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcbb33d-1748-49da-bdd5-325b14aa4a67",
        "cursor": {
          "ref": "19b2d5d5-e438-4dfe-af8f-e06122dfa721",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7edbca8f-909c-4912-b957-afba5af39292"
        },
        "item": {
          "id": "9fcbb33d-1748-49da-bdd5-325b14aa4a67",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "27322804-7b0e-4e86-94d7-09903779a500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c7d8ff-43e8-4b91-8b8c-a103bef75936",
        "cursor": {
          "ref": "a71079c1-dfe8-4a54-8e75-d40a62a0d711",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "38b42857-b5cc-40a1-b93b-156e60fcfd40"
        },
        "item": {
          "id": "e7c7d8ff-43e8-4b91-8b8c-a103bef75936",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1f886b22-f3ae-4273-8b52-ba6781244f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87fb20e-c62d-434b-91cd-c80ba0bee6ae",
        "cursor": {
          "ref": "74fcb579-3749-42fe-8a66-4726c678b763",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b1c7148e-65ed-4a79-bbc3-f50ec4cc7fdc"
        },
        "item": {
          "id": "a87fb20e-c62d-434b-91cd-c80ba0bee6ae",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fe4a67dd-fb78-4adc-a605-91d50e0d956b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43c0003-f008-448f-bb81-2734de83cf1f",
        "cursor": {
          "ref": "86b3f1ea-29f3-4a94-b0d1-c60e736890a4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "942b536f-23fc-407d-816d-8930990fdd59"
        },
        "item": {
          "id": "d43c0003-f008-448f-bb81-2734de83cf1f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "890dcb93-68cf-40f2-957c-e0b2658dc152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac73f5e-1c84-4740-82f8-679908107097",
        "cursor": {
          "ref": "9e533361-0b0a-43cd-a1cf-0cc39b52134e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b8b20381-996b-40b8-8406-07a2c6d0d1bd"
        },
        "item": {
          "id": "4ac73f5e-1c84-4740-82f8-679908107097",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3d40cf6c-f8ea-4ed5-95cd-ae7c2aaff1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c07ab8-a348-435d-87d6-e6b12b6d952b",
        "cursor": {
          "ref": "1a798868-68c7-4d3d-bafa-c0d2d9b56572",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a6030121-d15a-42f6-8dd3-7bf3ef75a1a6"
        },
        "item": {
          "id": "27c07ab8-a348-435d-87d6-e6b12b6d952b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8101cedc-f6de-47b8-b8a1-81ed4da7597b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0a083d-ea75-4042-a1cb-34e3f81c3833",
        "cursor": {
          "ref": "46f64416-8be9-4797-af6d-b0cc4132c58b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b2afbd51-1986-4a3c-9144-65b3f7d9f3b3"
        },
        "item": {
          "id": "2e0a083d-ea75-4042-a1cb-34e3f81c3833",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ee3c26ce-20de-4960-a130-9b7782cad930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14c6360-13bc-40e6-b35d-589a25208c97",
        "cursor": {
          "ref": "8ba04ce5-11ea-4858-b24d-7094bc3f69f3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fa190cf9-3f18-4a91-879c-826f4d789317"
        },
        "item": {
          "id": "c14c6360-13bc-40e6-b35d-589a25208c97",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "60bd27e5-c364-40b8-97b8-0e5b85f56b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fc3818-c9db-408c-b5f0-4c9de4cb26a7",
        "cursor": {
          "ref": "8ab1110f-36b5-4dd0-9be2-2011ef420b35",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3662c6fb-64e4-4595-9ca9-923579c67239"
        },
        "item": {
          "id": "57fc3818-c9db-408c-b5f0-4c9de4cb26a7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e08c6250-f6df-4cd9-bcd7-6d4aefc22d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4e245a-7f12-45e7-b950-a8c817903354",
        "cursor": {
          "ref": "ecb19b10-b1e8-4062-9053-4fec33fb7edb",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9b7d3479-04e3-4708-a309-1c8244a5e0a6"
        },
        "item": {
          "id": "9d4e245a-7f12-45e7-b950-a8c817903354",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4af3b43f-65b2-4909-804e-b8ac3ed9f217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455399d6-31c8-4f1b-ae19-801c63e3e0ab",
        "cursor": {
          "ref": "e03413e2-58be-441c-8627-c9687dd5a439",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e5ffc75f-6934-4f4b-8c57-8927acc135d7"
        },
        "item": {
          "id": "455399d6-31c8-4f1b-ae19-801c63e3e0ab",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1cd7c3b5-6375-4283-9c71-e98f8ed16535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8770d015-10f0-4298-9d8d-b4a47042fbac",
        "cursor": {
          "ref": "df7147a8-0d1c-485c-9837-826b52a1a78b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2aa688e9-4863-4c4f-8cf0-0a7e6bb7ce5f"
        },
        "item": {
          "id": "8770d015-10f0-4298-9d8d-b4a47042fbac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b9b426f8-d578-4509-951e-7c890ffd7c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce00868-56a5-4921-8f8c-9651eb034933",
        "cursor": {
          "ref": "01edccc8-8c21-4eaf-a36d-f26538bd4ef6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5ed586a8-ddc9-42f8-b43f-928b8948a521"
        },
        "item": {
          "id": "9ce00868-56a5-4921-8f8c-9651eb034933",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0d12037c-2175-497f-8ecd-13c877c09b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da55b06-1506-4de7-9932-2afb6fb9e9dd",
        "cursor": {
          "ref": "ccf6b528-186b-4cf6-9898-8eb65b681513",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5f913337-0ac3-4df8-8d25-481933ed550a"
        },
        "item": {
          "id": "1da55b06-1506-4de7-9932-2afb6fb9e9dd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6ab9f974-8b28-457f-8af9-291fb508f8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a66f3d5-e0c8-47f8-9e8e-6cf261048be0",
        "cursor": {
          "ref": "f78cf979-5cfc-4c5d-8198-bb00f35b4e1c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "17a04c10-4c95-4bac-846d-03a0753b4eb3"
        },
        "item": {
          "id": "7a66f3d5-e0c8-47f8-9e8e-6cf261048be0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e6eb9737-6bea-4eae-96e1-3636910e9c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cd7ade-aba5-4fc0-8b71-ef2e8f4b0fcf",
        "cursor": {
          "ref": "cf6f69ba-3452-44c5-a824-bcb0241ba771",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "87d11af2-2995-4b8b-8a36-ea4529dac326"
        },
        "item": {
          "id": "b1cd7ade-aba5-4fc0-8b71-ef2e8f4b0fcf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "80318a08-56d0-47d2-9060-0d6166cedbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a67c61e-73d3-4703-afdb-85473ad54177",
        "cursor": {
          "ref": "8e72d796-73b8-4d9f-9529-bf17af579ffa",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b979a459-6672-4a6e-8e79-92309f98d3cd"
        },
        "item": {
          "id": "1a67c61e-73d3-4703-afdb-85473ad54177",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "344e0c13-89b9-444e-b4b2-fc96c673d6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e4413-ceb7-43d0-a498-6444302fe5ef",
        "cursor": {
          "ref": "0dfdbe70-d043-4364-96a1-0cd879ae8cb5",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f4a622a1-5e6b-40fd-b5fa-92cbb1d91d13"
        },
        "item": {
          "id": "196e4413-ceb7-43d0-a498-6444302fe5ef",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5abb9aaf-2fc3-4465-86d0-a32f1c4bd196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecbdb12-a21b-4e37-926d-0991a8de35ad",
        "cursor": {
          "ref": "aadc7dda-3acd-4e36-9016-bb3bb6399278",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eb3e9a0f-ad5a-493d-97a3-694c860a7eff"
        },
        "item": {
          "id": "1ecbdb12-a21b-4e37-926d-0991a8de35ad",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "af575328-540c-4cd3-9059-f5629b858b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8158daca-4913-470a-9fd2-78b76efc3b83",
        "cursor": {
          "ref": "33ab7a88-ee31-4ee7-8d8c-ba0ecff09138",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8594ab15-beb9-4ed5-9559-0b357d0fcf08"
        },
        "item": {
          "id": "8158daca-4913-470a-9fd2-78b76efc3b83",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "171b5b25-9580-42e6-a69a-67ddd3b8ffc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad74464-f82c-4c2b-aa37-961c81adac14",
        "cursor": {
          "ref": "3f1556ce-e859-4836-808a-e3ca528b3a49",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2255f9c3-6ac2-4166-8ef8-f73281ada7b3"
        },
        "item": {
          "id": "3ad74464-f82c-4c2b-aa37-961c81adac14",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a6c2f145-d518-4e4e-a27b-c2165bd70285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa330424-4cc6-4ca7-983f-e507c130d97d",
        "cursor": {
          "ref": "ad30e11a-9091-432f-88cd-cf8a46a26af4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7e330f67-22ae-468c-92a5-8767be734d2d"
        },
        "item": {
          "id": "fa330424-4cc6-4ca7-983f-e507c130d97d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "45b6faf9-c73f-463d-a73b-4f9d7e881f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689c3b15-61d7-4d7b-bab0-7e98f84e9f6a",
        "cursor": {
          "ref": "4cc7fb66-3394-47a8-a2e2-0f2196237355",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0f1c2794-3163-4138-b57b-bdc2102a36e8"
        },
        "item": {
          "id": "689c3b15-61d7-4d7b-bab0-7e98f84e9f6a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9087ec24-d8ee-450e-9a2e-7e84b9d13869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d839a6-a9a8-41ba-a901-70be06797ea2",
        "cursor": {
          "ref": "e4e9b679-8e11-4267-a961-8597c14b0342",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a41b65f2-7220-41b3-aa40-965efda11633"
        },
        "item": {
          "id": "07d839a6-a9a8-41ba-a901-70be06797ea2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0ac07f74-5c6a-4430-b2ab-9b9b7fe4cc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ba5c0e-677a-4a5e-a1be-96973b4d7616",
        "cursor": {
          "ref": "af415010-7fbc-426f-aa91-33c7919abed0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c0a75feb-b71b-448f-95bf-89d32b83ff0a"
        },
        "item": {
          "id": "d0ba5c0e-677a-4a5e-a1be-96973b4d7616",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb294562-ff1c-497c-a510-5d8ee18a0b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f583d1-05b1-49ca-a8f0-1261ede91ca0",
        "cursor": {
          "ref": "8c034ab6-6b0c-4ce1-baa3-a67a5a0e743c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4f05b15d-5072-4c4b-bccb-4b2d0c7e9f2d"
        },
        "item": {
          "id": "87f583d1-05b1-49ca-a8f0-1261ede91ca0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "56cf9a4d-5930-4f61-bdf5-3c602d3f63cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cee3310-66b0-48d9-8fb6-5668fd489ccb",
        "cursor": {
          "ref": "c338abe5-2f27-45f9-9875-4cdcb1450fb9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2c4f5275-4e91-47c0-b443-cb30bcec3156"
        },
        "item": {
          "id": "2cee3310-66b0-48d9-8fb6-5668fd489ccb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "686386ef-1c32-47c2-bc7d-1dd35888f46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce994f4-03b5-425f-802c-03eddf306fa7",
        "cursor": {
          "ref": "6ce0fd9f-a5c0-4448-ba39-4680abf5ba74",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c5c1d981-05ff-4af2-a3cc-7c9fe8d5619d"
        },
        "item": {
          "id": "bce994f4-03b5-425f-802c-03eddf306fa7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9451ad14-a18d-451a-b6a7-b00963be8188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77793263-730c-4a93-a2a9-c95909bb7ffe",
        "cursor": {
          "ref": "95e52570-06c8-4f89-9a9d-9e8a5b41f2c2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9b0039cd-d02e-492e-9c81-a30d56730bb6"
        },
        "item": {
          "id": "77793263-730c-4a93-a2a9-c95909bb7ffe",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dcdd6341-85c7-4c24-b68d-06472f8203b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a108df-cce8-410f-8efd-0e7ec7fc7e42",
        "cursor": {
          "ref": "f87c1874-6f03-4cb5-a8b5-bde670c20adc",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "43170e63-cce5-4c1b-aff3-267b74e8a471"
        },
        "item": {
          "id": "13a108df-cce8-410f-8efd-0e7ec7fc7e42",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1e307d77-7e82-42bc-9bfa-5e81b82da50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35291b8-8c96-4432-a726-d09e4816bfea",
        "cursor": {
          "ref": "3051d7bb-1db3-4d7e-8dc5-e180423ea83c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "02bb46dc-d7a5-49e3-8ba1-6652317a4c75"
        },
        "item": {
          "id": "e35291b8-8c96-4432-a726-d09e4816bfea",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "04430a4c-65cb-4979-abcf-a2913d02da65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b75b46-d234-4975-b7a4-f6f7e976b4a0",
        "cursor": {
          "ref": "2fea06a7-8874-4bce-ab66-afde4c56b54d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "47a09790-f451-45c1-9462-d34cafe90315"
        },
        "item": {
          "id": "07b75b46-d234-4975-b7a4-f6f7e976b4a0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "56e3cccd-9250-48e8-bdd9-c1aa1124baff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0789d49-a577-45b6-a1b9-947ed82f47b4",
        "cursor": {
          "ref": "b68333f3-e7c4-44c7-90ea-62fa5aee6470",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5bc0e864-0c79-4116-b0b6-c7f6e7e5c586"
        },
        "item": {
          "id": "c0789d49-a577-45b6-a1b9-947ed82f47b4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d34d1710-ff08-486d-ad27-db5112314237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8b8f73-629b-4b53-9c4c-a118965cf63f",
        "cursor": {
          "ref": "a6efb757-9bb3-4caa-ab79-ec8933162464",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "74261b53-2d72-4525-8d0c-34c9f2e1fb25"
        },
        "item": {
          "id": "dd8b8f73-629b-4b53-9c4c-a118965cf63f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "db40f32e-0d09-4cc3-8341-550c4bc7377d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb70d7a-2148-4ef9-a7bd-e8f3cc4cedbd",
        "cursor": {
          "ref": "a55273d1-5bc7-4ec1-ae88-a9a4c56fff5b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4fe6dfcd-42eb-451a-8c0d-befb5db5507f"
        },
        "item": {
          "id": "7eb70d7a-2148-4ef9-a7bd-e8f3cc4cedbd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b01a2708-58c9-4020-bd69-656901c371e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd82d5b5-18cb-49cb-b45d-a0b094887834",
        "cursor": {
          "ref": "db8bded1-e597-414c-8631-560a2ba6d6ff",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5eccbc44-1fd3-4796-988a-4abf68f98850"
        },
        "item": {
          "id": "fd82d5b5-18cb-49cb-b45d-a0b094887834",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e3b82977-9f8c-46a6-8041-c53084b19851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d636da51-1ec9-438d-856f-537e9ab5b7c4",
        "cursor": {
          "ref": "ab9c15e6-0b5b-482d-b2a5-884ad7ff34cd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f1e06352-c3ab-4b17-8d1e-2750d0cc9529"
        },
        "item": {
          "id": "d636da51-1ec9-438d-856f-537e9ab5b7c4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "156880cb-8f19-4a93-a258-93231797df56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93fe163-317d-4bd9-a5a0-ce92416184e6",
        "cursor": {
          "ref": "c32b33de-fc46-41b4-8a68-49175e8ff056",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1413f761-2cf2-4c92-928a-09027b105f35"
        },
        "item": {
          "id": "e93fe163-317d-4bd9-a5a0-ce92416184e6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b0dc9c12-af88-409c-ba86-557c145e2133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feebe88f-91ea-4f0f-b000-db26e6ca4292",
        "cursor": {
          "ref": "467df528-94c0-43e7-8dd1-03c962c78043",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e70eab6a-93dd-4756-9b7a-9da2faf0b7df"
        },
        "item": {
          "id": "feebe88f-91ea-4f0f-b000-db26e6ca4292",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5d41a014-6535-4008-840c-e35baed7f31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f688d059-adc0-4298-9d10-12aafdef4a68",
        "cursor": {
          "ref": "8f67f827-4d57-4fe2-9537-474df19216f7",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "de756385-bf9f-4d16-b0eb-2f2d5a833f64"
        },
        "item": {
          "id": "f688d059-adc0-4298-9d10-12aafdef4a68",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f3be442f-d233-4aab-ae30-3bd31e23c97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178d7bf9-007d-4969-9dc1-7d7e5e51bbf5",
        "cursor": {
          "ref": "b9ec7357-5bf8-41d5-8d5d-42672cfc8f98",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4fd7d44b-4c06-4007-a442-dbf642f27e89"
        },
        "item": {
          "id": "178d7bf9-007d-4969-9dc1-7d7e5e51bbf5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "968e651e-7be9-495f-9754-85762caaae90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97197c38-7e89-4b14-9ac3-5214e5368c97",
        "cursor": {
          "ref": "0d7eeef6-b8ac-4bf5-8835-13fb5b7a8a1c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b391381e-ad51-4b89-9cfa-9628c7a0157a"
        },
        "item": {
          "id": "97197c38-7e89-4b14-9ac3-5214e5368c97",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "02e779e8-d35d-4549-af66-283ee39c9df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f781334-8681-4b1c-a413-a7cd9eb277ac",
        "cursor": {
          "ref": "7f66c0c4-71f2-4b7d-abc7-07c360e1c404",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "676e118c-ad3e-4501-b8c0-2d2d085d24fb"
        },
        "item": {
          "id": "6f781334-8681-4b1c-a413-a7cd9eb277ac",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0699c2b2-9498-4718-ab1c-91e06b677eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a63fc3-eddf-4960-a45b-49ed4199dea9",
        "cursor": {
          "ref": "a0cd9e84-4812-4ce4-a12f-dd079a8f82b5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6a5a28bc-abea-4df1-8db9-46de6f419d0e"
        },
        "item": {
          "id": "07a63fc3-eddf-4960-a45b-49ed4199dea9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "07eeb38f-a0b1-43bb-8ba5-e0b4601035ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5615f2e8-6e6f-4c83-a52c-eeff2faf8c4d",
        "cursor": {
          "ref": "a808fa8d-528e-4dbc-a103-b47afbdc7cac",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0bf7bb14-2d8b-475a-ba1f-84720b3be278"
        },
        "item": {
          "id": "5615f2e8-6e6f-4c83-a52c-eeff2faf8c4d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6c8a3e81-cb36-4b9d-98b7-e8aae8535b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb44660-250a-46df-b189-16d0c2ef4e4e",
        "cursor": {
          "ref": "7412c12f-162c-43e1-82b6-aa40f7b7a2a0",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1d4fab92-bed0-41ec-85e2-f898e4bc7114"
        },
        "item": {
          "id": "fdb44660-250a-46df-b189-16d0c2ef4e4e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f6168bef-bc01-4460-94bf-6a93a82154a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d244ce3f-3ccc-4ea1-9559-8fbc922412b4",
        "cursor": {
          "ref": "be78758f-a1bd-413d-b116-2e436d6dedce",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6e9b34bf-8a72-4c96-b13f-982df9db2378"
        },
        "item": {
          "id": "d244ce3f-3ccc-4ea1-9559-8fbc922412b4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "35d0fe6a-dd47-47f2-8b14-030877998ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d70e0a-5f25-4064-81d5-dd72bf52ee51",
        "cursor": {
          "ref": "63c84c95-0b1c-4408-b601-62984eeb007e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c0c23d09-e3f3-402d-815e-966feec4d085"
        },
        "item": {
          "id": "73d70e0a-5f25-4064-81d5-dd72bf52ee51",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b2c2b7c7-4bcd-4cd5-922c-23a1e49037e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071cafa2-ac0e-478f-a3c9-02d482e2ccef",
        "cursor": {
          "ref": "c3c93fa5-c91b-487f-beab-c95690464050",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e02c4b56-a04f-4e54-911d-8146592aab4b"
        },
        "item": {
          "id": "071cafa2-ac0e-478f-a3c9-02d482e2ccef",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b28e7be9-027f-449f-b558-fe273a1464d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd275552-5773-4ce2-9a83-a91554103a2e",
        "cursor": {
          "ref": "4f4cc052-b62e-4954-8cfe-d8eaa1d0ceea",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "14094e89-c066-4748-b855-72ed7042dc7f"
        },
        "item": {
          "id": "fd275552-5773-4ce2-9a83-a91554103a2e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "451991c2-0878-4699-beae-517e2f8511b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364c0729-0604-4e6f-8473-d2846dfd8e4b",
        "cursor": {
          "ref": "73f15424-55c9-49f5-bfc0-2d259f3ddca9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e95a4eb-2117-47dd-bd8c-48653570536d"
        },
        "item": {
          "id": "364c0729-0604-4e6f-8473-d2846dfd8e4b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ab464ce4-07fb-4bc7-9fd4-c31dfdbd77b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf9dce0-b1cc-4fa1-ad43-0f9a0bc97e9d",
        "cursor": {
          "ref": "391616dd-57b6-420d-b508-d54dc8c1abfb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "879f44de-2914-441b-a60f-ef45df2998bd"
        },
        "item": {
          "id": "3bf9dce0-b1cc-4fa1-ad43-0f9a0bc97e9d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0175a28b-856d-4f6e-9a62-47b2c750c88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423a548e-eda7-4588-aa8f-54f83f4fde3b",
        "cursor": {
          "ref": "7d9f0f52-701f-499f-b9c7-cb85738c5d74",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5296e7b8-58ea-4e4f-a140-a2960fdbac7a"
        },
        "item": {
          "id": "423a548e-eda7-4588-aa8f-54f83f4fde3b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4f6b5e1e-325d-4c9b-9e51-7a5805dc4f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41b4956-33f1-48fc-8bf4-79ecefd2855f",
        "cursor": {
          "ref": "1d78b1ed-faad-4937-8a5e-a3e18fca7f08",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "066adb2a-e2fe-45dd-bb1e-10ced1dbb658"
        },
        "item": {
          "id": "a41b4956-33f1-48fc-8bf4-79ecefd2855f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ad5e6f73-7087-4031-9093-a1bf7ccd083e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d054ee97-7607-47fc-887c-b7285b9fff0c",
        "cursor": {
          "ref": "84a3e4c0-27c1-4237-b889-b983eaec7d87",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1d653e6a-6ee7-43bb-8842-18e524e871fe"
        },
        "item": {
          "id": "d054ee97-7607-47fc-887c-b7285b9fff0c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f53b22a7-09cb-45de-ad45-5b0daf6d9d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc27e84-d7c5-43db-b1bf-60d770070076",
        "cursor": {
          "ref": "8d5bbb57-19f9-4363-a09a-6d398a0874aa",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0ef113da-0770-4fd3-b658-9fbc0831d59d"
        },
        "item": {
          "id": "0fc27e84-d7c5-43db-b1bf-60d770070076",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "060e8058-a108-47b7-99e7-85300ac3c9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a75858-2688-483a-bf69-15bc5ec646a2",
        "cursor": {
          "ref": "37c4d26e-d3b2-4beb-a274-9865005d3342",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3d300a07-b3f2-454c-9fd7-8d46daf21c8e"
        },
        "item": {
          "id": "b2a75858-2688-483a-bf69-15bc5ec646a2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f9e43dec-4818-40f2-9384-7c931df7dc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4b8ddb-625b-4006-ba2c-7e04c4ba1098",
        "cursor": {
          "ref": "4d60c58a-eadb-4a37-92d1-f3ea693a3bb3",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d2f0d8d1-0de0-4e52-8d0f-0a2e3e9a4a91"
        },
        "item": {
          "id": "8d4b8ddb-625b-4006-ba2c-7e04c4ba1098",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e7f5d66-5d68-4994-aabc-ec1c96909316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b607f5e7-4b04-4721-acb0-7602cbc6cb86",
        "cursor": {
          "ref": "026506f4-e488-469d-b865-5393a87e06e6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2224d539-20e8-4743-a31b-ea905961b883"
        },
        "item": {
          "id": "b607f5e7-4b04-4721-acb0-7602cbc6cb86",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6e6ec459-3a30-41bc-a06b-bb6c824815a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cb6566-bfe1-4163-9415-75cb688c3192",
        "cursor": {
          "ref": "2b72ada9-8e62-4915-a791-7ab2c17effa9",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9c24a90b-fb7a-4861-9eea-a7de086b8e7e"
        },
        "item": {
          "id": "c1cb6566-bfe1-4163-9415-75cb688c3192",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d1aee14b-914e-4906-b9a6-95b6b678e207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc383a7-70a8-40a0-8ea6-b59ad69f41a9",
        "cursor": {
          "ref": "e128b60d-346a-4e78-aba7-66d3abce23f9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1d7f90a3-4c9e-4830-8cf8-a42c2be6c92c"
        },
        "item": {
          "id": "bfc383a7-70a8-40a0-8ea6-b59ad69f41a9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1fc6648a-53ac-4078-ae48-14d118b39fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1364b008-26fb-4c32-b832-c252d1742beb",
        "cursor": {
          "ref": "b340b142-83c8-4fe4-a8b8-981fdce8c188",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4cd74fca-5b8d-452e-91a3-15afb8e9b9a1"
        },
        "item": {
          "id": "1364b008-26fb-4c32-b832-c252d1742beb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "330f1867-06f4-46de-aef6-c911eb402608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eabc0d7-92a6-4acf-9cf1-5a6b74560b21",
        "cursor": {
          "ref": "9e6170ee-64ac-4dd1-b5c8-9e104b18a485",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3de65f84-2aa2-4947-875a-163f9e76eb82"
        },
        "item": {
          "id": "4eabc0d7-92a6-4acf-9cf1-5a6b74560b21",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "294d0e7f-3d06-47eb-aef4-382057302f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d422a042-6416-4cb1-bdc6-d9ed61164da4",
        "cursor": {
          "ref": "0ef40110-89e5-4df6-bfe5-683938d78b9e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bacdebed-b3c6-4416-acee-75a8d2cc6f9a"
        },
        "item": {
          "id": "d422a042-6416-4cb1-bdc6-d9ed61164da4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bc70a9d8-759e-4765-84b3-68a8c8662e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8a76ea-91d8-40f6-aabc-7fd0053bec5f",
        "cursor": {
          "ref": "e32d2691-7798-44e6-9b16-7bde34432bc0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5b1f6547-297f-4061-959e-14fd462610b7"
        },
        "item": {
          "id": "1f8a76ea-91d8-40f6-aabc-7fd0053bec5f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "65edb32c-b5ca-44b5-a073-0386ca4bb25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38395a01-fe1c-4523-bfd1-d2e22489c01d",
        "cursor": {
          "ref": "259d6e07-d09d-477c-812e-a5718bba616a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6d3fdd08-43e2-44e7-ba13-5b3305e942a4"
        },
        "item": {
          "id": "38395a01-fe1c-4523-bfd1-d2e22489c01d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "52a1a55e-27e2-4f48-99da-9445988c3a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545a8d7f-fecd-4f8c-bd1a-b3f4773ec549",
        "cursor": {
          "ref": "0bb4e5af-325a-4ee4-8212-6c85c5ff72a1",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e9992796-3a06-4234-b964-bd8dd51b94c0"
        },
        "item": {
          "id": "545a8d7f-fecd-4f8c-bd1a-b3f4773ec549",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4fa9bc35-e87c-41e9-b393-9e78ea6657ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1448b757-41fc-47c4-9955-b18db725442a",
        "cursor": {
          "ref": "539e2774-1f99-45a7-81c1-34c635a46179",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1ac5122e-5f6e-4136-9cd9-1e9db5a85d5d"
        },
        "item": {
          "id": "1448b757-41fc-47c4-9955-b18db725442a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c57e98a0-4a1d-43ea-b6ba-b81748c1750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b83618-1896-4850-8d4f-8f55a98dfbfa",
        "cursor": {
          "ref": "78e31427-59e6-4985-b296-38da86bbdbf4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "04c42664-f276-4ab0-b857-0a93cb889fae"
        },
        "item": {
          "id": "61b83618-1896-4850-8d4f-8f55a98dfbfa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "31559802-10a6-4a57-83fd-56731791b531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53b01bd-78bf-4ba9-b4aa-9f2f30d17e0c",
        "cursor": {
          "ref": "3f9ae708-c9ee-46a9-b2ab-ea2bc6908bc1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "00518d3a-87e0-4ed7-8c5d-31cb2be45e62"
        },
        "item": {
          "id": "a53b01bd-78bf-4ba9-b4aa-9f2f30d17e0c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b25ec4e3-1e2f-4f0d-83e1-4e8396943580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1d8a21-83c3-4c51-8e6b-a04ee477539a",
        "cursor": {
          "ref": "e9c6056f-e878-40dd-b14a-290a866855b5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bc6b92b3-46dd-435e-808f-f8a29cc258e5"
        },
        "item": {
          "id": "ee1d8a21-83c3-4c51-8e6b-a04ee477539a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3cb79ec2-9991-4607-914c-a70793a47274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03387c45-44cf-4fd3-b244-a2d0ad469280",
        "cursor": {
          "ref": "4ff74cfb-fb2d-4574-94cb-2f721eb21d17",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "24e318bc-6446-4855-9b88-05fda0f5df09"
        },
        "item": {
          "id": "03387c45-44cf-4fd3-b244-a2d0ad469280",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "090e8697-c6da-4d98-93a2-d8bf426fb1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5949b4-bb95-44fc-bacc-0257b7abb415",
        "cursor": {
          "ref": "e444ca6d-a9ba-42bc-b587-e3b2ed315138",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4563092f-b3ee-4791-9a13-baa89da4b011"
        },
        "item": {
          "id": "7b5949b4-bb95-44fc-bacc-0257b7abb415",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "44857be2-2d61-4618-8322-b11f390829c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f6527-6bfb-4f46-b470-a5c9ed26fc66",
        "cursor": {
          "ref": "81ca3fa0-8f39-411d-a464-7bebf4aae85c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "867c17b3-a9e0-4d41-823d-b8989cdc1c77"
        },
        "item": {
          "id": "b33f6527-6bfb-4f46-b470-a5c9ed26fc66",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "843ab899-e8f0-425d-8c3d-98b518c9429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205802e9-b9b1-4c6d-bbd4-23e521caa98c",
        "cursor": {
          "ref": "f0618a11-86d5-46ed-946e-4468a0e64482",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e4695800-7dce-449b-8a56-5cace2fc9354"
        },
        "item": {
          "id": "205802e9-b9b1-4c6d-bbd4-23e521caa98c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "89f790ba-9bd8-41cd-aeb1-79cc7445f897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec53756-6916-4ea8-9edd-4cbc5d8ba4c9",
        "cursor": {
          "ref": "9e2bdfd1-44f6-426d-adeb-65b16a438e94",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4e4ed9e5-4c4e-4d6a-a5ea-6b0aec268e80"
        },
        "item": {
          "id": "dec53756-6916-4ea8-9edd-4cbc5d8ba4c9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b56d2768-c5d3-4218-a67f-1b161eb30dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc04233-c247-4662-82d7-c0b7a4edfa88",
        "cursor": {
          "ref": "3c110218-71e5-4551-bb54-6f61efca9224",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "57a25e01-9e89-49cc-9ee5-28919516fefc"
        },
        "item": {
          "id": "3bc04233-c247-4662-82d7-c0b7a4edfa88",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f7573828-cda7-460a-9832-ae99c27c31cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8a24ed-7b1c-4042-9360-7b3f367aa3fc",
        "cursor": {
          "ref": "0755653b-f564-4a6e-ba0d-93f7308e8a73",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aa9ab151-649d-4258-b4f8-57fe4509baad"
        },
        "item": {
          "id": "da8a24ed-7b1c-4042-9360-7b3f367aa3fc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "84ef79fd-639e-43b9-942c-b8f112457a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cfa15d-537f-49a0-8250-36496f511880",
        "cursor": {
          "ref": "94749b91-9c24-48e3-938e-3508d8cb689f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7da84b7b-b653-4430-acb7-a9ae4198dc3a"
        },
        "item": {
          "id": "70cfa15d-537f-49a0-8250-36496f511880",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "626963ff-420f-4054-bee3-0f3d454734c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc24acd-1ecd-4b1b-b6f9-03b8e2ba57f2",
        "cursor": {
          "ref": "8558804d-7aef-472d-8b4a-ca42a87fbdf7",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "85868f89-43fa-4460-ad96-17ccd12c9a1d"
        },
        "item": {
          "id": "1fc24acd-1ecd-4b1b-b6f9-03b8e2ba57f2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c07d4c8d-581a-4b6f-b76c-beb9c606710f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8616bcfb-2fed-47c6-b0f1-292861731393",
        "cursor": {
          "ref": "cfaacb62-15ea-472f-a9bc-720e93cb0990",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "025bea7e-6963-4e78-b53e-10add24ae397"
        },
        "item": {
          "id": "8616bcfb-2fed-47c6-b0f1-292861731393",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e0ab8a61-f622-4b60-b7fe-1519bdebd999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5658b6-8fd8-4276-82de-fa2303dcfff9",
        "cursor": {
          "ref": "a1be83d0-ac7b-41b6-ae98-493fc485fba4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "95a86be8-2ad7-49cc-8182-fede1efc1d4b"
        },
        "item": {
          "id": "ac5658b6-8fd8-4276-82de-fa2303dcfff9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "709c23a1-ca34-45c7-82c1-bc88fc0ff7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3dccde-33a6-4f35-ac55-8b56b7b96ce3",
        "cursor": {
          "ref": "66d5910a-c1e8-4bc0-b690-4cfba7a0999c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "643d0640-27ca-47cd-895b-ab1ddab11409"
        },
        "item": {
          "id": "0a3dccde-33a6-4f35-ac55-8b56b7b96ce3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e08a1e33-bd58-4a67-ac06-0288e7bf2649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e633de-2465-4f79-9a4f-04e879422597",
        "cursor": {
          "ref": "238661de-3d80-4db8-af35-e2d3db886af1",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7bc342b1-2410-4130-9f47-1fd31576b13b"
        },
        "item": {
          "id": "b6e633de-2465-4f79-9a4f-04e879422597",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "edbd7e09-607a-4fdc-9f95-e75258d94fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225d3e7d-d766-4b74-88a8-21015f095b17",
        "cursor": {
          "ref": "719a6e69-5980-4141-8cbb-5cb1887d3bb9",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3a000d9b-0931-4198-b989-56a8d8224699"
        },
        "item": {
          "id": "225d3e7d-d766-4b74-88a8-21015f095b17",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6eaff1ec-5705-47c4-8577-faeeb807c817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b80012-18f8-430f-8b01-47e9f9018af2",
        "cursor": {
          "ref": "980830c2-9df6-47cd-9476-5d7bf6697cc2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7c67ff5e-68c8-4abc-b355-cde38cd00d25"
        },
        "item": {
          "id": "34b80012-18f8-430f-8b01-47e9f9018af2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b9ecd2ad-ded4-4a4f-ab90-f6e7385dc588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942a7fd5-b268-432a-bcc4-ffb322814eb4",
        "cursor": {
          "ref": "99939aca-c717-4add-b3e2-257483a9f2dc",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2fcf304b-845a-4f0c-a1ab-3b3d1c902010"
        },
        "item": {
          "id": "942a7fd5-b268-432a-bcc4-ffb322814eb4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ea446b1f-7dd1-455d-aef6-31e5c698fe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d77950-3d2d-4c30-8b50-bebcce88343f",
        "cursor": {
          "ref": "edb1c78c-f255-4ca3-817e-274698670301",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a4b96984-edac-44c1-93b9-00cb1bd7cd44"
        },
        "item": {
          "id": "19d77950-3d2d-4c30-8b50-bebcce88343f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "33059ccc-970a-431f-ae1f-ca0cc0ac54ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b26a36-891e-48ec-83a5-d89fdc3e3f4e",
        "cursor": {
          "ref": "061c1971-ce4e-4076-9e2a-1ca41ac960c9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3d56b6ac-b6f3-4d47-af93-109c6d5edebb"
        },
        "item": {
          "id": "c0b26a36-891e-48ec-83a5-d89fdc3e3f4e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8dab1262-5c4d-4a71-a878-f5ecbdd1fc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181cbc32-73d0-4af6-bb7f-894669c769e1",
        "cursor": {
          "ref": "2c34b7aa-74af-4eed-aaaf-9d7ad7123d89",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8131440e-dd18-4c4e-b754-ce985ae4dc29"
        },
        "item": {
          "id": "181cbc32-73d0-4af6-bb7f-894669c769e1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0b52cd1e-60dc-4971-8d48-ecb52d06a779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56cfbf8-0417-4689-ac2b-91e5fe723237",
        "cursor": {
          "ref": "7fee5a01-26f8-469b-979f-e449cebcfac1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4775f3bb-4878-4b1f-ac0a-729e1945fc5f"
        },
        "item": {
          "id": "c56cfbf8-0417-4689-ac2b-91e5fe723237",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6badedae-fa93-4b34-9a9d-0c30af13aebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbbfb4b-6895-4676-9ed2-10ea6dc35c14",
        "cursor": {
          "ref": "3391cede-bd1f-40ed-8625-024fa328d302",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6738e727-f824-4ce1-b38f-94e762cb33f2"
        },
        "item": {
          "id": "6bbbfb4b-6895-4676-9ed2-10ea6dc35c14",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "505657f0-9497-44ef-a31f-1d37126cc659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7405a85-357e-4ef3-ae00-57cd96e18e24",
        "cursor": {
          "ref": "3f7c6ab9-5abd-48d6-a8f2-c6bce74f6ee9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e9ed71cc-dcfd-4325-9ad3-88d7d12b26ce"
        },
        "item": {
          "id": "f7405a85-357e-4ef3-ae00-57cd96e18e24",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "85e523ab-4721-4f27-b147-ca35200f0cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08498a2a-e921-4877-984e-3ab8d8a488b2",
        "cursor": {
          "ref": "83fa97ae-e69a-4758-8715-7e8ab7461f1c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "385faad5-4440-4c60-b59f-d9ae136ec585"
        },
        "item": {
          "id": "08498a2a-e921-4877-984e-3ab8d8a488b2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "604d3119-c3ec-40f8-9ab2-1cdaf245a4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "3aefa402-6bbb-4ded-bc32-2938880c9abd",
        "cursor": {
          "ref": "d98438a1-284d-4d64-b9c7-986123dc9b19",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9971d467-2658-4b10-9075-7fe06b51e643"
        },
        "item": {
          "id": "3aefa402-6bbb-4ded-bc32-2938880c9abd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "abbc45b6-34a3-44e5-b395-a8e1a58596fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f85bb2e6-4d12-4fcf-af4c-26c79a15cbb6",
        "cursor": {
          "ref": "01671595-2147-43fa-abbb-a1b60c25b468",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d142a6c9-87f1-4223-a07e-29988ed067fd"
        },
        "item": {
          "id": "f85bb2e6-4d12-4fcf-af4c-26c79a15cbb6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2cdced9e-e62f-4149-b6db-fd3b395f718c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "353c42f3-7fb6-4505-8bc3-c5acf68a5b6a",
        "cursor": {
          "ref": "0b82c84e-a35c-436e-bffb-8d88ce238dcb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17292756-c436-4273-87b4-238f46d9733e"
        },
        "item": {
          "id": "353c42f3-7fb6-4505-8bc3-c5acf68a5b6a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06c562c4-23f4-44c4-9780-54405c31c4b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353c42f3-7fb6-4505-8bc3-c5acf68a5b6a",
        "cursor": {
          "ref": "0b82c84e-a35c-436e-bffb-8d88ce238dcb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17292756-c436-4273-87b4-238f46d9733e"
        },
        "item": {
          "id": "353c42f3-7fb6-4505-8bc3-c5acf68a5b6a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06c562c4-23f4-44c4-9780-54405c31c4b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae60b7d1-dec5-40f9-8882-7ffcad2c11c0",
        "cursor": {
          "ref": "3c304ff7-9bfd-4d72-b25e-feccf8ec42bc",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "61c305ac-157f-4f3c-b231-06125a74abd0"
        },
        "item": {
          "id": "ae60b7d1-dec5-40f9-8882-7ffcad2c11c0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d15480c1-5145-4868-9fe6-e451e7b3a5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4612b44c-4b93-4e9c-b3b9-f864244daebd",
        "cursor": {
          "ref": "90079244-f037-4de1-ae0a-d5a826effacc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "635de39d-248d-48b2-8d8f-82ee8919dc60"
        },
        "item": {
          "id": "4612b44c-4b93-4e9c-b3b9-f864244daebd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d9455abe-5001-4591-a004-bd06d2c7b331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}