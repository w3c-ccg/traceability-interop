{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1e343ff4-a007-4230-838b-1b36fd98cab9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "73158d4d-da7c-40c9-a97d-4778aaef2307",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6db2f257-0ef5-4573-bda0-ad0a433ab67e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0f8e2935-8190-4b12-baea-27c7730dd298"
                }
              }
            ]
          },
          {
            "id": "003ac0c4-bcf8-44ed-b536-f1862d36b226",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e104c2b7-05af-4540-9c8f-cb83febdc157",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bfa51fce-e43b-4f0c-b7a0-e07089e7ec85"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9f841085-0ea3-4200-a5e9-000227785001",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8efbde41-595b-478d-aaf0-3d93cf0406d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d6a12a9-73db-4b4f-8d73-f8c5e3fc423e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1611d796-6e54-4cb8-a0cc-219aa02a894c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92471f85-0c19-4ada-b71a-69d44584d271"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee9c351b-9450-47ac-b65a-3c4d4f81836b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35b8960c-d2c1-44a4-b7dd-69c0b41e880d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d88a72fd-d2d0-4b66-9b86-bb241ca10693",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7870bfa1-2391-40d6-8bc3-2f5f4557a8be"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ae72ee5-6bee-4494-b026-5add7c747b22",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d1826219-f4dc-4b91-858d-d6729b106111"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14b03f4e-d6a7-4e44-9f06-2f591fd60446",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6af6bd54-e7da-43e1-a85d-4fa3d6315d83"
            }
          }
        ]
      },
      {
        "id": "0719c45c-0793-4ca7-b563-7674907c9830",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fce9c065-7ac9-4b9c-aed7-9475cee94fc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b92f6e61-973b-4089-bc2d-cba3537c7669",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce219ac9-8a93-492a-9cc6-028c2f6499a9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4f362d-725d-4056-aa43-3bd515d53615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3b01707-bcbe-404d-99ac-15039562bf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65362584-c459-4c62-adc2-36b5d6398872",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fbee13-1f7b-4ca2-9a18-0c749bbd14f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d68a279-eb86-41db-9a17-d642988bff92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b265ad1d-d300-4f3b-adb0-7db000080b3b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2cab7b-3ee3-4eaf-9ce5-1d4e818e9397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "baee76df-8c12-4a65-9a38-487ae7206777"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ba632d0-f96e-40a9-bc5f-60343d910bd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb49dbfb-958c-4523-8309-f4639598099b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cf6046-7e2b-4bd2-ab59-824ca1b65ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cd06493-d83b-4174-a58e-73ce69d4995d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed54f4fc-0fc8-486f-bb8c-ff7c7c27395f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9b50ee-e970-48a0-8f07-0f7d7d446069"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a178a355-37b3-4725-b2e5-6a20d7538539",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7e3fd44-72d0-4844-818c-4935e3d16b67",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aae256e-5493-49a9-b369-142729861194",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6c1e018c-7193-417d-a2e0-4015d2d77192"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "877328fa-06f2-4096-854f-8db5997198f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ef16efc1-d659-489c-a0c9-8fac8e8247dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49fe22f3-db9a-479d-bb49-5aef4245518e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "370ffd74-9e85-4ed8-b723-14078a289604"
            }
          }
        ]
      },
      {
        "id": "3992571e-36cf-4773-8de8-26eb03a717bd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e1dae314-8f34-4b8d-89b2-8e385655ba28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ec6372e-0594-432f-8619-1e024dca94a2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "92a184da-8115-4f8b-adb9-d1c7027232bd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a87322-83ea-4df8-a0f8-795ab85bfeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc37c4b8-f486-40b7-ad6c-bb628ca00bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29da8b33-e43e-40c3-9c22-35eae361ce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "129c7e7a-8fa5-4e22-aad8-a16d570ddeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d97309-ca0b-4aaa-8f93-a852f4dec130",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d11f4d-3cac-4097-8cc1-0851f673ac6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7344642-5b77-442c-b77f-48a9a07c3293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3e720b-f7ff-4ac1-a3b9-3f68817782ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47cb282d-1b4b-4591-915f-c8f99ec282e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30faa3a-1992-432a-86f2-5897d8031fb7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfb0cf2-28b4-48e2-8b48-42390f628459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f23e28-478b-4b3a-a453-7361e586ec3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfe3411-d266-49ac-860e-8ed5405fefe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a50f10-62be-42de-9ac6-c3b68bd1c209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e48c57-fe78-4dc6-9434-1a470d84e449",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfb0ffc-0443-4911-84ab-2affbeb70c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96138804-66e0-41c2-a023-879f9e2c05c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd58262-4d39-4a64-a4d6-58da96591b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "252a9e3e-9bdc-4914-b11f-812c7965378c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce125243-dd79-4001-9bb9-09fd856c54b8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8569d2-d951-462f-858e-49dc332477cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60e9de7-e590-4723-be59-4f0b59c6657d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac759a88-b40f-420c-8b84-ab508226fedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7be053cf-e7f4-45cf-b0c1-747a881d30f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e4d674-b4dc-471b-98ac-840df21dbd38",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37d166a-76ca-4585-9a88-0f6160e26553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abfa0ee-f596-43c6-9364-c5999cfa6603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ba13ac-16c7-48bf-9be3-5ad3438ffbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcb15175-a5a3-4f94-8757-b14c5044c6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205cfa0b-96a0-45ae-83d4-00a0298b4dce",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12799126-b66f-4ced-9c6e-8205d3bf0b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1feeeddc-f8e2-4cca-b04e-a710a59f886e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06638a05-a238-48c1-9f60-c607dc1fbf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87ab0621-86e7-4dab-9c9d-9748c51c4821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852f240c-e856-451b-b9c4-44d0b5346055",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b95a333-6431-4939-b3c6-a1d77abf4185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb56ed4-4f13-4261-8618-7b9be0ff226d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8bc52b-003e-449a-ae4c-8e4f133dadd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b97c216-23ee-4820-805e-7df082f060e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd38a28b-5ea2-4b34-b54c-2a0560c10fd8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f9db3-2dde-466a-9036-052201339c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f495366d-36a5-4b8f-8ac3-22521c2fc46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4f07ab-4299-4b58-a4e8-df2e1ecea527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da439cc9-ad89-4e02-962e-20f8208ecb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442c1237-1bfc-44aa-bbf4-c307144750af",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f5be3d-5c7f-4445-bc23-2e3bfb0cb16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82884cd-1659-4eb2-a9b7-a92f0573315c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641f6b87-2bb9-4bd9-aa5e-08fa0bef206e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4d09c1b-a164-4f85-b248-09d18aac913f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336d09b7-5f11-4c44-bbf1-2861f7d2e5b5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a306939f-5f6d-4801-b7ed-674a5f7d1743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdddc15-38eb-430a-9315-4579d2410dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de056624-c0b3-47b7-9773-0873c6f54d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f6723ff-68e5-4428-b98c-3b6856de2355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d522e37-9c43-4399-a747-47de3b55118f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbf9f9a-2593-4bfb-b69e-c2046bec80fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab005df-8d19-4306-97ca-ef776b74f00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a618a90-5c73-45e9-9569-30283b761b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5deed75f-4ec4-45da-9b55-0b29099b921e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90a1a97-8d25-489b-97ed-382fe29db4a0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92497e04-a7fb-474f-a492-bb83a0866f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ff823f-cf60-415c-b921-3a3deb6c029e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029ba21a-6d52-401b-9d2e-f810a33a883b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afd76e27-e737-446f-ba33-75d62115ae13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa20864a-f70a-40a8-a838-0960850d0a05",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e5df21-25c3-468f-bd39-a86a845e88fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0099e7fe-de70-42d7-b060-5dd90374345c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2e21e0-9b56-40d3-97c6-350e634c411d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d2f1866-2dcf-4812-81b9-17fc03437f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f08e7e-910c-45e6-ad99-47bce66d44d9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffceaf79-8c72-46c2-a5ad-b7b626f58e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506b48a5-88e8-4287-8da2-6103f752ce41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4074c711-0fae-4e7c-9c66-1a47cdb57708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "835895ab-9b2e-47bf-a6c9-d0d1ff4f9a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24923b2-4b80-40cb-8d25-b33e1bd6ff7f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4277259-be5f-4c95-bfee-047315770488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8f8bb2-345c-465a-80a6-4b6961558f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64071b7-eae1-4a62-9145-2519f79baed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de0d3ad0-ae9b-4c9a-a514-b03634f54e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f86129e-17fe-4568-a05d-a82176ec9676",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a15918-5a4c-41d7-9ed9-99ce170404ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b85a4b2-b50e-4180-a75d-07620a368a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a716bde6-9cff-42ae-88bc-fb835e8ff775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b432c36-af37-4b2d-9558-345fcf5e041b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fa0f89-7a4c-47eb-8e49-2ab06a7698f6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3938fa-e1fe-4815-9460-f933d3c673c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d36d3b2-85a9-41f2-9f34-1fafba5825c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e639d35-6751-4fc3-ae88-c7d6e99f5ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6872e790-8328-4242-aea6-4364da499cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce75f33-5ead-4a46-9dfc-a65a64aa1e01",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b82dec-f9ff-4ba1-93d8-4b41ef8fb521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8994eed5-ccee-475a-8b71-0316dd5b7acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be40f4c0-1cbb-4200-8e5a-8754b7315bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "916b73a9-b5d5-4f21-939d-b0ed61fd1cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e92b18-2eda-4d63-bafd-2a1a56fdc869",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d30d2c-a490-4f97-9696-814a17a1a9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049e1662-cd64-4cb1-bb48-5040b142426d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b7db43-2ad1-4344-8265-cd2362dd28d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a53e8217-2f42-433c-b1d9-f1a8bb8ca11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdc98f4-3f88-4e6e-adc7-25950677713a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c971d9-30d8-479f-b37b-8fe9b7330cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8ec9d7-9bf2-40b6-81d1-134a7f8cf94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b19806d-7401-433f-9392-af49023ea157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a9ef2d-0059-4c95-900d-1e9c6e0d6524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2043f79d-cdb0-4c43-a20a-24563a99184d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8b4be5-72de-489c-ac20-5fed37671efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4c3748-45e4-4984-b8e0-677136bab54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b3aee8-0bfe-4ead-95af-9e9360137c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c69aa8b-1668-437c-ab69-026c37969a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e5b151-be79-4e5c-b379-587f40465ddb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c352a5-0da0-4071-9eb5-1f6bf5893f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec38bbe-c3a3-49fc-8a3c-56005188b0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35e0d87-f610-466a-9331-d1f48c6d7873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bed637a-2ac2-4c62-b2e0-3e8f1ba622dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a515b3b7-a153-4c80-bd4f-b65ebfcb8d61",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37229305-c537-43b2-8752-be0dc8b0e25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05245136-d727-419b-a542-18420330cfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5d66b3-1624-4528-9fc5-5d38b6b84d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10983b9d-57db-4435-b48a-053bfa4962d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b411b5f7-6419-4c5b-bfcf-2d3ac1fd2cae",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e644c8-9232-4341-be36-53c8ad61095a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35351bd7-c8ff-4e92-aadf-9599023a4cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d813195e-5bb8-47cc-b11d-df8d9e29bd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73570242-ad4a-4a65-aacb-1e7bf50793c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056b0893-35c7-4309-a3c0-13df108dcf7f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c5e80a-a6a4-4cd5-9f62-ed37e2c8fe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff513aa-a79c-4e44-bb63-dc27b32c76ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38ce554-ea9c-422a-9f69-6c58cb1a7a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac00c324-b7d1-488e-9503-ecc1e4d0b363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50780197-7d13-4c86-97b7-5b19520940e1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70b5e6f-f075-40f2-a742-fbf3c1b38897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6e566c-2122-4d0d-9fbb-2ea0da091441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6f1f5f-e0d2-41a2-989b-6fb6a34571ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7311c58a-7e3b-4b49-85b5-381956e32cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b85775-ad77-4a56-b642-5dc8ac1892dd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9722c6ed-10c6-4fb1-b555-2ade9a5e49a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641bd156-f366-4f36-89ad-73c0e3530d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078d3c9f-f6dd-4508-b464-8b12a8490853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e95947e-b35f-4b9b-b3e4-a142eddc300f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e951f7bb-73da-450a-bf45-67e1217ab614",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acdb06e-7b2d-48ae-9be9-8719bc681deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5af0e61-fc8f-4cca-aa63-961c89ec1f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bb0f29-bcbb-4650-b1c2-8d63ab5bb419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7648f9b-16a2-4dd4-8531-83ce75c13403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f13268-df59-4452-a3b0-7dfd915804fa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9c22c-2fd0-4556-b278-ba03c3322331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbb68ba-0fc1-46cd-bf38-1fa09a62f7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2013b1-00bb-453c-a2b9-0fd472a1ef40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "41c09f9c-af70-4c9b-aa90-718c413e8f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6767aea-7f55-4965-b60a-d984e714b447",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2eb950-d2e0-49c5-bd35-25744217a093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674e5c00-5746-4e53-9a24-60132606ddd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2845dc-4532-402d-847d-8d7e76f5529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "211e81ec-8742-4378-a53a-88f08c662325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4566f6d4-7bf3-48e9-8a3c-e27eff3d010f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6514d15e-356e-4f0e-bce7-0278fa9d2a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a695c35c-4c70-46c0-9846-aa642cc94916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fd7628-2c79-42c7-83fe-d8279bf0b80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf9cdc6-83fc-4d20-bdcf-283eb5e11530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bb7ec2-9381-4b7e-935d-00179391b996",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466167f1-4f40-425e-b9ba-d7510e172db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e61ac5-52c9-450e-b83a-50c617079a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2004c07-4286-4214-83d2-993cdb537e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d1d9d8-a511-4eae-80f4-89a7ac5058f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9713df98-f471-4567-aafe-ad203998724a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbd51f3-57fa-4f74-ad7a-527fb4236c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a1c337-af7a-41c4-a065-6aa77989bc09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b56f7f-faf5-4421-bc75-cee7b51f9d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0badfbe6-1e79-4566-a4b4-ab9a5bbf5835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aab7fc2-ecb7-4846-acdb-0b80fecdbcd2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b447e761-eafc-4eaa-be61-26dd31bbe5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c335a3-3327-44e0-89e6-cb6846593547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed7cc6c-867c-4f8c-8b18-64ab8a909062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9417281c-21bd-4678-aa32-585290747f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f0ff34-cdf6-4ccd-a207-cfff4e6393f4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e1b8e1-d441-4efb-bfde-a4c13aef61ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6341fc36-b4e9-4100-9a51-e2f1c42bbcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2076fa9-ff89-4de0-a2f1-a563c2bc83e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f774e60-d71c-4c9b-be92-ff9e4cfafb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616ca6e3-d7f1-4595-a89c-4a3758adf0e6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b2f304-8881-4fe0-ab4b-39e23f78d977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee1f0c6-33e6-4c1c-ad1d-8b845c7559ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2e9bf9-2c37-4f77-afb4-16999d656178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8b295f-dc03-4566-985f-5e69cdb02c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541a2ef9-4b90-4606-9f7e-7a8eb28eb4db",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398ac12b-b4fa-4561-8092-e226190613c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8e8d8f-37c0-41db-b200-7cc2c99592d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffa824b-f706-44d8-80f3-9608a243d0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e811b0d5-d39f-498e-821f-8ca5dcb3fa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7990df3-df7e-4f3b-884f-2df29098b0cf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2528b7-2521-4d12-86ca-1fdd39a47ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed07ded8-f902-49ed-aeea-629b2cbd00e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250e2ed3-6d3c-4973-9da4-bfbb45e67f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c5fe37-6376-452a-b889-c8296d972ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b315b1e2-a998-4365-8659-492bb3292525",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8304dc-09bd-403d-a33e-7daed5471440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8859f222-9376-4db4-9d75-677497497e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f83cd31-2a78-4671-9180-2f74805a8907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a51811d2-f2df-43f3-95ae-8c2f5a0f3b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24b9091-3bab-442d-9baa-b1ad53eab3be",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b035ec10-3124-4c82-9ed5-55319e2ceb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b64b147-62e6-483c-a550-9a3ce17d3606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91eab21d-ef3e-4e13-abaf-3de66b048b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d62be67f-3790-4523-94c7-6cd376709477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0f0beb-4d72-4aae-b85d-f69507bb9c5e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead8de86-dd9a-4cb6-89d5-dc6f6ea820a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957e850a-aacb-4d3f-bc63-f46863a05a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f29ab5f-1602-4fc2-afcf-33fbb0315119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "350b3ec3-0885-4301-843d-e9b31dac8995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c121bdb-9de4-4edd-a0a7-665843ca594f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e598ea19-7042-4a64-b828-30e5957d99d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75125c3-16fa-4550-8c24-dc4e2f85e0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29243b75-345f-4ce7-83c3-94e9c53e0916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae00b0f-98f4-4409-acb9-05e5780a1b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2368b6-c722-4bc6-b671-2e0770803e65",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62be847-6480-4883-813b-4efefdc57eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8f9f6d-5d1d-4e65-a5b4-9dbf548de031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78a2fc1-77f5-4c9a-88f1-7d3704348b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a268ea-9188-42c8-af52-f3667cd18ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87ce7eb-17fc-4a9a-9567-504f01b1fa41",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2a7d57-cd33-47cc-a891-347a6c5ea46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a22c97-f1e1-4555-9675-51d3c480b1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dbd92f-e1c4-42a1-919d-31e0790f0440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9460701b-ea22-4dc5-bf0c-e9d5e0214727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2dd5c2-1b99-48c5-8964-fa856d4de926",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3889d6-7c38-4dd0-a8fc-0152058e58cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e176d21c-27ca-4545-909c-c6c388340416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6391edf-ed9b-4e0a-adf8-70366c69c6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a491dd34-6ab7-49d5-83cb-f535077b19d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b728d87a-c1e9-418c-89ae-87c1f96ac6ea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b91ef5-54a4-4491-bd4e-30fa52a0fb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ee6117-0739-41e4-af96-7851edba45ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286c6f14-ee44-4755-b840-d19c578ec9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f0c7e4-bed0-4978-8787-b30378ad26b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8d2d41-9bc1-4184-8859-0dbde707b74b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fec9b72-d51f-48dd-85c7-2c70765c1dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bb1440-d620-49ab-9438-b52ce87cb0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdc4401-d5d6-4721-9eab-75c5e8377ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d557804-35c4-4062-8407-8eda7e6d9c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf796fa-13ad-4903-a87d-3290622a74c7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec86d566-f163-413c-a180-5067fd53244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4561437-99bc-402e-8e75-c847eb0f0e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb70a7d-54e4-4124-95a1-cff312cdf413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f149b547-a23e-452a-9f61-fca9cc76fade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb5cf65-3851-4503-b5d8-5f7c0dc646ef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a04eb3f-6127-4ee9-a58e-d493252bbb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09eb58a5-b7d9-457b-8373-9fdd5f83988a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fc05d5-0cc3-4468-a163-8cf901b9241e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cad3024-33ae-44c9-b021-5a3bf6b4f63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1af42d-81af-4be1-a8e6-e1a562889845",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81793b5e-69f8-4fee-93dc-fbe9a5767f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebdd2aa-cfa8-498b-84c0-c5ce9e419ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d58831-d519-4385-98ba-8bf087499256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b6be96-9ffe-4d52-9efd-c80d710e50e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef328bb4-54a4-4794-898e-4047be6710b8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1049ee46-101b-4740-a82c-8b69b9e8c5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8da083-60b1-49ef-8100-65d10cc9a58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1e1db3-80f2-46b0-85e7-30e110994002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c272fa-2b32-4c7d-a944-a3f8c28acfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568c3d58-b3e7-4a2e-bc86-1e19f4915ebf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d419549d-7f14-4f96-b15c-df1151a78298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf82b4e3-f3df-45f4-adc0-e9982cf20205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dea0e27-1e8f-42d8-bd59-7191092c81bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a29a4c09-f498-460e-b6c7-e68e71c6ee5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93b11c7-6e35-46f4-b02e-cce82509d457",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aaf710f-7178-424b-b9b4-5910503be864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db08e165-7567-4b08-bc1c-7a880df1db4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111af237-1bc3-4254-972a-eb7814034ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b58a27ba-9920-4f59-8a65-ab5ec6b70e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7331d927-703c-4bad-950c-c63bae776f42",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a65362-c75a-4798-a3fd-59f9fdaa1a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dab4fa-5dbd-4351-b4e8-4f37ddfdbb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12140f4-eed4-47d0-9cc2-f4fca78ff850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23d10b14-b6cd-44b7-8e35-35c258a22a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f03373-b138-40c3-ad74-8d18f315efa0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a260be-f2db-4c0e-9de5-1ab170baa7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1eb58b-c47b-4285-b811-959a437b916c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67979411-bbd3-4eda-9339-44c59e60a769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bb3c5c-33b4-4c37-b817-4d44cd8a4d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27207d06-33a4-4ad6-a653-b873f2d2663c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919b44d8-d994-4fac-8034-bc7a4a17fa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b332903-17f6-4938-ab92-02c3f1e9daa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c8dc52-c118-4899-9650-b000b1dd1c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b72c877-3a1c-418a-8772-bf17708d9423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e5a222-3b01-492c-ae2b-d08bb94e4d1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5e67cd-da7d-4fe3-ba8e-64388b866573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8846426b-0d92-4196-9c5e-318983356af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c979d34c-d368-4cd9-a4cb-79393626b07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c31b8063-a2ae-420c-992e-0dece99ce8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2586a9-6d5f-4cfa-ac31-688ec2541f81",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c142f76f-f0a6-4996-b155-394ace282740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c5757e-34c3-4ef4-a454-e7521f45ba88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30725f0b-7fc3-4286-a9e3-8d88b22fb3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f718b2cd-7972-43c8-a5aa-ba2abf380eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb82b64-afe9-4f5e-92ab-a9e267a729ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09e93bf-1eef-4643-9e79-ac22cbf19bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f333393-c37f-4ead-b841-5eeb350ef77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af82fa0-c217-4d3d-8489-eb092e90380d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95c9b925-1be8-4d57-8d11-be0050681bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8654d7cc-4574-4276-ad88-df0761a2672a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40af013f-4dbb-4e0b-a50d-16bde7dddefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929ef52f-8ca2-4a51-bd6b-e43d6b4871e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a7bb80-d5c2-47ca-a8b1-5b2fba5ef3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af3baab-51e2-4f44-bdea-3f98cf572a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5bcacc-6747-437b-b76f-1073580e2724",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddd6849-be0a-471d-bf8d-ca9f0de465cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cbbdb3-bfec-4028-9d6a-dd7b917f4386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359518b0-6a0b-4139-b2a9-e943f721f253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff917b33-6569-4268-8936-40541665da74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d5b05c-6638-4ced-a191-d41e7ba30971",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b6a09e-37ab-438b-b551-a1869c4495af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4a65d9-c529-47dc-bd37-478f73020b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e8b876-cf89-4abf-8ca6-308d81fb90b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0b5b4f-93ec-4f1c-8bfb-435e51fafd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384461cf-9468-4443-8fd6-7c3795ccc960",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562ebd0f-9d87-4a4d-86ae-035b287226a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273cc77a-58b9-4b3f-8093-5acbf0486921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c4db65-f372-4aeb-b9d4-6798386be61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b03780fc-e33b-4dd0-a44d-132e2f83e70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a8e573-46cc-4ddd-9377-a1f90a478553",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7271dab5-7445-4a0e-8a81-fca02318c8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f69e9c3-89c4-4671-9dd9-bafed50f137c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997789ca-4e7b-460a-abb2-010a12faafa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22d155f-4a47-42d6-873b-4038ebbcad5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acbc463-cb15-4ac0-b3b1-4f3e9baf9774",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc136b88-9370-4a99-8cc2-72989ff6474f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c7d2af-52fc-43a7-bed1-91dc89e1056c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0af60d-8d1a-4ff9-8dae-4d0b84ffa684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3238456-f7e3-416d-9bfd-7f6ded3d42da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118d8a02-ba9d-4637-a07a-101967fa75c7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bd1585-aabf-445e-9ac1-a7d9de047616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8b56fd-cdd8-47d7-851a-e1c5b1a4e810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e006ef17-a68c-493c-bca6-d0f64db88f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68a13d8f-8f9d-46fd-9b81-5daf267ccce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de40b13-0091-4785-b5b9-a03fd6fd827a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c7cc1d-a4d1-4537-b588-9383f8aaa7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e5e7ad-f25a-4db6-a735-86671f50111a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3960ba74-0087-4c49-8742-99ca037445b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "38127109-85aa-40f5-bd3f-3baf92a1eb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0794ca78-0454-4255-b08e-4aa770e6f1c5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a74d49a-440c-42da-b9c8-37853717fbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45358ed-357d-490a-b3b8-44b2c72d1464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b272c3-34e5-48ff-b2cf-1c419539eae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd59488-22b5-46a9-81c8-2e8f2e7781e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc1028e-1249-4ecd-a11a-11f09a4f6a28",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1716810a-dd0a-482e-80fd-25901e092526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185e8248-d860-4ff6-bf13-1e2aa4a54909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d587867d-f60c-4d37-8e5b-8fb576a929c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "879bbcab-67ca-4d66-a977-9224ffb14bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739f6e7f-47e6-4076-9852-38e0fb4cbd05",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fdbf00-3a49-4eb7-8335-95350812ccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fc3e48-8482-4f08-94a8-6b6b878d5793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd877db8-5201-476c-b03e-7d3684f1f2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b55d3c3-9a99-4b39-a28e-4db49aa064ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fcd774-5163-474d-bc79-bedccdfe333a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d777ff-11e6-44df-9c14-f1e6cb90bda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c30a884-a18a-4b4b-900d-daefc27fbd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24e67b9-a417-46ea-a36e-eff4d2f20893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac8ac06-4ce0-476c-bc67-dd27e129ce57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1a87f7-c59b-4026-a6c6-309b20c1cd29",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b33e5f-1419-40db-894d-56e9b1a4c7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af60b0f5-5f6e-4059-87d1-ad54525572ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240d5192-4747-4a1d-b465-4deb72cbd1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2219973f-9805-4250-8d2a-2ae456c886a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ee8a56-cb66-4638-a6f5-52ed17856f51",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264baa51-fea6-41f0-b8b0-9bd755f40285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d242c2-ccd5-4839-a11b-d4d3e8b8607f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831a6237-3911-4309-96fe-da0a31fda9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6df2cd5f-ba60-4609-b9db-5388eb4f7d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab92bfe-db26-4e80-8e6b-74ced109e10e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b322241-3983-4452-9aaa-f84670729914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcdd6aa-115b-4405-86c9-b27c335229f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659cb24a-2bca-47ea-b364-64106a8ab276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9168ddbd-555a-404b-b4dd-61435477b29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba16b20-7455-49a6-a49a-7dfbb3cf2855",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d9a00c-fe57-425b-b94f-d1ca1c24577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd04023-6f56-4d76-b12a-c117a3a9af39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63beb50e-e5e9-4f3d-a562-1cfe5f246716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31819e1f-c513-46d7-bfdc-f4f1f8536175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57d070f-63a9-476d-957d-e9fc205b8f98",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652a061b-38ee-44a0-9ea0-60d3a9704c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90f8507-04d9-46e8-82c2-26b8b6a0c686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de98e246-6a88-4285-b93e-d2f7ef099a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b36ba9-fa6d-402e-86c5-279ab6768951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636f7fc9-9cd1-4be9-96d9-79bcf830380a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9e54d4-1560-4db5-a935-eefcb45a814b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f2db61-a99e-4bd3-bfcc-f087a0fcef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a704c4f-d79d-499e-b76e-80bb173b0b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3991a67-b50f-40a7-8c18-b8bbfc6f15b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae72c5eb-273b-4c0d-9085-62647bc284fb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea8aad0-f1e3-4a4b-9b37-3d35c2d466c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560551ee-046e-4afe-8ce1-e13cd153c7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b488312b-3ebe-405e-b22e-cfa8d17f7f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9af003d1-2577-415d-8664-c47ed8e94d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c31c24-5bdc-42eb-835d-07b1d8bfb813",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e418643b-18d5-4155-b3c4-6d664ed67a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6843a520-31ab-46fb-a520-762e74616f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeeca93a-ee93-4b02-a2e0-a40bf4739a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99e47348-944a-41e2-a2aa-1de05ae52733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e48466-36b2-4f0f-b40a-61a2f2393734",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeee1aa9-fff7-40f9-8c41-5c9a05449928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4429dd-f578-4361-af3d-aaa2da187be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6438a2b3-5484-47b1-80a7-d0d2654d49ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9563b8ba-22d4-42b1-a15d-f46b00ca8020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a62d90-9362-4219-a21a-9648fbf6660c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56f93a5-2bea-4c1b-8458-5c67855afbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539e5944-d369-4cc9-883b-10fc4c58456b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb0698a-6c9c-499d-b39c-b7626c061d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d81eb9b-73ce-40db-82c5-edde5628fe1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace42ecf-10dd-4c6b-8bd0-a3b451b2127e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceb62c0-ed8c-4c11-92ed-917a7ab4d26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45d494f-e574-40dc-9764-e03a85996586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2c275f-1442-47fa-9359-1df4328aec3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc411b1-7431-496f-9c8c-94c7b95ed168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194f5007-3668-4473-bc33-eeb145aede80",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b95410-8fb4-4a16-ac08-c3e50deeaa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed83e5d-b2fb-4ede-8969-df15018b46df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23ebd9f-7fd6-4729-b3fc-3eb3bed7d04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad6cfdc-abbd-4903-b2c8-f7fd4fd788f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd1d429-5a04-490d-b108-d039aaca5022",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f3f2c9-5e88-4c2c-8fd0-f41e01498965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27474b3b-26de-47a3-90cb-e62da76f0ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0ca393-0bfa-47ca-8791-119c0bf9108f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3821e655-6764-41d8-aa2d-d990e32bd1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a650f0c-928d-4524-8875-8267a838cf2c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cff39d3-aa99-4438-955b-ea171532e84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db45c9d-859a-438f-95d8-2cc8e06a2187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9208e1-7714-4c85-a5ae-01460c91ccc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dddd32a0-87b7-4f71-a809-26041656af8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac12014-a47e-41d5-8011-91ba423a8e4b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8effb283-854c-48df-ad39-af21320e918f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa028867-555b-4d8f-a14f-8771f3667d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236d5c6f-dafb-4539-ab8c-d2fc1631a98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fba048ca-76a3-4877-b905-8e7edb363028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fc4a55-f564-4492-8607-18c84181c114",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ffd0e2-26a8-476e-b33b-8779b7a98f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298d071a-55db-4a07-970b-0df3f06294d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfbc6b7-301c-4be8-834b-38112f07f460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8909e747-22c0-4ec5-a1b9-d1606e7e5cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b5e07e-6e76-409c-afc6-e528e6fe925b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2ec6b3-35de-4414-b0ab-9854327ed68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc37ba88-364e-4d23-8614-705b96c4887e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b2a329-ba51-45a0-9fe3-ed36b6751baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b6da81-63f2-417c-854d-91f1af01c757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0360aa-74fa-4b22-a0e7-624d85e300e7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7c4eb5-e649-4659-adf2-9ac4bd63206f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79eb6ca7-1dba-4cf3-b817-182fce306161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef300c8-af80-480d-8832-7a8defc6211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e65374b0-53d3-4705-9e1e-62a5de1edec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3ec99b-305c-4d26-8d33-f57c7dc41497",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aa55aa-153a-4a7d-be7d-5e5298a07557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286bd16b-23ee-47f1-b888-b1e46bd14c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6503db-c623-4362-9f0e-b03209789d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee32ea3-b04e-4a43-8d68-f0028e62fecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cb2c9b-50eb-4bfa-a26a-3d4e8456d811",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145691d3-9135-42fa-bca8-ff9a7c5c7694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b546f259-875f-4fc0-b647-8f9b260b8e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef215e2-bc24-487a-9858-b561a4959096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17570364-e102-4651-b7c1-88f19e46a171"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d867125-3f7d-401c-83b3-d8d2d2ccc130",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a89b816c-504b-4445-81f2-9869fa98f0e8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593f19ee-2fb7-4038-8385-2943ec72c5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46f9ab10-5119-4981-aa66-11e5d9950423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dce66de-e392-4223-be50-9466cac88ce9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2647b4a9-8615-41ed-9cbb-b4da41c684cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ae131fa-bacd-45fd-bc01-0e1ed2d9e8e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bdd43eb-589b-479e-9836-51133ec3d98b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b953e3f9-52f9-4d10-9bba-caaff379e5df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b359a9a-4553-4f2a-b552-ea07ffbb5c69"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36a62a7a-e507-47c6-a085-1909cdf7f2f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ad6a1b1-29ec-44ee-b93d-5a728b8c8bbf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1c024866-ee44-48ca-bd97-724c386edff4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4dd1c150-a7d1-4900-a9fe-bad024111303"
                }
              }
            ]
          },
          {
            "id": "2e78518f-1d2c-4262-8a6b-984f2f577f30",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a6d148d-a047-4646-ab1c-d3188a2ab116",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85260b04-a102-4050-8e89-09d4ce5b10e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fad0e31a-cc13-4c97-90f6-8e0dd6fcc394"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3a4a52e-1d7a-467b-82fe-679b17b95860",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba97e32c-3e0c-46c5-a804-d4ef88c67383"
                    }
                  }
                ]
              },
              {
                "id": "e7013350-88fb-4d45-a3d7-578425d25ee1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53abc1af-8a64-4c6d-95ae-19d47244a50a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92cff0c6-faf4-487d-b73f-5f94b686cf98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8d91147-411f-4c2b-af9b-c8e344ccb2ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69fd6704-0369-4f71-b042-837aeeb18d72"
                    }
                  }
                ]
              },
              {
                "id": "8f18e05d-4b4e-4a79-9bf7-c9859e326eb7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04fe85ba-6706-4446-9b6f-1269f2ed6766",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b56641c5-0b82-44c9-9f53-0a621c6554b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2776a0b-e743-4053-a6b4-85ab681bb62d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "30a7f312-7a9a-4a2b-8efb-671ea0d183ac"
                    }
                  }
                ]
              },
              {
                "id": "5d137e08-f28d-4cd7-935e-e74bee7c07ab",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "551ab6e8-8baa-4cd2-8b1a-050ce97d208b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f41e74d-0a67-43ae-952e-51853cc22001"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "557844b2-88db-4285-a087-ef85ced05967",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c632f0cf-f250-430d-9499-c0eeef47621c"
                    }
                  }
                ]
              },
              {
                "id": "fb671a56-c24a-4d86-abd2-1582bdadddb8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d20ac4-2f52-4d4a-ba8d-bffcc617d1d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21c2cf57-b999-4edc-99dc-a041691b98fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b62b125-b323-4f77-8bb4-f8f4d2373d06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e9ce0317-a05b-42a2-9dde-a4b6872ea9b8"
                    }
                  }
                ]
              },
              {
                "id": "96fc68da-5ee9-452a-bf5c-31c1c95da2af",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8de39808-7e3b-4470-83d8-f974c0c85d0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57634feb-7793-4a67-8e9a-0ec640b6935e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "328c7092-c042-40d4-9816-86866df095c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "38afdf80-598a-4da3-b7a0-3792479d6aca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c517db18-4b1c-4990-a59e-8f6b4b692c18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56750e02-4d23-49e5-baba-0e2579f0145a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "85ceca5c-3913-48c0-98aa-b4a8efcdd506",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85fd6ee2-6b59-4c8e-b17f-767a1abd8f25"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "585992ca-47d8-43c4-a132-c4b85719516c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b03a899a-bc7f-4730-ae2a-109f9c943db0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5779833-128c-4e6c-8744-7710e76866bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2eb15bc-fbff-4258-a766-41119067141a"
            }
          }
        ]
      },
      {
        "id": "62f4f76d-a637-439f-8afa-6feb5dfcfc37",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fd2a1fce-8085-430e-960c-ec309ebf5052",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b17fd613-3450-4dba-9a57-d468b9b9beee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49371910-f030-4a14-bd95-8c436547c6f8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7638c905-299b-4edb-9c0e-15105db0e010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4294a4-b59d-44d5-9191-42457ffd2bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aec6f61-13fa-481f-991b-65b6846f2f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44b559b-a81c-43a8-a516-a24fe42224d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982a4c06-08ab-46da-bb6b-b6f414d7354c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6263651-5fa7-47b0-9655-3e9bcef12abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b5b456-d2d1-4c0c-a99d-e1cd583005e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e44a9e6-6fc8-4e22-8bc2-6ac4933148f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d7ba01-387c-4252-af1d-972aa2b167e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdff03fd-efb0-493d-960f-59d88e0a0b86",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a409967-c52f-47f0-aafc-39095f1cc23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311024e6-f7eb-41f7-a515-30178dc72d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcf4313-517d-4f9f-8334-39263b281ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea16d42f-64ea-4d4f-b336-12f4b14c81b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7f8c03-515f-4785-bebc-071d1aaf2596",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edf5c4c-9aaa-40af-9f37-95a5f69c9c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5949c5-3b5a-4ff0-a382-a6e28aaa5cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87796f1-4c43-4243-8205-e8740ad76ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa39a362-ad74-46c0-8641-55561583901f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b65aa9-3f10-4b9b-b5d8-68ebc389c622",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64be8775-4d46-4b8a-bd3c-ea79910f7a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a50b97-7564-4497-b28b-8a7ef42133b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d365a374-01cb-4e72-9ecf-08ebf3799f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b041a2-5f7b-49c9-8718-3ab668cd9765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779a615a-bfb5-49be-a870-02fa3010e7a2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3df38e4-77f0-4f15-8414-03d82d7fcaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba76524-e718-48c1-8599-57b38d29a841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc5804b-0f52-41f5-87b6-16b2d789ae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "199fee02-b5e0-49d0-9d1d-ce05816c55be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d7c021-631b-4ec5-98b4-cd838c8e6820",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8305902-2e31-4ea1-8dee-76c5c475a25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a4985e-1bed-4b74-8293-2450a0fdf303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e9215e-bef7-45c9-835b-3ad5f98f5746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f46dda-3f09-400b-a6c3-ede77a28b8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33077ca1-bd22-40e2-825a-0bef7de161af",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66e6641-037c-47a9-99cd-35b9644575e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb18e7a-e313-4495-aa13-2a425aaae1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d54d7b-88ba-4479-a745-3a7fbbfc082b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b3da2d-a3be-4b18-bdb7-f55e3441b41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d79a71-6187-4e1b-a649-140b35454bab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7a7c5c-8262-48ec-8b8c-d7c45db00d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d943a3-4685-4688-8271-28e51c0dce19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfee3c46-48cb-47f3-b311-815d1e4051be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f63a56f-2184-4fb7-9390-b549a918add2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20441d8a-5ba9-4e0a-8e4c-f885157fc817",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5bd64c-754b-466b-91da-76d0dd28a9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03527521-7df9-461d-9c7d-6e29b8653be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5910e8b7-1278-4a65-b97b-7ab1f29d6718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4243d36a-c6db-4e24-9a82-c8fbb8ddd9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63b2851-3f84-455f-95b1-9ba712946b79",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0af16d-e24a-4e33-85f0-38db4b727eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28eb7b19-426e-41e8-96ea-4ed95739ece7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c3b096-f1f3-4e3b-a37a-1bc4d168daf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "31134937-4dcc-4d31-9643-4b17191788e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51120108-0315-4f6f-9c2e-baa4833c8f19",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b7872f-59aa-4a9e-9c3d-2122b4cc8602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df4054c-8e1c-44e0-a001-a8aba38ff7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be841642-b9fe-46f3-ac59-d827bf1b3513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d80f85-ac14-4e14-bb17-5c4cd5e4db0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d590c7-f1cf-4068-a4b6-d1700098d2d1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bc6c0f-6d54-4fad-9195-59ff28a54530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ba9500-8132-4638-8122-f5afb7fa97f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc19f01f-08ef-4966-b87b-ab9873fe95f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db9f84f-0cfb-4206-bb6a-34f778aea1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5cf242-c4e5-4e3c-a448-00127c752106",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae10ebd-e048-4c08-a423-0fd97437a3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ee678b-a502-464c-89b9-3db721c098b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc3a17b-6135-450a-8cbe-b5bc883c463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6c2800-0901-4d23-b0d9-b0b6cc77c413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1416c6-35e8-4b6c-ac59-187cf76aa911",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28ec519-b776-428b-aa03-f1c206edb5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd608fa6-2b26-447b-81f3-8a146af72643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b501eb-e29e-4f14-a89b-5bee1bf18cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e63cf0-ef90-44a8-8a5c-7577f1c82276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f50d738-b1d8-40be-a618-52cd64788499",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4105029f-ea2e-45ad-b903-9184db781ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817cff72-2c4a-416f-af0a-9e4bb5a2b1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37dd107-9567-4884-b2ea-1cd46ee59d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "17c5eece-d4d8-4765-ab40-2216be7d718a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b6115e-6050-4986-9369-7ac0edee9f36",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18722486-3547-4656-9b58-f421b8026f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff0626d-c037-4f25-b466-dddb346a0bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62ce227-65ce-4f4c-aa1e-0e41b8bd76f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf9e4de-3ec2-420b-a59c-62887de7bf9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61495d52-17b8-4c22-bf62-943eeba9b917",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2802a0-cc8e-4126-9ed9-d3d51440762a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e385517-8329-4bf4-afb4-2f7291689481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b3eecf-7efe-4159-ab2f-34dfbc932faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc34314-a7f9-41b4-b052-3b763aa00840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f773bd3-0dcf-43bb-a2b9-a8e577da78b1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2d22cb-9f0f-4ede-8974-f3d624e1493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4004d7-55e4-4e68-ae0a-5f9bb502dd6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a7c493-f490-49ae-9e8e-b793797e2b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1401283b-2d30-4389-88c2-7d06fc312770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f038b7-6cc2-41e0-b3c9-c370579b524c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26e1f46-fd5b-41f5-b1a3-9bb965e1b5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bcc17b-6023-4cb8-adaf-5ee9a4549d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc5d141-e80f-47f7-9212-cdcea19800b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99ddae2b-c489-4756-a07d-1368a752c3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a15507b-e376-4ef6-8bf7-0cfeafe7cdfd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e786316-fff7-4329-a254-3152f5eee88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5795b146-ec95-4596-8f31-d8c2aa41f7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb4c48b-89b0-4f44-b625-b3995f290ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aaff442-55b2-40f0-af9f-f41f83f09c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21b7e46-3351-4b4f-ac0a-f12d9b46367d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715f9636-631a-4466-b614-7356e1e3a476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716829d6-6790-458f-9890-fc4105761464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0242cc23-d02e-4ac4-a520-7e33693bbe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84c1acb7-d3af-49cd-ad12-aabdc7d404b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71824b37-ac6f-4dc4-ae59-85c6d4793fd3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97857c71-1254-421a-859c-cef752e56781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6001eb-128d-4596-8e78-a8e860509421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb99e158-987c-4fa0-b21e-1a1e87e5bb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "836d6afb-daec-433a-8544-6bd6b59dee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bafe86-481a-44b9-a452-a7c2f6c0408a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a3b961-7fc0-4f73-abec-25e424115dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3536fb-ff34-4a60-ba62-f04744894e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28055e90-e868-4d62-8d61-67aa6ce8438f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0ca2d1-c5f5-449b-a9bf-99550dcd64e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea6d0bd-ad8b-4000-8a3d-ba51ab7df191",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce24b4cb-26f5-47bb-b3f0-234b6931541f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a059c8-cd8a-4940-8d39-18282a00d031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4095919c-8b9c-4635-88fc-5458b3663ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0c903c-0660-48bb-8372-8a5cd1a35748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e1f21e-021b-4037-b64d-95be236e4259",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0ec5b1-a76f-465f-896d-1d957cde7e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213aaa15-5e6f-4927-852c-d54976d31c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830690e3-74e2-4b0f-875a-ef32efdd45c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f203538-ea3e-4b1a-8300-7725805687c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb87acf-26eb-4534-9e69-a2b92a5a9e83",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb97b1d-9a15-4b19-97f3-54b84dc6a7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc2f640-4c77-49cc-9d28-9eec87e4bfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8742a7e-04ad-47df-9552-d4c0ee924090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45492a5d-0950-4de0-a864-2695c4345bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7761b5-5f6f-49f6-b816-b55722ef48d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7660ef7a-4a69-45e8-8ca1-44021810c76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ff43b9-3444-4b71-b6e9-a86656df945a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3142df-5c6d-46ae-b309-b6680eb06ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "513a0cc9-7841-4513-bf00-83d75badf172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c9fe0d-ea4e-4a15-a524-61806e9a453b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3d1607-f570-48f2-ac02-a2229c1d4e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8909455-96b9-4cf3-aeac-8fd66cf68d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f86bcc4-dcc2-4e1e-8388-643db04df2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9419bf-f268-446a-b8e0-719eb7479e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2b3348-1ac9-45dd-97b7-7aca506e4a4e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ab18e8-01e8-4c42-b1f1-7cdc27ba66ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b683e8bb-f64f-4617-abc6-982ae2d1348d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3436c8ff-adcd-4ab9-bac2-ba772df234ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21f71fcc-26ec-4d52-83c0-6c781f58ef29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828ca3cf-7497-4677-843d-756f03714656",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0398203d-c20f-4fb2-9759-901d4fc10086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13a8aed-8dfa-4b95-865b-f4d931aaaadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51295275-9016-468d-8f1b-814e3639d035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4922a0fb-6407-4e20-b6f2-f5a3d26c3f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bec186-be5d-4791-b533-97e6ac4d8de1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955e7454-be06-4ce6-828c-2cb3dec57040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54931774-9741-4fbe-ab28-b8b3a3f3960a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53f5efc-c54b-435d-8a45-f2940118108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "654a97a1-df45-4743-a492-1bde6f0422d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e244657-5585-4ff5-9910-3995d917cf16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0483487b-286f-4390-8cba-1e2ee54a3b39",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3e9fd9-c4fc-4ad8-b8b3-d9ab1a7b116e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44e2ead2-a14c-4b81-89d2-0852c1407274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aa96b0-e299-4b4a-9c80-22ad1dad23e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "525e2bd1-71d4-470a-a802-6c611bb1017f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "984dc953-745b-4cf4-a699-754f18134e1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82830a62-3e53-47e3-a4be-d0ff42879814"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af2e9c7e-d877-46a7-90f0-1c1bdb2955d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b0ca7bb-2e6b-4b52-81a2-890637b509f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2662f8c-329e-431b-9412-f33eb8f33cd5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea2d0fd6-31af-4d41-ac88-d74039ee4d4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89a0ce10-8fbd-465c-838c-88ceb3a7e6fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f2ba86e-88d0-4dd5-8f1c-778270c99529"
            }
          }
        ]
      },
      {
        "id": "cfa5c9b5-f9da-4573-a4e7-56f0172d772f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0696a529-a08d-48f4-8f24-f361afe4fa4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbdac6b7-55e9-4bc6-b4eb-04450abc8cb9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de595523-cff3-440e-a42a-0132167057d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95efa1fd-a8c6-403c-b397-107feb279d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22e31b2-80c0-429b-a91c-246c81989caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc05580c-6b1a-41a9-bafd-67b60b159e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2986e29-a97b-4413-ba8e-40efd9b5fc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52b8fe3-7739-484a-90c9-627e16d3f04b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7ba97a-8bca-44cd-9ef7-8b32c66a8b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1794255d-feec-4707-b78d-39208695d751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3d63a1-f54a-4a3c-8e57-74c54174c9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb2be97-013c-4340-94ae-070076dd09f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5167fbe-b7ca-4932-9dfd-25a1732ed4df",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae03b53b-30b1-48b9-aba3-159a09570cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2302f8e-1820-404e-8004-d52bbea3fe70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58c404f-c3ff-4148-ac39-5c3c501c945b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc5bcdb-2d7f-4b8d-a8f2-9bd87ce5cb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b92f07-22d7-4e23-bd8c-2606ec12f6fa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf73b94-a48c-4ea7-89f9-ce7ac5e13227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d597ab3d-c30c-4809-bbcb-c86e03e1449e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f5afe1-7b00-4730-8ce5-24b63f5ed307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f80bde28-77ad-4c2f-b646-158b82aabe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55464d18-4729-413d-8175-589b6379aa91",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b9947a-0778-4de7-8ecb-1b482e6db9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e5de8c-b424-4ee3-8194-33afd9b6f381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c891eb0b-253b-4950-8bf4-fd0828ddcd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d452ac74-e989-45df-af75-710b977861df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2574ca2b-1ac2-4095-b69f-69e88d89966a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556334e-c8ea-41a2-84f4-696ecd8df0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a08b698-1918-4416-9f87-707a25cef9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55f55d9-2985-4409-ac28-f8906111b60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3289481-0160-46f2-87ed-7aadfaea3276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadaabec-acfb-4032-95a0-68cf6964265f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92f9370-dbfc-4119-ac9c-09d9bdeb64d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5dfea76-1161-47e8-afc7-be8c967e583b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c2717a-8003-4485-8eb3-37ac39b0468b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5f49bb-d468-47dd-b164-b21a3fd8bba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc22f286-2838-45c4-8604-e92ae68fdf95",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00ea5a3-1e6a-412a-8555-a9b88b965c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc70f853-e938-47a3-8f40-ef99ad7f34c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76291854-5091-487f-8fdf-006641311572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e30637-4561-4091-b2b8-05c77e18d428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7650761-0a8d-4a8c-8660-861719d646f7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e2200c-23ce-4929-98cc-5ca7bc0a013b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb77396-f833-4643-9373-f16c8b25be7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef72c9b-2ac5-41dc-a537-f14cd79456da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3775e0-be57-41f9-b6d7-2f6503397efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df81fea-82c3-43d0-9b5b-1d228559734d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552ef82f-34e2-4874-9de8-51283b26dbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9121947c-9e72-4638-8002-455f18813936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f49f6e7-21af-4ab0-b17b-a400a66a65a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57479720-1188-4777-a64e-a60e8bfda646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd28f21b-dee2-4e28-a147-1c78efd3f62a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f02634-1652-4b26-bd12-3405ef7c44ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dc5f49-07a1-41b4-93e1-2a8b0ad20f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b52e03-d6d7-4f1d-a217-52316a45eb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "37d5856e-764d-4e8b-9441-33b77d8526f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf1b12b-f748-4171-a645-4a5eb9c7664f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0debe364-177d-4642-a15e-9b3be3078f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd35d851-31c8-4f13-8ee9-739422265b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3f345b-19f2-43b3-9cf9-00511b069008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02577075-d213-493e-a125-29eb98f21445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a817a8a3-6377-4602-8c19-5064196adc51",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aaad07-0995-45ed-9fb0-b0409d05caff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c84773-5553-4daf-a7c0-04672614d264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2949c1-7434-4eba-89b7-eb7e8d5a248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d65349f-d9ed-4b9e-a34a-7155a3883d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3f8aa8-6170-46da-a688-9aeefa76df2c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6ea98f-a521-4131-b183-c748091818cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba07589-ca1b-4319-ae61-2708e37ae84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9b2404-1f91-45d4-b953-f8ef324a40b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dfdcfa-4295-4662-896c-961d809b76b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f90baf7-d81d-43f9-82df-69b2f631c748",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5afb274-d99a-467e-afe4-8e784c6d0955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9eeaf33-df89-4e98-bd75-2c68d35a79f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c8a668-72b3-4733-bd59-fb7ccdd384eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9db1f1f-0fa2-4a02-a8f6-b5ffd73dd740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6c13a5-0fa8-48ff-af77-1ee6cf7a4e8b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b11820-f8c2-422e-9d17-2ced4cf64968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7625f11d-20cc-4579-9121-8f0fd258f82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e60f75-4483-4294-a4e2-2459c857dcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7572d7-41cc-47f8-8570-b2424ae815c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1e71fd-d951-4e37-97be-c742ee8f435b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57989106-1118-4967-aace-1a937d590b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650e453c-8da8-4f0f-97b9-623d2acbde37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4feabc6f-ee86-41b1-bf49-83f7ee043e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "552d2ff1-fa6b-411f-a0a5-33b8d631147a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aad0ea-a4d4-4e46-b20f-1b1837f255ab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1907b87-30bc-4652-b23c-6ba8cdab7ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce9f632-de68-4629-8f67-1be31e5b728a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67b7f5d-290c-4fd7-a789-4e0905a6d22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "565f9445-4dd9-4432-ace2-dc8fe7e20104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a41147d-b1fa-4557-b247-0e051aae9df5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d534e55-bbc1-4bad-a469-a986bfe3f313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d677c692-9a20-4ad9-93e2-28631ba8adcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c60e264-eb6c-4752-b4b6-c9f05e6d2a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb81e542-388e-4322-9ddc-11c3adfc469f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4a6da9-88dd-483a-9b9b-3252efb2b47e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768fd0c3-33c6-4e56-b135-8da00e40212e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee76636-c7d6-4c23-8142-ae772aca5d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bc3ddd-5b92-47f9-baa5-32112b9b957e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b14fa4ee-9756-40f7-804f-2b3d507f46de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a811ed-a38d-4a1d-882f-ec85c4b21c35",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68af249d-b10e-4f14-b6d4-851a15c8ce04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2139704d-c6ce-4cee-9f57-946e0cd1c9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0895e9fa-84a7-4add-8933-7344100be717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd99cbd-3ddb-45d9-9abb-776b24ecc02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b592670b-f7d2-4950-af27-12b4f8061cf3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2780a831-78b4-46b6-885a-878419e1d305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24acdc6-87b4-42b3-b4e9-7e33bc51f500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2895c4a8-831f-47df-85eb-97b119b03b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcc4205-c7ad-4416-9d22-8e7035041c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cc227f-97ec-409c-b009-fe41ef2cf7ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5da01a-74b6-4f31-9a72-a5531e625a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2410f3-78f4-4514-8f2a-b64510da654c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7dcca3-996d-4ddc-a925-f5dc0256cf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fdf206-eebf-4e07-8a86-16f337ef1ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ae9251-69a4-453f-8abe-25e0031aec75",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140b7c26-6d7b-4c4a-9309-c1ac6ce9fde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4465d4-b45a-451c-9047-1523e930f9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646ada8d-069a-4346-9439-290dc771a393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b8c390-b2f1-432c-b596-944ca9fdd219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dce4966-23f6-4c38-9ae9-5a6583269319",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd9c0d2-9862-49c3-9d0f-1409228895af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa88974-b105-49be-8a2c-3ad97e6ccc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48db9ad-fdbc-4ac8-bcb7-dc9be615f779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3e5a4f-d64e-445d-840a-bff441f4d016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e48824e-b182-409b-9875-0af2260ce279",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b718572-9944-4464-93e2-a098498ebd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6c85f3-d422-4504-88e5-75c2bf834725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1624e4a8-5266-4aba-b68f-d28d64b1f6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f68db6-26e0-420a-92e4-6a2c95685ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492642b3-7ced-411e-bc63-df67ca8c4b2a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba536d3a-b980-49b6-b82d-136de860f231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4526d358-32fc-47ea-8e90-615a5b6d7b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fc0b17-5ba4-4eff-bc67-417d38cfe43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04dc723e-08d4-40cf-847b-cb616c7a2905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8ac14a-dd1b-4907-b298-71548f3cf893",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1db5dfa-e36d-446c-8ae1-3b92653f763d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf92d5fb-721a-480e-982c-403dc8870805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed28f914-a160-458c-97fc-4522139caf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45075fba-a530-4c5e-af45-b0cb31c8617e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0f6376-548c-4757-8abb-701dd45d66f4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddabd803-e11d-47b0-8c41-9533546eabff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564e6414-fe2a-4976-91e1-1b49085d3694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21a1631-b580-4c42-aab4-864809ce6c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08aab21b-3443-4c2b-8371-554e9d3fcfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5700ad-1c53-4622-8bb8-f39d2478609b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686a15bc-e10c-4912-af78-f387cc2ac7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66ca947-e2c2-44bc-8332-c5b686ce4841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b609b26f-c325-4a6e-bd9a-9414be84eb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41980982-f527-4945-a9db-bad3f98d1945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7021a2c-cd34-4efc-8a89-0fcafff020e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b44c46-21ff-4608-8fa1-5ab38ac337ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b2aa38-403a-4716-b84d-4df5f6e02aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134dace8-3a47-40bc-8160-ab3f49d8f9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a052a73-620f-4964-9d4f-5cc327ff4974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a797962-a223-497a-8e6c-a34c4de4ec26",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36417b6d-d3c3-40da-991c-777ca736b13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba56505-f929-4ac5-9b03-6f6118ceedea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b15d84-d829-4697-820f-64a93ec3a3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65d86c4-6d6e-4b3a-8938-5a14c857b795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4079334a-0fa7-4cdf-ad7f-2a1829bf59dd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea48ab2-6031-4e55-a16e-5ee8f0b88d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb2fb03-5003-47a4-aced-b8c07b57d135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dfe28c-c163-49d9-b04a-b81fc85a6382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d836ece-3320-4a63-a3ee-ad8e7ccadeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49601f10-6673-4015-9100-cf0376a88df7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60a8b64-1319-4a11-aab9-b089bd94d000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b84dd6-76f1-4f24-ab40-c12807009db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b45ec00-4ff2-4a41-82a2-8c4ea20f706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e154861-bc83-4fd5-9fd2-b5b9271913ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9481441-72c9-4133-a2c2-36bf8601979f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0180d72-6622-41f2-9d7f-861774341379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc2356e-4687-487d-8c6d-c66a135a5dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0b473b-5efd-4da6-89f9-b369f3d4cd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb7fc71-19b5-4bf3-83fd-24af0e1465e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6071d4d9-651b-41ee-b7b5-4be5b82fdbf8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f7fd00-ec6f-4721-8f65-4c55d801e3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7346c02c-28f6-4075-9ae4-3a7d43f33a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c494ea05-edc6-4429-a005-0ab8bd6cefa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed8423a-7101-4e98-b5df-6cb1ac86bfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc0ee0b-904e-4e7e-a4d1-5d3fd57fbc53",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe5cba4-9a99-4411-9562-72f4ed24c797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdef25f-2bc2-4376-acd1-12e414e6e54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae326be-1cfa-41dd-b812-14c3581288cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa9bc27-3420-4e39-8639-deaf3e70054f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "041738e1-b109-40e0-8d31-bdb6f642cf5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e7f0549-ad4d-4e7f-a02e-27ddc3bab29c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcba60dc-bf1d-4b37-ab0e-4b423e450bce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1552f512-9405-43b6-8bef-4b69156d8e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5074271e-6f75-4485-a220-0775921ceaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62bca198-14ef-4c55-8f61-6d604ed8cacf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcf6f172-938a-4e2d-ad1e-e5b9ba452c9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "328aee00-39d5-4ec1-867c-d33257521c83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10fe117c-beca-4959-9bd9-ef2f43a1ff0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e09a6128-b3f3-4b98-bf92-23c596e08393"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "348aa7d7-6fc1-4f84-8fa1-ae8455ee4e58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a9c9073-702c-4f23-ade0-c502c7a5676c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3602f0e7-8f9a-4f06-947d-09e4c9b570bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "458c725b-87ad-431f-b0da-f13df0f1d6eb"
            }
          }
        ]
      },
      {
        "id": "a32092d4-5c9b-434a-8c40-70717eeba6b6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "07888825-e341-4196-92f3-5e7de79952ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d35dabf-312a-4615-91ac-c79ba2eff0bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19345207-8e58-48fe-a860-e88fe924c7ad",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa733bfc-b655-4a32-acf7-a289f638e861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c1ab3e-4457-473b-b2bd-99faa6bc6469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909442c6-f42e-4035-9d83-153fe2eed3e4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42534e4-1320-4e06-8625-3249f6e43c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b93a47-536d-4084-98ca-c78390a8e3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dbe185-9773-41dc-a2db-313c09ebfb13",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637024a0-d38d-4273-9065-dfbb7380a834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc61b0c6-623e-40f6-b9b5-3a94bfae54d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91707a4f-9317-4158-95b6-b2ea24893661",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5c94a6-6d97-4932-874d-ee5b12ae1673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7a738f-e02e-4e7d-9e65-4a3db63951c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea37dc5-af19-4823-85a3-443afc71d781",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3871a71-dcd6-4532-bc3b-061454bc7601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b172a25-fc4a-4afd-92fc-98648f98dbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ad147c-4cb3-4169-b605-b163c5720116",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeea749e-f4d0-4d11-b095-793d6d2d57da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfba5595-dcd0-42aa-8c46-86cae8869cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb88851a-9f52-4b01-b843-239277006ec0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda7b3dd-ebe0-428b-87a2-08de4d3b4ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ce9237-9478-4d04-a517-1750898831e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2fdd68-161c-43e8-8c41-6bc6c39249ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56519cec-23b4-4392-9c08-1b936b2dcea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbb441d-5a78-4bb2-a9c6-983a1568a552",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32824dd6-3690-410f-acde-60e92085485d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f711014c-50d1-45eb-be23-ffb1c0dbd1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc04bdd8-1e25-4908-88e8-6da906d420b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0960340-daa7-4493-bbad-833550c7c14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8383e0-bb1a-4e00-a6fc-a43805ce2238",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e6f4f6-2ea6-49af-9af1-4822d5765953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbde5103-e52c-4319-aad3-5bcdbc3beeb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8593fc-1854-4adf-86dc-311b7412a007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c46316-66ba-4003-94f6-85515477bdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e8a9ee-40d6-4a11-8ffd-cd1ae21b6901",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfad26d3-0c14-4e4a-88bd-91b74cf22d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd9bc61b-2c59-4dcd-8f86-e152799bbab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a2777d-050b-4ecb-80b3-da58dfa4cf05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd60e5c7-5f40-4ec0-88d1-0f0263ae1683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a9f803-4d6c-4abc-b03a-dfeee9869a8b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fb81a8-aac2-45f1-8601-5bc863d6edc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2c91e2-aafd-4672-9a6f-2a0f2a6e99e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fead1f-e6f7-402e-94f2-c1d47f4c4f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf42ce9f-1add-4e64-bb0c-f4fb67d2448a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0cd523-cbee-42a7-8b7b-5c9c529eb127",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f281105-348e-4a95-8056-db214488ca06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bd7149-a22d-486f-bb65-c7802318db79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9535c6ff-4cbd-4141-a04d-1b96a285cd41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10d13da-c0b7-4fe6-9099-9659c5cdec53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdd7a54-0c80-4330-9903-01334b847ace",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2e9d03-4ec2-437b-a624-3eb8130c3ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b47c38c-9479-4a71-b2ac-fbf01079a820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62720cfd-ee5d-4b4d-b2c6-daa5257616e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb7c08c-584b-4478-bfcb-7ec217d1cc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4eee97-0c30-4d2d-b645-a3bc4831d258",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81644f68-3df0-4162-9874-1488f63c6850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1914fda7-80af-4cc1-afe7-2f59d2c639de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2c460f-79fe-4701-b265-fba86a7e1732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec63b57-578c-4489-9c7d-99dffa2513c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca417f5-f8ff-40cb-a7b7-0de4e43a1844",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0521fc8d-fdc7-4c9e-b4c5-c8869ff2cdcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024c72b8-11a8-4879-b31b-09247372e616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23994c6-be44-4b28-a8e3-b3c5a1b2b754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a87bbb-238b-41a7-a815-4b340f480190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb77cc56-06f7-4492-a8ba-6b3c090d9463",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655ab88d-3ed3-4d39-8a61-0ba9edc5682e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f5861f-4b5d-4320-afe2-c158f8beff22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d46e05-9a6b-4ace-afbd-9558595712e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eac4ab6-0f53-4bd0-a48f-39bc7856d36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1704894d-92ac-4cda-998e-943bf170e3fc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c5bef1-49be-4a7c-ad06-4d124b6f446e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adaf79ad-290f-4a35-999a-bcf2696255f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2da7d77-3c57-47fd-9834-835ca784448f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01366893-acab-4a30-8381-7401a6739d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb05a598-3e0a-4f08-a73b-27fbf5a95d95",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149784ea-3eb1-4144-8659-990f72f031ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2260bf96-2b1c-448f-a8de-0504fdef710f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471321a3-49f0-4a3e-b30b-b1f5f7c714a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9394bd-d313-4575-b20c-4f2a5e661778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585b21df-bd02-4117-9873-76022ce49eda",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7811c2d3-e651-487d-9e89-518b90434091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab7b566-39b6-45cb-b1d9-40f7170a7d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93ea6dc-98b9-4a7e-b506-54f80a6d8562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d51bbb-c197-4aa6-949c-475301a58557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b9a1d7-0353-4f0c-a375-10546282263b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19dc02a-d4df-484b-9d2f-d35aefc664b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a1acc2-4e2c-47c1-9237-cfeea34042c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5183ad-d2ce-47f0-a2b1-84e54878eeed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6290cfc0-d274-4b2f-aa67-3ca78f92f49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76056fa3-6783-4420-8b63-a9fe5a16d2c2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c470ea-d359-41ab-bad2-bbbf1a7ee40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224b1be1-8e91-4515-93b9-81125df5d2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d1dd70-7865-4a23-b073-18867b6491d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5529c067-5c4d-4be6-a111-fb24b857ade2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252b9e94-a267-44c1-aae7-df4557e38803",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2033950c-59e2-4a9f-9152-e35e7ddf4247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba6a6ba-3948-41eb-8708-925d013876c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30b1793-6621-4c46-ac55-45761035c435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba67d689-59b1-443a-b873-2a0e129b18f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ef63b9-0586-4f06-b72a-dca7d27a1cde",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c83225-3909-4caa-8089-0ca6ee9b6012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedf2181-3812-4477-9784-ec33d8fb0ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa959318-b685-4b16-b8c1-aef01fe0caa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e483fc-c385-4790-b5c9-85eb09266803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a056896-8fc0-45c2-8f22-5c277d4ac73e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2532be2-9312-4b9b-9d75-dfc2492179f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6b5d01-97c0-45ae-b4b9-8e95ed0faea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df20ee8-ec6e-4a23-8123-01fdc4d86b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3cddb96-4cdb-476f-b6b7-1320c38317b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b06285b-41f1-4462-b2bf-22623807a6ae",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53202d5f-3cef-4c40-a3d8-4a1160dc47d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd69ff0-38e7-4ca2-9670-8b06b46c249c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2110997b-31be-45d4-9344-c8d89c23f095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91adad8f-74e4-4485-82e7-7fec7bb8c939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4d133b-2c8b-42d1-b427-010a5b65e3b7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff4ac1f-309a-4961-8b05-3bed007f2dea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da978ecc-2e98-4d62-84f7-8c47a26e68de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e644fb-00c4-4a08-8cab-d98e1c41a763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6461bbb1-b73c-4650-98f6-4633f18261c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50218935-a6fd-47f2-a314-1cb16c532888",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e364ec11-138a-4d8b-ab1a-f0365b7dd436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c4ec9b-c7d9-4410-a978-851406d09e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee1081c-f60f-4821-9091-5d6ce8431719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9a5c96-82cb-4f30-969f-b5fe48d70f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daace01e-3c55-4089-a680-079135d0ed49",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3b495e-82e0-4265-af59-4b4d66b165bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03747f1-8ec3-4038-a32b-78f1d3aca995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58a0837-0337-42e5-81ca-b0c0ae98fe78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b079cf5f-c683-4611-b722-0553a5bbba9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cd3757-9c8b-4058-95f3-ae5f08eff9ce",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a412ef82-9fda-4da4-b37f-1eb2e9127fe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "310d355e-e8f9-4975-a3f8-f7214cd23278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d2f4a3-571f-4859-ac5f-db26d84ea3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43f1691-cd4e-4d30-bdb5-7424d5f35c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d6322a-c67c-4ff3-92b4-f2d2f367df07",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab599b5-3963-4207-a5fd-3b1a31560fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9027d7b6-ad24-4a63-91f8-86c2ce644afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d546b98-23ad-4711-bc0c-9afd4ec4d062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bce6fc6-9ec8-4425-a733-d9193e279c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8086c1b1-bad4-4666-8aa2-557ea8e1cc4c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53189f9c-7399-4f1f-9ab8-74ffaffe67a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e37e3b-bbd7-4883-a7bf-890b44b7bb3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d14adec-f23a-40a4-a3be-e945ee5125e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8aaf946-3ab2-453f-b3bc-3671136401b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838ea261-eb3f-4482-96cc-73e26b0c784b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f997601-e258-4e38-b1c4-6d556c9c07ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0834eee-a59b-4d71-8c07-3c55926dc04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61d05d5-101a-47c1-ade9-fb31c711fdc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448e34c6-1799-4205-a729-3a30a2fd3660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34368ea2-1915-4020-a874-9266a661b5ef",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd2e026-2447-4747-bab1-bed60189455c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46bed739-4ae2-43a3-8ee3-ed9523ab4753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac1445f-269d-4e07-b251-4ea0dd670f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22adf537-2011-436b-8d8a-c490a4025ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd7f329-fa40-4780-b74f-e5f409335ef8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3493f783-66a6-4727-8c85-c6e25fd933c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137db49c-f409-483d-a2bd-8419dac6cd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a01f451-a9f0-41d8-bcc3-a9009064c4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4cf177-d627-47cc-9bcd-306dc3e9fb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37a9574-ea52-4b3b-b6c9-e31df0125b01",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dc9b6c-3d8c-4efc-9f12-a87572cefa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fb5a00-c1bb-4a9c-8cb4-294abf4e7880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f07021-92e2-4b70-a9f1-fe58154aa80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d002479-c525-4478-a276-47dc1fa9526a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2467086-ef0b-4d9b-8eba-0039aff847f0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b191cb61-2ed4-467d-ab04-4ff2e2a2d496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ee1bf1-8e4d-4497-95e4-2f57c83825da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e80812c-aa01-465a-8304-e38c7fb07843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0419735a-96bb-4cc2-9cb6-60bc30df8b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9711a4a5-28c8-48ea-9ed4-5391979e85b0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e55527-3fdc-49ff-a3d9-5f7ae75b6d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ba9cb6-bdc8-4240-88a5-7f78bf86d389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61adaf6-1ba6-429c-bd80-af12291bdb02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3990dc3d-e495-4ab2-886c-f59734ffffc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3701eaa-b844-45c4-8653-991c4ce4ec9b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213dffc3-7ea6-42c5-a893-3c3c0a2c7907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7779e61-892d-4036-b569-696a9c92a61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0f5e1f-9521-4d9a-98d7-29b84cb48acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643423a1-4413-4a2d-bc7f-e6fbeddbf31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747c91cd-2f75-4762-8f3f-cefe8bcd0c5b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84244e3-3d4a-4ace-bf51-4ec083f6549b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643078f5-fb3e-48a7-b0af-676c711739ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4e459d-a2f5-4ecf-97a7-b777efa994fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3291777-ae65-44f4-a6bd-233ea5710196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edbf852-e8e2-4664-998c-98ddff439cc7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036ee2a0-910f-4e4d-8e32-5c7482168041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab280917-31c7-47ec-bf10-b563949a6419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97a0fb3-f2ad-4e0e-8839-afd81bbaac95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73db389-0c79-4ed5-9fed-6115e96de0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831aa342-aa2b-47bb-bcaf-d6c20e2843ad",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d459c724-e866-482c-99a2-1c9c961603f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b91212e-7168-424e-8807-0d99dd4e931e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ac93f8-af5e-4ddf-9586-9db4849cf937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397185e4-41c0-499a-b2a7-9ca1685a8992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a0df92-2e7e-4f24-8488-c4f66cb5074d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a16a43-7923-4aa4-bc4b-dd9d761461d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22866b43-1b17-4c79-b8c6-04a2857fc25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87c72a8-a5c5-4fbf-aefc-c4957183a69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578a820b-9bb1-4e59-9aa3-57c610867c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419bb2db-989e-4ff9-a4cd-8da29929ee71",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bfbab1-d816-41e3-a8ce-fcdc12aac60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eca4757-553a-4970-b8be-f6af44e125b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed3ad6b-afdf-488f-b29b-f2be8a3b6993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387341d4-a0f6-4ad9-974c-ad3e3ba7fac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59b885a-4dd4-4fc7-9882-8a80ff7d2eb6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ab5a64-196e-4042-acd4-f76b775ec1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63230626-e54f-4c94-b3c9-a3d98095b971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768058e4-b54b-4f83-a48a-a336dead948a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcd1bb3-361a-4054-b1a0-e8e22e30bcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6345482e-080b-4bce-a832-71d70e014ab9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e279be9-a3ef-4d0c-ab37-7bb0643d1d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7107213f-8201-403a-af0f-4ef1b9783125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fa5058-2417-48d6-a7af-85da8f5ed7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa514835-d27c-477f-81ad-87e939ba95df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5611d8-62bc-44e1-9448-e09cff56d675",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f19fee-1d24-4e66-8392-cf69c427638f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49b88b4-f90d-4b22-9b80-1f27fc3835cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34b597a-829e-45cf-b382-f0a662201e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e42ebe8-d47d-49ff-bc4a-f6bc5c9e4d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbea5392-25d0-49e3-a610-1714e0c2d110",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b2df81-6d07-4fcd-8b1e-b47ce5f3c803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11262a98-1377-4310-80d9-3325f42b626a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d81e4cc-2e57-43f6-8325-9f61e3576b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dddcaf6-4ea5-4d70-8a76-2352f92aff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b42d396-08d6-4377-af4b-190c74545d4c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da2147f-b3ed-4d9c-bc3c-de8a945f9e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5001cbd1-bed8-4f32-bd5e-5b41c567e9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d25a74-9d60-417b-99d4-7334538fb682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8def2c6c-05c5-4461-9b85-ba9ee9260b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82d8277-59c7-4b40-822f-d5d56e7b1a5c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6ea2a9-daea-4882-b735-bffb75390449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9436d266-9a10-40ea-85ae-ee8e66cca964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15986372-e940-43ba-b29a-8709e24515e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2e809f-8c36-4bef-99b1-4948e5666c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a799837-2997-4417-8bf0-78e5b0ab55f2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb66f21-f65d-4274-8ad8-21e93446f7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cd3b80-7ec3-4f35-9d2f-70315dd4eb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aada04d8-720d-4423-8655-86391d7d6bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d1e277-a644-4c1c-91e7-b4691d74598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6c8594-4fe4-4a00-bb32-72fe5a7dae1b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0447a681-3763-469e-a7f6-cc58351f0c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39227c09-2557-4be1-a111-10c49e066c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de50d71d-d29f-4ade-8ca3-69a555cac3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b94120-ab34-4f28-ae4d-ac3354378abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99c4d52-9a54-4358-9550-801b40353653",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af0701a-0f08-496f-a912-8bca191a34f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198c5b15-dfaf-4cdb-9def-2232a87f10ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb87aff-e11c-404d-b9d9-84bd09c31a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411ee985-d89f-421e-9387-cde5a472c400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2e6d79-8611-4d9e-8eca-90ccd82b41aa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef751b8-add7-434c-98d3-f9a808b58f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a55295-2b1d-41f2-9033-458838a6276e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f09351a-f801-4dd2-ac8f-4e53ba3023aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8fe7db-d724-44b6-bc8e-ab0eb3e3d6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5767a4b4-3c99-4af1-9d56-35d1700d9574",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b25660-a7dd-4b79-97be-667279783735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab61ecb-1b0a-4825-8f67-82610ed93d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a899e8-b5f3-41fe-bd2a-0ac4ce8f5798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68abc517-fb6b-4fcb-b22c-2a167c7dc42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198d0e42-3250-48ae-9a96-e250fc458fbd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c81297-73c1-4d99-9815-c494a15c02f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8145e4b3-6344-4ff7-ab6f-4716e44470cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ffe126-fcdf-46e4-82c3-0476eb24aa03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d41989-98ee-4db9-b418-d828103a8f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f5f053-4e7a-4b0f-8878-3418499d774f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29d4fb1-a49e-495a-8e1d-ca49a644d5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd93ccd4-17a7-4201-aa85-1a520834d5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4b970d-ce6a-4d3b-a530-4a9883a880ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc92ea4-d37e-4149-9392-2facdd9a9642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f47fa3c-aca1-4933-8882-5e9a8f43936b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273ad775-de7a-425c-9ec0-3bbe8fc166a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd54c173-f211-41fd-8684-ea487e1d8841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807f5b62-fe45-4125-aa93-b320fbaf6a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14d54ad-096b-484c-97ee-99155c2402e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e04e8bf-8f4b-4ec5-a1d5-81b0039ec59a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd22b9a3-7090-4997-a92b-b65881525080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1955e5a2-bbaf-4e68-b474-6a9efc726e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7553b7-10c6-4177-b410-3a580e90e5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09f55ae-4250-4986-9e6c-7d423cfab247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358c8f7d-71f6-4151-9fb7-cd1b4fad35b9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222966b3-c5bd-4dcd-ac49-f391e0521277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd75ca2-5538-45f7-bae8-4b33d3cc6e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9389590-ce54-47da-92c7-529ba8c74594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf36b65e-3ad2-47d3-b437-5470db000f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ef0612-bde4-40f1-8337-3af374a1a995",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09930086-8b43-4e87-998c-67ed8d77440b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6c5ddd-ea11-42a0-9d80-89ae07817c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e102a9c5-d2ab-4b37-8bf9-c5751b295e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cd75e6-78ee-4531-a357-fa49f4298c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e339a5c-b24d-4847-a0eb-ce0a9b939961",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80debece-04c7-4b5d-8e13-bbd4c1de3cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503bdfa5-919f-4a31-a440-9189bb841e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667f1441-ca29-412f-a71e-13228a5862da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a037040-f502-43a2-b85a-aecc4df828b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0933be70-9954-4361-bc83-86d37992e02b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865de209-a31f-4671-beb9-8c3dd639d5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1999de9d-4cd6-439f-bfb9-3ff9a9fcdaba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0c96e9-0dbe-4063-801c-5d56cd01c257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f47b053-bca6-4132-9b2a-f54e68232c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5daf95b-f23a-42d6-a45a-fcb91b6f8784",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b3448f-0ac9-429a-99c3-da5b167a4845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c27a18c-9804-4ae9-a755-c2042d703663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f5e681-c01b-4d56-8041-63a7380baac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9007c6-2626-4141-ae88-9756c29f2855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7694705e-f9c6-47f9-9ea7-9440cfabf379",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8efba6-6a45-4779-83d7-e08f6969d839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d7e3729-16b6-475f-a407-69e526ff3292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d82ae3-64d9-426a-86a8-92703d2d4e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71dd89b-b455-4d10-a194-60ad1c645d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa0d7e7-d7d6-43ed-8027-153c8d12aa3c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0439221-79d0-4b80-ba8f-1625ecb46aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0345b2f3-ae56-4a5d-97aa-f39f277d8221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c263808-67be-4aa5-87f9-c5cb7282ee63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4e0f46-a2b0-4620-8d07-a5c6302893c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8eec60-bb57-461e-9ed7-31509c5df086",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac684ce6-351c-4f99-b961-3ba9b3f66006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68467065-d554-4e68-8770-68eb79728854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43210821-4b93-442f-9082-516cc9c4b7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaecc980-6750-4c8c-9fa8-dbd8adb2fac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a50fb05-96f7-48c6-a03d-d45de8b04eb6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdd509e-4490-4681-90ec-3942248b7302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69aa85d-b5df-4244-ac43-d6db8f6c0ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01287fc4-e8fc-4257-a918-e8bf491035bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42abaa63-5201-46b5-ac6f-b91bc676cd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183affd9-11a3-4250-ac71-8b15aa6ead78",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1dde3d-941a-45cf-af2f-61c59d7aa039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dcdd343-3974-4d32-ba7e-11824c446195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68b90c1-2240-4d9f-b17a-05cffc26ecd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7940f3e3-0333-48b4-aa7f-60090b3a8ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c976fb4-3996-4640-9f51-ad3475a87946",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1975642-9ce6-41a8-ae55-c154c419eaa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0e0937-7ccb-4473-8e0f-fda1ab3bac4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e9f5ed-268e-44f8-8989-9ea59d746e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d66196-0a45-4634-86db-e4f8579ffadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83419fb-389d-4617-9435-13d38706cfe9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33682a4-4155-4396-baa8-f3e79063217d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "029c0440-1d5a-4caa-bb0d-d925b2127b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6a8dbb-d03f-4117-8d67-e7d8b9debc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980a1ba2-7fde-4211-a18a-baf4d1ad73b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59430eb4-6923-4209-b3e7-2cd864c10276",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd7fbd1-5fa9-47d9-920f-72168f6eb033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b59e186-5bc9-4155-a679-bcb0ef5eedd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a06df4-3a02-4c9b-a829-4b7f6e29ed22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a598fba-fc73-4507-bcf2-613d76c4884a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105cfcc8-82db-4f74-b9fb-9132525a9cbb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1154f6a-fed7-4189-b2a0-838751afff7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3692919f-1982-4a33-bef8-d733091575ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec323515-84f6-47a1-a7c8-bcab075f25e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dec037c-affa-4519-8fc4-44d6e9f42c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd0fdfc-622e-4c74-84e7-a6b79b86e288",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9fbf11-008e-4979-ab29-2d10aead46d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bdded88-5645-468d-b65f-ea75fa19a155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12e717e-8fe2-421c-a856-67b67f3ca23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe67438-7f2a-4030-8415-3092451018ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51731826-e225-4613-889b-43eecf056c72",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936d84d8-e8d1-4710-84a2-ff5f8b450d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a9642c4-ed85-4d24-aee1-2ed629b24685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40851757-11f2-431d-81d4-6acf457f410b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28b985d-3e73-40ab-af38-ce90cb9cba44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b46f0c2-608a-4fe6-8cec-090aef16a9ed",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d658330-e0c8-44ab-866e-e0efdfa879a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71143012-11fb-44e6-8a0d-b338eb3a375c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490f827f-4740-4fc2-b373-ed8b3e239150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9360c03-9cae-4490-9d41-315567669a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c14a8fe-f434-4d63-b23c-047eb415e30c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7679170-67a9-4f18-8fb1-2a04a42f4c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2efb2334-6e1f-4d1c-bb39-4222c2c0c50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787b6a66-4218-45a0-8192-012f9cd177dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f0fe72-5f8b-499e-9278-ee61105ce737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23df768d-3e67-44f2-a234-58f16b3b72b9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a60c11-275f-42ca-9f72-4092540271b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115af56b-a396-46bf-990a-9124314ccf97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb78b50-9708-44b8-900a-b14e2a3acbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e3eccc-8f89-448a-aead-11eb882286a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481bafbb-24cd-45de-8fad-a31f327c2ed5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da4365a-198a-40b0-ab87-7137ce1153e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56824932-a533-4fb4-bda7-5e3971395fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbe4127-4d7b-4b75-ab60-27d6e45c7307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5612efca-b6e2-40c8-8a6c-8355bb34e850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3b2888-6c3c-4384-bcde-13e1c6ac1c95",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c860fac3-329b-48eb-89de-9ef1d7ae0533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd14df72-bbe0-46eb-9eed-25da46a77607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dab293-a282-4308-a3f9-4b73220337d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e38525-251c-4daf-9cfe-47f2614ee75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a20f6ab-ec79-44b6-a1af-c6b3f14b5513",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed277e31-a79c-4f40-af9a-48578f7e7096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1f16d7-e586-4571-b976-6efe3f49e1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a0e901-0143-43a2-b76e-d419c5f4f65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec3bcfc-ad09-471d-8ed7-209d97a07971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e790160b-e0c1-4ec2-bf8d-c36b931b9841",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe4caa0-797e-422a-95f5-78df5112235b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc94814-f2ae-4059-88e8-8febb4aed1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15640397-fcd2-45c5-9c8e-76bc445d451d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5423f33-fab8-45c0-971c-30b04de28298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b6834d-37d2-49d8-8495-c00f20735b71",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99615403-95a8-4cf7-8505-f8194b8d6416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3438f7-eeaf-41a1-80e5-f19aeb559c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51e8180-444f-4dcb-a28d-0cb93813e000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5d52a4-2d1d-48c4-bdd2-7793d8c9e104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48a0f5b-c68d-4a95-8cbc-de45ed294697",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804c1843-16f7-4267-856b-0ccaa304845b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafb8300-9a6f-448f-aab9-701db91749fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b1c706-c1c5-4a86-802c-e47969120690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3353567-6938-46c2-bdca-337f8fe5f690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8104fa55-7af9-484a-9be8-e86868e16cf3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e710a8a-657b-4ae7-85ce-6a51cceef265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b91d525-5f85-4f19-90a2-7e32f0f3d278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca97dfd-92e3-48db-8ace-6f5344b9ebbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff36581c-e5d5-4fba-b307-cf6db6165e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3917eb4a-ce16-4c15-9490-96a9c4621ce7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff66edf-bd09-4999-a1bd-691838eaa461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4388a2b7-d696-478f-8062-31d37ccdaae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9555b99-925e-46fa-bf70-2506326693e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5b6354-7a89-42ad-8157-e7ceea106779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1edf9d-c2e0-4e83-9a8a-d1c4121cdd72",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361744b4-60ae-4185-b8b8-8aeebaa71fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d01944-fd59-413b-a6df-8c13d1885a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b75b899-bfe7-4fbb-9d29-d7e89d974237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17d2fd7-61bd-4f76-a035-37ea530b4297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befc5b77-1dbf-4828-b485-dd65bd4c2e40",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b890626-5084-4afb-9a63-b79b2515d275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51366120-7e44-4422-8776-ac76c9667423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7489c7bc-e56e-4930-b86f-73863bb6eb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6131d25-825e-4d58-851b-cc767aae669e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bae69d-a219-4b23-bf3f-ccde4c62aab1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762fe40e-1347-40f4-bbac-2ecf60741c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa3f03e-e63c-43b5-aa43-190294987ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4574eed4-38de-4bf8-b9b9-cad25c8bd17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bf297d-9430-498f-8828-17324c33ba20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f1a296-6ea0-49ae-a3ed-85e359db93ab",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227b50a4-bcef-4e4f-b95d-bfb95c314d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad41893-9e65-4c9d-9a4f-175c620d1cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ce593b-19e2-4170-b8f8-e0bfd0822350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479f3970-2d95-446c-9f10-4785422deb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1063e2ce-c088-4e1d-af1a-d96e53ef4ee7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8fc93a-6655-4aec-bae5-900b69def223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c254a48f-77d3-4129-b100-2320b39bcdeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226a3d51-1e3e-4053-ace5-a0b12276e83e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8676a7c8-4f42-4b80-9beb-47ea16f26625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f3e16b-3e66-43bb-aa39-5e5160eee84b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6513590a-e187-4f23-b0b4-784529e64d04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d152651-b83f-4059-bf1e-b2d320449043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a72c9f-303e-49ba-a560-de694b21fc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993e7166-733c-485a-9f35-e3dc9ad5f149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76816fd-f9e4-4b97-af70-e029734edbba",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021630fb-43e3-45ab-9a05-9ec724bf9ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50427f08-b336-4932-83fb-64cbe91c8eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b961c01b-b8ac-4ad0-bbe7-102eb73decb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c38eb8a-949f-45d5-a0c0-e2801764ae08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6ed239-83b8-4df1-872a-611706a3cac4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d829cf03-5cd9-4d24-b802-706d3f6cda74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946eceb1-1642-4276-a658-ac00e9ad6df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f130431c-0a7f-4ad3-bf73-468e4abc391d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385e0a52-4da6-4076-8ccc-66fd221130c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbe18c9-9e97-491b-8cf4-80f8eb127626",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b4cb3e-031b-406a-94ae-f2a89bd6151b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045d2d4c-ef9b-4170-8b6c-d50c53bbe749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3708b7e6-a5f8-4e7f-8069-007903eba7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d2acae-940d-4a77-8b51-04068258f2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51bc9a8-1316-4201-af0f-336acada514e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dca23f-b6bb-4ced-ba49-e7e8eb5cc8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95dc828-9e91-4fc2-839d-f5f7543bb64f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9619bf3-16ff-44a2-a7df-b4f006f0a67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729f0c3b-64ec-4ea5-8e51-2b4afc08f10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c220f09b-58f1-447c-8f85-c66a8a1417e9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ca4562-8896-4035-8eff-56bd7dcb1831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9d5994-0218-402e-bbb6-8621fb38924c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae975236-a0a7-4a4a-aade-d43cbe662576",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d7029a-2966-482d-9da5-6f2e9baa59a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee603b7-f388-47bd-b0d2-a4687274e330",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0481d0-ea4e-41f9-b491-6185e27772d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7574508-f2c7-4d61-8f58-c7b16ef596ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b32f50-9235-4cf6-8229-b807d8adf8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86761d23-79e2-4387-9684-028ceb871d8b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "257e74cc-06d1-40ad-817f-0b91528d75a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e76fe86-6bd3-40b6-9b73-84533b171017"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf5b1b88-89aa-4967-a15f-ac1546b49b0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db5ce047-068d-4396-ba58-a8d5b00eb283"
                    }
                  }
                ]
              },
              {
                "id": "e93770cf-c6f3-4a73-87fd-13c90b494ddd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06e7e297-68c4-4a51-a613-7709dc9d3371",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9af1472-aae4-49fb-bfb0-8195a38e0687",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6a9539a0-272d-4115-bf43-0687274c0bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67eaa544-bfc9-4a0e-bf31-745d1e94a86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0efee71d-2265-4307-8cb7-716ac19c0f3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "004ae223-2fae-4e29-9305-9b9ee0530ebd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "165c8a5c-508d-4f83-b503-4cf92bee231a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7061103c-096e-4e3e-88d1-1036e62b2af2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d98d94b4-648a-419a-bb9e-685feb974a28"
                    }
                  }
                ]
              },
              {
                "id": "6845a095-50d7-4208-82a2-d219f99e1ead",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e727287e-0b48-4a65-bda6-cc29908e4ff7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93f160a-0138-4fcd-89c2-efc4e461f920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ae3b8143-509c-4b3c-9c96-df3d0ca66c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35287e1a-72f4-4d5a-b5a3-c87448e4a758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ad9b37-a028-4296-b669-ad07b0aad3d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "202d47c0-f9a2-43dc-9260-9797ec3bb96f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3000e8c-3434-4720-96a1-617f5bc75d4b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c12c2701-8a15-4eb0-b974-255a09aeb69a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f5d58477-11ec-488f-b06a-57a154440d59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "125bc005-2947-4dad-b38d-f5fda51fa465",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f01ff1b4-fdc9-4de7-9a72-fc96b4122411"
                    }
                  }
                ]
              },
              {
                "id": "ee8448ca-376a-448f-87c4-75331c0b6973",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e48b2949-b2df-42b4-8f22-90270adc39f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4fd0d2eb-fc9d-4de2-844d-837b3b628e2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aef6f5bb-aadf-4db1-ad3a-205ad9f1b91f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d26847b-f0a8-4de8-a17a-96447c95d3e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3672a545-481e-4c4a-b8e2-c4e021ce06c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2f7a4e9d-0612-4314-8ad1-9f4080fae294"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccd03d26-ccdc-4b21-927e-72b3a0754f65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef06947b-bc26-4584-a2c0-2ec6c408b7ba"
            }
          }
        ]
      },
      {
        "id": "a1239a70-0e9f-48c3-9529-66d80669c10d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3439696a-5212-459d-907f-c796396e85a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35e58fec-9637-48a8-a6a8-37d550aad3c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b21795e-b4af-4ddd-90b3-86521c57d30e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57ef7ef-0c4b-4b99-ab8e-80a294fd7a46",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "29fb73f8-514a-4c91-96fb-49caa36455af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07b12aa-efd7-455c-89e6-3eea3565e1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05af3df1-6d68-4b2e-a867-5d00b1253195"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e20496b-ff61-4ef9-9f94-e312e3a615da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8447eda6-7abd-474a-baf8-2426bdeb26a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ef54ecf-29b2-4350-879a-318ac62d45d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21038aa4-e1b5-416e-9ec0-a4cdf6d43219"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5543fce-de29-4fe0-a11a-748a5f16543f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "028e8600-a045-4e3e-9dab-576887047415"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2ae0aa8-2489-489e-a647-f58ccfead40d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "134dcc55-d415-4d2b-bb36-32519cdbe89d"
            }
          }
        ]
      },
      {
        "id": "48606e31-3487-4b0a-ae00-619101332bf6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2ae27150-2779-4850-8bab-c80cc2510286",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89b27584-577a-4adb-a977-7a4ca40e5cfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3534d18e-86c0-4ea0-8ba8-944a63a04002",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e860fdcb-f5dd-4a05-a95e-266eca5baa33",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afa74811-f72d-46c5-a36f-8ca8ee5f5172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3143e798-c07f-4c6b-838d-5e7c31d12cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9533ee01-f818-4518-9ace-06b952844077"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b182b9ec-84d5-450e-abed-8dd2487f1eab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56c493cf-7f4f-423a-9bab-405e06b4014a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f172f14c-25d9-490b-b8d7-c5c125fbd8cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c35cebb-ff46-4d98-9a95-8b58b418a902"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ece16d93-b629-4413-bd83-d91691454605",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5471d2f2-3512-4de0-8c84-4dbf46075d4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b659f87-7c18-4a0b-b2c5-0dc06ca809e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b10065fa-c0f0-434b-9d92-d7dcdd237565"
            }
          }
        ]
      },
      {
        "id": "47e8b029-a61f-4458-9c1b-8deb86b645fd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4af75cd2-9647-4d54-9608-0a365fad2730",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80b31836-7350-4a2d-b601-c1babb75df3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aface17c-30b8-4bef-9a4e-805094515399",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf45712-deb6-4470-81a4-d6e849f73dc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28e506f9-08fc-48e0-a3a2-ee68e9253287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474d3f72-027e-40eb-9ce0-7def5f9c156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f900e2c1-1e89-43fd-bf5f-2bc5cefb0e49"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4b82036-20d2-49e5-8220-7d6e43c652af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "249ae372-7f52-4ab2-abb1-50354e556f02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22df0b35-bb37-49c6-8797-d89d7b41f259",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae095992-9c7a-4b75-bfac-7a1fbccf9e3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93f4e9c2-e12b-4181-8c4d-360fe3262950",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "62f561ae-1ea1-4e7a-8a29-5d7cd436790b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7aec70f7-fc62-4f85-8bcd-68b8452e8d48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "083f63fa-580c-4bcb-8fb2-cfc49202edaa"
            }
          }
        ]
      },
      {
        "id": "2c17db78-9af7-4f4f-9ca4-1803e18ea58a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2565f73-e98b-443b-b34a-867ae1079e78",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1836f629-2dd2-487f-bd2d-e1ee1d236d68",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ba560a95-e853-4676-a13b-6b917f955c18",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b777c512-f949-4c19-95d0-d24fdd858aa8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f909d2e5-16eb-4783-a414-302e1fa64638",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 165.23591549295773,
      "responseMin": 7,
      "responseMax": 5118,
      "responseSd": 434.4529229170913,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695688434368,
      "completed": 1695688495525
    },
    "executions": [
      {
        "id": "73158d4d-da7c-40c9-a97d-4778aaef2307",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "43875a9b-92d0-4799-85b0-51a11502f288",
          "httpRequestId": "55bca629-9d88-4879-8637-25c293daf951"
        },
        "item": {
          "id": "73158d4d-da7c-40c9-a97d-4778aaef2307",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "03a5c436-2e36-4c09-bbe0-bab4f7f04cc9",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "003ac0c4-bcf8-44ed-b536-f1862d36b226",
        "cursor": {
          "ref": "bb1fd06b-4478-4f61-bd2a-a2a613bc31e3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2e5d2404-3a18-49bf-a995-a781a56b69cf"
        },
        "item": {
          "id": "003ac0c4-bcf8-44ed-b536-f1862d36b226",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b1510cdc-af8d-4707-806b-28726bb09a41",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6d6a12a9-73db-4b4f-8d73-f8c5e3fc423e",
        "cursor": {
          "ref": "8a428a83-d12a-457a-8c2a-5561e1ede6a7",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "15a91f7f-a3a3-445e-a67c-8b86b99c6ac5"
        },
        "item": {
          "id": "6d6a12a9-73db-4b4f-8d73-f8c5e3fc423e",
          "name": "did_json"
        },
        "response": {
          "id": "7d60b6ac-43c4-4e18-b053-3f477a59d54f",
          "status": "OK",
          "code": 200,
          "responseTime": 365,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce219ac9-8a93-492a-9cc6-028c2f6499a9",
        "cursor": {
          "ref": "cf3f5fc6-ebdc-4f8f-bde9-5bd6e1a7471c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b82272ec-3d6e-4626-8c7c-2b05a635016f"
        },
        "item": {
          "id": "ce219ac9-8a93-492a-9cc6-028c2f6499a9",
          "name": "did:invalid"
        },
        "response": {
          "id": "2ef781e3-d815-41db-921d-0fe68eaef2e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 428,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce219ac9-8a93-492a-9cc6-028c2f6499a9",
        "cursor": {
          "ref": "cf3f5fc6-ebdc-4f8f-bde9-5bd6e1a7471c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b82272ec-3d6e-4626-8c7c-2b05a635016f"
        },
        "item": {
          "id": "ce219ac9-8a93-492a-9cc6-028c2f6499a9",
          "name": "did:invalid"
        },
        "response": {
          "id": "2ef781e3-d815-41db-921d-0fe68eaef2e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 428,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65362584-c459-4c62-adc2-36b5d6398872",
        "cursor": {
          "ref": "6643d2b6-6d95-4d72-95ba-ee8ff3ec63d8",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e671a349-de1f-4a64-99f3-eb96963042ed"
        },
        "item": {
          "id": "65362584-c459-4c62-adc2-36b5d6398872",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3800e595-248d-4d33-b4e3-cb623c11091f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b265ad1d-d300-4f3b-adb0-7db000080b3b",
        "cursor": {
          "ref": "4b253d1f-2de1-4b84-83c0-c593841b58f1",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1c40984e-048b-4b44-b322-4cf1e6a5ac47"
        },
        "item": {
          "id": "b265ad1d-d300-4f3b-adb0-7db000080b3b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e85327db-cc67-4b48-a082-fc662026d1ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb49dbfb-958c-4523-8309-f4639598099b",
        "cursor": {
          "ref": "13e42450-a295-434f-8280-2d91f449b66f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9a79c605-fed1-4cd3-9784-75122e180102"
        },
        "item": {
          "id": "fb49dbfb-958c-4523-8309-f4639598099b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3468eb2b-bb0b-41f4-a0a5-cec75c118216",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e3fd44-72d0-4844-818c-4935e3d16b67",
        "cursor": {
          "ref": "18083276-3ed3-4889-97fe-321e9862030f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0157b054-f9a6-477b-aeca-95aa8969a7c9"
        },
        "item": {
          "id": "c7e3fd44-72d0-4844-818c-4935e3d16b67",
          "name": "identifiers"
        },
        "response": {
          "id": "ddf02fa6-52f2-4313-86e4-3132f2152202",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a184da-8115-4f8b-adb9-d1c7027232bd",
        "cursor": {
          "ref": "38e7ec2c-dabd-434b-b2d9-8b509fc511bc",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "70c9b404-e1d1-436d-8c13-8df9e364c46c"
        },
        "item": {
          "id": "92a184da-8115-4f8b-adb9-d1c7027232bd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "81406a96-a601-4bbe-8aad-c6aba3a630e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d97309-ca0b-4aaa-8f93-a852f4dec130",
        "cursor": {
          "ref": "cef8a91e-ca5c-433d-8b49-b07dc05ed7f6",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3af59827-a8e7-49be-bbca-4f59a925c74d"
        },
        "item": {
          "id": "46d97309-ca0b-4aaa-8f93-a852f4dec130",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ed92c01d-b1a2-41f7-bc5b-30d83118a476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30faa3a-1992-432a-86f2-5897d8031fb7",
        "cursor": {
          "ref": "c8fec10f-81ea-4bd3-abe8-866f5630124a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f2e92291-14ff-4a6b-bb2e-a15517d1b504"
        },
        "item": {
          "id": "a30faa3a-1992-432a-86f2-5897d8031fb7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6a4efb10-a844-4acb-9efb-016b75692e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e48c57-fe78-4dc6-9434-1a470d84e449",
        "cursor": {
          "ref": "cefdff76-f29c-4cf0-8bec-7f7fd85c4d64",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "31a8b58e-5f1d-40a1-a2e7-5a14cd89cd17"
        },
        "item": {
          "id": "65e48c57-fe78-4dc6-9434-1a470d84e449",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "349a8084-226e-4786-8398-96fb2109eb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce125243-dd79-4001-9bb9-09fd856c54b8",
        "cursor": {
          "ref": "469d15da-eec0-43c8-90f5-0f7d0cd82b03",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9c4e9ddf-4db7-447d-a9eb-4e1f25f13b44"
        },
        "item": {
          "id": "ce125243-dd79-4001-9bb9-09fd856c54b8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4f60ea48-18a4-48a7-ba44-163210735d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e4d674-b4dc-471b-98ac-840df21dbd38",
        "cursor": {
          "ref": "889c2566-c232-4ed5-bc73-312e5b10a11a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "76ac6c77-08b3-4b4e-ba76-3f0fe6793273"
        },
        "item": {
          "id": "98e4d674-b4dc-471b-98ac-840df21dbd38",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d4ac28ec-2c15-445b-bfa4-44b82ccc2c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205cfa0b-96a0-45ae-83d4-00a0298b4dce",
        "cursor": {
          "ref": "6ecd8206-541d-48bf-b077-a66531105b9a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e4a2253b-31d7-4564-8cb4-2a5e091a8074"
        },
        "item": {
          "id": "205cfa0b-96a0-45ae-83d4-00a0298b4dce",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8a4affc6-00e0-49a5-9ad4-405d14a74078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852f240c-e856-451b-b9c4-44d0b5346055",
        "cursor": {
          "ref": "6792257f-25b8-4589-a830-0844ec7440de",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e605633c-f39b-40ef-96e8-64b68a910ddf"
        },
        "item": {
          "id": "852f240c-e856-451b-b9c4-44d0b5346055",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ab2f5e8a-ea76-4d98-ab64-94f9fa3b7ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd38a28b-5ea2-4b34-b54c-2a0560c10fd8",
        "cursor": {
          "ref": "fbc130c3-3fa0-4bf0-a74a-a868283c1394",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bbe3ff8a-66b0-4c93-97a6-e686467c9a76"
        },
        "item": {
          "id": "dd38a28b-5ea2-4b34-b54c-2a0560c10fd8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b0587221-5fec-47d2-9ce9-91dbf1f16dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442c1237-1bfc-44aa-bbf4-c307144750af",
        "cursor": {
          "ref": "0472636d-5e96-443b-841c-382943ab967b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "18f9f299-2d1e-4c0f-aae7-418eb1112a02"
        },
        "item": {
          "id": "442c1237-1bfc-44aa-bbf4-c307144750af",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5aee0749-dffc-4668-899b-583207f3d76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336d09b7-5f11-4c44-bbf1-2861f7d2e5b5",
        "cursor": {
          "ref": "4350a096-aa45-485c-8b68-17f5b3bed71f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "faf6952a-cdc4-4d46-a440-784e084cf3bc"
        },
        "item": {
          "id": "336d09b7-5f11-4c44-bbf1-2861f7d2e5b5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "496cba33-d547-4fae-9044-61ba45b13847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d522e37-9c43-4399-a747-47de3b55118f",
        "cursor": {
          "ref": "31d52be9-bbab-46e4-a723-8b3ea858f400",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a36dff8b-3be1-4379-9a1b-beacfd6e7077"
        },
        "item": {
          "id": "0d522e37-9c43-4399-a747-47de3b55118f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e932170c-0429-4e94-a7f0-c89680bf4095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90a1a97-8d25-489b-97ed-382fe29db4a0",
        "cursor": {
          "ref": "9b3feb8b-740d-4e03-b200-cb544584891b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "036f033f-3540-44ea-92e8-6747bf4f45aa"
        },
        "item": {
          "id": "c90a1a97-8d25-489b-97ed-382fe29db4a0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "507f83b0-1d69-4a7e-b6d7-1aa776b22864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa20864a-f70a-40a8-a838-0960850d0a05",
        "cursor": {
          "ref": "ab1a8a9d-93fd-4541-b125-718aef1cbcb8",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ce045d64-fcfb-48f3-b24a-9c1ad3dbfad5"
        },
        "item": {
          "id": "aa20864a-f70a-40a8-a838-0960850d0a05",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fc85dfd7-7005-4e1a-b32b-b08862ff97dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f08e7e-910c-45e6-ad99-47bce66d44d9",
        "cursor": {
          "ref": "1f3c9ca8-473d-4a2c-bc96-28728cdedb9e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eafb3d48-1169-45c7-898b-f9d68c555829"
        },
        "item": {
          "id": "29f08e7e-910c-45e6-ad99-47bce66d44d9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cacac9cb-99f6-46ff-9dc6-914176bdd9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24923b2-4b80-40cb-8d25-b33e1bd6ff7f",
        "cursor": {
          "ref": "c2f271ce-2a39-4e07-8662-50cdf4fd6030",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ccb62785-b431-4e42-8f57-26248a641855"
        },
        "item": {
          "id": "e24923b2-4b80-40cb-8d25-b33e1bd6ff7f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9116e4df-b25b-4def-b2c5-8fe87c281601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f86129e-17fe-4568-a05d-a82176ec9676",
        "cursor": {
          "ref": "d5efce6f-f55f-4981-8ac5-06acfc1fe03f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f0dd2a0e-de17-4fc7-ad10-40403eb85852"
        },
        "item": {
          "id": "8f86129e-17fe-4568-a05d-a82176ec9676",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ac9ee996-6320-448f-bb53-62eab43c56f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fa0f89-7a4c-47eb-8e49-2ab06a7698f6",
        "cursor": {
          "ref": "c7189e37-b6c4-4c38-be33-578bbfd9369f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8a368b89-be04-4113-abf4-e0e35e5cc654"
        },
        "item": {
          "id": "66fa0f89-7a4c-47eb-8e49-2ab06a7698f6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3a5e6c9b-7707-42d9-a441-705e15149ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce75f33-5ead-4a46-9dfc-a65a64aa1e01",
        "cursor": {
          "ref": "d7001ce8-d00a-42fc-9569-c4b029a0429b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "881a83bb-091e-4d4a-bda8-2f9ec268f875"
        },
        "item": {
          "id": "8ce75f33-5ead-4a46-9dfc-a65a64aa1e01",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "db1aeab7-554f-4b61-81ef-4e113c323009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e92b18-2eda-4d63-bafd-2a1a56fdc869",
        "cursor": {
          "ref": "f37efabb-4095-439b-8dad-caf339b3ba8c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ee7d7080-7e43-4aa4-a717-cddfd9fdbef6"
        },
        "item": {
          "id": "77e92b18-2eda-4d63-bafd-2a1a56fdc869",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "00aab6a0-0a6c-4c02-8597-2d5b808b0bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdc98f4-3f88-4e6e-adc7-25950677713a",
        "cursor": {
          "ref": "eca0097a-e50e-4e2c-9fbc-cd74e42311f9",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5860f2a6-a172-4b84-a604-888329b91f53"
        },
        "item": {
          "id": "4cdc98f4-3f88-4e6e-adc7-25950677713a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ea30b87c-0beb-4e34-aea3-c1ef266771a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2043f79d-cdb0-4c43-a20a-24563a99184d",
        "cursor": {
          "ref": "9f57d5f5-4043-41c3-a2b8-b60c4a49a3d5",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a5cdbbae-ed6f-4def-9fd6-8acd138b5ce6"
        },
        "item": {
          "id": "2043f79d-cdb0-4c43-a20a-24563a99184d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7b8f6754-13cb-491a-b61a-0753899d44ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e5b151-be79-4e5c-b379-587f40465ddb",
        "cursor": {
          "ref": "c39388e1-737f-4999-b0e7-1ac71f9bdeb4",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "530221a6-e028-4033-88ea-254a119f8d60"
        },
        "item": {
          "id": "f3e5b151-be79-4e5c-b379-587f40465ddb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "af159abc-10bd-46b7-85ac-6ab8dcc29ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a515b3b7-a153-4c80-bd4f-b65ebfcb8d61",
        "cursor": {
          "ref": "825b3fd3-4998-4a4f-a530-ecf78801804e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ed5fdbed-dd69-4bdc-bc5e-0560c385e4f7"
        },
        "item": {
          "id": "a515b3b7-a153-4c80-bd4f-b65ebfcb8d61",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a07c43d4-990a-4d98-95c3-8029e2e27fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 997,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b411b5f7-6419-4c5b-bfcf-2d3ac1fd2cae",
        "cursor": {
          "ref": "bbe406a1-0c3f-4d81-941a-b05063bf6b58",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "13f0cfe9-9972-46a0-b044-a7652e002578"
        },
        "item": {
          "id": "b411b5f7-6419-4c5b-bfcf-2d3ac1fd2cae",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cfac5a2b-48a4-4c51-ad53-594b0c671bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056b0893-35c7-4309-a3c0-13df108dcf7f",
        "cursor": {
          "ref": "e81f4fd4-6141-4f94-9587-68bfacfdeda3",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8207840d-8fe5-48da-bc79-11fb80b828bf"
        },
        "item": {
          "id": "056b0893-35c7-4309-a3c0-13df108dcf7f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2f3f30e2-0887-4e15-ac0f-586bb8df3e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50780197-7d13-4c86-97b7-5b19520940e1",
        "cursor": {
          "ref": "28d09d7f-1a00-4b8c-b350-33fee91e3b3d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cfbd3cff-db5a-4e7d-944f-83bbc2d51b32"
        },
        "item": {
          "id": "50780197-7d13-4c86-97b7-5b19520940e1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "84af6180-6b65-4735-807e-4347f365e0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b85775-ad77-4a56-b642-5dc8ac1892dd",
        "cursor": {
          "ref": "ebd2c445-c3bc-4c5f-8ea7-088228df92bb",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "35c7306c-4361-489c-8608-188742368016"
        },
        "item": {
          "id": "75b85775-ad77-4a56-b642-5dc8ac1892dd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a6c5261e-68e1-444a-9264-7c106bb2172d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e951f7bb-73da-450a-bf45-67e1217ab614",
        "cursor": {
          "ref": "2c9c51b7-3c08-48bf-be89-9cd73c517160",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a44cb4b1-c063-42de-a332-6499085d4d99"
        },
        "item": {
          "id": "e951f7bb-73da-450a-bf45-67e1217ab614",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "022632d9-457e-41a7-98fa-fa5c13fbf28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f13268-df59-4452-a3b0-7dfd915804fa",
        "cursor": {
          "ref": "e33e7dc4-5ed9-49e7-b125-9db995c8e8ae",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "02406ce8-95a8-4c4e-8e9a-0d93e2e8d834"
        },
        "item": {
          "id": "83f13268-df59-4452-a3b0-7dfd915804fa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5b119c46-59c4-4a33-bdb1-8687f20f9618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6767aea-7f55-4965-b60a-d984e714b447",
        "cursor": {
          "ref": "e5329a94-1fef-4aae-95eb-5569bf215f3b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d7e7a4cf-a6f0-436f-a67f-50ba640ba1a9"
        },
        "item": {
          "id": "d6767aea-7f55-4965-b60a-d984e714b447",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d442d51e-7c62-46f2-ab50-c42e7d1c6215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4566f6d4-7bf3-48e9-8a3c-e27eff3d010f",
        "cursor": {
          "ref": "55eb30e2-87c5-4c11-86d6-69a3114636ea",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "29ef9db2-c6fb-4b69-874e-b397680e5ac7"
        },
        "item": {
          "id": "4566f6d4-7bf3-48e9-8a3c-e27eff3d010f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7792c58a-a1ce-47b9-a203-294565bfff2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bb7ec2-9381-4b7e-935d-00179391b996",
        "cursor": {
          "ref": "d3f21272-61be-4866-9ad7-2173a03d9a7a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5c512662-1b41-471f-bb04-bfaf5a73dbb6"
        },
        "item": {
          "id": "63bb7ec2-9381-4b7e-935d-00179391b996",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ca3c0969-0388-48c8-8df5-ea46f33136d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9713df98-f471-4567-aafe-ad203998724a",
        "cursor": {
          "ref": "f46641a4-0833-4321-a0dc-002dc0d3d44b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "989bef9e-4ba7-4dfb-a4d0-0cd1b59e6089"
        },
        "item": {
          "id": "9713df98-f471-4567-aafe-ad203998724a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "976cef9f-d03d-478c-9e43-c9eecbaa50b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aab7fc2-ecb7-4846-acdb-0b80fecdbcd2",
        "cursor": {
          "ref": "85fad786-ce43-421c-b42b-d3f1ea0835a3",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7e29502a-2c64-44d6-a247-60a2c6d6c40b"
        },
        "item": {
          "id": "4aab7fc2-ecb7-4846-acdb-0b80fecdbcd2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d34b61b3-1e31-427b-9592-0d64e840f7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f0ff34-cdf6-4ccd-a207-cfff4e6393f4",
        "cursor": {
          "ref": "2ce0f2f5-94d9-4aca-8159-478bb8386c2c",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5be79bcf-30e8-44ff-bfe3-ed07662117d6"
        },
        "item": {
          "id": "c3f0ff34-cdf6-4ccd-a207-cfff4e6393f4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a728c536-be8b-444b-a6cf-a9dda3040925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616ca6e3-d7f1-4595-a89c-4a3758adf0e6",
        "cursor": {
          "ref": "8dc92b07-306a-44c0-b4d5-016f7e39b1aa",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9f8135be-c76d-4086-83b4-dbabe0195ef0"
        },
        "item": {
          "id": "616ca6e3-d7f1-4595-a89c-4a3758adf0e6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b0a1134e-70ca-4c3d-8bae-13c77566de45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541a2ef9-4b90-4606-9f7e-7a8eb28eb4db",
        "cursor": {
          "ref": "4d29fd7f-24da-4e60-b58c-0bbf528ef939",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "aae7cd3b-80ad-4000-af66-d9a52526da6f"
        },
        "item": {
          "id": "541a2ef9-4b90-4606-9f7e-7a8eb28eb4db",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "edda422a-eb75-4fa6-bd1b-1492afcd6cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7990df3-df7e-4f3b-884f-2df29098b0cf",
        "cursor": {
          "ref": "d8e915c8-414d-4d14-a3f6-0d683fbceecd",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c667ecd4-e20f-42aa-98fa-4e010ff21f0c"
        },
        "item": {
          "id": "c7990df3-df7e-4f3b-884f-2df29098b0cf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4352f7ff-81f0-4fe4-bc9c-385181962fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b315b1e2-a998-4365-8659-492bb3292525",
        "cursor": {
          "ref": "0127e618-4b48-47de-83a7-44966032d871",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b5296426-f2f4-4865-81d9-74437e483685"
        },
        "item": {
          "id": "b315b1e2-a998-4365-8659-492bb3292525",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "107c334b-cccc-4118-a5bd-8f702656aa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24b9091-3bab-442d-9baa-b1ad53eab3be",
        "cursor": {
          "ref": "d1d027d8-9180-46c3-9d89-b533c6c2dcdf",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "59ec0210-1a16-4319-b316-d9de30265fa0"
        },
        "item": {
          "id": "d24b9091-3bab-442d-9baa-b1ad53eab3be",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "85c80764-369c-4175-8468-7fbe3f208fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0f0beb-4d72-4aae-b85d-f69507bb9c5e",
        "cursor": {
          "ref": "059a38d5-d3ac-419f-9376-28a68e5bb038",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "90307416-46d7-4945-8834-88c0e0d594cd"
        },
        "item": {
          "id": "ad0f0beb-4d72-4aae-b85d-f69507bb9c5e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d00d8873-38c7-413f-8f03-6144b0789ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c121bdb-9de4-4edd-a0a7-665843ca594f",
        "cursor": {
          "ref": "c77d6e28-5509-45c4-8dc6-e68790347cd9",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a8643f7a-193b-4f5c-8288-e303a9ce6fc8"
        },
        "item": {
          "id": "7c121bdb-9de4-4edd-a0a7-665843ca594f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0a3607fc-a7b2-4873-ae79-53a68eacf1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2368b6-c722-4bc6-b671-2e0770803e65",
        "cursor": {
          "ref": "62d1a7de-d8e9-4663-97ce-4836482b23fa",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ae43957f-c8ed-46c2-8617-73d4add79285"
        },
        "item": {
          "id": "7e2368b6-c722-4bc6-b671-2e0770803e65",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "aff325eb-6bd4-4c4b-8b98-1f718e953308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87ce7eb-17fc-4a9a-9567-504f01b1fa41",
        "cursor": {
          "ref": "6bcd29ca-dcef-40e7-a0c7-970c5fa3f082",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "98ce7e59-aecc-4b02-8619-e6dc703885b4"
        },
        "item": {
          "id": "f87ce7eb-17fc-4a9a-9567-504f01b1fa41",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b0da8944-5a8d-43bf-acaa-e12297ca4139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2dd5c2-1b99-48c5-8964-fa856d4de926",
        "cursor": {
          "ref": "3ad366e5-4874-4e13-964b-c4f5e50247de",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5e598e83-4e04-43dd-8fff-9b8266ad2195"
        },
        "item": {
          "id": "bd2dd5c2-1b99-48c5-8964-fa856d4de926",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "38630d14-5442-4ba4-a78d-f49f68200aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b728d87a-c1e9-418c-89ae-87c1f96ac6ea",
        "cursor": {
          "ref": "aad25627-a936-443f-ba31-13ce86e564fd",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7271fc21-2a4c-4366-8f0c-37da9751f124"
        },
        "item": {
          "id": "b728d87a-c1e9-418c-89ae-87c1f96ac6ea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "33653004-7f7c-4d13-8e08-1bf2e191d421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8d2d41-9bc1-4184-8859-0dbde707b74b",
        "cursor": {
          "ref": "6001d9ca-5a9d-4ea5-8ad0-f7f05674fdbc",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ffc8208b-d899-423e-a80d-37a4616ece4d"
        },
        "item": {
          "id": "8d8d2d41-9bc1-4184-8859-0dbde707b74b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b737b8d7-e7e5-4995-9905-024e644b309d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf796fa-13ad-4903-a87d-3290622a74c7",
        "cursor": {
          "ref": "58c6fab2-fc6f-4fef-bd7f-047aaeb4df9a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "23ef8cd2-8aed-44e2-82c1-a8864147529f"
        },
        "item": {
          "id": "fdf796fa-13ad-4903-a87d-3290622a74c7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "71623598-8c8c-4c5c-9159-6030ba6554a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb5cf65-3851-4503-b5d8-5f7c0dc646ef",
        "cursor": {
          "ref": "a8da8477-43d6-4432-9afb-36a696dede1f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "73e72fc6-f912-4375-a7dc-eec3ff36de74"
        },
        "item": {
          "id": "beb5cf65-3851-4503-b5d8-5f7c0dc646ef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8c8467d6-eef1-464b-9ca0-668f68c77f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1af42d-81af-4be1-a8e6-e1a562889845",
        "cursor": {
          "ref": "df7c820d-d749-4ece-a8a2-5e239d770cad",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cbc00dde-4c36-444a-a3ef-bd0bef95d545"
        },
        "item": {
          "id": "3e1af42d-81af-4be1-a8e6-e1a562889845",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f5e5cd20-d34c-495f-9481-01ee7254c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef328bb4-54a4-4794-898e-4047be6710b8",
        "cursor": {
          "ref": "61127f1c-e2cf-43a5-ade5-0a64cff6243f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7347487d-673a-4e42-8fff-e2990874139f"
        },
        "item": {
          "id": "ef328bb4-54a4-4794-898e-4047be6710b8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e241fdb9-eb11-4dec-ba92-b57b2ebb8f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568c3d58-b3e7-4a2e-bc86-1e19f4915ebf",
        "cursor": {
          "ref": "03bf88e7-0255-4652-b183-0f9d1e4897b1",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "72ef4057-3e15-48e7-a22f-db7f468afb0d"
        },
        "item": {
          "id": "568c3d58-b3e7-4a2e-bc86-1e19f4915ebf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9bf6f93a-24de-4054-8650-97ef40eef245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93b11c7-6e35-46f4-b02e-cce82509d457",
        "cursor": {
          "ref": "661c8f80-7637-4df0-8d46-757149e8f797",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2c41568e-3085-4ff3-a44a-538e25bb0dc8"
        },
        "item": {
          "id": "b93b11c7-6e35-46f4-b02e-cce82509d457",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d1f190db-146b-4a05-8cb8-3bca93e8c759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7331d927-703c-4bad-950c-c63bae776f42",
        "cursor": {
          "ref": "b8253a10-86dd-49ea-ae8f-7013903c105e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ea885af6-a010-4adc-a1e4-c11e7863bb16"
        },
        "item": {
          "id": "7331d927-703c-4bad-950c-c63bae776f42",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "834c3610-4736-4865-b009-a518e6515736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f03373-b138-40c3-ad74-8d18f315efa0",
        "cursor": {
          "ref": "30133c9c-4e21-411c-8184-19d6b6967856",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2408eef5-39e4-4fd2-ad09-b8558c810404"
        },
        "item": {
          "id": "b7f03373-b138-40c3-ad74-8d18f315efa0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ed76b2f7-5fff-441b-85a5-74d756968b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27207d06-33a4-4ad6-a653-b873f2d2663c",
        "cursor": {
          "ref": "e1e8a446-558e-4653-adae-b9d7ddafe76c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "39630caf-bf9b-4047-863a-a466d6b30131"
        },
        "item": {
          "id": "27207d06-33a4-4ad6-a653-b873f2d2663c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "59537cb0-8ead-4c24-9643-7519475ab61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e5a222-3b01-492c-ae2b-d08bb94e4d1a",
        "cursor": {
          "ref": "5c7cba45-1ffa-4b72-8eb5-6f91ea73dd49",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "321ea982-5bbf-49a0-979f-3ba11dcb3b39"
        },
        "item": {
          "id": "82e5a222-3b01-492c-ae2b-d08bb94e4d1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b05f2b8e-2e7f-472f-88d0-b30f05f1e24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2586a9-6d5f-4cfa-ac31-688ec2541f81",
        "cursor": {
          "ref": "d4bfb032-941d-4142-9d90-d02b9bedba5e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "91a768b2-c73b-40e6-854e-809515faa061"
        },
        "item": {
          "id": "ad2586a9-6d5f-4cfa-ac31-688ec2541f81",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bc763833-c367-4130-8e72-f40571c7f33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb82b64-afe9-4f5e-92ab-a9e267a729ca",
        "cursor": {
          "ref": "4d5d824a-6161-46bc-a5df-80f3f92eed68",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "75efcba1-4d0b-4a8d-9bab-dd97c1525bd0"
        },
        "item": {
          "id": "8fb82b64-afe9-4f5e-92ab-a9e267a729ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "beb04f01-e669-47ae-838c-776457c9be7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8654d7cc-4574-4276-ad88-df0761a2672a",
        "cursor": {
          "ref": "9d4fa790-7b4b-4ac7-bebc-1dce13c46571",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "85900f2d-c1e1-48e2-8cd9-375eac71886a"
        },
        "item": {
          "id": "8654d7cc-4574-4276-ad88-df0761a2672a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5f8b3f0a-02e6-419f-af7f-aaca6fa8f5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5bcacc-6747-437b-b76f-1073580e2724",
        "cursor": {
          "ref": "3f2c56f8-9dd4-434c-87bf-c003bd13151b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1c99afea-2ca4-44be-9246-b11bc375e211"
        },
        "item": {
          "id": "2f5bcacc-6747-437b-b76f-1073580e2724",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e8cca8b6-a3f4-40b5-b7c0-7959377fa79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d5b05c-6638-4ced-a191-d41e7ba30971",
        "cursor": {
          "ref": "802f9369-d428-419d-a491-ec03dce9baf9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "09bda219-ba63-4140-ad95-20146bcbc166"
        },
        "item": {
          "id": "d6d5b05c-6638-4ced-a191-d41e7ba30971",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "52423b75-1aad-430e-8060-499f050bf9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384461cf-9468-4443-8fd6-7c3795ccc960",
        "cursor": {
          "ref": "c01af5b8-e1cf-4064-b9b4-57a42012a0d2",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1b8dd50f-e4e0-4c98-9f7e-2f975b8b7041"
        },
        "item": {
          "id": "384461cf-9468-4443-8fd6-7c3795ccc960",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4f79b44d-b3af-44b8-a985-1226e0df041f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a8e573-46cc-4ddd-9377-a1f90a478553",
        "cursor": {
          "ref": "e3cf55cc-06cf-4637-8cd4-5e2ce476023a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e0239ce0-e1e1-4e3c-b3b9-96d314325dc8"
        },
        "item": {
          "id": "e7a8e573-46cc-4ddd-9377-a1f90a478553",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "27776a96-6a40-4ffc-a051-b24708256a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acbc463-cb15-4ac0-b3b1-4f3e9baf9774",
        "cursor": {
          "ref": "602ba759-8da3-46f3-a059-08103db49523",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bc513bc9-a4f8-4ab9-b0cc-3ae1b3b43e7a"
        },
        "item": {
          "id": "2acbc463-cb15-4ac0-b3b1-4f3e9baf9774",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a5d3c052-4e54-4df5-bc80-bbc8e7a6e449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118d8a02-ba9d-4637-a07a-101967fa75c7",
        "cursor": {
          "ref": "d1a0da8c-9cda-44e6-a283-6fa0a7bb07fb",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "da90727c-112b-408d-99f1-c9f414b06362"
        },
        "item": {
          "id": "118d8a02-ba9d-4637-a07a-101967fa75c7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "beda7683-22bd-4130-9034-d35d20f36a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de40b13-0091-4785-b5b9-a03fd6fd827a",
        "cursor": {
          "ref": "b95452d3-84df-4e5b-a333-81bec558f9b0",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "56935b55-fd73-4c80-a1bb-500e293927b0"
        },
        "item": {
          "id": "7de40b13-0091-4785-b5b9-a03fd6fd827a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "98058e54-db6a-40fd-a08c-031b05120948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0794ca78-0454-4255-b08e-4aa770e6f1c5",
        "cursor": {
          "ref": "7322a58b-5b52-4107-8053-8af3cc1b8008",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "816ffd47-b658-4d72-a0e2-010e9cdb1f80"
        },
        "item": {
          "id": "0794ca78-0454-4255-b08e-4aa770e6f1c5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2f568409-d495-4180-98d9-2d2e8dc94154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc1028e-1249-4ecd-a11a-11f09a4f6a28",
        "cursor": {
          "ref": "5c8afec0-1de8-4749-84d2-5b291c8d6064",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "34a09f50-5f20-4a4b-9c15-40708168b12d"
        },
        "item": {
          "id": "9fc1028e-1249-4ecd-a11a-11f09a4f6a28",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "969548d2-dd30-4a61-bc89-41ec625cd4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739f6e7f-47e6-4076-9852-38e0fb4cbd05",
        "cursor": {
          "ref": "2977bfd4-4f69-4277-ac42-d9643114fef2",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0427ade4-b489-408b-ba4e-8ec951c24442"
        },
        "item": {
          "id": "739f6e7f-47e6-4076-9852-38e0fb4cbd05",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6fe26db3-9a54-42d9-bba2-bc340faa99f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fcd774-5163-474d-bc79-bedccdfe333a",
        "cursor": {
          "ref": "b56a2504-bd77-4a17-86ec-277b13218d47",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2763e127-3a89-44bb-9b8c-f849bd1a3a01"
        },
        "item": {
          "id": "67fcd774-5163-474d-bc79-bedccdfe333a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "70f4003d-3512-484f-8adf-8c3edae0d53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1a87f7-c59b-4026-a6c6-309b20c1cd29",
        "cursor": {
          "ref": "8b3937dc-74b5-48c5-b81a-a5f1539223bd",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dfbfabb4-45ae-4555-8691-2cf1c9371a15"
        },
        "item": {
          "id": "9b1a87f7-c59b-4026-a6c6-309b20c1cd29",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "14d960e5-639d-4b20-9d01-21cd5e1d2dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ee8a56-cb66-4638-a6f5-52ed17856f51",
        "cursor": {
          "ref": "0968aaf9-46d5-4b95-94f3-566daaaa3362",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b10f064f-cc68-47e7-848e-afd759d2c51a"
        },
        "item": {
          "id": "51ee8a56-cb66-4638-a6f5-52ed17856f51",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "09746e40-26ce-42ff-ac31-2eea7c825a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab92bfe-db26-4e80-8e6b-74ced109e10e",
        "cursor": {
          "ref": "12e54e78-d027-448d-b395-48d746c8c1a1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8b6f8bde-dfc0-4402-9ab8-659430651700"
        },
        "item": {
          "id": "0ab92bfe-db26-4e80-8e6b-74ced109e10e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "30313f80-8768-4333-998d-8bd1ccb0bbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba16b20-7455-49a6-a49a-7dfbb3cf2855",
        "cursor": {
          "ref": "39933cf2-074e-4df9-848f-81e60601c8df",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5453a75f-6606-47bc-9c55-deebabbef741"
        },
        "item": {
          "id": "bba16b20-7455-49a6-a49a-7dfbb3cf2855",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "94d4da12-cf57-4dd2-b0ac-ff8099316c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57d070f-63a9-476d-957d-e9fc205b8f98",
        "cursor": {
          "ref": "6ebfe1ee-91cf-40d8-9143-6ecf00ee45ed",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d7e6b2c4-a7d9-4616-8d60-538bc6aeb4b2"
        },
        "item": {
          "id": "f57d070f-63a9-476d-957d-e9fc205b8f98",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3210b405-9775-4441-9ac4-ee542384083c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636f7fc9-9cd1-4be9-96d9-79bcf830380a",
        "cursor": {
          "ref": "1301bfd7-ea3d-4410-b184-c7e259ce18f9",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7260d492-da67-42b6-b01c-8d4ecd8c1d5b"
        },
        "item": {
          "id": "636f7fc9-9cd1-4be9-96d9-79bcf830380a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eefad2b6-3ad6-4e3e-9683-7431bdb82227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae72c5eb-273b-4c0d-9085-62647bc284fb",
        "cursor": {
          "ref": "d4e9ce26-5efc-4668-856c-1596ef081da5",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2d06e729-4f53-454f-91a2-b9831c64792c"
        },
        "item": {
          "id": "ae72c5eb-273b-4c0d-9085-62647bc284fb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b61b61ba-5423-4552-8010-b20758436ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c31c24-5bdc-42eb-835d-07b1d8bfb813",
        "cursor": {
          "ref": "b1443c51-4137-43ce-a762-bfacc651e37a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "09ce570a-a25b-45bc-8fe6-396c3dca823b"
        },
        "item": {
          "id": "b5c31c24-5bdc-42eb-835d-07b1d8bfb813",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "70f6b656-e2e0-4923-ab2d-2a607625a39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e48466-36b2-4f0f-b40a-61a2f2393734",
        "cursor": {
          "ref": "6781931e-f76a-4f1f-8af4-abd7004ac347",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4835a2f0-5233-4088-9794-3b9ce2c6bdb6"
        },
        "item": {
          "id": "a3e48466-36b2-4f0f-b40a-61a2f2393734",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e03b301c-a9c1-4769-9632-050e4f94e2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a62d90-9362-4219-a21a-9648fbf6660c",
        "cursor": {
          "ref": "e858c00f-be94-47c7-95ba-89526079861b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "622a089e-ecbf-45c1-a3f1-89306ef1f98e"
        },
        "item": {
          "id": "e8a62d90-9362-4219-a21a-9648fbf6660c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9907f372-4e3e-4191-b63a-7ddaee8e79b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace42ecf-10dd-4c6b-8bd0-a3b451b2127e",
        "cursor": {
          "ref": "3f83ad9f-7fc4-4a76-af50-e24a5822f69a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9891469f-5c98-4f05-8ccc-01cdda0ab58d"
        },
        "item": {
          "id": "ace42ecf-10dd-4c6b-8bd0-a3b451b2127e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ffa823c7-bebd-4a48-a3ff-4dfdeed66436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194f5007-3668-4473-bc33-eeb145aede80",
        "cursor": {
          "ref": "661a0e6d-ad91-4b1c-ab45-1e6cbbeec0d0",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4ca6bf9b-06e7-4ac2-a08d-051a37af4731"
        },
        "item": {
          "id": "194f5007-3668-4473-bc33-eeb145aede80",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7dae1514-a419-4638-a486-360bfe07c323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd1d429-5a04-490d-b108-d039aaca5022",
        "cursor": {
          "ref": "45c25560-d530-462a-90d0-ee124fed5c89",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b60d7d0d-f376-475c-ac19-2d1502a4791e"
        },
        "item": {
          "id": "2fd1d429-5a04-490d-b108-d039aaca5022",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f6be681e-ec6a-4a39-b6e7-de5e5ccaca2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a650f0c-928d-4524-8875-8267a838cf2c",
        "cursor": {
          "ref": "a1f9a957-6be1-4408-9457-f60f04b1edbd",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "19128144-301d-4bda-9c0e-b2b84c2a63de"
        },
        "item": {
          "id": "8a650f0c-928d-4524-8875-8267a838cf2c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8419611b-e7f1-4b11-acbc-dc8a30959653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac12014-a47e-41d5-8011-91ba423a8e4b",
        "cursor": {
          "ref": "6a0c883d-bd63-4241-9661-8f595e55274e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0a4dbed7-5c96-4899-923c-7c4d993ab008"
        },
        "item": {
          "id": "9ac12014-a47e-41d5-8011-91ba423a8e4b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e6eabda2-038d-41bb-9570-6ec9a1d167a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fc4a55-f564-4492-8607-18c84181c114",
        "cursor": {
          "ref": "90299657-94d0-4160-86c7-edff78d2833f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "55efbb26-4f40-4c1c-aa74-6a781f6c0449"
        },
        "item": {
          "id": "63fc4a55-f564-4492-8607-18c84181c114",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "55172f33-a693-4ecd-a5f0-763a51c45bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b5e07e-6e76-409c-afc6-e528e6fe925b",
        "cursor": {
          "ref": "93880ac9-dcd1-4c88-8441-dadafbbd901f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3e2f34b6-2106-4bfc-9d8e-d54121d150e0"
        },
        "item": {
          "id": "b5b5e07e-6e76-409c-afc6-e528e6fe925b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f311e4bb-a1a4-4660-8a63-46899078f93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0360aa-74fa-4b22-a0e7-624d85e300e7",
        "cursor": {
          "ref": "678eb7e5-25f3-47bb-b72c-4487de734564",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "179cffea-e6aa-48e4-9344-1dd7c30bd9c5"
        },
        "item": {
          "id": "8f0360aa-74fa-4b22-a0e7-624d85e300e7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "18be6506-0b40-4f56-b914-7834803e47f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3ec99b-305c-4d26-8d33-f57c7dc41497",
        "cursor": {
          "ref": "1595099a-f1c4-4a01-8fe1-e1d021f04c66",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4302224d-9269-44a7-9e46-03155405050e"
        },
        "item": {
          "id": "5a3ec99b-305c-4d26-8d33-f57c7dc41497",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bcf7850d-198f-4582-87fe-2e1c97c562bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cb2c9b-50eb-4bfa-a26a-3d4e8456d811",
        "cursor": {
          "ref": "fb98d70b-4476-4a30-ae63-e5c701da3d07",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5d2a7548-67bd-42f8-b250-2ff0318d42d7"
        },
        "item": {
          "id": "e3cb2c9b-50eb-4bfa-a26a-3d4e8456d811",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2a4ad044-9873-41eb-8180-2d35bf14f2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89b816c-504b-4445-81f2-9869fa98f0e8",
        "cursor": {
          "ref": "9dbec8b3-4e86-485c-b558-28a636b4480b",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "875b12cf-0604-4778-ad92-883f10cf9172"
        },
        "item": {
          "id": "a89b816c-504b-4445-81f2-9869fa98f0e8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d1f5bfe9-576c-4eda-a959-5d7577908115",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6d148d-a047-4646-ab1c-d3188a2ab116",
        "cursor": {
          "ref": "8c2b03a2-cad5-40e5-9c66-614e78b68548",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b7144abf-8eb1-4eb3-9135-5a92ba8ada93"
        },
        "item": {
          "id": "3a6d148d-a047-4646-ab1c-d3188a2ab116",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e23b2538-eba6-4f82-8689-c3040ff30b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "e7013350-88fb-4d45-a3d7-578425d25ee1",
        "cursor": {
          "ref": "39c56df3-90f3-486d-b5a3-6d7813bf0152",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "061a4bd8-3839-4313-96c3-45e1ebdf54df"
        },
        "item": {
          "id": "e7013350-88fb-4d45-a3d7-578425d25ee1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6b9002ef-8abf-444e-a8ef-d03fdc395aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "8f18e05d-4b4e-4a79-9bf7-c9859e326eb7",
        "cursor": {
          "ref": "3929acf3-573a-4d57-a787-61288fc2dad4",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d00ec3c0-a10a-42c1-95ad-3f3bd17abe97"
        },
        "item": {
          "id": "8f18e05d-4b4e-4a79-9bf7-c9859e326eb7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "183613e6-5e5c-4f47-b931-6b7406a60403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5d137e08-f28d-4cd7-935e-e74bee7c07ab",
        "cursor": {
          "ref": "eb87328f-3a8e-4c8d-8f75-6c08e48341f3",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3f69b700-d3ae-40c5-adf8-95ce4f7c4d40"
        },
        "item": {
          "id": "5d137e08-f28d-4cd7-935e-e74bee7c07ab",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4bbdbc51-ca59-4217-8f15-2448d0a96dba",
          "status": "Created",
          "code": 201,
          "responseTime": 5118,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb671a56-c24a-4d86-abd2-1582bdadddb8",
        "cursor": {
          "ref": "5b6d53c5-39da-4644-8b0c-0798b0a64881",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "716e9696-4c82-419d-a735-5808ad6ea298"
        },
        "item": {
          "id": "fb671a56-c24a-4d86-abd2-1582bdadddb8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5784e73c-6726-4c40-b7d5-efb9bb481c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "96fc68da-5ee9-452a-bf5c-31c1c95da2af",
        "cursor": {
          "ref": "1ee560c3-d34f-40e9-b338-cafe38fee1db",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "74d3fc27-12de-48e9-ae95-85c27e2facca"
        },
        "item": {
          "id": "96fc68da-5ee9-452a-bf5c-31c1c95da2af",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b2992c4f-1398-4a0e-9325-f53fc33228fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "49371910-f030-4a14-bd95-8c436547c6f8",
        "cursor": {
          "ref": "ac8c5044-4298-48c5-9a4c-02a402e0f672",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a36641b7-6188-47b3-8995-2d7eb73beade"
        },
        "item": {
          "id": "49371910-f030-4a14-bd95-8c436547c6f8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b4fd9750-d109-4a58-baae-82cde5d1c8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982a4c06-08ab-46da-bb6b-b6f414d7354c",
        "cursor": {
          "ref": "855e348d-44de-4873-a42b-26fd8bec451f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "087f16ec-537a-47ef-8cba-6862196d8957"
        },
        "item": {
          "id": "982a4c06-08ab-46da-bb6b-b6f414d7354c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e178bc3d-b594-4f04-8d1c-7b36d41369d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdff03fd-efb0-493d-960f-59d88e0a0b86",
        "cursor": {
          "ref": "8ca3c8ef-7b44-4d65-85dc-cbb12405de05",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1a607f71-0e68-4f83-861d-4a1033d2c3bd"
        },
        "item": {
          "id": "fdff03fd-efb0-493d-960f-59d88e0a0b86",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "884dab9a-05a6-49fc-970c-f20af8f86943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7f8c03-515f-4785-bebc-071d1aaf2596",
        "cursor": {
          "ref": "55d7bff3-7bab-4e9f-99c8-06c3e94ba2df",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a64ee4d5-4e7c-4e5a-bcda-6b90f939ebb6"
        },
        "item": {
          "id": "6a7f8c03-515f-4785-bebc-071d1aaf2596",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7c831f7e-fb13-4acb-bc3b-bf007b7876b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b65aa9-3f10-4b9b-b5d8-68ebc389c622",
        "cursor": {
          "ref": "24666f7f-7397-440c-81bf-6fb0c24d3a4c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "830b36ce-1c4a-41cc-a76e-2f3a398df379"
        },
        "item": {
          "id": "22b65aa9-3f10-4b9b-b5d8-68ebc389c622",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0ca99494-f8f6-436d-9dd3-84dd368dfad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779a615a-bfb5-49be-a870-02fa3010e7a2",
        "cursor": {
          "ref": "14e502f7-5df9-4b45-87fa-47766d628aac",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b9d01bcc-0574-4225-bd91-f517cd50bfb1"
        },
        "item": {
          "id": "779a615a-bfb5-49be-a870-02fa3010e7a2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2c625886-d461-464b-9150-b9ada1a69178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d7c021-631b-4ec5-98b4-cd838c8e6820",
        "cursor": {
          "ref": "7f581d12-d745-4ee8-8e92-ee5a1ef5804b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "31bf6c2f-7ec2-4689-b29a-16ab5d645f1c"
        },
        "item": {
          "id": "a1d7c021-631b-4ec5-98b4-cd838c8e6820",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "762ce752-a761-4fc2-a80f-1bba7d6aee5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33077ca1-bd22-40e2-825a-0bef7de161af",
        "cursor": {
          "ref": "4770c25e-0d7e-4341-bc6b-4dda2fee6b7a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "32fc7008-d51f-49a0-b142-a4a5d05a953d"
        },
        "item": {
          "id": "33077ca1-bd22-40e2-825a-0bef7de161af",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de195813-be12-41df-b2b9-a900c2779caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d79a71-6187-4e1b-a649-140b35454bab",
        "cursor": {
          "ref": "275a5296-81d3-4087-83fd-4b918b6f170c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d3752690-4720-4ae2-974a-031263ca7664"
        },
        "item": {
          "id": "04d79a71-6187-4e1b-a649-140b35454bab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2db55670-fc4f-49ab-82e0-842f71ad7bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20441d8a-5ba9-4e0a-8e4c-f885157fc817",
        "cursor": {
          "ref": "ebd72ec0-b7ac-4079-9125-f32a1d6989c5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5cd93051-8f25-4a14-91fb-c8fbb9dbbaec"
        },
        "item": {
          "id": "20441d8a-5ba9-4e0a-8e4c-f885157fc817",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "42a202b9-89e9-4b5e-8859-ec3988e50bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63b2851-3f84-455f-95b1-9ba712946b79",
        "cursor": {
          "ref": "f5815064-fe4a-4f8c-95d3-c78f4b1d2079",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ac498f5b-0358-48b2-a37c-3cb2c8ef5f5b"
        },
        "item": {
          "id": "f63b2851-3f84-455f-95b1-9ba712946b79",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "89c1a07d-c469-41d7-900a-3da14264c6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51120108-0315-4f6f-9c2e-baa4833c8f19",
        "cursor": {
          "ref": "8ae3837c-f6a6-4ece-be72-9844b844b5f8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c9508b4f-7bc1-4529-a0f6-34a431e720d9"
        },
        "item": {
          "id": "51120108-0315-4f6f-9c2e-baa4833c8f19",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "faf1a4a4-4e5c-40f0-aaed-8e01199fac7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d590c7-f1cf-4068-a4b6-d1700098d2d1",
        "cursor": {
          "ref": "7e83f981-683e-489b-993c-d75243112a7e",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "62c99b89-bac3-42fe-86fb-21bdb38173ee"
        },
        "item": {
          "id": "01d590c7-f1cf-4068-a4b6-d1700098d2d1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "94c3b2a1-29a4-4eef-bd8a-95aa5e414748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5cf242-c4e5-4e3c-a448-00127c752106",
        "cursor": {
          "ref": "fd6179d0-c414-43d0-9b26-ec4ab31d4d29",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fb15b4a1-feb0-4862-8d04-1b4cd2e09d1a"
        },
        "item": {
          "id": "bf5cf242-c4e5-4e3c-a448-00127c752106",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "96eff729-70b6-4b2a-af72-d6520d6bc3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1416c6-35e8-4b6c-ac59-187cf76aa911",
        "cursor": {
          "ref": "4b2a4632-5914-4d13-b95c-1c755e9c58e0",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9ba17620-bcf7-44be-8640-835f7f70a7f6"
        },
        "item": {
          "id": "3c1416c6-35e8-4b6c-ac59-187cf76aa911",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f0d87453-62c5-4a44-9367-ed0faae383be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f50d738-b1d8-40be-a618-52cd64788499",
        "cursor": {
          "ref": "b7c51845-b344-43f3-898b-2ab69785df5a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "94f0a7ed-e6bf-42a3-9853-dd14c437b247"
        },
        "item": {
          "id": "4f50d738-b1d8-40be-a618-52cd64788499",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c3aa83e6-0b19-4550-80dd-ab29ade14a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b6115e-6050-4986-9369-7ac0edee9f36",
        "cursor": {
          "ref": "07045419-537f-4ec5-9661-d29470a3892a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4c355026-bf8f-4b7a-a59f-5c97a02b6db2"
        },
        "item": {
          "id": "b6b6115e-6050-4986-9369-7ac0edee9f36",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "56260e6e-9127-4562-b69f-5ef6e690947f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61495d52-17b8-4c22-bf62-943eeba9b917",
        "cursor": {
          "ref": "c0d1ba3c-4bef-4276-b31d-2ac3c28ac00a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7553f239-1da0-40cd-9347-c7894657d295"
        },
        "item": {
          "id": "61495d52-17b8-4c22-bf62-943eeba9b917",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "527b8081-e0b1-421d-808c-599a3cfcab72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f773bd3-0dcf-43bb-a2b9-a8e577da78b1",
        "cursor": {
          "ref": "5a7f340d-b276-4c59-b092-86bce02fce10",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cc9dcc90-0619-479f-862c-ace57979007a"
        },
        "item": {
          "id": "0f773bd3-0dcf-43bb-a2b9-a8e577da78b1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bd2dd25e-2f6f-41ee-92b9-32c95325265e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f038b7-6cc2-41e0-b3c9-c370579b524c",
        "cursor": {
          "ref": "fabde644-3089-4f4b-b8e0-1622eb83abcb",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "45558ea0-4f7a-477c-bba4-6873ca3d6fdb"
        },
        "item": {
          "id": "96f038b7-6cc2-41e0-b3c9-c370579b524c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "44a552e2-ca9c-4b3c-b434-dafc7dc85948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a15507b-e376-4ef6-8bf7-0cfeafe7cdfd",
        "cursor": {
          "ref": "b7dc9553-560c-4289-b662-eb1dae913c7f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f0eeac86-fb2b-4efe-8584-b7de75d5b633"
        },
        "item": {
          "id": "4a15507b-e376-4ef6-8bf7-0cfeafe7cdfd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "78869a0a-88d6-4bed-880a-281981758361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21b7e46-3351-4b4f-ac0a-f12d9b46367d",
        "cursor": {
          "ref": "e6efc804-30fe-4399-9620-be3ab1067898",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "379302ff-2e49-4279-969e-8afd5b463b1b"
        },
        "item": {
          "id": "a21b7e46-3351-4b4f-ac0a-f12d9b46367d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c3a4b8b4-9979-48bd-ab52-9251f2b2f0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71824b37-ac6f-4dc4-ae59-85c6d4793fd3",
        "cursor": {
          "ref": "a0d21806-d9c6-4367-866f-5b7fcc6e7fe3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8fa9dd37-5289-48c2-842d-b9e8735b8cdd"
        },
        "item": {
          "id": "71824b37-ac6f-4dc4-ae59-85c6d4793fd3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e05e277-567e-4827-8317-52c9f10f2d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bafe86-481a-44b9-a452-a7c2f6c0408a",
        "cursor": {
          "ref": "2fd60883-357e-46ee-a87a-f4e18d89fc1d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2883e940-33b9-4bd9-808b-b7bdeb4612f5"
        },
        "item": {
          "id": "16bafe86-481a-44b9-a452-a7c2f6c0408a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec66a8ab-e197-4689-b1d0-921da04bb230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea6d0bd-ad8b-4000-8a3d-ba51ab7df191",
        "cursor": {
          "ref": "67c6d229-2b30-4d46-ae9c-602c22d7ecb8",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dca6ba8e-6167-4d7f-bdd0-d91c3559d5cf"
        },
        "item": {
          "id": "bea6d0bd-ad8b-4000-8a3d-ba51ab7df191",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "15bfde1f-bf7a-4c07-9d73-38ae39ee577f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e1f21e-021b-4037-b64d-95be236e4259",
        "cursor": {
          "ref": "c6db5265-6859-4e57-9c90-9efda1cfd034",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "88dd56c7-e855-4e59-bfb1-eca40cb345f5"
        },
        "item": {
          "id": "16e1f21e-021b-4037-b64d-95be236e4259",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f8645a42-eb1d-45b0-9f93-478b8edf8a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb87acf-26eb-4534-9e69-a2b92a5a9e83",
        "cursor": {
          "ref": "7e5316e4-dcb0-43f6-8da9-977cd3cadb5f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b6784786-689a-489f-ad7e-610332296f5f"
        },
        "item": {
          "id": "acb87acf-26eb-4534-9e69-a2b92a5a9e83",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ead5ff98-b509-46c7-a28e-dc69b1a54119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7761b5-5f6f-49f6-b816-b55722ef48d3",
        "cursor": {
          "ref": "9d294503-7fb9-4f33-aa90-fbbd1f6c4432",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7ceb89e6-1566-490b-86e7-9a2ab54d8fdb"
        },
        "item": {
          "id": "9c7761b5-5f6f-49f6-b816-b55722ef48d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c6866480-eff9-40a0-882e-9c5107f0ea90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c9fe0d-ea4e-4a15-a524-61806e9a453b",
        "cursor": {
          "ref": "e9dbad0b-aa3a-4fa0-b0dd-44639fa8ffd9",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "324d8b09-60b5-4beb-91ab-08f1983d789f"
        },
        "item": {
          "id": "06c9fe0d-ea4e-4a15-a524-61806e9a453b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8c2d0db8-308f-43de-867a-a49e8faf8127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2b3348-1ac9-45dd-97b7-7aca506e4a4e",
        "cursor": {
          "ref": "9444c986-01d1-4139-a06a-2e4f57bb12d9",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "64c69a0b-44a0-41c0-9180-784eecc18c28"
        },
        "item": {
          "id": "ed2b3348-1ac9-45dd-97b7-7aca506e4a4e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9a8fef26-65c2-401d-8ff1-5d727e48fd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828ca3cf-7497-4677-843d-756f03714656",
        "cursor": {
          "ref": "73e4e7c7-15b3-440f-9fd8-9038b60527ff",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d41aa15e-8e5a-422b-b865-de9d0ea13800"
        },
        "item": {
          "id": "828ca3cf-7497-4677-843d-756f03714656",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9e7c9e51-4e51-46ef-be17-74648feaece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bec186-be5d-4791-b533-97e6ac4d8de1",
        "cursor": {
          "ref": "acb3c8c5-f7e5-49a0-a58a-e114f51e91fc",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9f61abfa-6a33-47b8-892d-af70f896b4d5"
        },
        "item": {
          "id": "93bec186-be5d-4791-b533-97e6ac4d8de1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6befb80d-0ea4-4ff8-a6cc-d1157a27e03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0483487b-286f-4390-8cba-1e2ee54a3b39",
        "cursor": {
          "ref": "b8652172-1664-496b-9618-be6676cbcdbc",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8521e865-049a-4229-b574-6315287ce08e"
        },
        "item": {
          "id": "0483487b-286f-4390-8cba-1e2ee54a3b39",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8324e900-8881-4778-89d3-146a4bdf9665",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de595523-cff3-440e-a42a-0132167057d2",
        "cursor": {
          "ref": "05fe0530-e6fa-4b31-8ce7-f8f043009353",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a0d99937-7270-4097-94db-a28de2ea17f2"
        },
        "item": {
          "id": "de595523-cff3-440e-a42a-0132167057d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98f09c43-6b3e-4505-a51b-f18480ecae34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52b8fe3-7739-484a-90c9-627e16d3f04b",
        "cursor": {
          "ref": "ac3d3417-be1a-432a-a6ef-da82a06e3d0b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "12fd5a23-c7b8-4ade-8a2d-1ff4a1c4e6c1"
        },
        "item": {
          "id": "d52b8fe3-7739-484a-90c9-627e16d3f04b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f4f84cd1-dac6-4205-8b92-1308314713e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5167fbe-b7ca-4932-9dfd-25a1732ed4df",
        "cursor": {
          "ref": "13d310f3-43b2-4467-a7a9-031211162fa7",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "67466095-afd4-4cab-9cc3-09ff7aebf2ee"
        },
        "item": {
          "id": "b5167fbe-b7ca-4932-9dfd-25a1732ed4df",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9f614970-27a2-4dfc-b501-0d244e05b8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b92f07-22d7-4e23-bd8c-2606ec12f6fa",
        "cursor": {
          "ref": "1db06a4f-f233-4dcf-9c23-a607e670e201",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "87876ca0-e01a-4f9a-b608-063f646104d2"
        },
        "item": {
          "id": "c1b92f07-22d7-4e23-bd8c-2606ec12f6fa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "06e89e39-afcc-4db0-9eb0-b65b45d9830f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55464d18-4729-413d-8175-589b6379aa91",
        "cursor": {
          "ref": "635a7b1e-65ff-4327-86c1-9d60aa4da0c0",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ac306da1-bf14-41d8-ada7-0d5a8c5f2362"
        },
        "item": {
          "id": "55464d18-4729-413d-8175-589b6379aa91",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "22e46cdb-b0d6-4a79-b5fc-0565f01adad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2574ca2b-1ac2-4095-b69f-69e88d89966a",
        "cursor": {
          "ref": "d7480cef-4ffb-406c-b7e3-6d4ab88420e7",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8428e932-47e1-408a-8c44-744b872c496a"
        },
        "item": {
          "id": "2574ca2b-1ac2-4095-b69f-69e88d89966a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e7770454-88f4-498a-9781-00af9a1c2d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadaabec-acfb-4032-95a0-68cf6964265f",
        "cursor": {
          "ref": "9263dbe9-bcc6-4106-bc3e-3106401e812f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ab1e65fe-6188-4622-92ea-8b6968703d88"
        },
        "item": {
          "id": "dadaabec-acfb-4032-95a0-68cf6964265f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "453ab26c-71c4-47a8-9005-38d5383fc493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc22f286-2838-45c4-8604-e92ae68fdf95",
        "cursor": {
          "ref": "1ce1e3bf-bd7b-4175-af1a-b37348f944ff",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c7762627-a9f5-4983-a0a6-8ed0146fe93b"
        },
        "item": {
          "id": "fc22f286-2838-45c4-8604-e92ae68fdf95",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e87be453-326a-4cf9-afb0-327447d71e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7650761-0a8d-4a8c-8660-861719d646f7",
        "cursor": {
          "ref": "a26e424c-a09a-4fad-bfb6-600d659abdfe",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d85f68fc-0752-4742-9c53-51639002e0e2"
        },
        "item": {
          "id": "d7650761-0a8d-4a8c-8660-861719d646f7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "feb12cb7-8270-4843-95fc-9fc1551c03a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df81fea-82c3-43d0-9b5b-1d228559734d",
        "cursor": {
          "ref": "ad23cefa-b652-4579-ba87-8d3c945696e6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7d6d3063-4d23-469a-98dc-db9743215d59"
        },
        "item": {
          "id": "9df81fea-82c3-43d0-9b5b-1d228559734d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3090f2ad-a677-45b7-b779-2140db5f3709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd28f21b-dee2-4e28-a147-1c78efd3f62a",
        "cursor": {
          "ref": "c0c3853b-d8a5-463e-b166-16fdb71ad6e6",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "db41baa5-18b3-481e-9a9b-9ba824194bf6"
        },
        "item": {
          "id": "dd28f21b-dee2-4e28-a147-1c78efd3f62a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c78027cd-37c9-48c5-b7fb-7f0ce5b2f205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf1b12b-f748-4171-a645-4a5eb9c7664f",
        "cursor": {
          "ref": "92f6fb69-7e97-473b-93a5-c200f4d10297",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "08f25a74-abfe-43ac-ad9a-5035b765791e"
        },
        "item": {
          "id": "3cf1b12b-f748-4171-a645-4a5eb9c7664f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "27a4288c-0d08-40fc-ac43-856b8d24529b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a817a8a3-6377-4602-8c19-5064196adc51",
        "cursor": {
          "ref": "676aaa14-14c0-40ee-b407-f4b43280a19e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1edc4be9-911c-48fb-8db3-f8797415e84a"
        },
        "item": {
          "id": "a817a8a3-6377-4602-8c19-5064196adc51",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "339bfc21-b05b-4542-b374-ff27403f4564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3f8aa8-6170-46da-a688-9aeefa76df2c",
        "cursor": {
          "ref": "f9316a15-6bdc-4bae-85cd-3c9778e0d30f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7041a61e-c462-497a-b499-7723ab713a36"
        },
        "item": {
          "id": "4f3f8aa8-6170-46da-a688-9aeefa76df2c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "de56c528-28a7-4f39-8ee0-7c5fd9ed085e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f90baf7-d81d-43f9-82df-69b2f631c748",
        "cursor": {
          "ref": "39b6a07f-dea6-4a56-9c65-f1dc26b6e144",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ae8f2f9c-72b7-48cd-b9c1-43dde627cf74"
        },
        "item": {
          "id": "8f90baf7-d81d-43f9-82df-69b2f631c748",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cd245651-b196-46c4-a6e4-10a0528ddfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6c13a5-0fa8-48ff-af77-1ee6cf7a4e8b",
        "cursor": {
          "ref": "0cd5619d-3911-4419-87ae-cc2205e35093",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "41cd4ff0-1d86-43b6-91ea-6be82bf5f173"
        },
        "item": {
          "id": "ba6c13a5-0fa8-48ff-af77-1ee6cf7a4e8b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4933006a-ba36-4ac4-9160-a70e3249cc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1e71fd-d951-4e37-97be-c742ee8f435b",
        "cursor": {
          "ref": "c6910e75-2f59-47ab-9fd1-655b209fb6a6",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5d91bb86-d8fa-457a-8c05-2ecf80a4cf86"
        },
        "item": {
          "id": "3f1e71fd-d951-4e37-97be-c742ee8f435b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a9a7cfdc-4181-4251-98db-a4685df0b167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aad0ea-a4d4-4e46-b20f-1b1837f255ab",
        "cursor": {
          "ref": "cac244b5-2554-4770-8187-51bd89f27ede",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e41b9029-b0b4-4488-bd9d-ec1926263fdc"
        },
        "item": {
          "id": "32aad0ea-a4d4-4e46-b20f-1b1837f255ab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "17e61ff2-fd48-44aa-8455-ecc011a1a06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a41147d-b1fa-4557-b247-0e051aae9df5",
        "cursor": {
          "ref": "d759e2ac-bc06-4bfb-8976-f37fe2798c5a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6ad22d61-4c23-4066-a329-7856bed787e5"
        },
        "item": {
          "id": "4a41147d-b1fa-4557-b247-0e051aae9df5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6fb8a931-3cf6-4330-8c50-1013a968cd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4a6da9-88dd-483a-9b9b-3252efb2b47e",
        "cursor": {
          "ref": "d3d73b2c-e2fc-426b-bbc6-debd394309d8",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ee28f8ed-d20b-45bf-a950-3495905c487d"
        },
        "item": {
          "id": "4f4a6da9-88dd-483a-9b9b-3252efb2b47e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4493dc90-315c-488c-9347-786f4dad1b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a811ed-a38d-4a1d-882f-ec85c4b21c35",
        "cursor": {
          "ref": "c0e919bf-8146-468f-b918-01c3ca10b570",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bdedabce-cbcf-4819-90bf-e866970edb79"
        },
        "item": {
          "id": "69a811ed-a38d-4a1d-882f-ec85c4b21c35",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f9fd031a-8ef3-4a85-9c52-2a8fc66b4346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b592670b-f7d2-4950-af27-12b4f8061cf3",
        "cursor": {
          "ref": "95250e46-5488-407b-af84-3b9f12a0b689",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "52683c57-4d75-4827-a222-f7e16c76cbae"
        },
        "item": {
          "id": "b592670b-f7d2-4950-af27-12b4f8061cf3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5b3d9da0-8818-469b-8d34-6d3af82c8a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cc227f-97ec-409c-b009-fe41ef2cf7ac",
        "cursor": {
          "ref": "e1f67780-881d-4531-a24a-331491755728",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3a844b71-e0e8-44c9-bfe8-6161451e8c29"
        },
        "item": {
          "id": "44cc227f-97ec-409c-b009-fe41ef2cf7ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8c2cd8cc-da02-4635-a21e-77ad1a81815c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ae9251-69a4-453f-8abe-25e0031aec75",
        "cursor": {
          "ref": "79a84555-651a-4fad-903c-412a1e298db9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d06de28c-c698-4aab-9219-3e0c8203bbad"
        },
        "item": {
          "id": "b6ae9251-69a4-453f-8abe-25e0031aec75",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "873ec864-9806-40fe-b278-15d1e5ce8730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dce4966-23f6-4c38-9ae9-5a6583269319",
        "cursor": {
          "ref": "e5e15824-a9e0-463f-b53d-612ed0519237",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5ff445d7-0695-423f-8a2a-440a60e812fe"
        },
        "item": {
          "id": "5dce4966-23f6-4c38-9ae9-5a6583269319",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7bc93009-6d55-4cdc-98af-c290c0b3020f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e48824e-b182-409b-9875-0af2260ce279",
        "cursor": {
          "ref": "20c66c21-1589-4e25-9d42-4afada479467",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cd32b799-5c0c-4dc1-a0ce-af4c7576fd62"
        },
        "item": {
          "id": "9e48824e-b182-409b-9875-0af2260ce279",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4a1b6390-676d-4f37-a05f-a97e00fa0946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492642b3-7ced-411e-bc63-df67ca8c4b2a",
        "cursor": {
          "ref": "534a2316-ab40-4824-b601-f3caefff3088",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9b3e0768-7b2f-40a4-8c07-4d652e693090"
        },
        "item": {
          "id": "492642b3-7ced-411e-bc63-df67ca8c4b2a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f69c56b4-4a97-4e0a-a993-ffabf92c3f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8ac14a-dd1b-4907-b298-71548f3cf893",
        "cursor": {
          "ref": "5c92535f-61e9-40a8-bc69-e22ebe15e03c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b8c9c98f-9b75-4d74-a61b-c57f81d560a6"
        },
        "item": {
          "id": "1d8ac14a-dd1b-4907-b298-71548f3cf893",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b97a671f-acd7-4386-afb6-0dcb7a2ae4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0f6376-548c-4757-8abb-701dd45d66f4",
        "cursor": {
          "ref": "4c209a67-b202-44d3-b688-2fab06db7483",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a0cf1732-9095-4018-80da-3a9d1f7e06b7"
        },
        "item": {
          "id": "5b0f6376-548c-4757-8abb-701dd45d66f4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "abb88e04-cae8-44c0-bad1-31db07d8b4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5700ad-1c53-4622-8bb8-f39d2478609b",
        "cursor": {
          "ref": "075695bf-8806-4f41-ab63-afba6f07f1a5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b282af29-4d2a-4a43-ba61-1554a0684517"
        },
        "item": {
          "id": "2a5700ad-1c53-4622-8bb8-f39d2478609b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "219e473c-0d8b-4ee8-b734-d9cce6638b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7021a2c-cd34-4efc-8a89-0fcafff020e8",
        "cursor": {
          "ref": "6ceb2a8e-de4e-43d7-973a-99dad3f7027a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6565de46-f995-4733-a4e8-855dda622d49"
        },
        "item": {
          "id": "c7021a2c-cd34-4efc-8a89-0fcafff020e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3dfe6b72-b43f-41ea-a225-1d47cfac9ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a797962-a223-497a-8e6c-a34c4de4ec26",
        "cursor": {
          "ref": "4b4b2d02-6beb-4eb9-ab33-9698d9a6d9a4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "485e15fe-59d0-4cdb-b046-124f1023e467"
        },
        "item": {
          "id": "0a797962-a223-497a-8e6c-a34c4de4ec26",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "78801392-eb71-40f2-91d0-09203a357f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4079334a-0fa7-4cdf-ad7f-2a1829bf59dd",
        "cursor": {
          "ref": "e5d53a8f-e4dc-46a2-b97e-c0013c1bd96f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fd97fc52-03d7-43aa-805e-88dada420af5"
        },
        "item": {
          "id": "4079334a-0fa7-4cdf-ad7f-2a1829bf59dd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c37877d7-4ad9-4227-893d-62a4433ae6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49601f10-6673-4015-9100-cf0376a88df7",
        "cursor": {
          "ref": "f99b3b1f-1dd2-4b07-896b-11fdd950dcd3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "12e44aa3-d729-4965-afbf-3bf27023a083"
        },
        "item": {
          "id": "49601f10-6673-4015-9100-cf0376a88df7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "de84ae0b-bf2c-4d80-a9f9-9940a0cc69cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9481441-72c9-4133-a2c2-36bf8601979f",
        "cursor": {
          "ref": "476e12a5-c5a3-4795-96cf-e5d5af0b4394",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ee8d3443-d48c-4601-b4b5-1493750a67e5"
        },
        "item": {
          "id": "f9481441-72c9-4133-a2c2-36bf8601979f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1fd959ef-2841-4224-823a-2ad970e48524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6071d4d9-651b-41ee-b7b5-4be5b82fdbf8",
        "cursor": {
          "ref": "1086a3e9-8a6a-4f7d-8597-7e5b74a6d6b5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e4f9df9c-69bd-423a-b71b-da1938288631"
        },
        "item": {
          "id": "6071d4d9-651b-41ee-b7b5-4be5b82fdbf8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1e7a5c87-fdf3-4167-a450-b295cafeac2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc0ee0b-904e-4e7e-a4d1-5d3fd57fbc53",
        "cursor": {
          "ref": "00058fbf-d5a7-40f0-af22-3fbc3141f263",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "730bf71d-b499-4643-8193-a271886fc81b"
        },
        "item": {
          "id": "1cc0ee0b-904e-4e7e-a4d1-5d3fd57fbc53",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "88478676-7230-4a1c-ab34-24dba5be7e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7f0549-ad4d-4e7f-a02e-27ddc3bab29c",
        "cursor": {
          "ref": "3f6e971a-9b40-4baf-bf69-1858a6164050",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "49707a77-f112-4df9-a1dd-03be56342e6c"
        },
        "item": {
          "id": "5e7f0549-ad4d-4e7f-a02e-27ddc3bab29c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7dfe55c2-0f2c-4244-8b72-c16e57c774c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19345207-8e58-48fe-a860-e88fe924c7ad",
        "cursor": {
          "ref": "65eb3cde-340f-421e-9eb0-6bb3b06759ef",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4f766986-d8cf-4eee-8bf5-b572f84d2a4c"
        },
        "item": {
          "id": "19345207-8e58-48fe-a860-e88fe924c7ad",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d6e4c8a9-a6b8-4de4-99b8-414c544527d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1107,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909442c6-f42e-4035-9d83-153fe2eed3e4",
        "cursor": {
          "ref": "5aa5c4de-b5d9-42b5-ab91-93ae3c978ea6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2c682095-589f-4f95-ac48-dd203c003c19"
        },
        "item": {
          "id": "909442c6-f42e-4035-9d83-153fe2eed3e4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "39c67e24-ac21-4f2a-abc2-f5f71d450ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dbe185-9773-41dc-a2db-313c09ebfb13",
        "cursor": {
          "ref": "499449a4-3bdc-4e04-98a8-d550a74b8daa",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1bcdf292-9659-44b1-aadc-44bae6a4ba56"
        },
        "item": {
          "id": "61dbe185-9773-41dc-a2db-313c09ebfb13",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "47018df4-c925-41eb-bea4-266a592e1fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91707a4f-9317-4158-95b6-b2ea24893661",
        "cursor": {
          "ref": "5cba9371-0489-4184-bf10-b3560058a367",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "77aa7264-8b2a-4f27-bdff-5952e3b06abe"
        },
        "item": {
          "id": "91707a4f-9317-4158-95b6-b2ea24893661",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b4b3a6d2-eb51-424c-963b-341e44305c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea37dc5-af19-4823-85a3-443afc71d781",
        "cursor": {
          "ref": "ae0d653b-ac62-4188-aeb8-36d0c76f9c96",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ff70d7d4-6e61-46da-879c-a437b3c55914"
        },
        "item": {
          "id": "eea37dc5-af19-4823-85a3-443afc71d781",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d3e03fa1-2696-480e-9805-854a6f0cc638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ad147c-4cb3-4169-b605-b163c5720116",
        "cursor": {
          "ref": "2ee3b0ac-6992-4de4-a77a-462bd36fab4b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "792baf0d-977e-4437-ab2a-5801ef43fbc9"
        },
        "item": {
          "id": "95ad147c-4cb3-4169-b605-b163c5720116",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d2092858-db72-49d7-828d-78abe3bf0c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb88851a-9f52-4b01-b843-239277006ec0",
        "cursor": {
          "ref": "fe6d7755-b45f-4bce-bdb7-a7e4d47ce825",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6f656118-e5a6-4526-9a80-ca3413d8d125"
        },
        "item": {
          "id": "fb88851a-9f52-4b01-b843-239277006ec0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3d0744e6-59b9-4d33-adf3-381932dfb975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbb441d-5a78-4bb2-a9c6-983a1568a552",
        "cursor": {
          "ref": "f2e80a2d-1b1c-46e2-bce6-d7fb2262d8fe",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0efc1a64-63eb-4b68-b28d-b1aec4f8b96d"
        },
        "item": {
          "id": "bdbb441d-5a78-4bb2-a9c6-983a1568a552",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d5e87249-7627-4605-b9f3-149f3923e525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8383e0-bb1a-4e00-a6fc-a43805ce2238",
        "cursor": {
          "ref": "c3127567-4898-406b-aee5-1da5e960c0ed",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6775b96a-0839-42f1-b6c8-63ea7be6b12c"
        },
        "item": {
          "id": "8d8383e0-bb1a-4e00-a6fc-a43805ce2238",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9ce22c3a-bb01-4ece-af2f-05a61da91a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e8a9ee-40d6-4a11-8ffd-cd1ae21b6901",
        "cursor": {
          "ref": "482cf17f-113e-4403-9abb-c6793943805c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f9b1a54c-393b-4cdd-8b39-2fab216effd7"
        },
        "item": {
          "id": "a9e8a9ee-40d6-4a11-8ffd-cd1ae21b6901",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f7e83983-97d0-4e84-9d07-91a7275e7211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a9f803-4d6c-4abc-b03a-dfeee9869a8b",
        "cursor": {
          "ref": "468997ff-f25b-4f6c-91e5-589cdf23e030",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3f7e4162-8054-46e0-943b-1e7b4f02eb0b"
        },
        "item": {
          "id": "11a9f803-4d6c-4abc-b03a-dfeee9869a8b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8fbfb76b-f428-4713-9f52-bb3d3f12f5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0cd523-cbee-42a7-8b7b-5c9c529eb127",
        "cursor": {
          "ref": "58805ea4-92c8-42b3-8c0a-f10aac2cbecc",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "69166aa0-4ac0-4d52-bd3b-db59976d5fe4"
        },
        "item": {
          "id": "cb0cd523-cbee-42a7-8b7b-5c9c529eb127",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c402af24-f15d-4fcf-a50b-26fa36b10859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdd7a54-0c80-4330-9903-01334b847ace",
        "cursor": {
          "ref": "99bcfa9c-0fee-4201-902d-5475f71b6d44",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0e314125-e91b-43f4-b4bb-8d88893fe3ac"
        },
        "item": {
          "id": "3bdd7a54-0c80-4330-9903-01334b847ace",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "12690fea-e4e1-4099-9466-863b3a0513bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4eee97-0c30-4d2d-b645-a3bc4831d258",
        "cursor": {
          "ref": "3ebe805c-6517-4315-94e1-ee1c65098add",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1663f385-49ce-4f96-bac6-246464a33616"
        },
        "item": {
          "id": "1e4eee97-0c30-4d2d-b645-a3bc4831d258",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a00a971c-fa9b-4c81-b774-09eb1938a10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca417f5-f8ff-40cb-a7b7-0de4e43a1844",
        "cursor": {
          "ref": "b4a0235c-ffbb-4aae-ab47-8ea07dbbedbd",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "96f17ac5-4ec5-443b-b2a2-657a768839ff"
        },
        "item": {
          "id": "5ca417f5-f8ff-40cb-a7b7-0de4e43a1844",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "263ce1e9-54ab-41f6-8dd7-bd224e52b5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb77cc56-06f7-4492-a8ba-6b3c090d9463",
        "cursor": {
          "ref": "076889b6-5acf-43c5-b860-0a5c8584a00e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3d57c9bc-ba30-4dce-b241-a36ece7940a9"
        },
        "item": {
          "id": "fb77cc56-06f7-4492-a8ba-6b3c090d9463",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bada40c8-4ac0-4ea0-a9e2-a5b5f957a2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1704894d-92ac-4cda-998e-943bf170e3fc",
        "cursor": {
          "ref": "9809c37b-4fa6-475d-95cd-6aed8c6f3a16",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5b27cca3-f557-4149-8202-335b411868a8"
        },
        "item": {
          "id": "1704894d-92ac-4cda-998e-943bf170e3fc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f488c791-b720-4c5c-868e-5fd32d52299d",
          "status": "OK",
          "code": 200,
          "responseTime": 266,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "fb05a598-3e0a-4f08-a73b-27fbf5a95d95",
        "cursor": {
          "ref": "97fb6964-9571-4a55-a0c9-4469c4cecb7b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "683ab07a-e1ed-459d-a23c-fd94cdb0b534"
        },
        "item": {
          "id": "fb05a598-3e0a-4f08-a73b-27fbf5a95d95",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1a459d62-ff66-4306-a6dc-cacce3a314a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585b21df-bd02-4117-9873-76022ce49eda",
        "cursor": {
          "ref": "c941fafd-b62f-4226-9db6-73f5a681f8a2",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "54a5a580-fbaf-4d8a-9546-2373dbeb497a"
        },
        "item": {
          "id": "585b21df-bd02-4117-9873-76022ce49eda",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0f4c6a57-a91c-4f9d-bd3c-3227a818d252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b9a1d7-0353-4f0c-a375-10546282263b",
        "cursor": {
          "ref": "27890777-7bb7-4b93-8c66-cdd8fcf978f6",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0947299e-2df3-452d-a92e-2fad25f039d5"
        },
        "item": {
          "id": "89b9a1d7-0353-4f0c-a375-10546282263b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3b0ec851-e651-491a-9658-e34a23747d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76056fa3-6783-4420-8b63-a9fe5a16d2c2",
        "cursor": {
          "ref": "99bb1152-e4fa-48c8-954d-4fdcabe3f112",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b0c22d8d-9960-4ee6-9403-9e5cc71669c8"
        },
        "item": {
          "id": "76056fa3-6783-4420-8b63-a9fe5a16d2c2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5553385b-bfd1-4841-a5cc-1b3b7a073d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252b9e94-a267-44c1-aae7-df4557e38803",
        "cursor": {
          "ref": "fe4191b2-b796-4931-a81f-a6af588d9376",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4da885b9-ec46-4acb-bc81-5e60c79ac0e5"
        },
        "item": {
          "id": "252b9e94-a267-44c1-aae7-df4557e38803",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0f14bdff-8c58-4f34-aadf-22ee0474e760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ef63b9-0586-4f06-b72a-dca7d27a1cde",
        "cursor": {
          "ref": "0fe8e1fd-5de7-44ae-9e75-2b8671029f68",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a0c825e2-e19b-4760-981c-c9b174ca3ec1"
        },
        "item": {
          "id": "60ef63b9-0586-4f06-b72a-dca7d27a1cde",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e46fbe53-5503-4fb4-8a7a-cd3e235b71f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a056896-8fc0-45c2-8f22-5c277d4ac73e",
        "cursor": {
          "ref": "aa777fca-0bcd-425a-864f-c2224174272a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d8e5ec33-8a2c-4aee-a75d-2698aab89c56"
        },
        "item": {
          "id": "6a056896-8fc0-45c2-8f22-5c277d4ac73e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e3711a63-281e-40bf-8764-7d10ccdc5ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b06285b-41f1-4462-b2bf-22623807a6ae",
        "cursor": {
          "ref": "a92c5b49-0fe9-4ad1-acfc-f12a1484cac3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "618190be-487c-4200-b875-3e2e83c25a9d"
        },
        "item": {
          "id": "9b06285b-41f1-4462-b2bf-22623807a6ae",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "07ef24c3-2030-44e0-86ef-696faaed6779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4d133b-2c8b-42d1-b427-010a5b65e3b7",
        "cursor": {
          "ref": "a6589490-9d92-4b37-b920-3fa1ff8e17c8",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f73f09b3-04b4-4245-985d-1994dc4bbf15"
        },
        "item": {
          "id": "5c4d133b-2c8b-42d1-b427-010a5b65e3b7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3090253d-9bd4-4c6c-b7ec-f4dc4f419495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50218935-a6fd-47f2-a314-1cb16c532888",
        "cursor": {
          "ref": "2ad2cf22-01b2-4b07-93f4-5a8f8fb8dff7",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c08c1e67-77f3-4f1f-b362-353650d0b906"
        },
        "item": {
          "id": "50218935-a6fd-47f2-a314-1cb16c532888",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4745d7e3-b77b-462e-968f-361d170e8b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daace01e-3c55-4089-a680-079135d0ed49",
        "cursor": {
          "ref": "12a41031-f643-44c1-855b-2f205506c083",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5776b728-10cf-4bd3-9618-6ccd7efb9d7b"
        },
        "item": {
          "id": "daace01e-3c55-4089-a680-079135d0ed49",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c108f1bc-57c7-4126-a31d-e42fbcf4a62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cd3757-9c8b-4058-95f3-ae5f08eff9ce",
        "cursor": {
          "ref": "14e87051-610c-449d-b44a-56a60f83f6d7",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c026dde0-001a-43f3-8ec2-baf5562f287a"
        },
        "item": {
          "id": "a4cd3757-9c8b-4058-95f3-ae5f08eff9ce",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e42cb716-1764-4cfb-a80a-b73b126f4fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d6322a-c67c-4ff3-92b4-f2d2f367df07",
        "cursor": {
          "ref": "9f8047b1-5b17-4650-b4e1-2ab2c6e068b9",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7444054c-1361-4eef-8ce0-a0d4553f9f5e"
        },
        "item": {
          "id": "e5d6322a-c67c-4ff3-92b4-f2d2f367df07",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "16ae3fb3-b9a9-4097-9c56-e9a79e30be2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8086c1b1-bad4-4666-8aa2-557ea8e1cc4c",
        "cursor": {
          "ref": "3d07061a-82df-4472-a991-21168326f0a5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e2211cca-aba9-44f6-bdc7-7acdebd856e7"
        },
        "item": {
          "id": "8086c1b1-bad4-4666-8aa2-557ea8e1cc4c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b281c673-054c-4fb7-a7c2-7d591f57c99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838ea261-eb3f-4482-96cc-73e26b0c784b",
        "cursor": {
          "ref": "849c224a-2188-4a6a-93e4-02d2f4861d8d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f8da1e5a-1f54-4eb6-9042-8b1dfb0f78c0"
        },
        "item": {
          "id": "838ea261-eb3f-4482-96cc-73e26b0c784b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ef049cdb-7693-4072-b42e-da43d35ec84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34368ea2-1915-4020-a874-9266a661b5ef",
        "cursor": {
          "ref": "bbdad873-1a41-45b6-8497-cb1283e90e1c",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "deb1a034-9ad9-4d5a-93a9-9357da522bea"
        },
        "item": {
          "id": "34368ea2-1915-4020-a874-9266a661b5ef",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6876402d-efc4-4994-8e94-a316a684dda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd7f329-fa40-4780-b74f-e5f409335ef8",
        "cursor": {
          "ref": "3d3d3c7e-5b88-4008-aff7-f4fe07974c38",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "714cf734-1e9b-4f03-babc-b23cadfa550a"
        },
        "item": {
          "id": "4dd7f329-fa40-4780-b74f-e5f409335ef8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "25f39f20-9301-4296-a1b1-6cafeeb49fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37a9574-ea52-4b3b-b6c9-e31df0125b01",
        "cursor": {
          "ref": "12ce0711-3ee3-432c-802e-4b9a5a28ad5d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2e1cf6c1-564c-4fc9-8e14-a35e7553ba71"
        },
        "item": {
          "id": "b37a9574-ea52-4b3b-b6c9-e31df0125b01",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3f50e52c-f1a2-4e43-9b75-443384667d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2467086-ef0b-4d9b-8eba-0039aff847f0",
        "cursor": {
          "ref": "ac77cb7d-a2c9-4d79-bd80-ff8db4310bbc",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7101ecdd-bf46-4955-880e-051ac8e7700c"
        },
        "item": {
          "id": "a2467086-ef0b-4d9b-8eba-0039aff847f0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "41667f1b-1d21-4a09-8363-854decce32b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9711a4a5-28c8-48ea-9ed4-5391979e85b0",
        "cursor": {
          "ref": "d002b8a5-1c57-4dd3-b14e-f1248782d5a7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "587a1676-6e0b-4781-a773-60efc7b33862"
        },
        "item": {
          "id": "9711a4a5-28c8-48ea-9ed4-5391979e85b0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d044f88c-9ba8-439f-a5bb-4ffdbc7e6bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3701eaa-b844-45c4-8653-991c4ce4ec9b",
        "cursor": {
          "ref": "ec91ca6f-be09-49f9-86de-5b795b555371",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2a2150b6-4f1b-473c-a08a-050167997823"
        },
        "item": {
          "id": "b3701eaa-b844-45c4-8653-991c4ce4ec9b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2b8c98bc-5dc9-4eb9-b336-676fd0d5b276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747c91cd-2f75-4762-8f3f-cefe8bcd0c5b",
        "cursor": {
          "ref": "a751b1eb-2190-4287-b846-715b1c9f720f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6d3e4e63-1464-421b-bd97-5c5986eed2f3"
        },
        "item": {
          "id": "747c91cd-2f75-4762-8f3f-cefe8bcd0c5b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c0c3d4e1-7dde-49f7-9b94-03a24db55c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edbf852-e8e2-4664-998c-98ddff439cc7",
        "cursor": {
          "ref": "37b745c3-2af7-4ddf-a6d1-6f57d811c447",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1e31623e-a2f5-4c70-8aa7-df94fb2949ac"
        },
        "item": {
          "id": "6edbf852-e8e2-4664-998c-98ddff439cc7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5b0a2d53-fdb0-4f77-a1bf-f2c76ad2be3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831aa342-aa2b-47bb-bcaf-d6c20e2843ad",
        "cursor": {
          "ref": "126cc7d2-9b24-4c9d-9593-e95474b8a27b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "92a4a248-d104-444d-a5e1-0ea98df7aefa"
        },
        "item": {
          "id": "831aa342-aa2b-47bb-bcaf-d6c20e2843ad",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c24b2f7b-5799-403a-9767-8c2c54446b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a0df92-2e7e-4f24-8488-c4f66cb5074d",
        "cursor": {
          "ref": "3a7d0659-25bd-4a07-8e13-6aaa1aa22168",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "583ea567-8aec-4e58-aa68-96c4689fa570"
        },
        "item": {
          "id": "57a0df92-2e7e-4f24-8488-c4f66cb5074d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b8f17860-3cd1-4432-a4a3-62db4f08d057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419bb2db-989e-4ff9-a4cd-8da29929ee71",
        "cursor": {
          "ref": "540ecc4c-96d8-4444-9ab5-280d68271e94",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c9e044a6-b2a8-4e7d-91ae-b170c406fdcf"
        },
        "item": {
          "id": "419bb2db-989e-4ff9-a4cd-8da29929ee71",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3db27fde-dd57-4a32-8c32-4219dc30800e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59b885a-4dd4-4fc7-9882-8a80ff7d2eb6",
        "cursor": {
          "ref": "54fe2ec6-eb1e-4e0e-8d72-3415a077dfc2",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2087bd0f-c7af-49a0-98cd-bb7de8e92ab6"
        },
        "item": {
          "id": "c59b885a-4dd4-4fc7-9882-8a80ff7d2eb6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0a586e5e-adda-49c6-ad47-8eab96f305eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6345482e-080b-4bce-a832-71d70e014ab9",
        "cursor": {
          "ref": "965c28e8-0ec4-43b6-a7c6-b6bf990c9e8d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1e21ad1f-7dab-4555-9679-59493196bad5"
        },
        "item": {
          "id": "6345482e-080b-4bce-a832-71d70e014ab9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b9f61620-9f0d-49d2-9a3e-ada728bd6a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5611d8-62bc-44e1-9448-e09cff56d675",
        "cursor": {
          "ref": "4b4997c6-1c20-4a29-8438-41dd3dded1b9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e4374490-ecca-412f-a2ca-c229ec0e9155"
        },
        "item": {
          "id": "7c5611d8-62bc-44e1-9448-e09cff56d675",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7181c201-b342-4e17-98e3-d851c406e60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbea5392-25d0-49e3-a610-1714e0c2d110",
        "cursor": {
          "ref": "6903eed4-e8ab-45ee-85ef-374b9ec9636c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "100d3c40-b465-4429-878b-889dc5bdf5c6"
        },
        "item": {
          "id": "bbea5392-25d0-49e3-a610-1714e0c2d110",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "72690b96-1558-454c-9e06-6a18e7951607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b42d396-08d6-4377-af4b-190c74545d4c",
        "cursor": {
          "ref": "9ededf85-4916-4006-bfc3-7665510a7a55",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4d176caa-5896-48e2-8a23-1030c420b03f"
        },
        "item": {
          "id": "3b42d396-08d6-4377-af4b-190c74545d4c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "43ccd653-5033-411a-ae18-bb4c1a33e754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82d8277-59c7-4b40-822f-d5d56e7b1a5c",
        "cursor": {
          "ref": "bae1dc5e-7a84-497a-aa86-16b1ac45bef5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ca72c5b5-8e34-45d5-8d1e-9887975fe9df"
        },
        "item": {
          "id": "a82d8277-59c7-4b40-822f-d5d56e7b1a5c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "efeb04c5-9449-4542-a570-4c35dcebe44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a799837-2997-4417-8bf0-78e5b0ab55f2",
        "cursor": {
          "ref": "3a378114-f6d6-49e4-80ba-fedc3114dea5",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3e042d0d-9e2e-4a01-988d-2850a1a6211b"
        },
        "item": {
          "id": "4a799837-2997-4417-8bf0-78e5b0ab55f2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f8467695-1711-4198-aa16-6976deb4ea51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6c8594-4fe4-4a00-bb32-72fe5a7dae1b",
        "cursor": {
          "ref": "6594f78d-4b15-45c7-87dd-6292e9435821",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a89dfc7c-5340-44ae-a6f5-adfcbf2ecafd"
        },
        "item": {
          "id": "fa6c8594-4fe4-4a00-bb32-72fe5a7dae1b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3c231a40-ec98-43c6-a49b-4a611a43d402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99c4d52-9a54-4358-9550-801b40353653",
        "cursor": {
          "ref": "342161f6-1a51-4cd7-aaf8-c0fd2ebc9bdc",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "83f0f9c6-c690-4f46-b759-c500448e773c"
        },
        "item": {
          "id": "d99c4d52-9a54-4358-9550-801b40353653",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5a4e7ce6-2961-42f5-a345-df941655084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2e6d79-8611-4d9e-8eca-90ccd82b41aa",
        "cursor": {
          "ref": "85320b8a-dccd-429d-bd7c-b77d585918ae",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0711c29d-bc59-4c25-a130-1188a059731c"
        },
        "item": {
          "id": "fc2e6d79-8611-4d9e-8eca-90ccd82b41aa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f148624d-7265-4151-a472-3377ab44aae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5767a4b4-3c99-4af1-9d56-35d1700d9574",
        "cursor": {
          "ref": "1f87b1f5-963e-4c7e-896a-00a93d43c161",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9f486427-e214-4a93-a719-6d380ec6ea2f"
        },
        "item": {
          "id": "5767a4b4-3c99-4af1-9d56-35d1700d9574",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "29c38bd0-a57f-4e07-8236-2d1765a2e289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198d0e42-3250-48ae-9a96-e250fc458fbd",
        "cursor": {
          "ref": "8db13f8f-6b30-46f3-b68d-e491dcdf600a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "90d768cb-3026-42d8-98b4-a24776a4088b"
        },
        "item": {
          "id": "198d0e42-3250-48ae-9a96-e250fc458fbd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fcb14f9c-002a-4694-88b0-5e5031d0e881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f5f053-4e7a-4b0f-8878-3418499d774f",
        "cursor": {
          "ref": "88afbacc-ebc6-4a8c-b5a7-f71d2cdb4104",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f7f049ff-75f6-4815-a2f0-c10cff5d6ab1"
        },
        "item": {
          "id": "33f5f053-4e7a-4b0f-8878-3418499d774f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "22d44bc9-34de-4068-a6a7-9fd0c3e691b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f47fa3c-aca1-4933-8882-5e9a8f43936b",
        "cursor": {
          "ref": "1bcb9883-004b-44bc-91c0-2fa13f5d99ea",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d14f0995-56c5-486b-81a0-66d3888dbdba"
        },
        "item": {
          "id": "1f47fa3c-aca1-4933-8882-5e9a8f43936b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "68aed6f7-eeaa-4f2d-a8e0-ea7f9bdf4b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e04e8bf-8f4b-4ec5-a1d5-81b0039ec59a",
        "cursor": {
          "ref": "932b0c1d-4fa6-40de-80da-d70a5db36c8d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7d706eff-6157-453d-962a-8509f6c1f879"
        },
        "item": {
          "id": "9e04e8bf-8f4b-4ec5-a1d5-81b0039ec59a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d4dda568-a9e0-437d-ac49-12f1142d077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358c8f7d-71f6-4151-9fb7-cd1b4fad35b9",
        "cursor": {
          "ref": "a76944d6-0b10-48b7-b8ac-b92b6b210259",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3f6e714e-3a49-42a5-91fb-ae03080e396d"
        },
        "item": {
          "id": "358c8f7d-71f6-4151-9fb7-cd1b4fad35b9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "abba18dc-2c94-4db5-a808-09ccaa5e0e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ef0612-bde4-40f1-8337-3af374a1a995",
        "cursor": {
          "ref": "3885c9ae-d468-44ac-883c-935f2c2977ef",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1b2e92b5-2256-49f0-bf89-43e43ba024fd"
        },
        "item": {
          "id": "d2ef0612-bde4-40f1-8337-3af374a1a995",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0f10b085-e001-40fa-917d-5ee9b9cebcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e339a5c-b24d-4847-a0eb-ce0a9b939961",
        "cursor": {
          "ref": "47893553-6226-4c0d-80ac-747405616875",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f977d27a-7af2-4b45-b975-f614f33f406f"
        },
        "item": {
          "id": "2e339a5c-b24d-4847-a0eb-ce0a9b939961",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b6034138-ab67-45ae-95e1-7100c72d51ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0933be70-9954-4361-bc83-86d37992e02b",
        "cursor": {
          "ref": "342b7f01-b49b-4150-8917-0de39eadd377",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "366a66a2-33fd-4440-af68-ac3f18595c8f"
        },
        "item": {
          "id": "0933be70-9954-4361-bc83-86d37992e02b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e06d5e50-d563-4993-90d5-427af10470c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5daf95b-f23a-42d6-a45a-fcb91b6f8784",
        "cursor": {
          "ref": "a90ce581-e012-4ad9-81ba-d6e55053f1b2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5edbe6da-c086-42f7-8959-c62886713875"
        },
        "item": {
          "id": "a5daf95b-f23a-42d6-a45a-fcb91b6f8784",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9ae59927-a055-42bc-b456-2b512364d4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7694705e-f9c6-47f9-9ea7-9440cfabf379",
        "cursor": {
          "ref": "77b5148d-30e5-4f1f-a25b-f8944a9ec076",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4d418084-a1ab-4c40-a7fe-07f3dcf19fe1"
        },
        "item": {
          "id": "7694705e-f9c6-47f9-9ea7-9440cfabf379",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1d6cf97c-f92f-4f7e-ac48-669fbdc8870f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa0d7e7-d7d6-43ed-8027-153c8d12aa3c",
        "cursor": {
          "ref": "57a2eefb-405a-4fae-96bd-12abd5a1bb59",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a4392210-b4b3-4e87-91c2-b6514d37b699"
        },
        "item": {
          "id": "efa0d7e7-d7d6-43ed-8027-153c8d12aa3c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b20624ec-214c-4eeb-bef3-cda80a0e37d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8eec60-bb57-461e-9ed7-31509c5df086",
        "cursor": {
          "ref": "c63ab999-ac9e-4bfb-96d1-6af891c29ce2",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a331bf13-ed7f-4fcf-9bd4-1767a2142d80"
        },
        "item": {
          "id": "2c8eec60-bb57-461e-9ed7-31509c5df086",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5a64183a-0ebc-4bd9-a830-4cf099d76383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a50fb05-96f7-48c6-a03d-d45de8b04eb6",
        "cursor": {
          "ref": "cc08ff78-1e8d-4072-81f5-c2312e47f1cb",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d74c397a-15ef-41ba-8018-3f22b99bba49"
        },
        "item": {
          "id": "1a50fb05-96f7-48c6-a03d-d45de8b04eb6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "56d6feb1-e3ce-4218-ad53-e283e238f4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183affd9-11a3-4250-ac71-8b15aa6ead78",
        "cursor": {
          "ref": "f91fa8d1-8b97-443f-a38e-8f7de1b0a041",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7bb1ff7b-b10f-47e2-8a24-955031796f0a"
        },
        "item": {
          "id": "183affd9-11a3-4250-ac71-8b15aa6ead78",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "756d397c-9ece-4f44-9f84-33a0238e4cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c976fb4-3996-4640-9f51-ad3475a87946",
        "cursor": {
          "ref": "02b971f6-c1ce-4d78-844c-347f9f74f8e5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "85928a8d-9b4c-4792-aa23-e4c819d934a6"
        },
        "item": {
          "id": "9c976fb4-3996-4640-9f51-ad3475a87946",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c2dc32bb-8b3b-4efe-ba87-54cdac3df189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83419fb-389d-4617-9435-13d38706cfe9",
        "cursor": {
          "ref": "5128a341-4676-485b-a113-f9c885654152",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ed581d8b-ca3a-4632-81bf-8feff443fd2e"
        },
        "item": {
          "id": "b83419fb-389d-4617-9435-13d38706cfe9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "60c2180d-0b05-433f-96ba-7708b1f44b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59430eb4-6923-4209-b3e7-2cd864c10276",
        "cursor": {
          "ref": "a539a1e2-df54-42dd-bf5f-0de6ee4ab9e0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "db7ff603-1d94-4845-badf-eeee44e06cb6"
        },
        "item": {
          "id": "59430eb4-6923-4209-b3e7-2cd864c10276",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0f970853-2177-465d-98e0-a9af6e254b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105cfcc8-82db-4f74-b9fb-9132525a9cbb",
        "cursor": {
          "ref": "7126dbda-cf5f-484a-9b55-b1c9646377fa",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "082a2ca3-37f0-4f9f-bb34-68db92033e29"
        },
        "item": {
          "id": "105cfcc8-82db-4f74-b9fb-9132525a9cbb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1c82e322-77f1-4b4f-8b85-b6bc3aa90cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd0fdfc-622e-4c74-84e7-a6b79b86e288",
        "cursor": {
          "ref": "97331add-1286-4ca2-a030-7953eb30c8c2",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8e6d9cc5-152e-422f-b395-aff6257ba22f"
        },
        "item": {
          "id": "8bd0fdfc-622e-4c74-84e7-a6b79b86e288",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c91cdd83-6795-4d76-b650-fb297dacfe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51731826-e225-4613-889b-43eecf056c72",
        "cursor": {
          "ref": "178537e7-9903-48ef-ae53-1ca80a1a56a1",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f017e2e5-a491-41f5-a5b8-35c8aaf4058c"
        },
        "item": {
          "id": "51731826-e225-4613-889b-43eecf056c72",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8eb9c94a-c809-4e60-bd38-f9198bf95ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b46f0c2-608a-4fe6-8cec-090aef16a9ed",
        "cursor": {
          "ref": "b03fa0fa-b7a6-430f-b6da-fdcb6aa4308f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "96e888f2-50fb-4ea1-8330-ab2d1caa4bc9"
        },
        "item": {
          "id": "7b46f0c2-608a-4fe6-8cec-090aef16a9ed",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "55204e02-2457-4053-a07e-4fbb70324a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c14a8fe-f434-4d63-b23c-047eb415e30c",
        "cursor": {
          "ref": "4a9cc10d-2eaa-4d17-af30-8f5a475f7730",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fcb89c80-9e8b-422b-9b8a-1da8f953af7f"
        },
        "item": {
          "id": "8c14a8fe-f434-4d63-b23c-047eb415e30c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "59839c82-0c7e-4e97-851c-f34fe8389ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23df768d-3e67-44f2-a234-58f16b3b72b9",
        "cursor": {
          "ref": "c79d95cd-efef-4353-a655-6de9cab7a270",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a3e68cee-6934-4202-b1b8-9139cf8b5f03"
        },
        "item": {
          "id": "23df768d-3e67-44f2-a234-58f16b3b72b9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d1a2a641-7b1e-445e-a598-a5cb0d12f3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481bafbb-24cd-45de-8fad-a31f327c2ed5",
        "cursor": {
          "ref": "e7781e52-4632-4286-996a-65a3ccfba01e",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "09215ac8-f0c5-4e7d-a5c3-16f9b0167c69"
        },
        "item": {
          "id": "481bafbb-24cd-45de-8fad-a31f327c2ed5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3a8f6967-c1ff-4b08-94d6-4deebedd3bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3b2888-6c3c-4384-bcde-13e1c6ac1c95",
        "cursor": {
          "ref": "66e64a03-40e6-4d3c-adec-fd47738c9e02",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9027ba9d-191d-4f86-bcb4-a92f29dd41a7"
        },
        "item": {
          "id": "4a3b2888-6c3c-4384-bcde-13e1c6ac1c95",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f2a2f558-3015-4032-a13e-d38058b6524b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a20f6ab-ec79-44b6-a1af-c6b3f14b5513",
        "cursor": {
          "ref": "d3e11949-9522-4cab-a007-2d5e0bcd476c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7377935f-a069-4fdf-bf13-813a7444546d"
        },
        "item": {
          "id": "8a20f6ab-ec79-44b6-a1af-c6b3f14b5513",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e4b60055-6b34-4c4f-8aad-bc919d16f6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e790160b-e0c1-4ec2-bf8d-c36b931b9841",
        "cursor": {
          "ref": "3c5bf224-14a0-47ee-b50b-a46b12e9b646",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e7201e4b-afc6-4a4d-82df-8bb29e192384"
        },
        "item": {
          "id": "e790160b-e0c1-4ec2-bf8d-c36b931b9841",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5f4e23f8-cc60-406e-9241-3234ed8fae67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1006,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b6834d-37d2-49d8-8495-c00f20735b71",
        "cursor": {
          "ref": "3a8c6340-7e49-4dce-a88e-976a3c71198b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7a26a297-a17e-4fc4-bd4a-46585c7bc527"
        },
        "item": {
          "id": "75b6834d-37d2-49d8-8495-c00f20735b71",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "94c02deb-8023-4872-a6f5-616e1d9d3d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48a0f5b-c68d-4a95-8cbc-de45ed294697",
        "cursor": {
          "ref": "0c575805-8712-4d9e-868b-f96d8560a8ca",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4e8da672-eb84-4430-921e-b2818f73b3fb"
        },
        "item": {
          "id": "d48a0f5b-c68d-4a95-8cbc-de45ed294697",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "80a8f683-4df8-46e4-ad1c-605c66cf547f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8104fa55-7af9-484a-9be8-e86868e16cf3",
        "cursor": {
          "ref": "137ef151-e3f0-48d2-84b1-b55f93fa8b85",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9e4f6da5-6c87-4f76-bddc-1b70b3be11e1"
        },
        "item": {
          "id": "8104fa55-7af9-484a-9be8-e86868e16cf3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "512c1e61-2176-4c50-8a6c-a0532ace8522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3917eb4a-ce16-4c15-9490-96a9c4621ce7",
        "cursor": {
          "ref": "d69fb6c7-d62a-46fe-9f3d-75dfa82a4e24",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6bb1e90d-1283-40c3-9ec3-e68d873d223a"
        },
        "item": {
          "id": "3917eb4a-ce16-4c15-9490-96a9c4621ce7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d821f7b6-eba7-438a-872a-b4bc5915e13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1edf9d-c2e0-4e83-9a8a-d1c4121cdd72",
        "cursor": {
          "ref": "97eb3b7d-05a1-405f-afc0-ba3e4c8ebc01",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "722da57c-2bc3-48ae-b0ca-acdd1b3c5687"
        },
        "item": {
          "id": "0d1edf9d-c2e0-4e83-9a8a-d1c4121cdd72",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3f98daf6-02d7-475a-aa27-8c2e21450fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befc5b77-1dbf-4828-b485-dd65bd4c2e40",
        "cursor": {
          "ref": "8fd12c0f-c7b4-4f1f-8783-35265d1bb34f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d1276f90-9717-4965-8e8e-4e72e6e838f4"
        },
        "item": {
          "id": "befc5b77-1dbf-4828-b485-dd65bd4c2e40",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a603f451-5deb-461c-af4f-e39dbc1c8cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bae69d-a219-4b23-bf3f-ccde4c62aab1",
        "cursor": {
          "ref": "183c2a40-607e-4015-9b6a-d01fc68d64dc",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "620486b0-b459-44c4-95cc-73e9a5872a65"
        },
        "item": {
          "id": "d2bae69d-a219-4b23-bf3f-ccde4c62aab1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "955d671f-4f90-45e9-a6af-d87074e929ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f1a296-6ea0-49ae-a3ed-85e359db93ab",
        "cursor": {
          "ref": "0abf570a-9b2a-436e-8cbb-98288612c673",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "51f7f5be-8008-4963-ab73-620c770a27a8"
        },
        "item": {
          "id": "e9f1a296-6ea0-49ae-a3ed-85e359db93ab",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c694a330-e738-4bc1-8da4-3f874d923592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1063e2ce-c088-4e1d-af1a-d96e53ef4ee7",
        "cursor": {
          "ref": "1797bc1a-7ddf-43e3-8254-66ecbeab6cd1",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0cca89cb-f4e7-4da6-8020-062ba7849f1d"
        },
        "item": {
          "id": "1063e2ce-c088-4e1d-af1a-d96e53ef4ee7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "569b5bef-aa47-4c9b-b048-397862451d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f3e16b-3e66-43bb-aa39-5e5160eee84b",
        "cursor": {
          "ref": "822310b8-e140-4156-a66c-ece1ace9fcbf",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9e26fe56-e0b9-40f9-8644-ffc5a08bc3d2"
        },
        "item": {
          "id": "62f3e16b-3e66-43bb-aa39-5e5160eee84b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "33286778-15db-4382-8587-566e4bfa2768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76816fd-f9e4-4b97-af70-e029734edbba",
        "cursor": {
          "ref": "c71e39dd-07a0-4ef0-baf2-64e460c835d3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4f67c73a-e1d5-4c9b-a4c2-7357b09a18ca"
        },
        "item": {
          "id": "b76816fd-f9e4-4b97-af70-e029734edbba",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ba9f4f7c-7769-448c-8cfb-ba4e43cca711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ed239-83b8-4df1-872a-611706a3cac4",
        "cursor": {
          "ref": "a34a4821-417a-4d81-8f37-61713e25b1ca",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cb24bbcb-f66e-4cf1-9727-ef31240b8827"
        },
        "item": {
          "id": "6e6ed239-83b8-4df1-872a-611706a3cac4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "397b23ac-8e6b-45e4-949c-ba4d1a3ab8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbe18c9-9e97-491b-8cf4-80f8eb127626",
        "cursor": {
          "ref": "a938b78e-7602-4c88-a16f-34b571acb241",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5ff757b4-fa63-47ae-a8c1-71b579386da3"
        },
        "item": {
          "id": "4bbe18c9-9e97-491b-8cf4-80f8eb127626",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bbb1bc2b-ff23-4281-8f0f-3ec26607e0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51bc9a8-1316-4201-af0f-336acada514e",
        "cursor": {
          "ref": "214c81aa-6f77-4edf-b295-520bd801df9f",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0b5bde38-3251-4498-baaa-a7aeacf2c266"
        },
        "item": {
          "id": "f51bc9a8-1316-4201-af0f-336acada514e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "90af8531-43d1-42fc-95e6-99b1a6d61285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c220f09b-58f1-447c-8f85-c66a8a1417e9",
        "cursor": {
          "ref": "5122a3f5-7af7-4cdc-843c-a83cf4a459ff",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4382098c-210e-4762-bdeb-dfcda5a57778"
        },
        "item": {
          "id": "c220f09b-58f1-447c-8f85-c66a8a1417e9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ee584021-6930-4f62-98e3-50a8d7d4bb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee603b7-f388-47bd-b0d2-a4687274e330",
        "cursor": {
          "ref": "d9928228-666c-4516-89f1-75bfac691578",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fd13a842-7ed5-4b5b-9cc4-6d89d9c4dbc2"
        },
        "item": {
          "id": "bee603b7-f388-47bd-b0d2-a4687274e330",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c1b3f380-10ef-4b32-a416-2644587184d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e7e297-68c4-4a51-a613-7709dc9d3371",
        "cursor": {
          "ref": "b0b8093d-6012-4289-9655-776b216b5a81",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bbb9ded6-ae61-45b5-88db-0fdf787bd036"
        },
        "item": {
          "id": "06e7e297-68c4-4a51-a613-7709dc9d3371",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d7b6f36c-58ee-4db3-a092-1c5a1ddaecdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e727287e-0b48-4a65-bda6-cc29908e4ff7",
        "cursor": {
          "ref": "e2bcddb8-78aa-4c2d-9f89-695c7c650e80",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e6f8f59e-ca0d-4b85-85e4-bea31fb47dca"
        },
        "item": {
          "id": "e727287e-0b48-4a65-bda6-cc29908e4ff7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4161a680-ffd6-4c39-8bb5-99014f4486df",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3000e8c-3434-4720-96a1-617f5bc75d4b",
        "cursor": {
          "ref": "6dfe5f24-97a0-480f-b68a-4a20c028e8c5",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a7dd2c0d-9088-4237-a1f6-76a69f026deb"
        },
        "item": {
          "id": "b3000e8c-3434-4720-96a1-617f5bc75d4b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7cc9e7f6-a6be-4c2a-8f79-7652204a2a7b",
          "status": "OK",
          "code": 200,
          "responseTime": 3353,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8448ca-376a-448f-87c4-75331c0b6973",
        "cursor": {
          "ref": "7995d620-bc7d-40ec-9f9c-b417c4f5cc4d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a95e3ad0-29e2-48ca-b23c-8800e1ce402b"
        },
        "item": {
          "id": "ee8448ca-376a-448f-87c4-75331c0b6973",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4b66a507-9681-4841-bbb5-6345dbdba21c",
          "status": "OK",
          "code": 200,
          "responseTime": 3192,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b21795e-b4af-4ddd-90b3-86521c57d30e",
        "cursor": {
          "ref": "9ec1b9de-579e-4632-91cb-aa35c3373701",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "06107091-af7f-4c53-ad35-e2c227e66642"
        },
        "item": {
          "id": "7b21795e-b4af-4ddd-90b3-86521c57d30e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "01f65441-7f92-4abc-896f-dcedc860c7d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b21795e-b4af-4ddd-90b3-86521c57d30e",
        "cursor": {
          "ref": "9ec1b9de-579e-4632-91cb-aa35c3373701",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "06107091-af7f-4c53-ad35-e2c227e66642"
        },
        "item": {
          "id": "7b21795e-b4af-4ddd-90b3-86521c57d30e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "01f65441-7f92-4abc-896f-dcedc860c7d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3534d18e-86c0-4ea0-8ba8-944a63a04002",
        "cursor": {
          "ref": "523f230f-68ad-4d87-8d48-63ac121f738f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6988019b-4a43-4b3b-ae6e-3833d95a21e5"
        },
        "item": {
          "id": "3534d18e-86c0-4ea0-8ba8-944a63a04002",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dde01e59-78e5-4374-a063-7d222c0de4f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aface17c-30b8-4bef-9a4e-805094515399",
        "cursor": {
          "ref": "6eb17beb-376b-4f77-b4d4-64f19ce7ed10",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0b073ec8-29ab-4f54-b174-97fedfb0dbc8"
        },
        "item": {
          "id": "aface17c-30b8-4bef-9a4e-805094515399",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b2e3f98b-5a96-4517-bf99-0ad0d92bbea2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}